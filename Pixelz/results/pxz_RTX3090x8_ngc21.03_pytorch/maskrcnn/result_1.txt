+ echo 'Beginning trial 1 of 5'
Beginning trial 1 of 5
+ docker exec -it object_detection python -c '
from mlperf_logging.mllog import constants
from maskrcnn_benchmark.utils.mlperf_logger import log_event
log_event(constants.MASKRCNN)'
:::MLLOG {"namespace": "", "time_ms": 1634384233781, "event_type": "POINT_IN_TIME", "key": "maskrcnn", "value": null, "metadata": {"file": "<string>", "lineno": 4}}
+ '[' 1 -eq 1 ']'
+ sync
+ sudo /sbin/sysctl vm.drop_caches=3
vm.drop_caches = 3
+ docker exec -it object_detection python -c '
from mlperf_logging.mllog import constants
from maskrcnn_benchmark.utils.mlperf_logger import log_event
log_event(key=constants.CACHE_CLEAR, value=True, stack_offset=0)'
:::MLLOG {"namespace": "", "time_ms": 1634384237720, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "/opt/conda/lib/python3.8/site-packages/mlperf_logging/mllog/mllog.py", "lineno": 259}}
+ docker exec -it --env=EXTRA_CONFIG --env=EXTRA_PARAMS --env=NEXP --env=PXZHT --env=PXZNGPU --env=PXZNNODES --env=PXZNSOCKET --env=PXZSOCKETCORES --env=PXZSYSTEM --env=WALLTIME --env=MLPERF_HOST_OS object_detection sh ./run_and_time.sh
STARTING TIMING RUN AT 2021-10-16 11:37:18 AM
+ echo 'running benchmark'
running benchmark
+ DATASET_DIR=/datasets
+ ln -sTf /datasets/coco /coco
++ ls /coco
+ echo annotations annotations_trainval2017.zip models train2017 train2017.zip val2017 val2017.zip
annotations annotations_trainval2017.zip models train2017 train2017.zip val2017 val2017.zip
+ declare -a CMD
+ CMD=('python' '-u' '-m' 'bind_launch' "--nsockets_per_node=${PXZNSOCKET}" "--ncores_per_socket=${PXZSOCKETCORES}" "--nproc_per_node=${PXZNGPU}")
+ '[' '' = apiLog.sh ']'
+ python -u -m bind_launch --nsockets_per_node=1 --ncores_per_socket=32 --nproc_per_node=8 tools/train_mlperf.py --config-file configs/e2e_mask_rcnn_R_50_FPN_1x.yaml DTYPE float16 PATHS_CATALOG maskrcnn_benchmark/config/paths_catalog_dbcluster.py MODEL.WEIGHT /coco/models/R-50.pkl DISABLE_REDUCED_LOGGING True SOLVER.BASE_LR 0.16 SOLVER.WARMUP_FACTOR 0.000192 SOLVER.WARMUP_ITERS 625 SOLVER.WARMUP_METHOD linear SOLVER.STEPS '(9000,12000)' SOLVER.IMS_PER_BATCH 128 TEST.IMS_PER_BATCH 128 MODEL.RPN.FPN_POST_NMS_TOP_N_TRAIN 16000 MODEL.RPN.FPN_POST_NMS_TOP_N_PER_IMAGE False NHWC True SOLVER.MAX_ITER 18000 DATALOADER.DALI False DATALOADER.DALI_ON_GPU False DATALOADER.CACHE_EVAL_IMAGES False EVAL_SEGM_NUMPROCS 10 USE_CUDA_GRAPH False EVAL_MASK_VIRTUAL_PASTE False MODEL.BACKBONE.INCLUDE_RPN_HEAD True DATALOADER.NUM_WORKERS 1 PRECOMPUTE_RPN_CONSTANT_TENSORS True DATALOADER.HYBRID True
Namespace(master_addr='127.0.0.1', master_port=29500, ncores_per_socket=32, nnodes=1, no_hyperthreads=False, no_membind=False, node_rank=0, nproc_per_node=8, nsockets_per_node=1, training_script='tools/train_mlperf.py', training_script_args=['--config-file', 'configs/e2e_mask_rcnn_R_50_FPN_1x.yaml', 'DTYPE', 'float16', 'PATHS_CATALOG', 'maskrcnn_benchmark/config/paths_catalog_dbcluster.py', 'MODEL.WEIGHT', '/coco/models/R-50.pkl', 'DISABLE_REDUCED_LOGGING', 'True', 'SOLVER.BASE_LR', '0.16', 'SOLVER.WARMUP_FACTOR', '0.000192', 'SOLVER.WARMUP_ITERS', '625', 'SOLVER.WARMUP_METHOD', 'linear', 'SOLVER.STEPS', '(9000,12000)', 'SOLVER.IMS_PER_BATCH', '128', 'TEST.IMS_PER_BATCH', '128', 'MODEL.RPN.FPN_POST_NMS_TOP_N_TRAIN', '16000', 'MODEL.RPN.FPN_POST_NMS_TOP_N_PER_IMAGE', 'False', 'NHWC', 'True', 'SOLVER.MAX_ITER', '18000', 'DATALOADER.DALI', 'False', 'DATALOADER.DALI_ON_GPU', 'False', 'DATALOADER.CACHE_EVAL_IMAGES', 'False', 'EVAL_SEGM_NUMPROCS', '10', 'USE_CUDA_GRAPH', 'False', 'EVAL_MASK_VIRTUAL_PASTE', 'False', 'MODEL.BACKBONE.INCLUDE_RPN_HEAD', 'True', 'DATALOADER.NUM_WORKERS', '1', 'PRECOMPUTE_RPN_CONSTANT_TENSORS', 'True', 'DATALOADER.HYBRID', 'True'])
['/usr/bin/numactl', '--physcpubind=0-3', '--membind=0', '/opt/conda/bin/python', '-u', 'tools/train_mlperf.py', '--local_rank=0', '--config-file', 'configs/e2e_mask_rcnn_R_50_FPN_1x.yaml', 'DTYPE', 'float16', 'PATHS_CATALOG', 'maskrcnn_benchmark/config/paths_catalog_dbcluster.py', 'MODEL.WEIGHT', '/coco/models/R-50.pkl', 'DISABLE_REDUCED_LOGGING', 'True', 'SOLVER.BASE_LR', '0.16', 'SOLVER.WARMUP_FACTOR', '0.000192', 'SOLVER.WARMUP_ITERS', '625', 'SOLVER.WARMUP_METHOD', 'linear', 'SOLVER.STEPS', '(9000,12000)', 'SOLVER.IMS_PER_BATCH', '128', 'TEST.IMS_PER_BATCH', '128', 'MODEL.RPN.FPN_POST_NMS_TOP_N_TRAIN', '16000', 'MODEL.RPN.FPN_POST_NMS_TOP_N_PER_IMAGE', 'False', 'NHWC', 'True', 'SOLVER.MAX_ITER', '18000', 'DATALOADER.DALI', 'False', 'DATALOADER.DALI_ON_GPU', 'False', 'DATALOADER.CACHE_EVAL_IMAGES', 'False', 'EVAL_SEGM_NUMPROCS', '10', 'USE_CUDA_GRAPH', 'False', 'EVAL_MASK_VIRTUAL_PASTE', 'False', 'MODEL.BACKBONE.INCLUDE_RPN_HEAD', 'True', 'DATALOADER.NUM_WORKERS', '1', 'PRECOMPUTE_RPN_CONSTANT_TENSORS', 'True', 'DATALOADER.HYBRID', 'True']
['/usr/bin/numactl', '--physcpubind=4-7', '--membind=0', '/opt/conda/bin/python', '-u', 'tools/train_mlperf.py', '--local_rank=1', '--config-file', 'configs/e2e_mask_rcnn_R_50_FPN_1x.yaml', 'DTYPE', 'float16', 'PATHS_CATALOG', 'maskrcnn_benchmark/config/paths_catalog_dbcluster.py', 'MODEL.WEIGHT', '/coco/models/R-50.pkl', 'DISABLE_REDUCED_LOGGING', 'True', 'SOLVER.BASE_LR', '0.16', 'SOLVER.WARMUP_FACTOR', '0.000192', 'SOLVER.WARMUP_ITERS', '625', 'SOLVER.WARMUP_METHOD', 'linear', 'SOLVER.STEPS', '(9000,12000)', 'SOLVER.IMS_PER_BATCH', '128', 'TEST.IMS_PER_BATCH', '128', 'MODEL.RPN.FPN_POST_NMS_TOP_N_TRAIN', '16000', 'MODEL.RPN.FPN_POST_NMS_TOP_N_PER_IMAGE', 'False', 'NHWC', 'True', 'SOLVER.MAX_ITER', '18000', 'DATALOADER.DALI', 'False', 'DATALOADER.DALI_ON_GPU', 'False', 'DATALOADER.CACHE_EVAL_IMAGES', 'False', 'EVAL_SEGM_NUMPROCS', '10', 'USE_CUDA_GRAPH', 'False', 'EVAL_MASK_VIRTUAL_PASTE', 'False', 'MODEL.BACKBONE.INCLUDE_RPN_HEAD', 'True', 'DATALOADER.NUM_WORKERS', '1', 'PRECOMPUTE_RPN_CONSTANT_TENSORS', 'True', 'DATALOADER.HYBRID', 'True']
['/usr/bin/numactl', '--physcpubind=8-11', '--membind=0', '/opt/conda/bin/python', '-u', 'tools/train_mlperf.py', '--local_rank=2', '--config-file', 'configs/e2e_mask_rcnn_R_50_FPN_1x.yaml', 'DTYPE', 'float16', 'PATHS_CATALOG', 'maskrcnn_benchmark/config/paths_catalog_dbcluster.py', 'MODEL.WEIGHT', '/coco/models/R-50.pkl', 'DISABLE_REDUCED_LOGGING', 'True', 'SOLVER.BASE_LR', '0.16', 'SOLVER.WARMUP_FACTOR', '0.000192', 'SOLVER.WARMUP_ITERS', '625', 'SOLVER.WARMUP_METHOD', 'linear', 'SOLVER.STEPS', '(9000,12000)', 'SOLVER.IMS_PER_BATCH', '128', 'TEST.IMS_PER_BATCH', '128', 'MODEL.RPN.FPN_POST_NMS_TOP_N_TRAIN', '16000', 'MODEL.RPN.FPN_POST_NMS_TOP_N_PER_IMAGE', 'False', 'NHWC', 'True', 'SOLVER.MAX_ITER', '18000', 'DATALOADER.DALI', 'False', 'DATALOADER.DALI_ON_GPU', 'False', 'DATALOADER.CACHE_EVAL_IMAGES', 'False', 'EVAL_SEGM_NUMPROCS', '10', 'USE_CUDA_GRAPH', 'False', 'EVAL_MASK_VIRTUAL_PASTE', 'False', 'MODEL.BACKBONE.INCLUDE_RPN_HEAD', 'True', 'DATALOADER.NUM_WORKERS', '1', 'PRECOMPUTE_RPN_CONSTANT_TENSORS', 'True', 'DATALOADER.HYBRID', 'True']
['/usr/bin/numactl', '--physcpubind=12-15', '--membind=0', '/opt/conda/bin/python', '-u', 'tools/train_mlperf.py', '--local_rank=3', '--config-file', 'configs/e2e_mask_rcnn_R_50_FPN_1x.yaml', 'DTYPE', 'float16', 'PATHS_CATALOG', 'maskrcnn_benchmark/config/paths_catalog_dbcluster.py', 'MODEL.WEIGHT', '/coco/models/R-50.pkl', 'DISABLE_REDUCED_LOGGING', 'True', 'SOLVER.BASE_LR', '0.16', 'SOLVER.WARMUP_FACTOR', '0.000192', 'SOLVER.WARMUP_ITERS', '625', 'SOLVER.WARMUP_METHOD', 'linear', 'SOLVER.STEPS', '(9000,12000)', 'SOLVER.IMS_PER_BATCH', '128', 'TEST.IMS_PER_BATCH', '128', 'MODEL.RPN.FPN_POST_NMS_TOP_N_TRAIN', '16000', 'MODEL.RPN.FPN_POST_NMS_TOP_N_PER_IMAGE', 'False', 'NHWC', 'True', 'SOLVER.MAX_ITER', '18000', 'DATALOADER.DALI', 'False', 'DATALOADER.DALI_ON_GPU', 'False', 'DATALOADER.CACHE_EVAL_IMAGES', 'False', 'EVAL_SEGM_NUMPROCS', '10', 'USE_CUDA_GRAPH', 'False', 'EVAL_MASK_VIRTUAL_PASTE', 'False', 'MODEL.BACKBONE.INCLUDE_RPN_HEAD', 'True', 'DATALOADER.NUM_WORKERS', '1', 'PRECOMPUTE_RPN_CONSTANT_TENSORS', 'True', 'DATALOADER.HYBRID', 'True']
['/usr/bin/numactl', '--physcpubind=16-19', '--membind=0', '/opt/conda/bin/python', '-u', 'tools/train_mlperf.py', '--local_rank=4', '--config-file', 'configs/e2e_mask_rcnn_R_50_FPN_1x.yaml', 'DTYPE', 'float16', 'PATHS_CATALOG', 'maskrcnn_benchmark/config/paths_catalog_dbcluster.py', 'MODEL.WEIGHT', '/coco/models/R-50.pkl', 'DISABLE_REDUCED_LOGGING', 'True', 'SOLVER.BASE_LR', '0.16', 'SOLVER.WARMUP_FACTOR', '0.000192', 'SOLVER.WARMUP_ITERS', '625', 'SOLVER.WARMUP_METHOD', 'linear', 'SOLVER.STEPS', '(9000,12000)', 'SOLVER.IMS_PER_BATCH', '128', 'TEST.IMS_PER_BATCH', '128', 'MODEL.RPN.FPN_POST_NMS_TOP_N_TRAIN', '16000', 'MODEL.RPN.FPN_POST_NMS_TOP_N_PER_IMAGE', 'False', 'NHWC', 'True', 'SOLVER.MAX_ITER', '18000', 'DATALOADER.DALI', 'False', 'DATALOADER.DALI_ON_GPU', 'False', 'DATALOADER.CACHE_EVAL_IMAGES', 'False', 'EVAL_SEGM_NUMPROCS', '10', 'USE_CUDA_GRAPH', 'False', 'EVAL_MASK_VIRTUAL_PASTE', 'False', 'MODEL.BACKBONE.INCLUDE_RPN_HEAD', 'True', 'DATALOADER.NUM_WORKERS', '1', 'PRECOMPUTE_RPN_CONSTANT_TENSORS', 'True', 'DATALOADER.HYBRID', 'True']
['/usr/bin/numactl', '--physcpubind=20-23', '--membind=0', '/opt/conda/bin/python', '-u', 'tools/train_mlperf.py', '--local_rank=5', '--config-file', 'configs/e2e_mask_rcnn_R_50_FPN_1x.yaml', 'DTYPE', 'float16', 'PATHS_CATALOG', 'maskrcnn_benchmark/config/paths_catalog_dbcluster.py', 'MODEL.WEIGHT', '/coco/models/R-50.pkl', 'DISABLE_REDUCED_LOGGING', 'True', 'SOLVER.BASE_LR', '0.16', 'SOLVER.WARMUP_FACTOR', '0.000192', 'SOLVER.WARMUP_ITERS', '625', 'SOLVER.WARMUP_METHOD', 'linear', 'SOLVER.STEPS', '(9000,12000)', 'SOLVER.IMS_PER_BATCH', '128', 'TEST.IMS_PER_BATCH', '128', 'MODEL.RPN.FPN_POST_NMS_TOP_N_TRAIN', '16000', 'MODEL.RPN.FPN_POST_NMS_TOP_N_PER_IMAGE', 'False', 'NHWC', 'True', 'SOLVER.MAX_ITER', '18000', 'DATALOADER.DALI', 'False', 'DATALOADER.DALI_ON_GPU', 'False', 'DATALOADER.CACHE_EVAL_IMAGES', 'False', 'EVAL_SEGM_NUMPROCS', '10', 'USE_CUDA_GRAPH', 'False', 'EVAL_MASK_VIRTUAL_PASTE', 'False', 'MODEL.BACKBONE.INCLUDE_RPN_HEAD', 'True', 'DATALOADER.NUM_WORKERS', '1', 'PRECOMPUTE_RPN_CONSTANT_TENSORS', 'True', 'DATALOADER.HYBRID', 'True']
['/usr/bin/numactl', '--physcpubind=24-27', '--membind=0', '/opt/conda/bin/python', '-u', 'tools/train_mlperf.py', '--local_rank=6', '--config-file', 'configs/e2e_mask_rcnn_R_50_FPN_1x.yaml', 'DTYPE', 'float16', 'PATHS_CATALOG', 'maskrcnn_benchmark/config/paths_catalog_dbcluster.py', 'MODEL.WEIGHT', '/coco/models/R-50.pkl', 'DISABLE_REDUCED_LOGGING', 'True', 'SOLVER.BASE_LR', '0.16', 'SOLVER.WARMUP_FACTOR', '0.000192', 'SOLVER.WARMUP_ITERS', '625', 'SOLVER.WARMUP_METHOD', 'linear', 'SOLVER.STEPS', '(9000,12000)', 'SOLVER.IMS_PER_BATCH', '128', 'TEST.IMS_PER_BATCH', '128', 'MODEL.RPN.FPN_POST_NMS_TOP_N_TRAIN', '16000', 'MODEL.RPN.FPN_POST_NMS_TOP_N_PER_IMAGE', 'False', 'NHWC', 'True', 'SOLVER.MAX_ITER', '18000', 'DATALOADER.DALI', 'False', 'DATALOADER.DALI_ON_GPU', 'False', 'DATALOADER.CACHE_EVAL_IMAGES', 'False', 'EVAL_SEGM_NUMPROCS', '10', 'USE_CUDA_GRAPH', 'False', 'EVAL_MASK_VIRTUAL_PASTE', 'False', 'MODEL.BACKBONE.INCLUDE_RPN_HEAD', 'True', 'DATALOADER.NUM_WORKERS', '1', 'PRECOMPUTE_RPN_CONSTANT_TENSORS', 'True', 'DATALOADER.HYBRID', 'True']
['/usr/bin/numactl', '--physcpubind=28-31', '--membind=0', '/opt/conda/bin/python', '-u', 'tools/train_mlperf.py', '--local_rank=7', '--config-file', 'configs/e2e_mask_rcnn_R_50_FPN_1x.yaml', 'DTYPE', 'float16', 'PATHS_CATALOG', 'maskrcnn_benchmark/config/paths_catalog_dbcluster.py', 'MODEL.WEIGHT', '/coco/models/R-50.pkl', 'DISABLE_REDUCED_LOGGING', 'True', 'SOLVER.BASE_LR', '0.16', 'SOLVER.WARMUP_FACTOR', '0.000192', 'SOLVER.WARMUP_ITERS', '625', 'SOLVER.WARMUP_METHOD', 'linear', 'SOLVER.STEPS', '(9000,12000)', 'SOLVER.IMS_PER_BATCH', '128', 'TEST.IMS_PER_BATCH', '128', 'MODEL.RPN.FPN_POST_NMS_TOP_N_TRAIN', '16000', 'MODEL.RPN.FPN_POST_NMS_TOP_N_PER_IMAGE', 'False', 'NHWC', 'True', 'SOLVER.MAX_ITER', '18000', 'DATALOADER.DALI', 'False', 'DATALOADER.DALI_ON_GPU', 'False', 'DATALOADER.CACHE_EVAL_IMAGES', 'False', 'EVAL_SEGM_NUMPROCS', '10', 'USE_CUDA_GRAPH', 'False', 'EVAL_MASK_VIRTUAL_PASTE', 'False', 'MODEL.BACKBONE.INCLUDE_RPN_HEAD', 'True', 'DATALOADER.NUM_WORKERS', '1', 'PRECOMPUTE_RPN_CONSTANT_TENSORS', 'True', 'DATALOADER.HYBRID', 'True']
Fast bottleneck not installed. importing to native implementaion.
Fast bottleneck not installed. importing to native implementaion.
Fast bottleneck not installed. importing to native implementaion.
Fast bottleneck not installed. importing to native implementaion.
Fast bottleneck not installed. importing to native implementaion.
Fast bottleneck not installed. importing to native implementaion.
Fast bottleneck not installed. importing to native implementaion.
Fast bottleneck not installed. importing to native implementaion.
:::MLLOG {"namespace": "", "time_ms": 1634384240163, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 390}}
:::MLLOG {"namespace": "", "time_ms": 1634384240163, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 390}}
:::MLLOG {"namespace": "", "time_ms": 1634384240163, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 390}}
:::MLLOG {"namespace": "", "time_ms": 1634384240163, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 390}}
:::MLLOG {"namespace": "", "time_ms": 1634384240163, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 390}}
:::MLLOG {"namespace": "", "time_ms": 1634384240163, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 390}}
:::MLLOG {"namespace": "", "time_ms": 1634384240163, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 390}}
:::MLLOG {"namespace": "", "time_ms": 1634384240163, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 390}}
:::MLLOG {"namespace": "", "time_ms": 1634384246353, "event_type": "POINT_IN_TIME", "key": "seed", "value": 4106032896, "metadata": {"file": "tools/train_mlperf.py", "lineno": 444}}
2021-10-16 11:37:26,362 maskrcnn_benchmark INFO: Using 8 GPUs
INFO:maskrcnn_benchmark:Using 8 GPUs
2021-10-16 11:37:26,362 maskrcnn_benchmark INFO: Namespace(config_file='configs/e2e_mask_rcnn_R_50_FPN_1x.yaml', distributed=True, local_rank=0, opts=['DTYPE', 'float16', 'PATHS_CATALOG', 'maskrcnn_benchmark/config/paths_catalog_dbcluster.py', 'MODEL.WEIGHT', '/coco/models/R-50.pkl', 'DISABLE_REDUCED_LOGGING', 'True', 'SOLVER.BASE_LR', '0.16', 'SOLVER.WARMUP_FACTOR', '0.000192', 'SOLVER.WARMUP_ITERS', '625', 'SOLVER.WARMUP_METHOD', 'linear', 'SOLVER.STEPS', '(9000,12000)', 'SOLVER.IMS_PER_BATCH', '128', 'TEST.IMS_PER_BATCH', '128', 'MODEL.RPN.FPN_POST_NMS_TOP_N_TRAIN', '16000', 'MODEL.RPN.FPN_POST_NMS_TOP_N_PER_IMAGE', 'False', 'NHWC', 'True', 'SOLVER.MAX_ITER', '18000', 'DATALOADER.DALI', 'False', 'DATALOADER.DALI_ON_GPU', 'False', 'DATALOADER.CACHE_EVAL_IMAGES', 'False', 'EVAL_SEGM_NUMPROCS', '10', 'USE_CUDA_GRAPH', 'False', 'EVAL_MASK_VIRTUAL_PASTE', 'False', 'MODEL.BACKBONE.INCLUDE_RPN_HEAD', 'True', 'DATALOADER.NUM_WORKERS', '1', 'PRECOMPUTE_RPN_CONSTANT_TENSORS', 'True', 'DATALOADER.HYBRID', 'True'], seed=4106032896)
INFO:maskrcnn_benchmark:Namespace(config_file='configs/e2e_mask_rcnn_R_50_FPN_1x.yaml', distributed=True, local_rank=0, opts=['DTYPE', 'float16', 'PATHS_CATALOG', 'maskrcnn_benchmark/config/paths_catalog_dbcluster.py', 'MODEL.WEIGHT', '/coco/models/R-50.pkl', 'DISABLE_REDUCED_LOGGING', 'True', 'SOLVER.BASE_LR', '0.16', 'SOLVER.WARMUP_FACTOR', '0.000192', 'SOLVER.WARMUP_ITERS', '625', 'SOLVER.WARMUP_METHOD', 'linear', 'SOLVER.STEPS', '(9000,12000)', 'SOLVER.IMS_PER_BATCH', '128', 'TEST.IMS_PER_BATCH', '128', 'MODEL.RPN.FPN_POST_NMS_TOP_N_TRAIN', '16000', 'MODEL.RPN.FPN_POST_NMS_TOP_N_PER_IMAGE', 'False', 'NHWC', 'True', 'SOLVER.MAX_ITER', '18000', 'DATALOADER.DALI', 'False', 'DATALOADER.DALI_ON_GPU', 'False', 'DATALOADER.CACHE_EVAL_IMAGES', 'False', 'EVAL_SEGM_NUMPROCS', '10', 'USE_CUDA_GRAPH', 'False', 'EVAL_MASK_VIRTUAL_PASTE', 'False', 'MODEL.BACKBONE.INCLUDE_RPN_HEAD', 'True', 'DATALOADER.NUM_WORKERS', '1', 'PRECOMPUTE_RPN_CONSTANT_TENSORS', 'True', 'DATALOADER.HYBRID', 'True'], seed=4106032896)
2021-10-16 11:37:26,364 maskrcnn_benchmark INFO: Worker 0: Setting seed 845235954
INFO:maskrcnn_benchmark:Worker 0: Setting seed 845235954
INFO:maskrcnn_benchmark:Using 8 GPUs
INFO:maskrcnn_benchmark:Namespace(config_file='configs/e2e_mask_rcnn_R_50_FPN_1x.yaml', distributed=True, local_rank=1, opts=['DTYPE', 'float16', 'PATHS_CATALOG', 'maskrcnn_benchmark/config/paths_catalog_dbcluster.py', 'MODEL.WEIGHT', '/coco/models/R-50.pkl', 'DISABLE_REDUCED_LOGGING', 'True', 'SOLVER.BASE_LR', '0.16', 'SOLVER.WARMUP_FACTOR', '0.000192', 'SOLVER.WARMUP_ITERS', '625', 'SOLVER.WARMUP_METHOD', 'linear', 'SOLVER.STEPS', '(9000,12000)', 'SOLVER.IMS_PER_BATCH', '128', 'TEST.IMS_PER_BATCH', '128', 'MODEL.RPN.FPN_POST_NMS_TOP_N_TRAIN', '16000', 'MODEL.RPN.FPN_POST_NMS_TOP_N_PER_IMAGE', 'False', 'NHWC', 'True', 'SOLVER.MAX_ITER', '18000', 'DATALOADER.DALI', 'False', 'DATALOADER.DALI_ON_GPU', 'False', 'DATALOADER.CACHE_EVAL_IMAGES', 'False', 'EVAL_SEGM_NUMPROCS', '10', 'USE_CUDA_GRAPH', 'False', 'EVAL_MASK_VIRTUAL_PASTE', 'False', 'MODEL.BACKBONE.INCLUDE_RPN_HEAD', 'True', 'DATALOADER.NUM_WORKERS', '1', 'PRECOMPUTE_RPN_CONSTANT_TENSORS', 'True', 'DATALOADER.HYBRID', 'True'], seed=4106032896)
2021-10-16 11:37:26,364 maskrcnn_benchmark INFO: Collecting env info (might take some time)
INFO:maskrcnn_benchmark:Collecting env info (might take some time)
INFO:maskrcnn_benchmark:Worker 1: Setting seed 2687560843
INFO:maskrcnn_benchmark:Collecting env info (might take some time)
INFO:maskrcnn_benchmark:Using 8 GPUs
INFO:maskrcnn_benchmark:Using 8 GPUs
INFO:maskrcnn_benchmark:Namespace(config_file='configs/e2e_mask_rcnn_R_50_FPN_1x.yaml', distributed=True, local_rank=4, opts=['DTYPE', 'float16', 'PATHS_CATALOG', 'maskrcnn_benchmark/config/paths_catalog_dbcluster.py', 'MODEL.WEIGHT', '/coco/models/R-50.pkl', 'DISABLE_REDUCED_LOGGING', 'True', 'SOLVER.BASE_LR', '0.16', 'SOLVER.WARMUP_FACTOR', '0.000192', 'SOLVER.WARMUP_ITERS', '625', 'SOLVER.WARMUP_METHOD', 'linear', 'SOLVER.STEPS', '(9000,12000)', 'SOLVER.IMS_PER_BATCH', '128', 'TEST.IMS_PER_BATCH', '128', 'MODEL.RPN.FPN_POST_NMS_TOP_N_TRAIN', '16000', 'MODEL.RPN.FPN_POST_NMS_TOP_N_PER_IMAGE', 'False', 'NHWC', 'True', 'SOLVER.MAX_ITER', '18000', 'DATALOADER.DALI', 'False', 'DATALOADER.DALI_ON_GPU', 'False', 'DATALOADER.CACHE_EVAL_IMAGES', 'False', 'EVAL_SEGM_NUMPROCS', '10', 'USE_CUDA_GRAPH', 'False', 'EVAL_MASK_VIRTUAL_PASTE', 'False', 'MODEL.BACKBONE.INCLUDE_RPN_HEAD', 'True', 'DATALOADER.NUM_WORKERS', '1', 'PRECOMPUTE_RPN_CONSTANT_TENSORS', 'True', 'DATALOADER.HYBRID', 'True'], seed=4106032896)
INFO:maskrcnn_benchmark:Using 8 GPUs
INFO:maskrcnn_benchmark:Using 8 GPUs
INFO:maskrcnn_benchmark:Using 8 GPUs
INFO:maskrcnn_benchmark:Namespace(config_file='configs/e2e_mask_rcnn_R_50_FPN_1x.yaml', distributed=True, local_rank=6, opts=['DTYPE', 'float16', 'PATHS_CATALOG', 'maskrcnn_benchmark/config/paths_catalog_dbcluster.py', 'MODEL.WEIGHT', '/coco/models/R-50.pkl', 'DISABLE_REDUCED_LOGGING', 'True', 'SOLVER.BASE_LR', '0.16', 'SOLVER.WARMUP_FACTOR', '0.000192', 'SOLVER.WARMUP_ITERS', '625', 'SOLVER.WARMUP_METHOD', 'linear', 'SOLVER.STEPS', '(9000,12000)', 'SOLVER.IMS_PER_BATCH', '128', 'TEST.IMS_PER_BATCH', '128', 'MODEL.RPN.FPN_POST_NMS_TOP_N_TRAIN', '16000', 'MODEL.RPN.FPN_POST_NMS_TOP_N_PER_IMAGE', 'False', 'NHWC', 'True', 'SOLVER.MAX_ITER', '18000', 'DATALOADER.DALI', 'False', 'DATALOADER.DALI_ON_GPU', 'False', 'DATALOADER.CACHE_EVAL_IMAGES', 'False', 'EVAL_SEGM_NUMPROCS', '10', 'USE_CUDA_GRAPH', 'False', 'EVAL_MASK_VIRTUAL_PASTE', 'False', 'MODEL.BACKBONE.INCLUDE_RPN_HEAD', 'True', 'DATALOADER.NUM_WORKERS', '1', 'PRECOMPUTE_RPN_CONSTANT_TENSORS', 'True', 'DATALOADER.HYBRID', 'True'], seed=4106032896)
INFO:maskrcnn_benchmark:Namespace(config_file='configs/e2e_mask_rcnn_R_50_FPN_1x.yaml', distributed=True, local_rank=3, opts=['DTYPE', 'float16', 'PATHS_CATALOG', 'maskrcnn_benchmark/config/paths_catalog_dbcluster.py', 'MODEL.WEIGHT', '/coco/models/R-50.pkl', 'DISABLE_REDUCED_LOGGING', 'True', 'SOLVER.BASE_LR', '0.16', 'SOLVER.WARMUP_FACTOR', '0.000192', 'SOLVER.WARMUP_ITERS', '625', 'SOLVER.WARMUP_METHOD', 'linear', 'SOLVER.STEPS', '(9000,12000)', 'SOLVER.IMS_PER_BATCH', '128', 'TEST.IMS_PER_BATCH', '128', 'MODEL.RPN.FPN_POST_NMS_TOP_N_TRAIN', '16000', 'MODEL.RPN.FPN_POST_NMS_TOP_N_PER_IMAGE', 'False', 'NHWC', 'True', 'SOLVER.MAX_ITER', '18000', 'DATALOADER.DALI', 'False', 'DATALOADER.DALI_ON_GPU', 'False', 'DATALOADER.CACHE_EVAL_IMAGES', 'False', 'EVAL_SEGM_NUMPROCS', '10', 'USE_CUDA_GRAPH', 'False', 'EVAL_MASK_VIRTUAL_PASTE', 'False', 'MODEL.BACKBONE.INCLUDE_RPN_HEAD', 'True', 'DATALOADER.NUM_WORKERS', '1', 'PRECOMPUTE_RPN_CONSTANT_TENSORS', 'True', 'DATALOADER.HYBRID', 'True'], seed=4106032896)
INFO:maskrcnn_benchmark:Namespace(config_file='configs/e2e_mask_rcnn_R_50_FPN_1x.yaml', distributed=True, local_rank=7, opts=['DTYPE', 'float16', 'PATHS_CATALOG', 'maskrcnn_benchmark/config/paths_catalog_dbcluster.py', 'MODEL.WEIGHT', '/coco/models/R-50.pkl', 'DISABLE_REDUCED_LOGGING', 'True', 'SOLVER.BASE_LR', '0.16', 'SOLVER.WARMUP_FACTOR', '0.000192', 'SOLVER.WARMUP_ITERS', '625', 'SOLVER.WARMUP_METHOD', 'linear', 'SOLVER.STEPS', '(9000,12000)', 'SOLVER.IMS_PER_BATCH', '128', 'TEST.IMS_PER_BATCH', '128', 'MODEL.RPN.FPN_POST_NMS_TOP_N_TRAIN', '16000', 'MODEL.RPN.FPN_POST_NMS_TOP_N_PER_IMAGE', 'False', 'NHWC', 'True', 'SOLVER.MAX_ITER', '18000', 'DATALOADER.DALI', 'False', 'DATALOADER.DALI_ON_GPU', 'False', 'DATALOADER.CACHE_EVAL_IMAGES', 'False', 'EVAL_SEGM_NUMPROCS', '10', 'USE_CUDA_GRAPH', 'False', 'EVAL_MASK_VIRTUAL_PASTE', 'False', 'MODEL.BACKBONE.INCLUDE_RPN_HEAD', 'True', 'DATALOADER.NUM_WORKERS', '1', 'PRECOMPUTE_RPN_CONSTANT_TENSORS', 'True', 'DATALOADER.HYBRID', 'True'], seed=4106032896)
INFO:maskrcnn_benchmark:Namespace(config_file='configs/e2e_mask_rcnn_R_50_FPN_1x.yaml', distributed=True, local_rank=5, opts=['DTYPE', 'float16', 'PATHS_CATALOG', 'maskrcnn_benchmark/config/paths_catalog_dbcluster.py', 'MODEL.WEIGHT', '/coco/models/R-50.pkl', 'DISABLE_REDUCED_LOGGING', 'True', 'SOLVER.BASE_LR', '0.16', 'SOLVER.WARMUP_FACTOR', '0.000192', 'SOLVER.WARMUP_ITERS', '625', 'SOLVER.WARMUP_METHOD', 'linear', 'SOLVER.STEPS', '(9000,12000)', 'SOLVER.IMS_PER_BATCH', '128', 'TEST.IMS_PER_BATCH', '128', 'MODEL.RPN.FPN_POST_NMS_TOP_N_TRAIN', '16000', 'MODEL.RPN.FPN_POST_NMS_TOP_N_PER_IMAGE', 'False', 'NHWC', 'True', 'SOLVER.MAX_ITER', '18000', 'DATALOADER.DALI', 'False', 'DATALOADER.DALI_ON_GPU', 'False', 'DATALOADER.CACHE_EVAL_IMAGES', 'False', 'EVAL_SEGM_NUMPROCS', '10', 'USE_CUDA_GRAPH', 'False', 'EVAL_MASK_VIRTUAL_PASTE', 'False', 'MODEL.BACKBONE.INCLUDE_RPN_HEAD', 'True', 'DATALOADER.NUM_WORKERS', '1', 'PRECOMPUTE_RPN_CONSTANT_TENSORS', 'True', 'DATALOADER.HYBRID', 'True'], seed=4106032896)
INFO:maskrcnn_benchmark:Using 8 GPUs
INFO:maskrcnn_benchmark:Namespace(config_file='configs/e2e_mask_rcnn_R_50_FPN_1x.yaml', distributed=True, local_rank=2, opts=['DTYPE', 'float16', 'PATHS_CATALOG', 'maskrcnn_benchmark/config/paths_catalog_dbcluster.py', 'MODEL.WEIGHT', '/coco/models/R-50.pkl', 'DISABLE_REDUCED_LOGGING', 'True', 'SOLVER.BASE_LR', '0.16', 'SOLVER.WARMUP_FACTOR', '0.000192', 'SOLVER.WARMUP_ITERS', '625', 'SOLVER.WARMUP_METHOD', 'linear', 'SOLVER.STEPS', '(9000,12000)', 'SOLVER.IMS_PER_BATCH', '128', 'TEST.IMS_PER_BATCH', '128', 'MODEL.RPN.FPN_POST_NMS_TOP_N_TRAIN', '16000', 'MODEL.RPN.FPN_POST_NMS_TOP_N_PER_IMAGE', 'False', 'NHWC', 'True', 'SOLVER.MAX_ITER', '18000', 'DATALOADER.DALI', 'False', 'DATALOADER.DALI_ON_GPU', 'False', 'DATALOADER.CACHE_EVAL_IMAGES', 'False', 'EVAL_SEGM_NUMPROCS', '10', 'USE_CUDA_GRAPH', 'False', 'EVAL_MASK_VIRTUAL_PASTE', 'False', 'MODEL.BACKBONE.INCLUDE_RPN_HEAD', 'True', 'DATALOADER.NUM_WORKERS', '1', 'PRECOMPUTE_RPN_CONSTANT_TENSORS', 'True', 'DATALOADER.HYBRID', 'True'], seed=4106032896)
INFO:maskrcnn_benchmark:Worker 3: Setting seed 1288462054
INFO:maskrcnn_benchmark:Worker 4: Setting seed 3610302803
INFO:maskrcnn_benchmark:Worker 5: Setting seed 815569928
INFO:maskrcnn_benchmark:Worker 6: Setting seed 2841116131
INFO:maskrcnn_benchmark:Worker 7: Setting seed 456023263
INFO:maskrcnn_benchmark:Worker 2: Setting seed 1589905845
INFO:maskrcnn_benchmark:Collecting env info (might take some time)
INFO:maskrcnn_benchmark:Collecting env info (might take some time)
INFO:maskrcnn_benchmark:Collecting env info (might take some time)
INFO:maskrcnn_benchmark:Collecting env info (might take some time)
INFO:maskrcnn_benchmark:Collecting env info (might take some time)
INFO:maskrcnn_benchmark:Collecting env info (might take some time)
INFO:maskrcnn_benchmark:
PyTorch version: 1.9.0a0+df837d0
Is debug build: False
CUDA used to build PyTorch: 11.2
ROCM used to build PyTorch: N/A

OS: Ubuntu 20.04.1 LTS (x86_64)
GCC version: (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0
Clang version: Could not collect
CMake version: version 3.19.6

Python version: 3.8 (64-bit runtime)
Is CUDA available: True
CUDA runtime version: 11.2.142
GPU models and configuration: 
GPU 0: NVIDIA GeForce RTX 3090
GPU 1: NVIDIA GeForce RTX 3090
GPU 2: NVIDIA GeForce RTX 3090
GPU 3: NVIDIA GeForce RTX 3090
GPU 4: NVIDIA GeForce RTX 3090
GPU 5: NVIDIA GeForce RTX 3090
GPU 6: NVIDIA GeForce RTX 3090
GPU 7: NVIDIA GeForce RTX 3090

Nvidia driver version: 470.57.02
cuDNN version: Probably one of the following:
/usr/lib/x86_64-linux-gnu/libcudnn.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_adv_infer.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_adv_train.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_cnn_infer.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_ops_infer.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_ops_train.so.8.1.1
HIP runtime version: N/A
MIOpen runtime version: N/A

Versions of relevant libraries:
[pip3] numpy==1.19.2
[pip3] nvidia-dlprof-pytorch-nvtx==1.0.0
[pip3] pytorch-quantization==2.1.0
[pip3] pytorch-transformers==1.1.0
[pip3] torch==1.9.0a0+df837d0
[pip3] torchtext==0.9.0a0
[pip3] torchvision==0.9.0a0
[conda] magma-cuda110             2.5.2                         5    local
[conda] mkl                       2019.4                      243  
[conda] mkl-include               2019.4                      243  
[conda] nomkl                     3.0                           0  
[conda] numpy                     1.19.2           py38h6163131_0  
[conda] numpy-base                1.19.2           py38h75fe3a5_0  
[conda] nvidia-dlprof-pytorch-nvtx 1.0.0                    pypi_0    pypi
[conda] pytorch-quantization      2.1.0                    pypi_0    pypi
[conda] pytorch-transformers      1.1.0                    pypi_0    pypi
[conda] torch                     1.9.0a0+df837d0          pypi_0    pypi
[conda] torchtext                 0.9.0a0                  pypi_0    pypi
[conda] torchvision               0.9.0a0                  pypi_0    pypi
        Pillow (7.0.0.post3)
INFO:maskrcnn_benchmark:Loaded configuration file configs/e2e_mask_rcnn_R_50_FPN_1x.yaml
INFO:maskrcnn_benchmark:
MODEL:
  META_ARCHITECTURE: "GeneralizedRCNN"
  WEIGHT: "catalog://ImageNetPretrained/MSRA/R-50"
  BACKBONE:
    CONV_BODY: "R-50-FPN"
    OUT_CHANNELS: 256
  RPN:
    USE_FPN: True
    ANCHOR_STRIDE: (4, 8, 16, 32, 64)
    PRE_NMS_TOP_N_TRAIN: 2000
    PRE_NMS_TOP_N_TEST: 1000
    POST_NMS_TOP_N_TEST: 1000
    FPN_POST_NMS_TOP_N_TEST: 1000
  ROI_HEADS:
    USE_FPN: True
  ROI_BOX_HEAD:
    POOLER_RESOLUTION: 7
    POOLER_SCALES: (0.25, 0.125, 0.0625, 0.03125)
    POOLER_SAMPLING_RATIO: 2
    FEATURE_EXTRACTOR: "FPN2MLPFeatureExtractor"
    PREDICTOR: "FPNPredictor"
  ROI_MASK_HEAD:
    POOLER_SCALES: (0.25, 0.125, 0.0625, 0.03125)
    FEATURE_EXTRACTOR: "MaskRCNNFPNFeatureExtractor"
    PREDICTOR: "MaskRCNNC4Predictor"
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 2
    RESOLUTION: 28
    SHARE_BOX_FEATURE_EXTRACTOR: False
  MASK_ON: True
DATASETS:
  TRAIN: ("coco_2017_train",)
  TEST: ("coco_2017_val",)
DATALOADER:
  SIZE_DIVISIBILITY: 32
SOLVER:
  BASE_LR: 0.02
  WEIGHT_DECAY: 0.0001
  STEPS: (60000, 80000)
  MAX_ITER: 90000

INFO:maskrcnn_benchmark:
PyTorch version: 1.9.0a0+df837d0
Is debug build: False
CUDA used to build PyTorch: 11.2
ROCM used to build PyTorch: N/A

OS: Ubuntu 20.04.1 LTS (x86_64)
GCC version: (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0
Clang version: Could not collect
CMake version: version 3.19.6

Python version: 3.8 (64-bit runtime)
Is CUDA available: True
CUDA runtime version: 11.2.142
GPU models and configuration: 
GPU 0: NVIDIA GeForce RTX 3090
GPU 1: NVIDIA GeForce RTX 3090
GPU 2: NVIDIA GeForce RTX 3090
GPU 3: NVIDIA GeForce RTX 3090
GPU 4: NVIDIA GeForce RTX 3090
GPU 5: NVIDIA GeForce RTX 3090
GPU 6: NVIDIA GeForce RTX 3090
GPU 7: NVIDIA GeForce RTX 3090

Nvidia driver version: 470.57.02
cuDNN version: Probably one of the following:
/usr/lib/x86_64-linux-gnu/libcudnn.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_adv_infer.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_adv_train.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_cnn_infer.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_ops_infer.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_ops_train.so.8.1.1
HIP runtime version: N/A
MIOpen runtime version: N/A

Versions of relevant libraries:
[pip3] numpy==1.19.2
[pip3] nvidia-dlprof-pytorch-nvtx==1.0.0
[pip3] pytorch-quantization==2.1.0
[pip3] pytorch-transformers==1.1.0
[pip3] torch==1.9.0a0+df837d0
[pip3] torchtext==0.9.0a0
[pip3] torchvision==0.9.0a0
[conda] magma-cuda110             2.5.2                         5    local
[conda] mkl                       2019.4                      243  
[conda] mkl-include               2019.4                      243  
[conda] nomkl                     3.0                           0  
[conda] numpy                     1.19.2           py38h6163131_0  
[conda] numpy-base                1.19.2           py38h75fe3a5_0  
[conda] nvidia-dlprof-pytorch-nvtx 1.0.0                    pypi_0    pypi
[conda] pytorch-quantization      2.1.0                    pypi_0    pypi
[conda] pytorch-transformers      1.1.0                    pypi_0    pypi
[conda] torch                     1.9.0a0+df837d0          pypi_0    pypi
[conda] torchtext                 0.9.0a0                  pypi_0    pypi
[conda] torchvision               0.9.0a0                  pypi_0    pypi
        Pillow (7.0.0.post3)
INFO:maskrcnn_benchmark:Loaded configuration file configs/e2e_mask_rcnn_R_50_FPN_1x.yaml
INFO:maskrcnn_benchmark:
MODEL:
  META_ARCHITECTURE: "GeneralizedRCNN"
  WEIGHT: "catalog://ImageNetPretrained/MSRA/R-50"
  BACKBONE:
    CONV_BODY: "R-50-FPN"
    OUT_CHANNELS: 256
  RPN:
    USE_FPN: True
    ANCHOR_STRIDE: (4, 8, 16, 32, 64)
    PRE_NMS_TOP_N_TRAIN: 2000
    PRE_NMS_TOP_N_TEST: 1000
    POST_NMS_TOP_N_TEST: 1000
    FPN_POST_NMS_TOP_N_TEST: 1000
  ROI_HEADS:
    USE_FPN: True
  ROI_BOX_HEAD:
    POOLER_RESOLUTION: 7
    POOLER_SCALES: (0.25, 0.125, 0.0625, 0.03125)
    POOLER_SAMPLING_RATIO: 2
    FEATURE_EXTRACTOR: "FPN2MLPFeatureExtractor"
    PREDICTOR: "FPNPredictor"
  ROI_MASK_HEAD:
    POOLER_SCALES: (0.25, 0.125, 0.0625, 0.03125)
    FEATURE_EXTRACTOR: "MaskRCNNFPNFeatureExtractor"
    PREDICTOR: "MaskRCNNC4Predictor"
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 2
    RESOLUTION: 28
    SHARE_BOX_FEATURE_EXTRACTOR: False
  MASK_ON: True
DATASETS:
  TRAIN: ("coco_2017_train",)
  TEST: ("coco_2017_val",)
DATALOADER:
  SIZE_DIVISIBILITY: 32
SOLVER:
  BASE_LR: 0.02
  WEIGHT_DECAY: 0.0001
  STEPS: (60000, 80000)
  MAX_ITER: 90000

INFO:maskrcnn_benchmark:Running with config:
AMP_VERBOSE: False
CUDA_GRAPH_NUM_SHAPES_PER_ORIENTATION: 1
DATALOADER:
  ALWAYS_PAD_TO_MAX: False
  ASPECT_RATIO_GROUPING: True
  CACHE_EVAL_IMAGES: False
  DALI: False
  DALI_ON_GPU: False
  HYBRID: True
  NUM_WORKERS: 1
  SIZE_DIVISIBILITY: 32
DATASETS:
  TEST: ('coco_2017_val',)
  TRAIN: ('coco_2017_train',)
DISABLE_LOSS_LOGGING: False
DISABLE_REDUCED_LOGGING: True
DTYPE: float16
DYNAMIC_LOSS_SCALE_WINDOW: 1000
EVAL_MASK_VIRTUAL_PASTE: False
EVAL_SEGM_NUMPROCS: 10
FUSED_SGD_DEBUG_PRINTS: False
INPUT:
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (800,)
  PIXEL_MEAN: [102.9801, 115.9465, 122.7717]
  PIXEL_STD: [1.0, 1.0, 1.0]
  TO_BGR255: True
MLPERF:
  MIN_BBOX_MAP: 0.377
  MIN_SEGM_MAP: 0.339
MODEL:
  BACKBONE:
    CONV_BODY: R-50-FPN
    FREEZE_CONV_BODY_AT: 2
    INCLUDE_RPN_HEAD: True
    OUT_CHANNELS: 256
    USE_GN: False
  CLS_AGNOSTIC_BBOX_REG: False
  DEVICE: cuda
  FPN:
    USE_GN: False
    USE_RELU: False
  GROUP_NORM:
    DIM_PER_GP: -1
    EPSILON: 1e-05
    NUM_GROUPS: 32
  KEYPOINT_ON: False
  MASK_ON: True
  META_ARCHITECTURE: GeneralizedRCNN
  RESNETS:
    NUM_GROUPS: 1
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_FUNC: StemWithFixedBatchNorm
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: True
    TRANS_FUNC: BottleneckWithFixedBatchNorm
    WIDTH_PER_GROUP: 64
  RETINANET:
    ANCHOR_SIZES: (32, 64, 128, 256, 512)
    ANCHOR_STRIDES: (8, 16, 32, 64, 128)
    ASPECT_RATIOS: (0.5, 1.0, 2.0)
    BBOX_REG_BETA: 0.11
    BBOX_REG_WEIGHT: 4.0
    BG_IOU_THRESHOLD: 0.4
    FG_IOU_THRESHOLD: 0.5
    INFERENCE_TH: 0.05
    LOSS_ALPHA: 0.25
    LOSS_GAMMA: 2.0
    NMS_TH: 0.4
    NUM_CLASSES: 81
    NUM_CONVS: 4
    OCTAVE: 2.0
    PRE_NMS_TOP_N: 1000
    PRIOR_PROB: 0.01
    SCALES_PER_OCTAVE: 3
    STRADDLE_THRESH: 0
    USE_C5: True
  RETINANET_ON: False
  ROI_BOX_HEAD:
    CONV_HEAD_DIM: 256
    DILATION: 1
    FEATURE_EXTRACTOR: FPN2MLPFeatureExtractor
    MLP_HEAD_DIM: 1024
    NUM_CLASSES: 81
    NUM_STACKED_CONVS: 4
    POOLER_RESOLUTION: 7
    POOLER_SAMPLING_RATIO: 2
    POOLER_SCALES: (0.25, 0.125, 0.0625, 0.03125)
    PREDICTOR: FPNPredictor
    USE_GN: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    BG_IOU_THRESHOLD: 0.5
    DETECTIONS_PER_IMG: 100
    FG_IOU_THRESHOLD: 0.5
    NMS: 0.5
    POSITIVE_FRACTION: 0.25
    SCORE_THRESH: 0.05
    USE_FPN: True
  ROI_KEYPOINT_HEAD:
    CONV_LAYERS: (512, 512, 512, 512, 512, 512, 512, 512)
    FEATURE_EXTRACTOR: KeypointRCNNFeatureExtractor
    MLP_HEAD_DIM: 1024
    NUM_CLASSES: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_SCALES: (0.0625,)
    PREDICTOR: KeypointRCNNPredictor
    RESOLUTION: 14
    SHARE_BOX_FEATURE_EXTRACTOR: True
  ROI_MASK_HEAD:
    CONV_LAYERS: (256, 256, 256, 256)
    DILATION: 1
    FEATURE_EXTRACTOR: MaskRCNNFPNFeatureExtractor
    MLP_HEAD_DIM: 1024
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 2
    POOLER_SCALES: (0.25, 0.125, 0.0625, 0.03125)
    POSTPROCESS_MASKS: False
    POSTPROCESS_MASKS_THRESHOLD: 0.5
    PREDICTOR: MaskRCNNC4Predictor
    RESOLUTION: 28
    SHARE_BOX_FEATURE_EXTRACTOR: False
    USE_GN: False
  RPN:
    ANCHOR_SIZES: (32, 64, 128, 256, 512)
    ANCHOR_STRIDE: (4, 8, 16, 32, 64)
    ASPECT_RATIOS: (0.5, 1.0, 2.0)
    BATCH_SIZE_PER_IMAGE: 256
    BG_IOU_THRESHOLD: 0.3
    FG_IOU_THRESHOLD: 0.7
    FPN_POST_NMS_TOP_N_PER_IMAGE: False
    FPN_POST_NMS_TOP_N_TEST: 1000
    FPN_POST_NMS_TOP_N_TRAIN: 16000
    MIN_SIZE: 0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOP_N_TEST: 1000
    POST_NMS_TOP_N_TRAIN: 2000
    PRE_NMS_TOP_N_TEST: 1000
    PRE_NMS_TOP_N_TRAIN: 2000
    RPN_HEAD: SingleConvRPNHead
    STRADDLE_THRESH: 0
    USE_FPN: True
  RPN_ONLY: False
  WEIGHT: /coco/models/R-50.pkl
NHWC: True
OUTPUT_DIR: .
PATHS_CATALOG: maskrcnn_benchmark/config/paths_catalog_dbcluster.py
PER_EPOCH_EVAL: True
PRECOMPUTE_RPN_CONSTANT_TENSORS: True
SAVE_CHECKPOINTS: False
SOLVER:
  BASE_LR: 0.16
  BIAS_LR_FACTOR: 2
  CHECKPOINT_PERIOD: 2500
  GAMMA: 0.1
  IMS_PER_BATCH: 128
  MAX_ITER: 18000
  MOMENTUM: 0.9
  STEPS: (9000, 12000)
  WARMUP_FACTOR: 0.000192
  WARMUP_ITERS: 625
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0
SYNCFREE_ROI: True
TEST:
  DETECTIONS_PER_IMG: 100
  EXPECTED_RESULTS: []
  EXPECTED_RESULTS_SIGMA_TOL: 4
  IMS_PER_BATCH: 128
USE_CUDA_GRAPH: False
INFO:maskrcnn_benchmark:Running with config:
AMP_VERBOSE: False
CUDA_GRAPH_NUM_SHAPES_PER_ORIENTATION: 1
DATALOADER:
  ALWAYS_PAD_TO_MAX: False
  ASPECT_RATIO_GROUPING: True
  CACHE_EVAL_IMAGES: False
  DALI: False
  DALI_ON_GPU: False
  HYBRID: True
  NUM_WORKERS: 1
  SIZE_DIVISIBILITY: 32
DATASETS:
  TEST: ('coco_2017_val',)
  TRAIN: ('coco_2017_train',)
DISABLE_LOSS_LOGGING: False
DISABLE_REDUCED_LOGGING: True
DTYPE: float16
DYNAMIC_LOSS_SCALE_WINDOW: 1000
EVAL_MASK_VIRTUAL_PASTE: False
EVAL_SEGM_NUMPROCS: 10
FUSED_SGD_DEBUG_PRINTS: False
INPUT:
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (800,)
  PIXEL_MEAN: [102.9801, 115.9465, 122.7717]
  PIXEL_STD: [1.0, 1.0, 1.0]
  TO_BGR255: True
MLPERF:
  MIN_BBOX_MAP: 0.377
  MIN_SEGM_MAP: 0.339
MODEL:
  BACKBONE:
    CONV_BODY: R-50-FPN
    FREEZE_CONV_BODY_AT: 2
    INCLUDE_RPN_HEAD: True
    OUT_CHANNELS: 256
    USE_GN: False
  CLS_AGNOSTIC_BBOX_REG: False
  DEVICE: cuda
  FPN:
    USE_GN: False
    USE_RELU: False
  GROUP_NORM:
    DIM_PER_GP: -1
    EPSILON: 1e-05
    NUM_GROUPS: 32
  KEYPOINT_ON: False
  MASK_ON: True
  META_ARCHITECTURE: GeneralizedRCNN
  RESNETS:
    NUM_GROUPS: 1
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_FUNC: StemWithFixedBatchNorm
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: True
    TRANS_FUNC: BottleneckWithFixedBatchNorm
    WIDTH_PER_GROUP: 64
  RETINANET:
    ANCHOR_SIZES: (32, 64, 128, 256, 512)
    ANCHOR_STRIDES: (8, 16, 32, 64, 128)
    ASPECT_RATIOS: (0.5, 1.0, 2.0)
    BBOX_REG_BETA: 0.11
    BBOX_REG_WEIGHT: 4.0
    BG_IOU_THRESHOLD: 0.4
    FG_IOU_THRESHOLD: 0.5
    INFERENCE_TH: 0.05
    LOSS_ALPHA: 0.25
    LOSS_GAMMA: 2.0
    NMS_TH: 0.4
    NUM_CLASSES: 81
    NUM_CONVS: 4
    OCTAVE: 2.0
    PRE_NMS_TOP_N: 1000
    PRIOR_PROB: 0.01
    SCALES_PER_OCTAVE: 3
    STRADDLE_THRESH: 0
    USE_C5: True
  RETINANET_ON: False
  ROI_BOX_HEAD:
    CONV_HEAD_DIM: 256
    DILATION: 1
    FEATURE_EXTRACTOR: FPN2MLPFeatureExtractor
    MLP_HEAD_DIM: 1024
    NUM_CLASSES: 81
    NUM_STACKED_CONVS: 4
    POOLER_RESOLUTION: 7
    POOLER_SAMPLING_RATIO: 2
    POOLER_SCALES: (0.25, 0.125, 0.0625, 0.03125)
    PREDICTOR: FPNPredictor
    USE_GN: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    BG_IOU_THRESHOLD: 0.5
    DETECTIONS_PER_IMG: 100
    FG_IOU_THRESHOLD: 0.5
    NMS: 0.5
    POSITIVE_FRACTION: 0.25
    SCORE_THRESH: 0.05
    USE_FPN: True
  ROI_KEYPOINT_HEAD:
    CONV_LAYERS: (512, 512, 512, 512, 512, 512, 512, 512)
    FEATURE_EXTRACTOR: KeypointRCNNFeatureExtractor
    MLP_HEAD_DIM: 1024
    NUM_CLASSES: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_SCALES: (0.0625,)
    PREDICTOR: KeypointRCNNPredictor
    RESOLUTION: 14
    SHARE_BOX_FEATURE_EXTRACTOR: True
  ROI_MASK_HEAD:
    CONV_LAYERS: (256, 256, 256, 256)
    DILATION: 1
    FEATURE_EXTRACTOR: MaskRCNNFPNFeatureExtractor
    MLP_HEAD_DIM: 1024
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 2
    POOLER_SCALES: (0.25, 0.125, 0.0625, 0.03125)
    POSTPROCESS_MASKS: False
    POSTPROCESS_MASKS_THRESHOLD: 0.5
    PREDICTOR: MaskRCNNC4Predictor
    RESOLUTION: 28
    SHARE_BOX_FEATURE_EXTRACTOR: False
    USE_GN: False
  RPN:
    ANCHOR_SIZES: (32, 64, 128, 256, 512)
    ANCHOR_STRIDE: (4, 8, 16, 32, 64)
    ASPECT_RATIOS: (0.5, 1.0, 2.0)
    BATCH_SIZE_PER_IMAGE: 256
    BG_IOU_THRESHOLD: 0.3
    FG_IOU_THRESHOLD: 0.7
    FPN_POST_NMS_TOP_N_PER_IMAGE: False
    FPN_POST_NMS_TOP_N_TEST: 1000
    FPN_POST_NMS_TOP_N_TRAIN: 16000
    MIN_SIZE: 0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOP_N_TEST: 1000
    POST_NMS_TOP_N_TRAIN: 2000
    PRE_NMS_TOP_N_TEST: 1000
    PRE_NMS_TOP_N_TRAIN: 2000
    RPN_HEAD: SingleConvRPNHead
    STRADDLE_THRESH: 0
    USE_FPN: True
  RPN_ONLY: False
  WEIGHT: /coco/models/R-50.pkl
NHWC: True
OUTPUT_DIR: .
PATHS_CATALOG: maskrcnn_benchmark/config/paths_catalog_dbcluster.py
PER_EPOCH_EVAL: True
PRECOMPUTE_RPN_CONSTANT_TENSORS: True
SAVE_CHECKPOINTS: False
SOLVER:
  BASE_LR: 0.16
  BIAS_LR_FACTOR: 2
  CHECKPOINT_PERIOD: 2500
  GAMMA: 0.1
  IMS_PER_BATCH: 128
  MAX_ITER: 18000
  MOMENTUM: 0.9
  STEPS: (9000, 12000)
  WARMUP_FACTOR: 0.000192
  WARMUP_ITERS: 625
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0
SYNCFREE_ROI: True
TEST:
  DETECTIONS_PER_IMG: 100
  EXPECTED_RESULTS: []
  EXPECTED_RESULTS_SIGMA_TOL: 4
  IMS_PER_BATCH: 128
USE_CUDA_GRAPH: False
/opt/conda/lib/python3.8/site-packages/torch/jit/_recursive.py:207: UserWarning: 'downsample' was found in ScriptModule constants,  but it is a non-constant submodule. Consider removing it.
  warnings.warn("'{}' was found in ScriptModule constants, "
/opt/conda/lib/python3.8/site-packages/torch/jit/_recursive.py:207: UserWarning: 'downsample' was found in ScriptModule constants,  but it is a non-constant submodule. Consider removing it.
  warnings.warn("'{}' was found in ScriptModule constants, "
INFO:maskrcnn_benchmark:
PyTorch version: 1.9.0a0+df837d0
Is debug build: False
CUDA used to build PyTorch: 11.2
ROCM used to build PyTorch: N/A

OS: Ubuntu 20.04.1 LTS (x86_64)
GCC version: (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0
Clang version: Could not collect
CMake version: version 3.19.6

Python version: 3.8 (64-bit runtime)
Is CUDA available: True
CUDA runtime version: 11.2.142
GPU models and configuration: 
GPU 0: NVIDIA GeForce RTX 3090
GPU 1: NVIDIA GeForce RTX 3090
GPU 2: NVIDIA GeForce RTX 3090
GPU 3: NVIDIA GeForce RTX 3090
GPU 4: NVIDIA GeForce RTX 3090
GPU 5: NVIDIA GeForce RTX 3090
GPU 6: NVIDIA GeForce RTX 3090
GPU 7: NVIDIA GeForce RTX 3090

Nvidia driver version: 470.57.02
cuDNN version: Probably one of the following:
/usr/lib/x86_64-linux-gnu/libcudnn.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_adv_infer.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_adv_train.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_cnn_infer.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_ops_infer.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_ops_train.so.8.1.1
HIP runtime version: N/A
MIOpen runtime version: N/A

Versions of relevant libraries:
[pip3] numpy==1.19.2
[pip3] nvidia-dlprof-pytorch-nvtx==1.0.0
[pip3] pytorch-quantization==2.1.0
[pip3] pytorch-transformers==1.1.0
[pip3] torch==1.9.0a0+df837d0
[pip3] torchtext==0.9.0a0
[pip3] torchvision==0.9.0a0
[conda] magma-cuda110             2.5.2                         5    local
[conda] mkl                       2019.4                      243  
[conda] mkl-include               2019.4                      243  
[conda] nomkl                     3.0                           0  
[conda] numpy                     1.19.2           py38h6163131_0  
[conda] numpy-base                1.19.2           py38h75fe3a5_0  
[conda] nvidia-dlprof-pytorch-nvtx 1.0.0                    pypi_0    pypi
[conda] pytorch-quantization      2.1.0                    pypi_0    pypi
[conda] pytorch-transformers      1.1.0                    pypi_0    pypi
[conda] torch                     1.9.0a0+df837d0          pypi_0    pypi
[conda] torchtext                 0.9.0a0                  pypi_0    pypi
[conda] torchvision               0.9.0a0                  pypi_0    pypi
        Pillow (7.0.0.post3)
INFO:maskrcnn_benchmark:Loaded configuration file configs/e2e_mask_rcnn_R_50_FPN_1x.yaml
INFO:maskrcnn_benchmark:
MODEL:
  META_ARCHITECTURE: "GeneralizedRCNN"
  WEIGHT: "catalog://ImageNetPretrained/MSRA/R-50"
  BACKBONE:
    CONV_BODY: "R-50-FPN"
    OUT_CHANNELS: 256
  RPN:
    USE_FPN: True
    ANCHOR_STRIDE: (4, 8, 16, 32, 64)
    PRE_NMS_TOP_N_TRAIN: 2000
    PRE_NMS_TOP_N_TEST: 1000
    POST_NMS_TOP_N_TEST: 1000
    FPN_POST_NMS_TOP_N_TEST: 1000
  ROI_HEADS:
    USE_FPN: True
  ROI_BOX_HEAD:
    POOLER_RESOLUTION: 7
    POOLER_SCALES: (0.25, 0.125, 0.0625, 0.03125)
    POOLER_SAMPLING_RATIO: 2
    FEATURE_EXTRACTOR: "FPN2MLPFeatureExtractor"
    PREDICTOR: "FPNPredictor"
  ROI_MASK_HEAD:
    POOLER_SCALES: (0.25, 0.125, 0.0625, 0.03125)
    FEATURE_EXTRACTOR: "MaskRCNNFPNFeatureExtractor"
    PREDICTOR: "MaskRCNNC4Predictor"
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 2
    RESOLUTION: 28
    SHARE_BOX_FEATURE_EXTRACTOR: False
  MASK_ON: True
DATASETS:
  TRAIN: ("coco_2017_train",)
  TEST: ("coco_2017_val",)
DATALOADER:
  SIZE_DIVISIBILITY: 32
SOLVER:
  BASE_LR: 0.02
  WEIGHT_DECAY: 0.0001
  STEPS: (60000, 80000)
  MAX_ITER: 90000

INFO:maskrcnn_benchmark:Running with config:
AMP_VERBOSE: False
CUDA_GRAPH_NUM_SHAPES_PER_ORIENTATION: 1
DATALOADER:
  ALWAYS_PAD_TO_MAX: False
  ASPECT_RATIO_GROUPING: True
  CACHE_EVAL_IMAGES: False
  DALI: False
  DALI_ON_GPU: False
  HYBRID: True
  NUM_WORKERS: 1
  SIZE_DIVISIBILITY: 32
DATASETS:
  TEST: ('coco_2017_val',)
  TRAIN: ('coco_2017_train',)
DISABLE_LOSS_LOGGING: False
DISABLE_REDUCED_LOGGING: True
DTYPE: float16
DYNAMIC_LOSS_SCALE_WINDOW: 1000
EVAL_MASK_VIRTUAL_PASTE: False
EVAL_SEGM_NUMPROCS: 10
FUSED_SGD_DEBUG_PRINTS: False
INPUT:
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (800,)
  PIXEL_MEAN: [102.9801, 115.9465, 122.7717]
  PIXEL_STD: [1.0, 1.0, 1.0]
  TO_BGR255: True
MLPERF:
  MIN_BBOX_MAP: 0.377
  MIN_SEGM_MAP: 0.339
MODEL:
  BACKBONE:
    CONV_BODY: R-50-FPN
    FREEZE_CONV_BODY_AT: 2
    INCLUDE_RPN_HEAD: True
    OUT_CHANNELS: 256
    USE_GN: False
  CLS_AGNOSTIC_BBOX_REG: False
  DEVICE: cuda
  FPN:
    USE_GN: False
    USE_RELU: False
  GROUP_NORM:
    DIM_PER_GP: -1
    EPSILON: 1e-05
    NUM_GROUPS: 32
  KEYPOINT_ON: False
  MASK_ON: True
  META_ARCHITECTURE: GeneralizedRCNN
  RESNETS:
    NUM_GROUPS: 1
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_FUNC: StemWithFixedBatchNorm
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: True
    TRANS_FUNC: BottleneckWithFixedBatchNorm
    WIDTH_PER_GROUP: 64
  RETINANET:
    ANCHOR_SIZES: (32, 64, 128, 256, 512)
    ANCHOR_STRIDES: (8, 16, 32, 64, 128)
    ASPECT_RATIOS: (0.5, 1.0, 2.0)
    BBOX_REG_BETA: 0.11
    BBOX_REG_WEIGHT: 4.0
    BG_IOU_THRESHOLD: 0.4
    FG_IOU_THRESHOLD: 0.5
    INFERENCE_TH: 0.05
    LOSS_ALPHA: 0.25
    LOSS_GAMMA: 2.0
    NMS_TH: 0.4
    NUM_CLASSES: 81
    NUM_CONVS: 4
    OCTAVE: 2.0
    PRE_NMS_TOP_N: 1000
    PRIOR_PROB: 0.01
    SCALES_PER_OCTAVE: 3
    STRADDLE_THRESH: 0
    USE_C5: True
  RETINANET_ON: False
  ROI_BOX_HEAD:
    CONV_HEAD_DIM: 256
    DILATION: 1
    FEATURE_EXTRACTOR: FPN2MLPFeatureExtractor
    MLP_HEAD_DIM: 1024
    NUM_CLASSES: 81
    NUM_STACKED_CONVS: 4
    POOLER_RESOLUTION: 7
    POOLER_SAMPLING_RATIO: 2
    POOLER_SCALES: (0.25, 0.125, 0.0625, 0.03125)
    PREDICTOR: FPNPredictor
    USE_GN: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    BG_IOU_THRESHOLD: 0.5
    DETECTIONS_PER_IMG: 100
    FG_IOU_THRESHOLD: 0.5
    NMS: 0.5
    POSITIVE_FRACTION: 0.25
    SCORE_THRESH: 0.05
    USE_FPN: True
  ROI_KEYPOINT_HEAD:
    CONV_LAYERS: (512, 512, 512, 512, 512, 512, 512, 512)
    FEATURE_EXTRACTOR: KeypointRCNNFeatureExtractor
    MLP_HEAD_DIM: 1024
    NUM_CLASSES: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_SCALES: (0.0625,)
    PREDICTOR: KeypointRCNNPredictor
    RESOLUTION: 14
    SHARE_BOX_FEATURE_EXTRACTOR: True
  ROI_MASK_HEAD:
    CONV_LAYERS: (256, 256, 256, 256)
    DILATION: 1
    FEATURE_EXTRACTOR: MaskRCNNFPNFeatureExtractor
    MLP_HEAD_DIM: 1024
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 2
    POOLER_SCALES: (0.25, 0.125, 0.0625, 0.03125)
    POSTPROCESS_MASKS: False
    POSTPROCESS_MASKS_THRESHOLD: 0.5
    PREDICTOR: MaskRCNNC4Predictor
    RESOLUTION: 28
    SHARE_BOX_FEATURE_EXTRACTOR: False
    USE_GN: False
  RPN:
    ANCHOR_SIZES: (32, 64, 128, 256, 512)
    ANCHOR_STRIDE: (4, 8, 16, 32, 64)
    ASPECT_RATIOS: (0.5, 1.0, 2.0)
    BATCH_SIZE_PER_IMAGE: 256
    BG_IOU_THRESHOLD: 0.3
    FG_IOU_THRESHOLD: 0.7
    FPN_POST_NMS_TOP_N_PER_IMAGE: False
    FPN_POST_NMS_TOP_N_TEST: 1000
    FPN_POST_NMS_TOP_N_TRAIN: 16000
    MIN_SIZE: 0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOP_N_TEST: 1000
    POST_NMS_TOP_N_TRAIN: 2000
    PRE_NMS_TOP_N_TEST: 1000
    PRE_NMS_TOP_N_TRAIN: 2000
    RPN_HEAD: SingleConvRPNHead
    STRADDLE_THRESH: 0
    USE_FPN: True
  RPN_ONLY: False
  WEIGHT: /coco/models/R-50.pkl
NHWC: True
OUTPUT_DIR: .
PATHS_CATALOG: maskrcnn_benchmark/config/paths_catalog_dbcluster.py
PER_EPOCH_EVAL: True
PRECOMPUTE_RPN_CONSTANT_TENSORS: True
SAVE_CHECKPOINTS: False
SOLVER:
  BASE_LR: 0.16
  BIAS_LR_FACTOR: 2
  CHECKPOINT_PERIOD: 2500
  GAMMA: 0.1
  IMS_PER_BATCH: 128
  MAX_ITER: 18000
  MOMENTUM: 0.9
  STEPS: (9000, 12000)
  WARMUP_FACTOR: 0.000192
  WARMUP_ITERS: 625
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0
SYNCFREE_ROI: True
TEST:
  DETECTIONS_PER_IMG: 100
  EXPECTED_RESULTS: []
  EXPECTED_RESULTS_SIGMA_TOL: 4
  IMS_PER_BATCH: 128
USE_CUDA_GRAPH: False
/opt/conda/lib/python3.8/site-packages/torch/jit/_recursive.py:207: UserWarning: 'downsample' was found in ScriptModule constants,  but it is a non-constant submodule. Consider removing it.
  warnings.warn("'{}' was found in ScriptModule constants, "
/opt/conda/lib/python3.8/site-packages/torch/nn/modules/conv.py:1003: UserWarning: _ConvTransposeMixin is a deprecated internal class. Please consider using public APIs.
  warnings.warn(
/opt/conda/lib/python3.8/site-packages/torch/nn/modules/conv.py:1003: UserWarning: _ConvTransposeMixin is a deprecated internal class. Please consider using public APIs.
  warnings.warn(
model has 44347573 elements of size 2 bytes
model has 44347573 elements of size 2 bytes
INFO:maskrcnn_benchmark.utils.checkpoint:Loading checkpoint from /coco/models/R-50.pkl
INFO:maskrcnn_benchmark.utils.checkpoint:Loading checkpoint from /coco/models/R-50.pkl
/opt/conda/lib/python3.8/site-packages/torch/nn/modules/conv.py:1003: UserWarning: _ConvTransposeMixin is a deprecated internal class. Please consider using public APIs.
  warnings.warn(
model has 44347573 elements of size 2 bytes
INFO:maskrcnn_benchmark.utils.checkpoint:Loading checkpoint from /coco/models/R-50.pkl
INFO:maskrcnn_benchmark.utils.c2_model_loading:Remapping C2 weights
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: conv1_b              mapped name: conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: conv1_w              mapped name: conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: fc1000_b             mapped name: fc1000.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: fc1000_w             mapped name: fc1000.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch1_b     mapped name: layer1.0.downsample.0.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch1_bn_b  mapped name: layer1.0.downsample.1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch1_bn_s  mapped name: layer1.0.downsample.1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch1_w     mapped name: layer1.0.downsample.0.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2a_b    mapped name: layer1.0.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2a_bn_b mapped name: layer1.0.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2a_bn_s mapped name: layer1.0.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2a_w    mapped name: layer1.0.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2b_b    mapped name: layer1.0.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2b_bn_b mapped name: layer1.0.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2b_bn_s mapped name: layer1.0.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2b_w    mapped name: layer1.0.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2c_b    mapped name: layer1.0.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2c_bn_b mapped name: layer1.0.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2c_bn_s mapped name: layer1.0.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2c_w    mapped name: layer1.0.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2a_b    mapped name: layer1.1.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2a_bn_b mapped name: layer1.1.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2a_bn_s mapped name: layer1.1.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2a_w    mapped name: layer1.1.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2b_b    mapped name: layer1.1.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2b_bn_b mapped name: layer1.1.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2b_bn_s mapped name: layer1.1.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2b_w    mapped name: layer1.1.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2c_b    mapped name: layer1.1.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2c_bn_b mapped name: layer1.1.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2c_bn_s mapped name: layer1.1.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2c_w    mapped name: layer1.1.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2a_b    mapped name: layer1.2.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2a_bn_b mapped name: layer1.2.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:Remapping C2 weights
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2a_bn_s mapped name: layer1.2.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2a_w    mapped name: layer1.2.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2b_b    mapped name: layer1.2.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2b_bn_b mapped name: layer1.2.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2b_bn_s mapped name: layer1.2.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: conv1_b              mapped name: conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2b_w    mapped name: layer1.2.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2c_b    mapped name: layer1.2.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: conv1_w              mapped name: conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2c_bn_b mapped name: layer1.2.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2c_bn_s mapped name: layer1.2.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: fc1000_b             mapped name: fc1000.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2c_w    mapped name: layer1.2.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch1_b     mapped name: layer2.0.downsample.0.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: fc1000_w             mapped name: fc1000.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch1_bn_b  mapped name: layer2.0.downsample.1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch1_b     mapped name: layer1.0.downsample.0.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch1_bn_s  mapped name: layer2.0.downsample.1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch1_w     mapped name: layer2.0.downsample.0.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch1_bn_b  mapped name: layer1.0.downsample.1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:Remapping C2 weights
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2a_b    mapped name: layer2.0.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2a_bn_b mapped name: layer2.0.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch1_bn_s  mapped name: layer1.0.downsample.1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2a_bn_s mapped name: layer2.0.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch1_w     mapped name: layer1.0.downsample.0.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2a_w    mapped name: layer2.0.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2b_b    mapped name: layer2.0.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2a_b    mapped name: layer1.0.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2b_bn_b mapped name: layer2.0.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: conv1_b              mapped name: conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2b_bn_s mapped name: layer2.0.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2a_bn_b mapped name: layer1.0.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2b_w    mapped name: layer2.0.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: conv1_w              mapped name: conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2a_bn_s mapped name: layer1.0.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2c_b    mapped name: layer2.0.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2c_bn_b mapped name: layer2.0.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: fc1000_b             mapped name: fc1000.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2a_w    mapped name: layer1.0.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2c_bn_s mapped name: layer2.0.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: fc1000_w             mapped name: fc1000.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2b_b    mapped name: layer1.0.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2c_w    mapped name: layer2.0.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2a_b    mapped name: layer2.1.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch1_b     mapped name: layer1.0.downsample.0.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2b_bn_b mapped name: layer1.0.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2a_bn_b mapped name: layer2.1.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2a_bn_s mapped name: layer2.1.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2b_bn_s mapped name: layer1.0.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch1_bn_b  mapped name: layer1.0.downsample.1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2a_w    mapped name: layer2.1.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2b_w    mapped name: layer1.0.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch1_bn_s  mapped name: layer1.0.downsample.1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2b_b    mapped name: layer2.1.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2b_bn_b mapped name: layer2.1.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2c_b    mapped name: layer1.0.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch1_w     mapped name: layer1.0.downsample.0.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2b_bn_s mapped name: layer2.1.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2c_bn_b mapped name: layer1.0.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2b_w    mapped name: layer2.1.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2a_b    mapped name: layer1.0.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2c_b    mapped name: layer2.1.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2c_bn_s mapped name: layer1.0.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2a_bn_b mapped name: layer1.0.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2c_bn_b mapped name: layer2.1.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2c_w    mapped name: layer1.0.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2c_bn_s mapped name: layer2.1.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2a_bn_s mapped name: layer1.0.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2c_w    mapped name: layer2.1.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2a_b    mapped name: layer1.1.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2a_b    mapped name: layer2.2.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2a_w    mapped name: layer1.0.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2a_bn_b mapped name: layer2.2.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2a_bn_b mapped name: layer1.1.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2b_b    mapped name: layer1.0.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2a_bn_s mapped name: layer2.2.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2a_bn_s mapped name: layer1.1.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2a_w    mapped name: layer2.2.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2b_bn_b mapped name: layer1.0.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2b_b    mapped name: layer2.2.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2a_w    mapped name: layer1.1.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2b_bn_s mapped name: layer1.0.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2b_bn_b mapped name: layer2.2.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2b_b    mapped name: layer1.1.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2b_bn_s mapped name: layer2.2.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2b_w    mapped name: layer1.0.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2b_w    mapped name: layer2.2.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2b_bn_b mapped name: layer1.1.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2c_b    mapped name: layer2.2.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2c_b    mapped name: layer1.0.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2c_bn_b mapped name: layer2.2.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2b_bn_s mapped name: layer1.1.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2c_bn_b mapped name: layer1.0.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2c_bn_s mapped name: layer2.2.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2b_w    mapped name: layer1.1.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2c_w    mapped name: layer2.2.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2c_bn_s mapped name: layer1.0.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2a_b    mapped name: layer2.3.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2c_b    mapped name: layer1.1.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2c_w    mapped name: layer1.0.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2a_bn_b mapped name: layer2.3.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2c_bn_b mapped name: layer1.1.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2a_bn_s mapped name: layer2.3.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2a_b    mapped name: layer1.1.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2a_w    mapped name: layer2.3.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2c_bn_s mapped name: layer1.1.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2a_bn_b mapped name: layer1.1.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2b_b    mapped name: layer2.3.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2c_w    mapped name: layer1.1.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2b_bn_b mapped name: layer2.3.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2a_bn_s mapped name: layer1.1.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2b_bn_s mapped name: layer2.3.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2a_b    mapped name: layer1.2.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2b_w    mapped name: layer2.3.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2a_w    mapped name: layer1.1.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2a_bn_b mapped name: layer1.2.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2c_b    mapped name: layer2.3.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2c_bn_b mapped name: layer2.3.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2b_b    mapped name: layer1.1.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2a_bn_s mapped name: layer1.2.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2c_bn_s mapped name: layer2.3.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2b_bn_b mapped name: layer1.1.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2c_w    mapped name: layer2.3.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2a_w    mapped name: layer1.2.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch1_b     mapped name: layer3.0.downsample.0.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2b_bn_s mapped name: layer1.1.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2b_b    mapped name: layer1.2.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch1_bn_b  mapped name: layer3.0.downsample.1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2b_w    mapped name: layer1.1.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch1_bn_s  mapped name: layer3.0.downsample.1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2b_bn_b mapped name: layer1.2.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch1_w     mapped name: layer3.0.downsample.0.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2c_b    mapped name: layer1.1.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2b_bn_s mapped name: layer1.2.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2a_b    mapped name: layer3.0.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2c_bn_b mapped name: layer1.1.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2a_bn_b mapped name: layer3.0.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2b_w    mapped name: layer1.2.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2a_bn_s mapped name: layer3.0.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2c_bn_s mapped name: layer1.1.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2c_b    mapped name: layer1.2.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2a_w    mapped name: layer3.0.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2c_w    mapped name: layer1.1.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2b_b    mapped name: layer3.0.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2c_bn_b mapped name: layer1.2.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2b_bn_b mapped name: layer3.0.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2a_b    mapped name: layer1.2.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2c_bn_s mapped name: layer1.2.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2b_bn_s mapped name: layer3.0.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2b_w    mapped name: layer3.0.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2a_bn_b mapped name: layer1.2.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2c_w    mapped name: layer1.2.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2c_b    mapped name: layer3.0.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2c_bn_b mapped name: layer3.0.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2a_bn_s mapped name: layer1.2.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch1_b     mapped name: layer2.0.downsample.0.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2c_bn_s mapped name: layer3.0.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2a_w    mapped name: layer1.2.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2c_w    mapped name: layer3.0.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch1_bn_b  mapped name: layer2.0.downsample.1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2a_b    mapped name: layer3.1.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2b_b    mapped name: layer1.2.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch1_bn_s  mapped name: layer2.0.downsample.1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2a_bn_b mapped name: layer3.1.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2a_bn_s mapped name: layer3.1.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2b_bn_b mapped name: layer1.2.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch1_w     mapped name: layer2.0.downsample.0.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2a_w    mapped name: layer3.1.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2b_bn_s mapped name: layer1.2.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2a_b    mapped name: layer2.0.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2b_b    mapped name: layer3.1.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2b_bn_b mapped name: layer3.1.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2b_w    mapped name: layer1.2.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2a_bn_b mapped name: layer2.0.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2b_bn_s mapped name: layer3.1.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2c_b    mapped name: layer1.2.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2b_w    mapped name: layer3.1.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2a_bn_s mapped name: layer2.0.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2c_b    mapped name: layer3.1.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2c_bn_b mapped name: layer1.2.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2a_w    mapped name: layer2.0.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2c_bn_b mapped name: layer3.1.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2c_bn_s mapped name: layer3.1.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2c_bn_s mapped name: layer1.2.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2b_b    mapped name: layer2.0.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2c_w    mapped name: layer3.1.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2c_w    mapped name: layer1.2.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2b_bn_b mapped name: layer2.0.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2a_b    mapped name: layer3.2.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2a_bn_b mapped name: layer3.2.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch1_b     mapped name: layer2.0.downsample.0.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2b_bn_s mapped name: layer2.0.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2a_bn_s mapped name: layer3.2.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch1_bn_b  mapped name: layer2.0.downsample.1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2a_w    mapped name: layer3.2.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2b_w    mapped name: layer2.0.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2b_b    mapped name: layer3.2.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch1_bn_s  mapped name: layer2.0.downsample.1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2c_b    mapped name: layer2.0.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2b_bn_b mapped name: layer3.2.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2b_bn_s mapped name: layer3.2.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch1_w     mapped name: layer2.0.downsample.0.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2c_bn_b mapped name: layer2.0.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2b_w    mapped name: layer3.2.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2a_b    mapped name: layer2.0.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2c_bn_s mapped name: layer2.0.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2c_b    mapped name: layer3.2.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2c_bn_b mapped name: layer3.2.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2a_bn_b mapped name: layer2.0.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2c_w    mapped name: layer2.0.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2c_bn_s mapped name: layer3.2.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2a_bn_s mapped name: layer2.0.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2c_w    mapped name: layer3.2.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2a_b    mapped name: layer2.1.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2a_b    mapped name: layer3.3.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2a_w    mapped name: layer2.0.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2a_bn_b mapped name: layer2.1.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2a_bn_b mapped name: layer3.3.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2a_bn_s mapped name: layer3.3.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2b_b    mapped name: layer2.0.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2a_bn_s mapped name: layer2.1.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2a_w    mapped name: layer3.3.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2b_bn_b mapped name: layer2.0.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2b_b    mapped name: layer3.3.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2a_w    mapped name: layer2.1.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2b_bn_b mapped name: layer3.3.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2b_bn_s mapped name: layer2.0.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2b_b    mapped name: layer2.1.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2b_bn_s mapped name: layer3.3.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2b_w    mapped name: layer3.3.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2b_w    mapped name: layer2.0.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2b_bn_b mapped name: layer2.1.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2c_b    mapped name: layer3.3.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2c_b    mapped name: layer2.0.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2c_bn_b mapped name: layer3.3.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2b_bn_s mapped name: layer2.1.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2c_bn_s mapped name: layer3.3.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2c_bn_b mapped name: layer2.0.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2b_w    mapped name: layer2.1.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2c_w    mapped name: layer3.3.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2a_b    mapped name: layer3.4.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2c_bn_s mapped name: layer2.0.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2c_b    mapped name: layer2.1.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2a_bn_b mapped name: layer3.4.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2c_w    mapped name: layer2.0.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2c_bn_b mapped name: layer2.1.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2a_bn_s mapped name: layer3.4.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2a_w    mapped name: layer3.4.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2a_b    mapped name: layer2.1.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2c_bn_s mapped name: layer2.1.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2b_b    mapped name: layer3.4.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2a_bn_b mapped name: layer2.1.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2b_bn_b mapped name: layer3.4.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2c_w    mapped name: layer2.1.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2b_bn_s mapped name: layer3.4.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2a_bn_s mapped name: layer2.1.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2b_w    mapped name: layer3.4.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2a_w    mapped name: layer2.1.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2c_b    mapped name: layer3.4.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2a_b    mapped name: layer2.2.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2c_bn_b mapped name: layer3.4.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2b_b    mapped name: layer2.1.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2a_bn_b mapped name: layer2.2.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2c_bn_s mapped name: layer3.4.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2b_bn_b mapped name: layer2.1.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2c_w    mapped name: layer3.4.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2a_bn_s mapped name: layer2.2.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2a_b    mapped name: layer3.5.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2b_bn_s mapped name: layer2.1.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2a_bn_b mapped name: layer3.5.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2a_w    mapped name: layer2.2.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2b_w    mapped name: layer2.1.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2a_bn_s mapped name: layer3.5.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2b_b    mapped name: layer2.2.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2a_w    mapped name: layer3.5.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2c_b    mapped name: layer2.1.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2b_b    mapped name: layer3.5.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2b_bn_b mapped name: layer2.2.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2c_bn_b mapped name: layer2.1.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2b_bn_b mapped name: layer3.5.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2b_bn_s mapped name: layer2.2.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2b_bn_s mapped name: layer3.5.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2c_bn_s mapped name: layer2.1.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2b_w    mapped name: layer2.2.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2b_w    mapped name: layer3.5.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2c_w    mapped name: layer2.1.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2c_b    mapped name: layer3.5.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2c_b    mapped name: layer2.2.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2c_bn_b mapped name: layer3.5.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2a_b    mapped name: layer2.2.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2c_bn_b mapped name: layer2.2.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2c_bn_s mapped name: layer3.5.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2a_bn_b mapped name: layer2.2.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2c_bn_s mapped name: layer2.2.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2c_w    mapped name: layer3.5.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2a_bn_s mapped name: layer2.2.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch1_b     mapped name: layer4.0.downsample.0.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2c_w    mapped name: layer2.2.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch1_bn_b  mapped name: layer4.0.downsample.1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2a_w    mapped name: layer2.2.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2a_b    mapped name: layer2.3.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch1_bn_s  mapped name: layer4.0.downsample.1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2b_b    mapped name: layer2.2.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch1_w     mapped name: layer4.0.downsample.0.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2a_bn_b mapped name: layer2.3.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2a_b    mapped name: layer4.0.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2a_bn_b mapped name: layer4.0.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2b_bn_b mapped name: layer2.2.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2a_bn_s mapped name: layer2.3.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2a_bn_s mapped name: layer4.0.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2a_w    mapped name: layer4.0.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2b_bn_s mapped name: layer2.2.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2b_b    mapped name: layer4.0.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2a_w    mapped name: layer2.3.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2b_bn_b mapped name: layer4.0.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2b_w    mapped name: layer2.2.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2b_bn_s mapped name: layer4.0.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2b_b    mapped name: layer2.3.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2b_w    mapped name: layer4.0.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2c_b    mapped name: layer4.0.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2c_b    mapped name: layer2.2.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2b_bn_b mapped name: layer2.3.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2c_bn_b mapped name: layer4.0.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2c_bn_s mapped name: layer4.0.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2c_bn_b mapped name: layer2.2.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2b_bn_s mapped name: layer2.3.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2c_w    mapped name: layer4.0.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2a_b    mapped name: layer4.1.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2c_bn_s mapped name: layer2.2.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2b_w    mapped name: layer2.3.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2a_bn_b mapped name: layer4.1.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2a_bn_s mapped name: layer4.1.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2c_w    mapped name: layer2.2.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2c_b    mapped name: layer2.3.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2a_w    mapped name: layer4.1.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2b_b    mapped name: layer4.1.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2a_b    mapped name: layer2.3.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2c_bn_b mapped name: layer2.3.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2b_bn_b mapped name: layer4.1.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2b_bn_s mapped name: layer4.1.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2a_bn_b mapped name: layer2.3.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2c_bn_s mapped name: layer2.3.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2b_w    mapped name: layer4.1.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2c_b    mapped name: layer4.1.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2c_w    mapped name: layer2.3.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2c_bn_b mapped name: layer4.1.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2a_bn_s mapped name: layer2.3.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2c_bn_s mapped name: layer4.1.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2c_w    mapped name: layer4.1.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch1_b     mapped name: layer3.0.downsample.0.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2a_w    mapped name: layer2.3.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2a_b    mapped name: layer4.2.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2a_bn_b mapped name: layer4.2.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch1_bn_b  mapped name: layer3.0.downsample.1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2b_b    mapped name: layer2.3.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2a_bn_s mapped name: layer4.2.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2a_w    mapped name: layer4.2.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch1_bn_s  mapped name: layer3.0.downsample.1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2b_bn_b mapped name: layer2.3.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2b_b    mapped name: layer4.2.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2b_bn_b mapped name: layer4.2.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch1_w     mapped name: layer3.0.downsample.0.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2b_bn_s mapped name: layer4.2.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2b_bn_s mapped name: layer2.3.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2b_w    mapped name: layer4.2.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2a_b    mapped name: layer3.0.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2c_b    mapped name: layer4.2.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2b_w    mapped name: layer2.3.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2c_bn_b mapped name: layer4.2.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2a_bn_b mapped name: layer3.0.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2c_bn_s mapped name: layer4.2.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2c_b    mapped name: layer2.3.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2c_w    mapped name: layer4.2.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2a_bn_s mapped name: layer3.0.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res_conv1_bn_b       mapped name: bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2c_bn_b mapped name: layer2.3.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res_conv1_bn_s       mapped name: bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2a_w    mapped name: layer3.0.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2c_bn_s mapped name: layer2.3.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2b_b    mapped name: layer3.0.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2c_w    mapped name: layer2.3.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2b_bn_b mapped name: layer3.0.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch1_b     mapped name: layer3.0.downsample.0.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2b_bn_s mapped name: layer3.0.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch1_bn_b  mapped name: layer3.0.downsample.1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2b_w    mapped name: layer3.0.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch1_bn_s  mapped name: layer3.0.downsample.1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2c_b    mapped name: layer3.0.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch1_w     mapped name: layer3.0.downsample.0.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2c_bn_b mapped name: layer3.0.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2a_b    mapped name: layer3.0.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2c_bn_s mapped name: layer3.0.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2a_bn_b mapped name: layer3.0.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2c_w    mapped name: layer3.0.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2a_bn_s mapped name: layer3.0.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2a_b    mapped name: layer3.1.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2a_w    mapped name: layer3.0.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2a_bn_b mapped name: layer3.1.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2b_b    mapped name: layer3.0.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2a_bn_s mapped name: layer3.1.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2b_bn_b mapped name: layer3.0.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2a_w    mapped name: layer3.1.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2b_bn_s mapped name: layer3.0.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2b_b    mapped name: layer3.1.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2b_w    mapped name: layer3.0.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2b_bn_b mapped name: layer3.1.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2c_b    mapped name: layer3.0.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2b_bn_s mapped name: layer3.1.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2c_bn_b mapped name: layer3.0.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2b_w    mapped name: layer3.1.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2c_bn_s mapped name: layer3.0.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2c_b    mapped name: layer3.1.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2c_w    mapped name: layer3.0.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2c_bn_b mapped name: layer3.1.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2a_b    mapped name: layer3.1.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2c_bn_s mapped name: layer3.1.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2a_bn_b mapped name: layer3.1.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2c_w    mapped name: layer3.1.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2a_bn_s mapped name: layer3.1.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2a_b    mapped name: layer3.2.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2a_w    mapped name: layer3.1.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2a_bn_b mapped name: layer3.2.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2b_b    mapped name: layer3.1.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2a_bn_s mapped name: layer3.2.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2b_bn_b mapped name: layer3.1.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2a_w    mapped name: layer3.2.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2b_bn_s mapped name: layer3.1.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2b_b    mapped name: layer3.2.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2b_w    mapped name: layer3.1.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2b_bn_b mapped name: layer3.2.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2c_b    mapped name: layer3.1.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2b_bn_s mapped name: layer3.2.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2c_bn_b mapped name: layer3.1.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2b_w    mapped name: layer3.2.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2c_bn_s mapped name: layer3.1.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2c_b    mapped name: layer3.2.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2c_w    mapped name: layer3.1.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2c_bn_b mapped name: layer3.2.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2a_b    mapped name: layer3.2.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2c_bn_s mapped name: layer3.2.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2a_bn_b mapped name: layer3.2.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2c_w    mapped name: layer3.2.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2a_bn_s mapped name: layer3.2.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2a_b    mapped name: layer3.3.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2a_w    mapped name: layer3.2.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2a_bn_b mapped name: layer3.3.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2b_b    mapped name: layer3.2.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2a_bn_s mapped name: layer3.3.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2b_bn_b mapped name: layer3.2.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2a_w    mapped name: layer3.3.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2b_bn_s mapped name: layer3.2.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2b_b    mapped name: layer3.3.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2b_w    mapped name: layer3.2.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2b_bn_b mapped name: layer3.3.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2c_b    mapped name: layer3.2.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2b_bn_s mapped name: layer3.3.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2c_bn_b mapped name: layer3.2.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2b_w    mapped name: layer3.3.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2c_bn_s mapped name: layer3.2.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2c_b    mapped name: layer3.3.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2c_w    mapped name: layer3.2.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2c_bn_b mapped name: layer3.3.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2a_b    mapped name: layer3.3.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2c_bn_s mapped name: layer3.3.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2a_bn_b mapped name: layer3.3.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2c_w    mapped name: layer3.3.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2a_bn_s mapped name: layer3.3.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2a_b    mapped name: layer3.4.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2a_w    mapped name: layer3.3.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2a_bn_b mapped name: layer3.4.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2b_b    mapped name: layer3.3.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2a_bn_s mapped name: layer3.4.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2b_bn_b mapped name: layer3.3.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2a_w    mapped name: layer3.4.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2b_bn_s mapped name: layer3.3.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2b_b    mapped name: layer3.4.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2b_w    mapped name: layer3.3.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2b_bn_b mapped name: layer3.4.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2c_b    mapped name: layer3.3.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2b_bn_s mapped name: layer3.4.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2c_bn_b mapped name: layer3.3.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2b_w    mapped name: layer3.4.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2c_bn_s mapped name: layer3.3.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2c_b    mapped name: layer3.4.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2c_bn_b mapped name: layer3.4.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2c_w    mapped name: layer3.3.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2c_bn_s mapped name: layer3.4.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2a_b    mapped name: layer3.4.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2c_w    mapped name: layer3.4.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2a_bn_b mapped name: layer3.4.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2a_b    mapped name: layer3.5.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2a_bn_s mapped name: layer3.4.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2a_bn_b mapped name: layer3.5.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2a_w    mapped name: layer3.4.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2a_bn_s mapped name: layer3.5.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2a_w    mapped name: layer3.5.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2b_b    mapped name: layer3.4.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2b_b    mapped name: layer3.5.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2b_bn_b mapped name: layer3.4.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2b_bn_b mapped name: layer3.5.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2b_bn_s mapped name: layer3.4.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2b_bn_s mapped name: layer3.5.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2b_w    mapped name: layer3.4.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2b_w    mapped name: layer3.5.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2c_b    mapped name: layer3.4.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2c_b    mapped name: layer3.5.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2c_bn_b mapped name: layer3.4.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2c_bn_b mapped name: layer3.5.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2c_bn_s mapped name: layer3.4.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2c_bn_s mapped name: layer3.5.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2c_w    mapped name: layer3.4.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2c_w    mapped name: layer3.5.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2a_b    mapped name: layer3.5.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch1_b     mapped name: layer4.0.downsample.0.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2a_bn_b mapped name: layer3.5.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch1_bn_b  mapped name: layer4.0.downsample.1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2a_bn_s mapped name: layer3.5.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch1_bn_s  mapped name: layer4.0.downsample.1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2a_w    mapped name: layer3.5.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch1_w     mapped name: layer4.0.downsample.0.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2b_b    mapped name: layer3.5.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2a_b    mapped name: layer4.0.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2b_bn_b mapped name: layer3.5.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2a_bn_b mapped name: layer4.0.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2b_bn_s mapped name: layer3.5.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2a_bn_s mapped name: layer4.0.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2b_w    mapped name: layer3.5.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2a_w    mapped name: layer4.0.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2c_b    mapped name: layer3.5.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2b_b    mapped name: layer4.0.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2c_bn_b mapped name: layer3.5.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2b_bn_b mapped name: layer4.0.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2c_bn_s mapped name: layer3.5.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2b_bn_s mapped name: layer4.0.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2b_w    mapped name: layer4.0.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2c_w    mapped name: layer3.5.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2c_b    mapped name: layer4.0.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch1_b     mapped name: layer4.0.downsample.0.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2c_bn_b mapped name: layer4.0.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch1_bn_b  mapped name: layer4.0.downsample.1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2c_bn_s mapped name: layer4.0.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch1_bn_s  mapped name: layer4.0.downsample.1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2c_w    mapped name: layer4.0.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch1_w     mapped name: layer4.0.downsample.0.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2a_b    mapped name: layer4.1.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2a_b    mapped name: layer4.0.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2a_bn_b mapped name: layer4.1.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2a_bn_b mapped name: layer4.0.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2a_bn_s mapped name: layer4.1.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2a_bn_s mapped name: layer4.0.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2a_w    mapped name: layer4.1.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2a_w    mapped name: layer4.0.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2b_b    mapped name: layer4.1.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2b_b    mapped name: layer4.0.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2b_bn_b mapped name: layer4.1.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2b_bn_b mapped name: layer4.0.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2b_bn_s mapped name: layer4.1.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2b_bn_s mapped name: layer4.0.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2b_w    mapped name: layer4.1.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2b_w    mapped name: layer4.0.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2c_b    mapped name: layer4.1.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2c_b    mapped name: layer4.0.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2c_bn_b mapped name: layer4.1.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2c_bn_b mapped name: layer4.0.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2c_bn_s mapped name: layer4.1.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2c_bn_s mapped name: layer4.0.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2c_w    mapped name: layer4.1.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2c_w    mapped name: layer4.0.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2a_b    mapped name: layer4.2.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2a_b    mapped name: layer4.1.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2a_bn_b mapped name: layer4.2.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2a_bn_b mapped name: layer4.1.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2a_bn_s mapped name: layer4.2.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2a_bn_s mapped name: layer4.1.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2a_w    mapped name: layer4.2.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2a_w    mapped name: layer4.1.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2b_b    mapped name: layer4.2.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2b_b    mapped name: layer4.1.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2b_bn_b mapped name: layer4.2.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2b_bn_b mapped name: layer4.1.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2b_bn_s mapped name: layer4.2.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2b_bn_s mapped name: layer4.1.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2b_w    mapped name: layer4.2.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2b_w    mapped name: layer4.1.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2c_b    mapped name: layer4.2.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2c_b    mapped name: layer4.1.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2c_bn_b mapped name: layer4.2.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2c_bn_b mapped name: layer4.1.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2c_bn_s mapped name: layer4.2.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2c_bn_s mapped name: layer4.1.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2c_w    mapped name: layer4.2.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2c_w    mapped name: layer4.1.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res_conv1_bn_b       mapped name: bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2a_b    mapped name: layer4.2.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res_conv1_bn_s       mapped name: bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2a_bn_b mapped name: layer4.2.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2a_bn_s mapped name: layer4.2.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2a_w    mapped name: layer4.2.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2b_b    mapped name: layer4.2.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2b_bn_b mapped name: layer4.2.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2b_bn_s mapped name: layer4.2.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2b_w    mapped name: layer4.2.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2c_b    mapped name: layer4.2.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2c_bn_b mapped name: layer4.2.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2c_bn_s mapped name: layer4.2.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2c_w    mapped name: layer4.2.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res_conv1_bn_b       mapped name: bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res_conv1_bn_s       mapped name: bn1.weight
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.bn1.bias                  loaded from layer1.0.bn1.bias            of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.bn1.bias                  loaded from layer1.0.bn1.bias            of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.bn1.weight                loaded from layer1.0.bn1.weight          of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.bn1.weight                loaded from layer1.0.bn1.weight          of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.bn2.bias                  loaded from layer1.0.bn2.bias            of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.bn2.bias                  loaded from layer1.0.bn2.bias            of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.bn1.bias                  loaded from layer1.0.bn1.bias            of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.bn2.weight                loaded from layer1.0.bn2.weight          of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.bn2.weight                loaded from layer1.0.bn2.weight          of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.bn3.bias                  loaded from layer1.0.bn3.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.bn3.bias                  loaded from layer1.0.bn3.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.bn3.weight                loaded from layer1.0.bn3.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.bn3.weight                loaded from layer1.0.bn3.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.bn1.weight                loaded from layer1.0.bn1.weight          of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.conv1.weight              loaded from layer1.0.conv1.weight        of shape (64, 64, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.conv1.weight              loaded from layer1.0.conv1.weight        of shape (64, 64, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.bn2.bias                  loaded from layer1.0.bn2.bias            of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.bn2.weight                loaded from layer1.0.bn2.weight          of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.conv2.weight              loaded from layer1.0.conv2.weight        of shape (64, 64, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.conv2.weight              loaded from layer1.0.conv2.weight        of shape (64, 64, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.conv3.weight              loaded from layer1.0.conv3.weight        of shape (256, 64, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.conv3.weight              loaded from layer1.0.conv3.weight        of shape (256, 64, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.bn3.bias                  loaded from layer1.0.bn3.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.downsample.0.weight       loaded from layer1.0.downsample.0.weight of shape (256, 64, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.downsample.0.weight       loaded from layer1.0.downsample.0.weight of shape (256, 64, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.downsample.1.bias         loaded from layer1.0.downsample.1.bias   of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.downsample.1.bias         loaded from layer1.0.downsample.1.bias   of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.bn3.weight                loaded from layer1.0.bn3.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.downsample.1.weight       loaded from layer1.0.downsample.1.weight of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.downsample.1.weight       loaded from layer1.0.downsample.1.weight of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.bn1.bias                  loaded from layer1.1.bn1.bias            of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.bn1.bias                  loaded from layer1.1.bn1.bias            of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.bn1.weight                loaded from layer1.1.bn1.weight          of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.bn1.weight                loaded from layer1.1.bn1.weight          of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.conv1.weight              loaded from layer1.0.conv1.weight        of shape (64, 64, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.bn2.bias                  loaded from layer1.1.bn2.bias            of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.bn2.bias                  loaded from layer1.1.bn2.bias            of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.bn2.weight                loaded from layer1.1.bn2.weight          of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.bn2.weight                loaded from layer1.1.bn2.weight          of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.bn3.bias                  loaded from layer1.1.bn3.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.bn3.bias                  loaded from layer1.1.bn3.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.bn3.weight                loaded from layer1.1.bn3.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.bn3.weight                loaded from layer1.1.bn3.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.conv1.weight              loaded from layer1.1.conv1.weight        of shape (64, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.conv1.weight              loaded from layer1.1.conv1.weight        of shape (64, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.conv2.weight              loaded from layer1.0.conv2.weight        of shape (64, 64, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.conv2.weight              loaded from layer1.1.conv2.weight        of shape (64, 64, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.conv2.weight              loaded from layer1.1.conv2.weight        of shape (64, 64, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.conv3.weight              loaded from layer1.1.conv3.weight        of shape (256, 64, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.conv3.weight              loaded from layer1.1.conv3.weight        of shape (256, 64, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.conv3.weight              loaded from layer1.0.conv3.weight        of shape (256, 64, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.bn1.bias                  loaded from layer1.2.bn1.bias            of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.bn1.bias                  loaded from layer1.2.bn1.bias            of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.bn1.weight                loaded from layer1.2.bn1.weight          of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.bn1.weight                loaded from layer1.2.bn1.weight          of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.bn2.bias                  loaded from layer1.2.bn2.bias            of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.bn2.bias                  loaded from layer1.2.bn2.bias            of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.downsample.0.weight       loaded from layer1.0.downsample.0.weight of shape (256, 64, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.bn2.weight                loaded from layer1.2.bn2.weight          of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.bn2.weight                loaded from layer1.2.bn2.weight          of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.bn3.bias                  loaded from layer1.2.bn3.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.bn3.bias                  loaded from layer1.2.bn3.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.downsample.1.bias         loaded from layer1.0.downsample.1.bias   of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.bn3.weight                loaded from layer1.2.bn3.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.bn3.weight                loaded from layer1.2.bn3.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.conv1.weight              loaded from layer1.2.conv1.weight        of shape (64, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.conv1.weight              loaded from layer1.2.conv1.weight        of shape (64, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.downsample.1.weight       loaded from layer1.0.downsample.1.weight of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.bn1.bias                  loaded from layer1.1.bn1.bias            of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.conv2.weight              loaded from layer1.2.conv2.weight        of shape (64, 64, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.conv2.weight              loaded from layer1.2.conv2.weight        of shape (64, 64, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.conv3.weight              loaded from layer1.2.conv3.weight        of shape (256, 64, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.conv3.weight              loaded from layer1.2.conv3.weight        of shape (256, 64, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.bn1.weight                loaded from layer1.1.bn1.weight          of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.bn1.bias                  loaded from layer2.0.bn1.bias            of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.bn1.bias                  loaded from layer2.0.bn1.bias            of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.bn1.weight                loaded from layer2.0.bn1.weight          of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.bn1.weight                loaded from layer2.0.bn1.weight          of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.bn2.bias                  loaded from layer1.1.bn2.bias            of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.bn2.bias                  loaded from layer2.0.bn2.bias            of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.bn2.bias                  loaded from layer2.0.bn2.bias            of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.bn2.weight                loaded from layer2.0.bn2.weight          of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.bn2.weight                loaded from layer2.0.bn2.weight          of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.bn2.weight                loaded from layer1.1.bn2.weight          of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.bn3.bias                  loaded from layer2.0.bn3.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.bn3.bias                  loaded from layer2.0.bn3.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.bn3.weight                loaded from layer2.0.bn3.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.bn3.weight                loaded from layer2.0.bn3.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.bn3.bias                  loaded from layer1.1.bn3.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.conv1.weight              loaded from layer2.0.conv1.weight        of shape (128, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.conv1.weight              loaded from layer2.0.conv1.weight        of shape (128, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.bn3.weight                loaded from layer1.1.bn3.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.conv1.weight              loaded from layer1.1.conv1.weight        of shape (64, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.conv2.weight              loaded from layer2.0.conv2.weight        of shape (128, 128, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.conv2.weight              loaded from layer2.0.conv2.weight        of shape (128, 128, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.conv3.weight              loaded from layer2.0.conv3.weight        of shape (512, 128, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.conv3.weight              loaded from layer2.0.conv3.weight        of shape (512, 128, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.downsample.0.weight       loaded from layer2.0.downsample.0.weight of shape (512, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.downsample.0.weight       loaded from layer2.0.downsample.0.weight of shape (512, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.downsample.1.bias         loaded from layer2.0.downsample.1.bias   of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.conv2.weight              loaded from layer1.1.conv2.weight        of shape (64, 64, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.downsample.1.bias         loaded from layer2.0.downsample.1.bias   of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.downsample.1.weight       loaded from layer2.0.downsample.1.weight of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.downsample.1.weight       loaded from layer2.0.downsample.1.weight of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.bn1.bias                  loaded from layer2.1.bn1.bias            of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.bn1.bias                  loaded from layer2.1.bn1.bias            of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.conv3.weight              loaded from layer1.1.conv3.weight        of shape (256, 64, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.bn1.weight                loaded from layer2.1.bn1.weight          of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.bn1.weight                loaded from layer2.1.bn1.weight          of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.bn2.bias                  loaded from layer2.1.bn2.bias            of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.bn2.bias                  loaded from layer2.1.bn2.bias            of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.bn2.weight                loaded from layer2.1.bn2.weight          of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.bn1.bias                  loaded from layer1.2.bn1.bias            of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.bn2.weight                loaded from layer2.1.bn2.weight          of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.bn3.bias                  loaded from layer2.1.bn3.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.bn3.bias                  loaded from layer2.1.bn3.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.bn3.weight                loaded from layer2.1.bn3.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.bn3.weight                loaded from layer2.1.bn3.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.bn1.weight                loaded from layer1.2.bn1.weight          of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.conv1.weight              loaded from layer2.1.conv1.weight        of shape (128, 512, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.conv1.weight              loaded from layer2.1.conv1.weight        of shape (128, 512, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.bn2.bias                  loaded from layer1.2.bn2.bias            of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.bn2.weight                loaded from layer1.2.bn2.weight          of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.bn3.bias                  loaded from layer1.2.bn3.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.conv2.weight              loaded from layer2.1.conv2.weight        of shape (128, 128, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.bn3.weight                loaded from layer1.2.bn3.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.conv2.weight              loaded from layer2.1.conv2.weight        of shape (128, 128, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.conv3.weight              loaded from layer2.1.conv3.weight        of shape (512, 128, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.conv3.weight              loaded from layer2.1.conv3.weight        of shape (512, 128, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.bn1.bias                  loaded from layer2.2.bn1.bias            of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.conv1.weight              loaded from layer1.2.conv1.weight        of shape (64, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.bn1.bias                  loaded from layer2.2.bn1.bias            of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.bn1.weight                loaded from layer2.2.bn1.weight          of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.bn1.weight                loaded from layer2.2.bn1.weight          of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.bn2.bias                  loaded from layer2.2.bn2.bias            of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.bn2.bias                  loaded from layer2.2.bn2.bias            of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.bn2.weight                loaded from layer2.2.bn2.weight          of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.bn2.weight                loaded from layer2.2.bn2.weight          of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.bn3.bias                  loaded from layer2.2.bn3.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.bn3.bias                  loaded from layer2.2.bn3.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.bn3.weight                loaded from layer2.2.bn3.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.bn3.weight                loaded from layer2.2.bn3.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.conv1.weight              loaded from layer2.2.conv1.weight        of shape (128, 512, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.conv1.weight              loaded from layer2.2.conv1.weight        of shape (128, 512, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.conv2.weight              loaded from layer1.2.conv2.weight        of shape (64, 64, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.conv3.weight              loaded from layer1.2.conv3.weight        of shape (256, 64, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.bn1.bias                  loaded from layer2.0.bn1.bias            of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.conv2.weight              loaded from layer2.2.conv2.weight        of shape (128, 128, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.bn1.weight                loaded from layer2.0.bn1.weight          of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.conv2.weight              loaded from layer2.2.conv2.weight        of shape (128, 128, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.conv3.weight              loaded from layer2.2.conv3.weight        of shape (512, 128, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.conv3.weight              loaded from layer2.2.conv3.weight        of shape (512, 128, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.bn1.bias                  loaded from layer2.3.bn1.bias            of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.bn2.bias                  loaded from layer2.0.bn2.bias            of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.bn1.bias                  loaded from layer2.3.bn1.bias            of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.bn1.weight                loaded from layer2.3.bn1.weight          of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.bn1.weight                loaded from layer2.3.bn1.weight          of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.bn2.bias                  loaded from layer2.3.bn2.bias            of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.bn2.weight                loaded from layer2.0.bn2.weight          of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.bn2.bias                  loaded from layer2.3.bn2.bias            of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.bn2.weight                loaded from layer2.3.bn2.weight          of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.bn2.weight                loaded from layer2.3.bn2.weight          of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.bn3.bias                  loaded from layer2.3.bn3.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.bn3.bias                  loaded from layer2.0.bn3.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.bn3.bias                  loaded from layer2.3.bn3.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.bn3.weight                loaded from layer2.3.bn3.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.bn3.weight                loaded from layer2.3.bn3.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.bn3.weight                loaded from layer2.0.bn3.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.conv1.weight              loaded from layer2.3.conv1.weight        of shape (128, 512, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.conv1.weight              loaded from layer2.3.conv1.weight        of shape (128, 512, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.conv1.weight              loaded from layer2.0.conv1.weight        of shape (128, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.conv2.weight              loaded from layer2.3.conv2.weight        of shape (128, 128, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.conv3.weight              loaded from layer2.3.conv3.weight        of shape (512, 128, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.bn1.bias                  loaded from layer3.0.bn1.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.bn1.weight                loaded from layer3.0.bn1.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.conv2.weight              loaded from layer2.3.conv2.weight        of shape (128, 128, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.bn2.bias                  loaded from layer3.0.bn2.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.conv2.weight              loaded from layer2.0.conv2.weight        of shape (128, 128, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.bn2.weight                loaded from layer3.0.bn2.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.conv3.weight              loaded from layer2.3.conv3.weight        of shape (512, 128, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.bn3.bias                  loaded from layer3.0.bn3.bias            of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.conv3.weight              loaded from layer2.0.conv3.weight        of shape (512, 128, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.bn3.weight                loaded from layer3.0.bn3.weight          of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.bn1.bias                  loaded from layer3.0.bn1.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.conv1.weight              loaded from layer3.0.conv1.weight        of shape (256, 512, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.downsample.0.weight       loaded from layer2.0.downsample.0.weight of shape (512, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.bn1.weight                loaded from layer3.0.bn1.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.downsample.1.bias         loaded from layer2.0.downsample.1.bias   of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.bn2.bias                  loaded from layer3.0.bn2.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.downsample.1.weight       loaded from layer2.0.downsample.1.weight of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.bn2.weight                loaded from layer3.0.bn2.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.bn1.bias                  loaded from layer2.1.bn1.bias            of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.bn3.bias                  loaded from layer3.0.bn3.bias            of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.bn1.weight                loaded from layer2.1.bn1.weight          of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.bn3.weight                loaded from layer3.0.bn3.weight          of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.bn2.bias                  loaded from layer2.1.bn2.bias            of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.conv1.weight              loaded from layer3.0.conv1.weight        of shape (256, 512, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.bn2.weight                loaded from layer2.1.bn2.weight          of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.bn3.bias                  loaded from layer2.1.bn3.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.bn3.weight                loaded from layer2.1.bn3.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.conv1.weight              loaded from layer2.1.conv1.weight        of shape (128, 512, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.conv2.weight              loaded from layer3.0.conv2.weight        of shape (256, 256, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.conv3.weight              loaded from layer3.0.conv3.weight        of shape (1024, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.downsample.0.weight       loaded from layer3.0.downsample.0.weight of shape (1024, 512, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.conv2.weight              loaded from layer2.1.conv2.weight        of shape (128, 128, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.downsample.1.bias         loaded from layer3.0.downsample.1.bias   of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.downsample.1.weight       loaded from layer3.0.downsample.1.weight of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.conv3.weight              loaded from layer2.1.conv3.weight        of shape (512, 128, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.bn1.bias                  loaded from layer3.1.bn1.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.bn1.bias                  loaded from layer2.2.bn1.bias            of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.bn1.weight                loaded from layer3.1.bn1.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.bn2.bias                  loaded from layer3.1.bn2.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.bn1.weight                loaded from layer2.2.bn1.weight          of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.bn2.weight                loaded from layer3.1.bn2.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.bn3.bias                  loaded from layer3.1.bn3.bias            of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.bn2.bias                  loaded from layer2.2.bn2.bias            of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.bn3.weight                loaded from layer3.1.bn3.weight          of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.bn2.weight                loaded from layer2.2.bn2.weight          of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.conv1.weight              loaded from layer3.1.conv1.weight        of shape (256, 1024, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.bn3.bias                  loaded from layer2.2.bn3.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.bn3.weight                loaded from layer2.2.bn3.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.conv1.weight              loaded from layer2.2.conv1.weight        of shape (128, 512, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.conv2.weight              loaded from layer3.0.conv2.weight        of shape (256, 256, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.conv3.weight              loaded from layer3.0.conv3.weight        of shape (1024, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.downsample.0.weight       loaded from layer3.0.downsample.0.weight of shape (1024, 512, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.downsample.1.bias         loaded from layer3.0.downsample.1.bias   of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.downsample.1.weight       loaded from layer3.0.downsample.1.weight of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.conv2.weight              loaded from layer2.2.conv2.weight        of shape (128, 128, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.bn1.bias                  loaded from layer3.1.bn1.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.conv3.weight              loaded from layer2.2.conv3.weight        of shape (512, 128, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.bn1.weight                loaded from layer3.1.bn1.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.bn1.bias                  loaded from layer2.3.bn1.bias            of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.bn2.bias                  loaded from layer3.1.bn2.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.bn1.weight                loaded from layer2.3.bn1.weight          of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.bn2.weight                loaded from layer3.1.bn2.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.bn2.bias                  loaded from layer2.3.bn2.bias            of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.conv2.weight              loaded from layer3.1.conv2.weight        of shape (256, 256, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.bn3.bias                  loaded from layer3.1.bn3.bias            of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.bn2.weight                loaded from layer2.3.bn2.weight          of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.conv3.weight              loaded from layer3.1.conv3.weight        of shape (1024, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.bn3.weight                loaded from layer3.1.bn3.weight          of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.bn1.bias                  loaded from layer3.2.bn1.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.bn3.bias                  loaded from layer2.3.bn3.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.bn1.weight                loaded from layer3.2.bn1.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.conv1.weight              loaded from layer3.1.conv1.weight        of shape (256, 1024, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.bn3.weight                loaded from layer2.3.bn3.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.bn2.bias                  loaded from layer3.2.bn2.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.bn2.weight                loaded from layer3.2.bn2.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.conv1.weight              loaded from layer2.3.conv1.weight        of shape (128, 512, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.bn3.bias                  loaded from layer3.2.bn3.bias            of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.bn3.weight                loaded from layer3.2.bn3.weight          of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.conv1.weight              loaded from layer3.2.conv1.weight        of shape (256, 1024, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.conv2.weight              loaded from layer2.3.conv2.weight        of shape (128, 128, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.conv3.weight              loaded from layer2.3.conv3.weight        of shape (512, 128, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.bn1.bias                  loaded from layer3.0.bn1.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.bn1.weight                loaded from layer3.0.bn1.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.bn2.bias                  loaded from layer3.0.bn2.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.bn2.weight                loaded from layer3.0.bn2.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.bn3.bias                  loaded from layer3.0.bn3.bias            of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.bn3.weight                loaded from layer3.0.bn3.weight          of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.conv1.weight              loaded from layer3.0.conv1.weight        of shape (256, 512, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.conv2.weight              loaded from layer3.2.conv2.weight        of shape (256, 256, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.conv3.weight              loaded from layer3.2.conv3.weight        of shape (1024, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.bn1.bias                  loaded from layer3.3.bn1.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.bn1.weight                loaded from layer3.3.bn1.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.bn2.bias                  loaded from layer3.3.bn2.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.bn2.weight                loaded from layer3.3.bn2.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.conv2.weight              loaded from layer3.1.conv2.weight        of shape (256, 256, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.bn3.bias                  loaded from layer3.3.bn3.bias            of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.bn3.weight                loaded from layer3.3.bn3.weight          of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.conv3.weight              loaded from layer3.1.conv3.weight        of shape (1024, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.conv1.weight              loaded from layer3.3.conv1.weight        of shape (256, 1024, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.bn1.bias                  loaded from layer3.2.bn1.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.bn1.weight                loaded from layer3.2.bn1.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.bn2.bias                  loaded from layer3.2.bn2.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.bn2.weight                loaded from layer3.2.bn2.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.bn3.bias                  loaded from layer3.2.bn3.bias            of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.bn3.weight                loaded from layer3.2.bn3.weight          of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.conv1.weight              loaded from layer3.2.conv1.weight        of shape (256, 1024, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.conv2.weight              loaded from layer3.0.conv2.weight        of shape (256, 256, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.conv3.weight              loaded from layer3.0.conv3.weight        of shape (1024, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.downsample.0.weight       loaded from layer3.0.downsample.0.weight of shape (1024, 512, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.conv2.weight              loaded from layer3.3.conv2.weight        of shape (256, 256, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.downsample.1.bias         loaded from layer3.0.downsample.1.bias   of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.conv3.weight              loaded from layer3.3.conv3.weight        of shape (1024, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.downsample.1.weight       loaded from layer3.0.downsample.1.weight of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.bn1.bias                  loaded from layer3.4.bn1.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.bn1.bias                  loaded from layer3.1.bn1.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.bn1.weight                loaded from layer3.4.bn1.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.bn1.weight                loaded from layer3.1.bn1.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.bn2.bias                  loaded from layer3.4.bn2.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.bn2.bias                  loaded from layer3.1.bn2.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.bn2.weight                loaded from layer3.4.bn2.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.bn2.weight                loaded from layer3.1.bn2.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.bn3.bias                  loaded from layer3.4.bn3.bias            of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.bn3.bias                  loaded from layer3.1.bn3.bias            of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.bn3.weight                loaded from layer3.4.bn3.weight          of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.bn3.weight                loaded from layer3.1.bn3.weight          of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.conv1.weight              loaded from layer3.4.conv1.weight        of shape (256, 1024, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.conv1.weight              loaded from layer3.1.conv1.weight        of shape (256, 1024, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.conv2.weight              loaded from layer3.2.conv2.weight        of shape (256, 256, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.conv3.weight              loaded from layer3.2.conv3.weight        of shape (1024, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.bn1.bias                  loaded from layer3.3.bn1.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.bn1.weight                loaded from layer3.3.bn1.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.bn2.bias                  loaded from layer3.3.bn2.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.bn2.weight                loaded from layer3.3.bn2.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.bn3.bias                  loaded from layer3.3.bn3.bias            of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.conv2.weight              loaded from layer3.1.conv2.weight        of shape (256, 256, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.conv3.weight              loaded from layer3.1.conv3.weight        of shape (1024, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.bn3.weight                loaded from layer3.3.bn3.weight          of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.bn1.bias                  loaded from layer3.2.bn1.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.bn1.weight                loaded from layer3.2.bn1.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.conv1.weight              loaded from layer3.3.conv1.weight        of shape (256, 1024, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.bn2.bias                  loaded from layer3.2.bn2.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.bn2.weight                loaded from layer3.2.bn2.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.bn3.bias                  loaded from layer3.2.bn3.bias            of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.bn3.weight                loaded from layer3.2.bn3.weight          of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.conv1.weight              loaded from layer3.2.conv1.weight        of shape (256, 1024, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.conv2.weight              loaded from layer3.4.conv2.weight        of shape (256, 256, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.conv3.weight              loaded from layer3.4.conv3.weight        of shape (1024, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.bn1.bias                  loaded from layer3.5.bn1.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.bn1.weight                loaded from layer3.5.bn1.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.bn2.bias                  loaded from layer3.5.bn2.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.bn2.weight                loaded from layer3.5.bn2.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.bn3.bias                  loaded from layer3.5.bn3.bias            of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.bn3.weight                loaded from layer3.5.bn3.weight          of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.conv1.weight              loaded from layer3.5.conv1.weight        of shape (256, 1024, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.conv2.weight              loaded from layer3.2.conv2.weight        of shape (256, 256, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.conv3.weight              loaded from layer3.2.conv3.weight        of shape (1024, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.bn1.bias                  loaded from layer3.3.bn1.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.bn1.weight                loaded from layer3.3.bn1.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.bn2.bias                  loaded from layer3.3.bn2.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.bn2.weight                loaded from layer3.3.bn2.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.conv2.weight              loaded from layer3.3.conv2.weight        of shape (256, 256, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.bn3.bias                  loaded from layer3.3.bn3.bias            of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.bn3.weight                loaded from layer3.3.bn3.weight          of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.conv3.weight              loaded from layer3.3.conv3.weight        of shape (1024, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.conv1.weight              loaded from layer3.3.conv1.weight        of shape (256, 1024, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.bn1.bias                  loaded from layer3.4.bn1.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.bn1.weight                loaded from layer3.4.bn1.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.bn2.bias                  loaded from layer3.4.bn2.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.bn2.weight                loaded from layer3.4.bn2.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.bn3.bias                  loaded from layer3.4.bn3.bias            of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.bn3.weight                loaded from layer3.4.bn3.weight          of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.conv1.weight              loaded from layer3.4.conv1.weight        of shape (256, 1024, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.conv2.weight              loaded from layer3.5.conv2.weight        of shape (256, 256, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.conv3.weight              loaded from layer3.5.conv3.weight        of shape (1024, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.conv2.weight              loaded from layer3.3.conv2.weight        of shape (256, 256, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.bn1.bias                  loaded from layer4.0.bn1.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.conv3.weight              loaded from layer3.3.conv3.weight        of shape (1024, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.bn1.weight                loaded from layer4.0.bn1.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.bn1.bias                  loaded from layer3.4.bn1.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.bn2.bias                  loaded from layer4.0.bn2.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.bn1.weight                loaded from layer3.4.bn1.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.bn2.weight                loaded from layer4.0.bn2.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.bn2.bias                  loaded from layer3.4.bn2.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.bn3.bias                  loaded from layer4.0.bn3.bias            of shape (2048,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.bn2.weight                loaded from layer3.4.bn2.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.bn3.weight                loaded from layer4.0.bn3.weight          of shape (2048,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.bn3.bias                  loaded from layer3.4.bn3.bias            of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.conv1.weight              loaded from layer4.0.conv1.weight        of shape (512, 1024, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.bn3.weight                loaded from layer3.4.bn3.weight          of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.conv1.weight              loaded from layer3.4.conv1.weight        of shape (256, 1024, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.conv2.weight              loaded from layer3.4.conv2.weight        of shape (256, 256, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.conv3.weight              loaded from layer3.4.conv3.weight        of shape (1024, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.bn1.bias                  loaded from layer3.5.bn1.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.bn1.weight                loaded from layer3.5.bn1.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.bn2.bias                  loaded from layer3.5.bn2.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.bn2.weight                loaded from layer3.5.bn2.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.bn3.bias                  loaded from layer3.5.bn3.bias            of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.bn3.weight                loaded from layer3.5.bn3.weight          of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.conv1.weight              loaded from layer3.5.conv1.weight        of shape (256, 1024, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.conv2.weight              loaded from layer3.4.conv2.weight        of shape (256, 256, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.conv3.weight              loaded from layer3.4.conv3.weight        of shape (1024, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.bn1.bias                  loaded from layer3.5.bn1.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.bn1.weight                loaded from layer3.5.bn1.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.bn2.bias                  loaded from layer3.5.bn2.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.bn2.weight                loaded from layer3.5.bn2.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.bn3.bias                  loaded from layer3.5.bn3.bias            of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.bn3.weight                loaded from layer3.5.bn3.weight          of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.conv1.weight              loaded from layer3.5.conv1.weight        of shape (256, 1024, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.conv2.weight              loaded from layer3.5.conv2.weight        of shape (256, 256, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.conv3.weight              loaded from layer3.5.conv3.weight        of shape (1024, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.bn1.bias                  loaded from layer4.0.bn1.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.bn1.weight                loaded from layer4.0.bn1.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.bn2.bias                  loaded from layer4.0.bn2.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.bn2.weight                loaded from layer4.0.bn2.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.bn3.bias                  loaded from layer4.0.bn3.bias            of shape (2048,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.bn3.weight                loaded from layer4.0.bn3.weight          of shape (2048,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.conv1.weight              loaded from layer4.0.conv1.weight        of shape (512, 1024, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.conv2.weight              loaded from layer3.5.conv2.weight        of shape (256, 256, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.conv3.weight              loaded from layer3.5.conv3.weight        of shape (1024, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.bn1.bias                  loaded from layer4.0.bn1.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.bn1.weight                loaded from layer4.0.bn1.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.bn2.bias                  loaded from layer4.0.bn2.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.bn2.weight                loaded from layer4.0.bn2.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.bn3.bias                  loaded from layer4.0.bn3.bias            of shape (2048,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.bn3.weight                loaded from layer4.0.bn3.weight          of shape (2048,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.conv1.weight              loaded from layer4.0.conv1.weight        of shape (512, 1024, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.conv2.weight              loaded from layer4.0.conv2.weight        of shape (512, 512, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.conv3.weight              loaded from layer4.0.conv3.weight        of shape (2048, 512, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.downsample.0.weight       loaded from layer4.0.downsample.0.weight of shape (2048, 1024, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.conv2.weight              loaded from layer4.0.conv2.weight        of shape (512, 512, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.downsample.1.bias         loaded from layer4.0.downsample.1.bias   of shape (2048,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.downsample.1.weight       loaded from layer4.0.downsample.1.weight of shape (2048,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.conv3.weight              loaded from layer4.0.conv3.weight        of shape (2048, 512, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.bn1.bias                  loaded from layer4.1.bn1.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.downsample.0.weight       loaded from layer4.0.downsample.0.weight of shape (2048, 1024, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.bn1.weight                loaded from layer4.1.bn1.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.downsample.1.bias         loaded from layer4.0.downsample.1.bias   of shape (2048,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.bn2.bias                  loaded from layer4.1.bn2.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.downsample.1.weight       loaded from layer4.0.downsample.1.weight of shape (2048,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.bn2.weight                loaded from layer4.1.bn2.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.bn1.bias                  loaded from layer4.1.bn1.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.bn3.bias                  loaded from layer4.1.bn3.bias            of shape (2048,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.bn1.weight                loaded from layer4.1.bn1.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.bn3.weight                loaded from layer4.1.bn3.weight          of shape (2048,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.bn2.bias                  loaded from layer4.1.bn2.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.conv1.weight              loaded from layer4.1.conv1.weight        of shape (512, 2048, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.bn2.weight                loaded from layer4.1.bn2.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.bn3.bias                  loaded from layer4.1.bn3.bias            of shape (2048,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.bn3.weight                loaded from layer4.1.bn3.weight          of shape (2048,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.conv1.weight              loaded from layer4.1.conv1.weight        of shape (512, 2048, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.conv2.weight              loaded from layer4.0.conv2.weight        of shape (512, 512, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.conv3.weight              loaded from layer4.0.conv3.weight        of shape (2048, 512, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.downsample.0.weight       loaded from layer4.0.downsample.0.weight of shape (2048, 1024, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.downsample.1.bias         loaded from layer4.0.downsample.1.bias   of shape (2048,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.downsample.1.weight       loaded from layer4.0.downsample.1.weight of shape (2048,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.bn1.bias                  loaded from layer4.1.bn1.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.bn1.weight                loaded from layer4.1.bn1.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.bn2.bias                  loaded from layer4.1.bn2.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.bn2.weight                loaded from layer4.1.bn2.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.bn3.bias                  loaded from layer4.1.bn3.bias            of shape (2048,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.bn3.weight                loaded from layer4.1.bn3.weight          of shape (2048,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.conv1.weight              loaded from layer4.1.conv1.weight        of shape (512, 2048, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.conv2.weight              loaded from layer4.1.conv2.weight        of shape (512, 512, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.conv3.weight              loaded from layer4.1.conv3.weight        of shape (2048, 512, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.bn1.bias                  loaded from layer4.2.bn1.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.bn1.weight                loaded from layer4.2.bn1.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.bn2.bias                  loaded from layer4.2.bn2.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.bn2.weight                loaded from layer4.2.bn2.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.conv2.weight              loaded from layer4.1.conv2.weight        of shape (512, 512, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.bn3.bias                  loaded from layer4.2.bn3.bias            of shape (2048,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.bn3.weight                loaded from layer4.2.bn3.weight          of shape (2048,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.conv3.weight              loaded from layer4.1.conv3.weight        of shape (2048, 512, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.conv1.weight              loaded from layer4.2.conv1.weight        of shape (512, 2048, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.bn1.bias                  loaded from layer4.2.bn1.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.bn1.weight                loaded from layer4.2.bn1.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.bn2.bias                  loaded from layer4.2.bn2.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.bn2.weight                loaded from layer4.2.bn2.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.bn3.bias                  loaded from layer4.2.bn3.bias            of shape (2048,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.bn3.weight                loaded from layer4.2.bn3.weight          of shape (2048,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.conv1.weight              loaded from layer4.2.conv1.weight        of shape (512, 2048, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.conv2.weight              loaded from layer4.1.conv2.weight        of shape (512, 512, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.conv3.weight              loaded from layer4.1.conv3.weight        of shape (2048, 512, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.bn1.bias                  loaded from layer4.2.bn1.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.bn1.weight                loaded from layer4.2.bn1.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.bn2.bias                  loaded from layer4.2.bn2.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.bn2.weight                loaded from layer4.2.bn2.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.bn3.bias                  loaded from layer4.2.bn3.bias            of shape (2048,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.bn3.weight                loaded from layer4.2.bn3.weight          of shape (2048,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.conv1.weight              loaded from layer4.2.conv1.weight        of shape (512, 2048, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.conv2.weight              loaded from layer4.2.conv2.weight        of shape (512, 512, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.conv3.weight              loaded from layer4.2.conv3.weight        of shape (2048, 512, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.stem.bn1.bias                      loaded from bn1.bias                     of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.stem.bn1.weight                    loaded from bn1.weight                   of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.conv2.weight              loaded from layer4.2.conv2.weight        of shape (512, 512, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.conv3.weight              loaded from layer4.2.conv3.weight        of shape (2048, 512, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.stem.conv1.weight                  loaded from conv1.weight                 of shape (64, 3, 7, 7)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.stem.bn1.bias                      loaded from bn1.bias                     of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.stem.bn1.weight                    loaded from bn1.weight                   of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.stem.conv1.weight                  loaded from conv1.weight                 of shape (64, 3, 7, 7)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.conv2.weight              loaded from layer4.2.conv2.weight        of shape (512, 512, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.conv3.weight              loaded from layer4.2.conv3.weight        of shape (2048, 512, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.stem.bn1.bias                      loaded from bn1.bias                     of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.stem.bn1.weight                    loaded from bn1.weight                   of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.stem.conv1.weight                  loaded from conv1.weight                 of shape (64, 3, 7, 7)
INFO:maskrcnn_benchmark:
PyTorch version: 1.9.0a0+df837d0
Is debug build: False
CUDA used to build PyTorch: 11.2
ROCM used to build PyTorch: N/A

OS: Ubuntu 20.04.1 LTS (x86_64)
GCC version: (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0
Clang version: Could not collect
CMake version: version 3.19.6

Python version: 3.8 (64-bit runtime)
Is CUDA available: True
CUDA runtime version: 11.2.142
GPU models and configuration: 
GPU 0: NVIDIA GeForce RTX 3090
GPU 1: NVIDIA GeForce RTX 3090
GPU 2: NVIDIA GeForce RTX 3090
GPU 3: NVIDIA GeForce RTX 3090
GPU 4: NVIDIA GeForce RTX 3090
GPU 5: NVIDIA GeForce RTX 3090
GPU 6: NVIDIA GeForce RTX 3090
GPU 7: NVIDIA GeForce RTX 3090

Nvidia driver version: 470.57.02
cuDNN version: Probably one of the following:
/usr/lib/x86_64-linux-gnu/libcudnn.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_adv_infer.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_adv_train.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_cnn_infer.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_ops_infer.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_ops_train.so.8.1.1
HIP runtime version: N/A
MIOpen runtime version: N/A

Versions of relevant libraries:
[pip3] numpy==1.19.2
[pip3] nvidia-dlprof-pytorch-nvtx==1.0.0
[pip3] pytorch-quantization==2.1.0
[pip3] pytorch-transformers==1.1.0
[pip3] torch==1.9.0a0+df837d0
[pip3] torchtext==0.9.0a0
[pip3] torchvision==0.9.0a0
[conda] Could not collect
        Pillow (7.0.0.post3)
INFO:maskrcnn_benchmark:Loaded configuration file configs/e2e_mask_rcnn_R_50_FPN_1x.yaml
INFO:maskrcnn_benchmark:
MODEL:
  META_ARCHITECTURE: "GeneralizedRCNN"
  WEIGHT: "catalog://ImageNetPretrained/MSRA/R-50"
  BACKBONE:
    CONV_BODY: "R-50-FPN"
    OUT_CHANNELS: 256
  RPN:
    USE_FPN: True
    ANCHOR_STRIDE: (4, 8, 16, 32, 64)
    PRE_NMS_TOP_N_TRAIN: 2000
    PRE_NMS_TOP_N_TEST: 1000
    POST_NMS_TOP_N_TEST: 1000
    FPN_POST_NMS_TOP_N_TEST: 1000
  ROI_HEADS:
    USE_FPN: True
  ROI_BOX_HEAD:
    POOLER_RESOLUTION: 7
    POOLER_SCALES: (0.25, 0.125, 0.0625, 0.03125)
    POOLER_SAMPLING_RATIO: 2
    FEATURE_EXTRACTOR: "FPN2MLPFeatureExtractor"
    PREDICTOR: "FPNPredictor"
  ROI_MASK_HEAD:
    POOLER_SCALES: (0.25, 0.125, 0.0625, 0.03125)
    FEATURE_EXTRACTOR: "MaskRCNNFPNFeatureExtractor"
    PREDICTOR: "MaskRCNNC4Predictor"
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 2
    RESOLUTION: 28
    SHARE_BOX_FEATURE_EXTRACTOR: False
  MASK_ON: True
DATASETS:
  TRAIN: ("coco_2017_train",)
  TEST: ("coco_2017_val",)
DATALOADER:
  SIZE_DIVISIBILITY: 32
SOLVER:
  BASE_LR: 0.02
  WEIGHT_DECAY: 0.0001
  STEPS: (60000, 80000)
  MAX_ITER: 90000

INFO:maskrcnn_benchmark:Running with config:
AMP_VERBOSE: False
CUDA_GRAPH_NUM_SHAPES_PER_ORIENTATION: 1
DATALOADER:
  ALWAYS_PAD_TO_MAX: False
  ASPECT_RATIO_GROUPING: True
  CACHE_EVAL_IMAGES: False
  DALI: False
  DALI_ON_GPU: False
  HYBRID: True
  NUM_WORKERS: 1
  SIZE_DIVISIBILITY: 32
DATASETS:
  TEST: ('coco_2017_val',)
  TRAIN: ('coco_2017_train',)
DISABLE_LOSS_LOGGING: False
DISABLE_REDUCED_LOGGING: True
DTYPE: float16
DYNAMIC_LOSS_SCALE_WINDOW: 1000
EVAL_MASK_VIRTUAL_PASTE: False
EVAL_SEGM_NUMPROCS: 10
FUSED_SGD_DEBUG_PRINTS: False
INPUT:
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (800,)
  PIXEL_MEAN: [102.9801, 115.9465, 122.7717]
  PIXEL_STD: [1.0, 1.0, 1.0]
  TO_BGR255: True
MLPERF:
  MIN_BBOX_MAP: 0.377
  MIN_SEGM_MAP: 0.339
MODEL:
  BACKBONE:
    CONV_BODY: R-50-FPN
    FREEZE_CONV_BODY_AT: 2
    INCLUDE_RPN_HEAD: True
    OUT_CHANNELS: 256
    USE_GN: False
  CLS_AGNOSTIC_BBOX_REG: False
  DEVICE: cuda
  FPN:
    USE_GN: False
    USE_RELU: False
  GROUP_NORM:
    DIM_PER_GP: -1
    EPSILON: 1e-05
    NUM_GROUPS: 32
  KEYPOINT_ON: False
  MASK_ON: True
  META_ARCHITECTURE: GeneralizedRCNN
  RESNETS:
    NUM_GROUPS: 1
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_FUNC: StemWithFixedBatchNorm
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: True
    TRANS_FUNC: BottleneckWithFixedBatchNorm
    WIDTH_PER_GROUP: 64
  RETINANET:
    ANCHOR_SIZES: (32, 64, 128, 256, 512)
    ANCHOR_STRIDES: (8, 16, 32, 64, 128)
    ASPECT_RATIOS: (0.5, 1.0, 2.0)
    BBOX_REG_BETA: 0.11
    BBOX_REG_WEIGHT: 4.0
    BG_IOU_THRESHOLD: 0.4
    FG_IOU_THRESHOLD: 0.5
    INFERENCE_TH: 0.05
    LOSS_ALPHA: 0.25
    LOSS_GAMMA: 2.0
    NMS_TH: 0.4
    NUM_CLASSES: 81
    NUM_CONVS: 4
    OCTAVE: 2.0
    PRE_NMS_TOP_N: 1000
    PRIOR_PROB: 0.01
    SCALES_PER_OCTAVE: 3
    STRADDLE_THRESH: 0
    USE_C5: True
  RETINANET_ON: False
  ROI_BOX_HEAD:
    CONV_HEAD_DIM: 256
    DILATION: 1
    FEATURE_EXTRACTOR: FPN2MLPFeatureExtractor
    MLP_HEAD_DIM: 1024
    NUM_CLASSES: 81
    NUM_STACKED_CONVS: 4
    POOLER_RESOLUTION: 7
    POOLER_SAMPLING_RATIO: 2
    POOLER_SCALES: (0.25, 0.125, 0.0625, 0.03125)
    PREDICTOR: FPNPredictor
    USE_GN: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    BG_IOU_THRESHOLD: 0.5
    DETECTIONS_PER_IMG: 100
    FG_IOU_THRESHOLD: 0.5
    NMS: 0.5
    POSITIVE_FRACTION: 0.25
    SCORE_THRESH: 0.05
    USE_FPN: True
  ROI_KEYPOINT_HEAD:
    CONV_LAYERS: (512, 512, 512, 512, 512, 512, 512, 512)
    FEATURE_EXTRACTOR: KeypointRCNNFeatureExtractor
    MLP_HEAD_DIM: 1024
    NUM_CLASSES: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_SCALES: (0.0625,)
    PREDICTOR: KeypointRCNNPredictor
    RESOLUTION: 14
    SHARE_BOX_FEATURE_EXTRACTOR: True
  ROI_MASK_HEAD:
    CONV_LAYERS: (256, 256, 256, 256)
    DILATION: 1
    FEATURE_EXTRACTOR: MaskRCNNFPNFeatureExtractor
    MLP_HEAD_DIM: 1024
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 2
    POOLER_SCALES: (0.25, 0.125, 0.0625, 0.03125)
    POSTPROCESS_MASKS: False
    POSTPROCESS_MASKS_THRESHOLD: 0.5
    PREDICTOR: MaskRCNNC4Predictor
    RESOLUTION: 28
    SHARE_BOX_FEATURE_EXTRACTOR: False
    USE_GN: False
  RPN:
    ANCHOR_SIZES: (32, 64, 128, 256, 512)
    ANCHOR_STRIDE: (4, 8, 16, 32, 64)
    ASPECT_RATIOS: (0.5, 1.0, 2.0)
    BATCH_SIZE_PER_IMAGE: 256
    BG_IOU_THRESHOLD: 0.3
    FG_IOU_THRESHOLD: 0.7
    FPN_POST_NMS_TOP_N_PER_IMAGE: False
    FPN_POST_NMS_TOP_N_TEST: 1000
    FPN_POST_NMS_TOP_N_TRAIN: 16000
    MIN_SIZE: 0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOP_N_TEST: 1000
    POST_NMS_TOP_N_TRAIN: 2000
    PRE_NMS_TOP_N_TEST: 1000
    PRE_NMS_TOP_N_TRAIN: 2000
    RPN_HEAD: SingleConvRPNHead
    STRADDLE_THRESH: 0
    USE_FPN: True
  RPN_ONLY: False
  WEIGHT: /coco/models/R-50.pkl
NHWC: True
OUTPUT_DIR: .
PATHS_CATALOG: maskrcnn_benchmark/config/paths_catalog_dbcluster.py
PER_EPOCH_EVAL: True
PRECOMPUTE_RPN_CONSTANT_TENSORS: True
SAVE_CHECKPOINTS: False
SOLVER:
  BASE_LR: 0.16
  BIAS_LR_FACTOR: 2
  CHECKPOINT_PERIOD: 2500
  GAMMA: 0.1
  IMS_PER_BATCH: 128
  MAX_ITER: 18000
  MOMENTUM: 0.9
  STEPS: (9000, 12000)
  WARMUP_FACTOR: 0.000192
  WARMUP_ITERS: 625
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0
SYNCFREE_ROI: True
TEST:
  DETECTIONS_PER_IMG: 100
  EXPECTED_RESULTS: []
  EXPECTED_RESULTS_SIGMA_TOL: 4
  IMS_PER_BATCH: 128
USE_CUDA_GRAPH: False
INFO:maskrcnn_benchmark:
PyTorch version: 1.9.0a0+df837d0
Is debug build: False
CUDA used to build PyTorch: 11.2
ROCM used to build PyTorch: N/A

OS: Ubuntu 20.04.1 LTS (x86_64)
GCC version: (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0
Clang version: Could not collect
CMake version: version 3.19.6

Python version: 3.8 (64-bit runtime)
Is CUDA available: True
CUDA runtime version: 11.2.142
GPU models and configuration: 
GPU 0: NVIDIA GeForce RTX 3090
GPU 1: NVIDIA GeForce RTX 3090
GPU 2: NVIDIA GeForce RTX 3090
GPU 3: NVIDIA GeForce RTX 3090
GPU 4: NVIDIA GeForce RTX 3090
GPU 5: NVIDIA GeForce RTX 3090
GPU 6: NVIDIA GeForce RTX 3090
GPU 7: NVIDIA GeForce RTX 3090

Nvidia driver version: 470.57.02
cuDNN version: Probably one of the following:
/usr/lib/x86_64-linux-gnu/libcudnn.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_adv_infer.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_adv_train.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_cnn_infer.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_ops_infer.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_ops_train.so.8.1.1
HIP runtime version: N/A
MIOpen runtime version: N/A

Versions of relevant libraries:
[pip3] numpy==1.19.2
[pip3] nvidia-dlprof-pytorch-nvtx==1.0.0
[pip3] pytorch-quantization==2.1.0
[pip3] pytorch-transformers==1.1.0
[pip3] torch==1.9.0a0+df837d0
[pip3] torchtext==0.9.0a0
[pip3] torchvision==0.9.0a0
[conda] Could not collect
        Pillow (7.0.0.post3)
INFO:maskrcnn_benchmark:Loaded configuration file configs/e2e_mask_rcnn_R_50_FPN_1x.yaml
INFO:maskrcnn_benchmark:
MODEL:
  META_ARCHITECTURE: "GeneralizedRCNN"
  WEIGHT: "catalog://ImageNetPretrained/MSRA/R-50"
  BACKBONE:
    CONV_BODY: "R-50-FPN"
    OUT_CHANNELS: 256
  RPN:
    USE_FPN: True
    ANCHOR_STRIDE: (4, 8, 16, 32, 64)
    PRE_NMS_TOP_N_TRAIN: 2000
    PRE_NMS_TOP_N_TEST: 1000
    POST_NMS_TOP_N_TEST: 1000
    FPN_POST_NMS_TOP_N_TEST: 1000
  ROI_HEADS:
    USE_FPN: True
  ROI_BOX_HEAD:
    POOLER_RESOLUTION: 7
    POOLER_SCALES: (0.25, 0.125, 0.0625, 0.03125)
    POOLER_SAMPLING_RATIO: 2
    FEATURE_EXTRACTOR: "FPN2MLPFeatureExtractor"
    PREDICTOR: "FPNPredictor"
  ROI_MASK_HEAD:
    POOLER_SCALES: (0.25, 0.125, 0.0625, 0.03125)
    FEATURE_EXTRACTOR: "MaskRCNNFPNFeatureExtractor"
    PREDICTOR: "MaskRCNNC4Predictor"
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 2
    RESOLUTION: 28
    SHARE_BOX_FEATURE_EXTRACTOR: False
  MASK_ON: True
DATASETS:
  TRAIN: ("coco_2017_train",)
  TEST: ("coco_2017_val",)
DATALOADER:
  SIZE_DIVISIBILITY: 32
SOLVER:
  BASE_LR: 0.02
  WEIGHT_DECAY: 0.0001
  STEPS: (60000, 80000)
  MAX_ITER: 90000

INFO:maskrcnn_benchmark:Running with config:
AMP_VERBOSE: False
CUDA_GRAPH_NUM_SHAPES_PER_ORIENTATION: 1
DATALOADER:
  ALWAYS_PAD_TO_MAX: False
  ASPECT_RATIO_GROUPING: True
  CACHE_EVAL_IMAGES: False
  DALI: False
  DALI_ON_GPU: False
  HYBRID: True
  NUM_WORKERS: 1
  SIZE_DIVISIBILITY: 32
DATASETS:
  TEST: ('coco_2017_val',)
  TRAIN: ('coco_2017_train',)
DISABLE_LOSS_LOGGING: False
DISABLE_REDUCED_LOGGING: True
DTYPE: float16
DYNAMIC_LOSS_SCALE_WINDOW: 1000
EVAL_MASK_VIRTUAL_PASTE: False
EVAL_SEGM_NUMPROCS: 10
FUSED_SGD_DEBUG_PRINTS: False
INPUT:
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (800,)
  PIXEL_MEAN: [102.9801, 115.9465, 122.7717]
  PIXEL_STD: [1.0, 1.0, 1.0]
  TO_BGR255: True
MLPERF:
  MIN_BBOX_MAP: 0.377
  MIN_SEGM_MAP: 0.339
MODEL:
  BACKBONE:
    CONV_BODY: R-50-FPN
    FREEZE_CONV_BODY_AT: 2
    INCLUDE_RPN_HEAD: True
    OUT_CHANNELS: 256
    USE_GN: False
  CLS_AGNOSTIC_BBOX_REG: False
  DEVICE: cuda
  FPN:
    USE_GN: False
    USE_RELU: False
  GROUP_NORM:
    DIM_PER_GP: -1
    EPSILON: 1e-05
    NUM_GROUPS: 32
  KEYPOINT_ON: False
  MASK_ON: True
  META_ARCHITECTURE: GeneralizedRCNN
  RESNETS:
    NUM_GROUPS: 1
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_FUNC: StemWithFixedBatchNorm
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: True
    TRANS_FUNC: BottleneckWithFixedBatchNorm
    WIDTH_PER_GROUP: 64
  RETINANET:
    ANCHOR_SIZES: (32, 64, 128, 256, 512)
    ANCHOR_STRIDES: (8, 16, 32, 64, 128)
    ASPECT_RATIOS: (0.5, 1.0, 2.0)
    BBOX_REG_BETA: 0.11
    BBOX_REG_WEIGHT: 4.0
    BG_IOU_THRESHOLD: 0.4
    FG_IOU_THRESHOLD: 0.5
    INFERENCE_TH: 0.05
    LOSS_ALPHA: 0.25
    LOSS_GAMMA: 2.0
    NMS_TH: 0.4
    NUM_CLASSES: 81
    NUM_CONVS: 4
    OCTAVE: 2.0
    PRE_NMS_TOP_N: 1000
    PRIOR_PROB: 0.01
    SCALES_PER_OCTAVE: 3
    STRADDLE_THRESH: 0
    USE_C5: True
  RETINANET_ON: False
  ROI_BOX_HEAD:
    CONV_HEAD_DIM: 256
    DILATION: 1
    FEATURE_EXTRACTOR: FPN2MLPFeatureExtractor
    MLP_HEAD_DIM: 1024
    NUM_CLASSES: 81
    NUM_STACKED_CONVS: 4
    POOLER_RESOLUTION: 7
    POOLER_SAMPLING_RATIO: 2
    POOLER_SCALES: (0.25, 0.125, 0.0625, 0.03125)
    PREDICTOR: FPNPredictor
    USE_GN: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    BG_IOU_THRESHOLD: 0.5
    DETECTIONS_PER_IMG: 100
    FG_IOU_THRESHOLD: 0.5
    NMS: 0.5
    POSITIVE_FRACTION: 0.25
    SCORE_THRESH: 0.05
    USE_FPN: True
  ROI_KEYPOINT_HEAD:
    CONV_LAYERS: (512, 512, 512, 512, 512, 512, 512, 512)
    FEATURE_EXTRACTOR: KeypointRCNNFeatureExtractor
    MLP_HEAD_DIM: 1024
    NUM_CLASSES: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_SCALES: (0.0625,)
    PREDICTOR: KeypointRCNNPredictor
    RESOLUTION: 14
    SHARE_BOX_FEATURE_EXTRACTOR: True
  ROI_MASK_HEAD:
    CONV_LAYERS: (256, 256, 256, 256)
    DILATION: 1
    FEATURE_EXTRACTOR: MaskRCNNFPNFeatureExtractor
    MLP_HEAD_DIM: 1024
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 2
    POOLER_SCALES: (0.25, 0.125, 0.0625, 0.03125)
    POSTPROCESS_MASKS: False
    POSTPROCESS_MASKS_THRESHOLD: 0.5
    PREDICTOR: MaskRCNNC4Predictor
    RESOLUTION: 28
    SHARE_BOX_FEATURE_EXTRACTOR: False
    USE_GN: False
  RPN:
    ANCHOR_SIZES: (32, 64, 128, 256, 512)
    ANCHOR_STRIDE: (4, 8, 16, 32, 64)
    ASPECT_RATIOS: (0.5, 1.0, 2.0)
    BATCH_SIZE_PER_IMAGE: 256
    BG_IOU_THRESHOLD: 0.3
    FG_IOU_THRESHOLD: 0.7
    FPN_POST_NMS_TOP_N_PER_IMAGE: False
    FPN_POST_NMS_TOP_N_TEST: 1000
    FPN_POST_NMS_TOP_N_TRAIN: 16000
    MIN_SIZE: 0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOP_N_TEST: 1000
    POST_NMS_TOP_N_TRAIN: 2000
    PRE_NMS_TOP_N_TEST: 1000
    PRE_NMS_TOP_N_TRAIN: 2000
    RPN_HEAD: SingleConvRPNHead
    STRADDLE_THRESH: 0
    USE_FPN: True
  RPN_ONLY: False
  WEIGHT: /coco/models/R-50.pkl
NHWC: True
OUTPUT_DIR: .
PATHS_CATALOG: maskrcnn_benchmark/config/paths_catalog_dbcluster.py
PER_EPOCH_EVAL: True
PRECOMPUTE_RPN_CONSTANT_TENSORS: True
SAVE_CHECKPOINTS: False
SOLVER:
  BASE_LR: 0.16
  BIAS_LR_FACTOR: 2
  CHECKPOINT_PERIOD: 2500
  GAMMA: 0.1
  IMS_PER_BATCH: 128
  MAX_ITER: 18000
  MOMENTUM: 0.9
  STEPS: (9000, 12000)
  WARMUP_FACTOR: 0.000192
  WARMUP_ITERS: 625
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0
SYNCFREE_ROI: True
TEST:
  DETECTIONS_PER_IMG: 100
  EXPECTED_RESULTS: []
  EXPECTED_RESULTS_SIGMA_TOL: 4
  IMS_PER_BATCH: 128
USE_CUDA_GRAPH: False
/opt/conda/lib/python3.8/site-packages/torch/jit/_recursive.py:207: UserWarning: 'downsample' was found in ScriptModule constants,  but it is a non-constant submodule. Consider removing it.
  warnings.warn("'{}' was found in ScriptModule constants, "
2021-10-16 11:38:12,453 maskrcnn_benchmark INFO: 
PyTorch version: 1.9.0a0+df837d0
Is debug build: False
CUDA used to build PyTorch: 11.2
ROCM used to build PyTorch: N/A

OS: Ubuntu 20.04.1 LTS (x86_64)
GCC version: (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0
Clang version: Could not collect
CMake version: version 3.19.6

Python version: 3.8 (64-bit runtime)
Is CUDA available: True
CUDA runtime version: 11.2.142
GPU models and configuration: 
GPU 0: NVIDIA GeForce RTX 3090
GPU 1: NVIDIA GeForce RTX 3090
GPU 2: NVIDIA GeForce RTX 3090
GPU 3: NVIDIA GeForce RTX 3090
GPU 4: NVIDIA GeForce RTX 3090
GPU 5: NVIDIA GeForce RTX 3090
GPU 6: NVIDIA GeForce RTX 3090
GPU 7: NVIDIA GeForce RTX 3090

Nvidia driver version: 470.57.02
cuDNN version: Probably one of the following:
/usr/lib/x86_64-linux-gnu/libcudnn.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_adv_infer.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_adv_train.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_cnn_infer.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_ops_infer.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_ops_train.so.8.1.1
HIP runtime version: N/A
MIOpen runtime version: N/A

Versions of relevant libraries:
[pip3] numpy==1.19.2
[pip3] nvidia-dlprof-pytorch-nvtx==1.0.0
[pip3] pytorch-quantization==2.1.0
[pip3] pytorch-transformers==1.1.0
[pip3] torch==1.9.0a0+df837d0
[pip3] torchtext==0.9.0a0
[pip3] torchvision==0.9.0a0
[conda] Could not collect
        Pillow (7.0.0.post3)
INFO:maskrcnn_benchmark:
PyTorch version: 1.9.0a0+df837d0
Is debug build: False
CUDA used to build PyTorch: 11.2
ROCM used to build PyTorch: N/A

OS: Ubuntu 20.04.1 LTS (x86_64)
GCC version: (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0
Clang version: Could not collect
CMake version: version 3.19.6

Python version: 3.8 (64-bit runtime)
Is CUDA available: True
CUDA runtime version: 11.2.142
GPU models and configuration: 
GPU 0: NVIDIA GeForce RTX 3090
GPU 1: NVIDIA GeForce RTX 3090
GPU 2: NVIDIA GeForce RTX 3090
GPU 3: NVIDIA GeForce RTX 3090
GPU 4: NVIDIA GeForce RTX 3090
GPU 5: NVIDIA GeForce RTX 3090
GPU 6: NVIDIA GeForce RTX 3090
GPU 7: NVIDIA GeForce RTX 3090

Nvidia driver version: 470.57.02
cuDNN version: Probably one of the following:
/usr/lib/x86_64-linux-gnu/libcudnn.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_adv_infer.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_adv_train.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_cnn_infer.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_ops_infer.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_ops_train.so.8.1.1
HIP runtime version: N/A
MIOpen runtime version: N/A

Versions of relevant libraries:
[pip3] numpy==1.19.2
[pip3] nvidia-dlprof-pytorch-nvtx==1.0.0
[pip3] pytorch-quantization==2.1.0
[pip3] pytorch-transformers==1.1.0
[pip3] torch==1.9.0a0+df837d0
[pip3] torchtext==0.9.0a0
[pip3] torchvision==0.9.0a0
[conda] Could not collect
        Pillow (7.0.0.post3)
2021-10-16 11:38:12,453 maskrcnn_benchmark INFO: Loaded configuration file configs/e2e_mask_rcnn_R_50_FPN_1x.yaml
INFO:maskrcnn_benchmark:Loaded configuration file configs/e2e_mask_rcnn_R_50_FPN_1x.yaml
2021-10-16 11:38:12,454 maskrcnn_benchmark INFO: 
MODEL:
  META_ARCHITECTURE: "GeneralizedRCNN"
  WEIGHT: "catalog://ImageNetPretrained/MSRA/R-50"
  BACKBONE:
    CONV_BODY: "R-50-FPN"
    OUT_CHANNELS: 256
  RPN:
    USE_FPN: True
    ANCHOR_STRIDE: (4, 8, 16, 32, 64)
    PRE_NMS_TOP_N_TRAIN: 2000
    PRE_NMS_TOP_N_TEST: 1000
    POST_NMS_TOP_N_TEST: 1000
    FPN_POST_NMS_TOP_N_TEST: 1000
  ROI_HEADS:
    USE_FPN: True
  ROI_BOX_HEAD:
    POOLER_RESOLUTION: 7
    POOLER_SCALES: (0.25, 0.125, 0.0625, 0.03125)
    POOLER_SAMPLING_RATIO: 2
    FEATURE_EXTRACTOR: "FPN2MLPFeatureExtractor"
    PREDICTOR: "FPNPredictor"
  ROI_MASK_HEAD:
    POOLER_SCALES: (0.25, 0.125, 0.0625, 0.03125)
    FEATURE_EXTRACTOR: "MaskRCNNFPNFeatureExtractor"
    PREDICTOR: "MaskRCNNC4Predictor"
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 2
    RESOLUTION: 28
    SHARE_BOX_FEATURE_EXTRACTOR: False
  MASK_ON: True
DATASETS:
  TRAIN: ("coco_2017_train",)
  TEST: ("coco_2017_val",)
DATALOADER:
  SIZE_DIVISIBILITY: 32
SOLVER:
  BASE_LR: 0.02
  WEIGHT_DECAY: 0.0001
  STEPS: (60000, 80000)
  MAX_ITER: 90000

INFO:maskrcnn_benchmark:
MODEL:
  META_ARCHITECTURE: "GeneralizedRCNN"
  WEIGHT: "catalog://ImageNetPretrained/MSRA/R-50"
  BACKBONE:
    CONV_BODY: "R-50-FPN"
    OUT_CHANNELS: 256
  RPN:
    USE_FPN: True
    ANCHOR_STRIDE: (4, 8, 16, 32, 64)
    PRE_NMS_TOP_N_TRAIN: 2000
    PRE_NMS_TOP_N_TEST: 1000
    POST_NMS_TOP_N_TEST: 1000
    FPN_POST_NMS_TOP_N_TEST: 1000
  ROI_HEADS:
    USE_FPN: True
  ROI_BOX_HEAD:
    POOLER_RESOLUTION: 7
    POOLER_SCALES: (0.25, 0.125, 0.0625, 0.03125)
    POOLER_SAMPLING_RATIO: 2
    FEATURE_EXTRACTOR: "FPN2MLPFeatureExtractor"
    PREDICTOR: "FPNPredictor"
  ROI_MASK_HEAD:
    POOLER_SCALES: (0.25, 0.125, 0.0625, 0.03125)
    FEATURE_EXTRACTOR: "MaskRCNNFPNFeatureExtractor"
    PREDICTOR: "MaskRCNNC4Predictor"
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 2
    RESOLUTION: 28
    SHARE_BOX_FEATURE_EXTRACTOR: False
  MASK_ON: True
DATASETS:
  TRAIN: ("coco_2017_train",)
  TEST: ("coco_2017_val",)
DATALOADER:
  SIZE_DIVISIBILITY: 32
SOLVER:
  BASE_LR: 0.02
  WEIGHT_DECAY: 0.0001
  STEPS: (60000, 80000)
  MAX_ITER: 90000

2021-10-16 11:38:12,455 maskrcnn_benchmark INFO: Running with config:
AMP_VERBOSE: False
CUDA_GRAPH_NUM_SHAPES_PER_ORIENTATION: 1
DATALOADER:
  ALWAYS_PAD_TO_MAX: False
  ASPECT_RATIO_GROUPING: True
  CACHE_EVAL_IMAGES: False
  DALI: False
  DALI_ON_GPU: False
  HYBRID: True
  NUM_WORKERS: 1
  SIZE_DIVISIBILITY: 32
DATASETS:
  TEST: ('coco_2017_val',)
  TRAIN: ('coco_2017_train',)
DISABLE_LOSS_LOGGING: False
DISABLE_REDUCED_LOGGING: True
DTYPE: float16
DYNAMIC_LOSS_SCALE_WINDOW: 1000
EVAL_MASK_VIRTUAL_PASTE: False
EVAL_SEGM_NUMPROCS: 10
FUSED_SGD_DEBUG_PRINTS: False
INPUT:
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (800,)
  PIXEL_MEAN: [102.9801, 115.9465, 122.7717]
  PIXEL_STD: [1.0, 1.0, 1.0]
  TO_BGR255: True
MLPERF:
  MIN_BBOX_MAP: 0.377
  MIN_SEGM_MAP: 0.339
MODEL:
  BACKBONE:
    CONV_BODY: R-50-FPN
    FREEZE_CONV_BODY_AT: 2
    INCLUDE_RPN_HEAD: True
    OUT_CHANNELS: 256
    USE_GN: False
  CLS_AGNOSTIC_BBOX_REG: False
  DEVICE: cuda
  FPN:
    USE_GN: False
    USE_RELU: False
  GROUP_NORM:
    DIM_PER_GP: -1
    EPSILON: 1e-05
    NUM_GROUPS: 32
  KEYPOINT_ON: False
  MASK_ON: True
  META_ARCHITECTURE: GeneralizedRCNN
  RESNETS:
    NUM_GROUPS: 1
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_FUNC: StemWithFixedBatchNorm
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: True
    TRANS_FUNC: BottleneckWithFixedBatchNorm
    WIDTH_PER_GROUP: 64
  RETINANET:
    ANCHOR_SIZES: (32, 64, 128, 256, 512)
    ANCHOR_STRIDES: (8, 16, 32, 64, 128)
    ASPECT_RATIOS: (0.5, 1.0, 2.0)
    BBOX_REG_BETA: 0.11
    BBOX_REG_WEIGHT: 4.0
    BG_IOU_THRESHOLD: 0.4
    FG_IOU_THRESHOLD: 0.5
    INFERENCE_TH: 0.05
    LOSS_ALPHA: 0.25
    LOSS_GAMMA: 2.0
    NMS_TH: 0.4
    NUM_CLASSES: 81
    NUM_CONVS: 4
    OCTAVE: 2.0
    PRE_NMS_TOP_N: 1000
    PRIOR_PROB: 0.01
    SCALES_PER_OCTAVE: 3
    STRADDLE_THRESH: 0
    USE_C5: True
  RETINANET_ON: False
  ROI_BOX_HEAD:
    CONV_HEAD_DIM: 256
    DILATION: 1
    FEATURE_EXTRACTOR: FPN2MLPFeatureExtractor
    MLP_HEAD_DIM: 1024
    NUM_CLASSES: 81
    NUM_STACKED_CONVS: 4
    POOLER_RESOLUTION: 7
    POOLER_SAMPLING_RATIO: 2
    POOLER_SCALES: (0.25, 0.125, 0.0625, 0.03125)
    PREDICTOR: FPNPredictor
    USE_GN: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    BG_IOU_THRESHOLD: 0.5
    DETECTIONS_PER_IMG: 100
    FG_IOU_THRESHOLD: 0.5
    NMS: 0.5
    POSITIVE_FRACTION: 0.25
    SCORE_THRESH: 0.05
    USE_FPN: True
  ROI_KEYPOINT_HEAD:
    CONV_LAYERS: (512, 512, 512, 512, 512, 512, 512, 512)
    FEATURE_EXTRACTOR: KeypointRCNNFeatureExtractor
    MLP_HEAD_DIM: 1024
    NUM_CLASSES: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_SCALES: (0.0625,)
    PREDICTOR: KeypointRCNNPredictor
    RESOLUTION: 14
    SHARE_BOX_FEATURE_EXTRACTOR: True
  ROI_MASK_HEAD:
    CONV_LAYERS: (256, 256, 256, 256)
    DILATION: 1
    FEATURE_EXTRACTOR: MaskRCNNFPNFeatureExtractor
    MLP_HEAD_DIM: 1024
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 2
    POOLER_SCALES: (0.25, 0.125, 0.0625, 0.03125)
    POSTPROCESS_MASKS: False
    POSTPROCESS_MASKS_THRESHOLD: 0.5
    PREDICTOR: MaskRCNNC4Predictor
    RESOLUTION: 28
    SHARE_BOX_FEATURE_EXTRACTOR: False
    USE_GN: False
  RPN:
    ANCHOR_SIZES: (32, 64, 128, 256, 512)
    ANCHOR_STRIDE: (4, 8, 16, 32, 64)
    ASPECT_RATIOS: (0.5, 1.0, 2.0)
    BATCH_SIZE_PER_IMAGE: 256
    BG_IOU_THRESHOLD: 0.3
    FG_IOU_THRESHOLD: 0.7
    FPN_POST_NMS_TOP_N_PER_IMAGE: False
    FPN_POST_NMS_TOP_N_TEST: 1000
    FPN_POST_NMS_TOP_N_TRAIN: 16000
    MIN_SIZE: 0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOP_N_TEST: 1000
    POST_NMS_TOP_N_TRAIN: 2000
    PRE_NMS_TOP_N_TEST: 1000
    PRE_NMS_TOP_N_TRAIN: 2000
    RPN_HEAD: SingleConvRPNHead
    STRADDLE_THRESH: 0
    USE_FPN: True
  RPN_ONLY: False
  WEIGHT: /coco/models/R-50.pkl
NHWC: True
OUTPUT_DIR: .
PATHS_CATALOG: maskrcnn_benchmark/config/paths_catalog_dbcluster.py
PER_EPOCH_EVAL: True
PRECOMPUTE_RPN_CONSTANT_TENSORS: True
SAVE_CHECKPOINTS: False
SOLVER:
  BASE_LR: 0.16
  BIAS_LR_FACTOR: 2
  CHECKPOINT_PERIOD: 2500
  GAMMA: 0.1
  IMS_PER_BATCH: 128
  MAX_ITER: 18000
  MOMENTUM: 0.9
  STEPS: (9000, 12000)
  WARMUP_FACTOR: 0.000192
  WARMUP_ITERS: 625
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0
SYNCFREE_ROI: True
TEST:
  DETECTIONS_PER_IMG: 100
  EXPECTED_RESULTS: []
  EXPECTED_RESULTS_SIGMA_TOL: 4
  IMS_PER_BATCH: 128
USE_CUDA_GRAPH: False
INFO:maskrcnn_benchmark:
PyTorch version: 1.9.0a0+df837d0
Is debug build: False
CUDA used to build PyTorch: 11.2
ROCM used to build PyTorch: N/A

OS: Ubuntu 20.04.1 LTS (x86_64)
GCC version: (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0
Clang version: Could not collect
CMake version: version 3.19.6

Python version: 3.8 (64-bit runtime)
Is CUDA available: True
CUDA runtime version: 11.2.142
GPU models and configuration: 
GPU 0: NVIDIA GeForce RTX 3090
GPU 1: NVIDIA GeForce RTX 3090
GPU 2: NVIDIA GeForce RTX 3090
GPU 3: NVIDIA GeForce RTX 3090
GPU 4: NVIDIA GeForce RTX 3090
GPU 5: NVIDIA GeForce RTX 3090
GPU 6: NVIDIA GeForce RTX 3090
GPU 7: NVIDIA GeForce RTX 3090

Nvidia driver version: 470.57.02
cuDNN version: Probably one of the following:
/usr/lib/x86_64-linux-gnu/libcudnn.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_adv_infer.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_adv_train.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_cnn_infer.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_ops_infer.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_ops_train.so.8.1.1
HIP runtime version: N/A
MIOpen runtime version: N/A

Versions of relevant libraries:
[pip3] numpy==1.19.2
[pip3] nvidia-dlprof-pytorch-nvtx==1.0.0
[pip3] pytorch-quantization==2.1.0
[pip3] pytorch-transformers==1.1.0
[pip3] torch==1.9.0a0+df837d0
[pip3] torchtext==0.9.0a0
[pip3] torchvision==0.9.0a0
[conda] Could not collect
        Pillow (7.0.0.post3)
INFO:maskrcnn_benchmark:Running with config:
AMP_VERBOSE: False
CUDA_GRAPH_NUM_SHAPES_PER_ORIENTATION: 1
DATALOADER:
  ALWAYS_PAD_TO_MAX: False
  ASPECT_RATIO_GROUPING: True
  CACHE_EVAL_IMAGES: False
  DALI: False
  DALI_ON_GPU: False
  HYBRID: True
  NUM_WORKERS: 1
  SIZE_DIVISIBILITY: 32
DATASETS:
  TEST: ('coco_2017_val',)
  TRAIN: ('coco_2017_train',)
DISABLE_LOSS_LOGGING: False
DISABLE_REDUCED_LOGGING: True
DTYPE: float16
DYNAMIC_LOSS_SCALE_WINDOW: 1000
EVAL_MASK_VIRTUAL_PASTE: False
EVAL_SEGM_NUMPROCS: 10
FUSED_SGD_DEBUG_PRINTS: False
INPUT:
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (800,)
  PIXEL_MEAN: [102.9801, 115.9465, 122.7717]
  PIXEL_STD: [1.0, 1.0, 1.0]
  TO_BGR255: True
MLPERF:
  MIN_BBOX_MAP: 0.377
  MIN_SEGM_MAP: 0.339
MODEL:
  BACKBONE:
    CONV_BODY: R-50-FPN
    FREEZE_CONV_BODY_AT: 2
    INCLUDE_RPN_HEAD: True
    OUT_CHANNELS: 256
    USE_GN: False
  CLS_AGNOSTIC_BBOX_REG: False
  DEVICE: cuda
  FPN:
    USE_GN: False
    USE_RELU: False
  GROUP_NORM:
    DIM_PER_GP: -1
    EPSILON: 1e-05
    NUM_GROUPS: 32
  KEYPOINT_ON: False
  MASK_ON: True
  META_ARCHITECTURE: GeneralizedRCNN
  RESNETS:
    NUM_GROUPS: 1
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_FUNC: StemWithFixedBatchNorm
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: True
    TRANS_FUNC: BottleneckWithFixedBatchNorm
    WIDTH_PER_GROUP: 64
  RETINANET:
    ANCHOR_SIZES: (32, 64, 128, 256, 512)
    ANCHOR_STRIDES: (8, 16, 32, 64, 128)
    ASPECT_RATIOS: (0.5, 1.0, 2.0)
    BBOX_REG_BETA: 0.11
    BBOX_REG_WEIGHT: 4.0
    BG_IOU_THRESHOLD: 0.4
    FG_IOU_THRESHOLD: 0.5
    INFERENCE_TH: 0.05
    LOSS_ALPHA: 0.25
    LOSS_GAMMA: 2.0
    NMS_TH: 0.4
    NUM_CLASSES: 81
    NUM_CONVS: 4
    OCTAVE: 2.0
    PRE_NMS_TOP_N: 1000
    PRIOR_PROB: 0.01
    SCALES_PER_OCTAVE: 3
    STRADDLE_THRESH: 0
    USE_C5: True
  RETINANET_ON: False
  ROI_BOX_HEAD:
    CONV_HEAD_DIM: 256
    DILATION: 1
    FEATURE_EXTRACTOR: FPN2MLPFeatureExtractor
    MLP_HEAD_DIM: 1024
    NUM_CLASSES: 81
    NUM_STACKED_CONVS: 4
    POOLER_RESOLUTION: 7
    POOLER_SAMPLING_RATIO: 2
    POOLER_SCALES: (0.25, 0.125, 0.0625, 0.03125)
    PREDICTOR: FPNPredictor
    USE_GN: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    BG_IOU_THRESHOLD: 0.5
    DETECTIONS_PER_IMG: 100
    FG_IOU_THRESHOLD: 0.5
    NMS: 0.5
    POSITIVE_FRACTION: 0.25
    SCORE_THRESH: 0.05
    USE_FPN: True
  ROI_KEYPOINT_HEAD:
    CONV_LAYERS: (512, 512, 512, 512, 512, 512, 512, 512)
    FEATURE_EXTRACTOR: KeypointRCNNFeatureExtractor
    MLP_HEAD_DIM: 1024
    NUM_CLASSES: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_SCALES: (0.0625,)
    PREDICTOR: KeypointRCNNPredictor
    RESOLUTION: 14
    SHARE_BOX_FEATURE_EXTRACTOR: True
  ROI_MASK_HEAD:
    CONV_LAYERS: (256, 256, 256, 256)
    DILATION: 1
    FEATURE_EXTRACTOR: MaskRCNNFPNFeatureExtractor
    MLP_HEAD_DIM: 1024
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 2
    POOLER_SCALES: (0.25, 0.125, 0.0625, 0.03125)
    POSTPROCESS_MASKS: False
    POSTPROCESS_MASKS_THRESHOLD: 0.5
    PREDICTOR: MaskRCNNC4Predictor
    RESOLUTION: 28
    SHARE_BOX_FEATURE_EXTRACTOR: False
    USE_GN: False
  RPN:
    ANCHOR_SIZES: (32, 64, 128, 256, 512)
    ANCHOR_STRIDE: (4, 8, 16, 32, 64)
    ASPECT_RATIOS: (0.5, 1.0, 2.0)
    BATCH_SIZE_PER_IMAGE: 256
    BG_IOU_THRESHOLD: 0.3
    FG_IOU_THRESHOLD: 0.7
    FPN_POST_NMS_TOP_N_PER_IMAGE: False
    FPN_POST_NMS_TOP_N_TEST: 1000
    FPN_POST_NMS_TOP_N_TRAIN: 16000
    MIN_SIZE: 0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOP_N_TEST: 1000
    POST_NMS_TOP_N_TRAIN: 2000
    PRE_NMS_TOP_N_TEST: 1000
    PRE_NMS_TOP_N_TRAIN: 2000
    RPN_HEAD: SingleConvRPNHead
    STRADDLE_THRESH: 0
    USE_FPN: True
  RPN_ONLY: False
  WEIGHT: /coco/models/R-50.pkl
NHWC: True
OUTPUT_DIR: .
PATHS_CATALOG: maskrcnn_benchmark/config/paths_catalog_dbcluster.py
PER_EPOCH_EVAL: True
PRECOMPUTE_RPN_CONSTANT_TENSORS: True
SAVE_CHECKPOINTS: False
SOLVER:
  BASE_LR: 0.16
  BIAS_LR_FACTOR: 2
  CHECKPOINT_PERIOD: 2500
  GAMMA: 0.1
  IMS_PER_BATCH: 128
  MAX_ITER: 18000
  MOMENTUM: 0.9
  STEPS: (9000, 12000)
  WARMUP_FACTOR: 0.000192
  WARMUP_ITERS: 625
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0
SYNCFREE_ROI: True
TEST:
  DETECTIONS_PER_IMG: 100
  EXPECTED_RESULTS: []
  EXPECTED_RESULTS_SIGMA_TOL: 4
  IMS_PER_BATCH: 128
USE_CUDA_GRAPH: False
INFO:maskrcnn_benchmark:Loaded configuration file configs/e2e_mask_rcnn_R_50_FPN_1x.yaml
INFO:maskrcnn_benchmark:
MODEL:
  META_ARCHITECTURE: "GeneralizedRCNN"
  WEIGHT: "catalog://ImageNetPretrained/MSRA/R-50"
  BACKBONE:
    CONV_BODY: "R-50-FPN"
    OUT_CHANNELS: 256
  RPN:
    USE_FPN: True
    ANCHOR_STRIDE: (4, 8, 16, 32, 64)
    PRE_NMS_TOP_N_TRAIN: 2000
    PRE_NMS_TOP_N_TEST: 1000
    POST_NMS_TOP_N_TEST: 1000
    FPN_POST_NMS_TOP_N_TEST: 1000
  ROI_HEADS:
    USE_FPN: True
  ROI_BOX_HEAD:
    POOLER_RESOLUTION: 7
    POOLER_SCALES: (0.25, 0.125, 0.0625, 0.03125)
    POOLER_SAMPLING_RATIO: 2
    FEATURE_EXTRACTOR: "FPN2MLPFeatureExtractor"
    PREDICTOR: "FPNPredictor"
  ROI_MASK_HEAD:
    POOLER_SCALES: (0.25, 0.125, 0.0625, 0.03125)
    FEATURE_EXTRACTOR: "MaskRCNNFPNFeatureExtractor"
    PREDICTOR: "MaskRCNNC4Predictor"
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 2
    RESOLUTION: 28
    SHARE_BOX_FEATURE_EXTRACTOR: False
  MASK_ON: True
DATASETS:
  TRAIN: ("coco_2017_train",)
  TEST: ("coco_2017_val",)
DATALOADER:
  SIZE_DIVISIBILITY: 32
SOLVER:
  BASE_LR: 0.02
  WEIGHT_DECAY: 0.0001
  STEPS: (60000, 80000)
  MAX_ITER: 90000

INFO:maskrcnn_benchmark:Running with config:
AMP_VERBOSE: False
CUDA_GRAPH_NUM_SHAPES_PER_ORIENTATION: 1
DATALOADER:
  ALWAYS_PAD_TO_MAX: False
  ASPECT_RATIO_GROUPING: True
  CACHE_EVAL_IMAGES: False
  DALI: False
  DALI_ON_GPU: False
  HYBRID: True
  NUM_WORKERS: 1
  SIZE_DIVISIBILITY: 32
DATASETS:
  TEST: ('coco_2017_val',)
  TRAIN: ('coco_2017_train',)
DISABLE_LOSS_LOGGING: False
DISABLE_REDUCED_LOGGING: True
DTYPE: float16
DYNAMIC_LOSS_SCALE_WINDOW: 1000
EVAL_MASK_VIRTUAL_PASTE: False
EVAL_SEGM_NUMPROCS: 10
FUSED_SGD_DEBUG_PRINTS: False
INPUT:
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (800,)
  PIXEL_MEAN: [102.9801, 115.9465, 122.7717]
  PIXEL_STD: [1.0, 1.0, 1.0]
  TO_BGR255: True
MLPERF:
  MIN_BBOX_MAP: 0.377
  MIN_SEGM_MAP: 0.339
MODEL:
  BACKBONE:
    CONV_BODY: R-50-FPN
    FREEZE_CONV_BODY_AT: 2
    INCLUDE_RPN_HEAD: True
    OUT_CHANNELS: 256
    USE_GN: False
  CLS_AGNOSTIC_BBOX_REG: False
  DEVICE: cuda
  FPN:
    USE_GN: False
    USE_RELU: False
  GROUP_NORM:
    DIM_PER_GP: -1
    EPSILON: 1e-05
    NUM_GROUPS: 32
  KEYPOINT_ON: False
  MASK_ON: True
  META_ARCHITECTURE: GeneralizedRCNN
  RESNETS:
    NUM_GROUPS: 1
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_FUNC: StemWithFixedBatchNorm
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: True
    TRANS_FUNC: BottleneckWithFixedBatchNorm
    WIDTH_PER_GROUP: 64
  RETINANET:
    ANCHOR_SIZES: (32, 64, 128, 256, 512)
    ANCHOR_STRIDES: (8, 16, 32, 64, 128)
    ASPECT_RATIOS: (0.5, 1.0, 2.0)
    BBOX_REG_BETA: 0.11
    BBOX_REG_WEIGHT: 4.0
    BG_IOU_THRESHOLD: 0.4
    FG_IOU_THRESHOLD: 0.5
    INFERENCE_TH: 0.05
    LOSS_ALPHA: 0.25
    LOSS_GAMMA: 2.0
    NMS_TH: 0.4
    NUM_CLASSES: 81
    NUM_CONVS: 4
    OCTAVE: 2.0
    PRE_NMS_TOP_N: 1000
    PRIOR_PROB: 0.01
    SCALES_PER_OCTAVE: 3
    STRADDLE_THRESH: 0
    USE_C5: True
  RETINANET_ON: False
  ROI_BOX_HEAD:
    CONV_HEAD_DIM: 256
    DILATION: 1
    FEATURE_EXTRACTOR: FPN2MLPFeatureExtractor
    MLP_HEAD_DIM: 1024
    NUM_CLASSES: 81
    NUM_STACKED_CONVS: 4
    POOLER_RESOLUTION: 7
    POOLER_SAMPLING_RATIO: 2
    POOLER_SCALES: (0.25, 0.125, 0.0625, 0.03125)
    PREDICTOR: FPNPredictor
    USE_GN: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    BG_IOU_THRESHOLD: 0.5
    DETECTIONS_PER_IMG: 100
    FG_IOU_THRESHOLD: 0.5
    NMS: 0.5
    POSITIVE_FRACTION: 0.25
    SCORE_THRESH: 0.05
    USE_FPN: True
  ROI_KEYPOINT_HEAD:
    CONV_LAYERS: (512, 512, 512, 512, 512, 512, 512, 512)
    FEATURE_EXTRACTOR: KeypointRCNNFeatureExtractor
    MLP_HEAD_DIM: 1024
    NUM_CLASSES: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_SCALES: (0.0625,)
    PREDICTOR: KeypointRCNNPredictor
    RESOLUTION: 14
    SHARE_BOX_FEATURE_EXTRACTOR: True
  ROI_MASK_HEAD:
    CONV_LAYERS: (256, 256, 256, 256)
    DILATION: 1
    FEATURE_EXTRACTOR: MaskRCNNFPNFeatureExtractor
    MLP_HEAD_DIM: 1024
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 2
    POOLER_SCALES: (0.25, 0.125, 0.0625, 0.03125)
    POSTPROCESS_MASKS: False
    POSTPROCESS_MASKS_THRESHOLD: 0.5
    PREDICTOR: MaskRCNNC4Predictor
    RESOLUTION: 28
    SHARE_BOX_FEATURE_EXTRACTOR: False
    USE_GN: False
  RPN:
    ANCHOR_SIZES: (32, 64, 128, 256, 512)
    ANCHOR_STRIDE: (4, 8, 16, 32, 64)
    ASPECT_RATIOS: (0.5, 1.0, 2.0)
    BATCH_SIZE_PER_IMAGE: 256
    BG_IOU_THRESHOLD: 0.3
    FG_IOU_THRESHOLD: 0.7
    FPN_POST_NMS_TOP_N_PER_IMAGE: False
    FPN_POST_NMS_TOP_N_TEST: 1000
    FPN_POST_NMS_TOP_N_TRAIN: 16000
    MIN_SIZE: 0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOP_N_TEST: 1000
    POST_NMS_TOP_N_TRAIN: 2000
    PRE_NMS_TOP_N_TEST: 1000
    PRE_NMS_TOP_N_TRAIN: 2000
    RPN_HEAD: SingleConvRPNHead
    STRADDLE_THRESH: 0
    USE_FPN: True
  RPN_ONLY: False
  WEIGHT: /coco/models/R-50.pkl
NHWC: True
OUTPUT_DIR: .
PATHS_CATALOG: maskrcnn_benchmark/config/paths_catalog_dbcluster.py
PER_EPOCH_EVAL: True
PRECOMPUTE_RPN_CONSTANT_TENSORS: True
SAVE_CHECKPOINTS: False
SOLVER:
  BASE_LR: 0.16
  BIAS_LR_FACTOR: 2
  CHECKPOINT_PERIOD: 2500
  GAMMA: 0.1
  IMS_PER_BATCH: 128
  MAX_ITER: 18000
  MOMENTUM: 0.9
  STEPS: (9000, 12000)
  WARMUP_FACTOR: 0.000192
  WARMUP_ITERS: 625
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0
SYNCFREE_ROI: True
TEST:
  DETECTIONS_PER_IMG: 100
  EXPECTED_RESULTS: []
  EXPECTED_RESULTS_SIGMA_TOL: 4
  IMS_PER_BATCH: 128
USE_CUDA_GRAPH: False
:::MLLOG {"namespace": "", "time_ms": 1634384292456, "event_type": "POINT_IN_TIME", "key": "d_batch_size", "value": 16.0, "metadata": {"file": "tools/train_mlperf.py", "lineno": 483}}
:::MLLOG {"namespace": "", "time_ms": 1634384292457, "event_type": "POINT_IN_TIME", "key": "global_batch_size", "value": 128, "metadata": {"file": "tools/train_mlperf.py", "lineno": 184}}
:::MLLOG {"namespace": "", "time_ms": 1634384292457, "event_type": "POINT_IN_TIME", "key": "num_image_candidates", "value": 16000, "metadata": {"file": "tools/train_mlperf.py", "lineno": 185}}
:::MLLOG {"namespace": "", "time_ms": 1634384292457, "event_type": "POINT_IN_TIME", "key": "gradient_accumulation_steps", "value": 1, "metadata": {"file": "tools/train_mlperf.py", "lineno": 186}}
INFO:maskrcnn_benchmark:
PyTorch version: 1.9.0a0+df837d0
Is debug build: False
CUDA used to build PyTorch: 11.2
ROCM used to build PyTorch: N/A

OS: Ubuntu 20.04.1 LTS (x86_64)
GCC version: (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0
Clang version: Could not collect
CMake version: version 3.19.6

Python version: 3.8 (64-bit runtime)
Is CUDA available: True
CUDA runtime version: 11.2.142
GPU models and configuration: 
GPU 0: NVIDIA GeForce RTX 3090
GPU 1: NVIDIA GeForce RTX 3090
GPU 2: NVIDIA GeForce RTX 3090
GPU 3: NVIDIA GeForce RTX 3090
GPU 4: NVIDIA GeForce RTX 3090
GPU 5: NVIDIA GeForce RTX 3090
GPU 6: NVIDIA GeForce RTX 3090
GPU 7: NVIDIA GeForce RTX 3090

Nvidia driver version: 470.57.02
cuDNN version: Probably one of the following:
/usr/lib/x86_64-linux-gnu/libcudnn.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_adv_infer.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_adv_train.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_cnn_infer.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_ops_infer.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_ops_train.so.8.1.1
HIP runtime version: N/A
MIOpen runtime version: N/A

Versions of relevant libraries:
[pip3] numpy==1.19.2
[pip3] nvidia-dlprof-pytorch-nvtx==1.0.0
[pip3] pytorch-quantization==2.1.0
[pip3] pytorch-transformers==1.1.0
[pip3] torch==1.9.0a0+df837d0
[pip3] torchtext==0.9.0a0
[pip3] torchvision==0.9.0a0
[conda] Could not collect
        Pillow (7.0.0.post3)
INFO:maskrcnn_benchmark:Loaded configuration file configs/e2e_mask_rcnn_R_50_FPN_1x.yaml
INFO:maskrcnn_benchmark:
MODEL:
  META_ARCHITECTURE: "GeneralizedRCNN"
  WEIGHT: "catalog://ImageNetPretrained/MSRA/R-50"
  BACKBONE:
    CONV_BODY: "R-50-FPN"
    OUT_CHANNELS: 256
  RPN:
    USE_FPN: True
    ANCHOR_STRIDE: (4, 8, 16, 32, 64)
    PRE_NMS_TOP_N_TRAIN: 2000
    PRE_NMS_TOP_N_TEST: 1000
    POST_NMS_TOP_N_TEST: 1000
    FPN_POST_NMS_TOP_N_TEST: 1000
  ROI_HEADS:
    USE_FPN: True
  ROI_BOX_HEAD:
    POOLER_RESOLUTION: 7
    POOLER_SCALES: (0.25, 0.125, 0.0625, 0.03125)
    POOLER_SAMPLING_RATIO: 2
    FEATURE_EXTRACTOR: "FPN2MLPFeatureExtractor"
    PREDICTOR: "FPNPredictor"
  ROI_MASK_HEAD:
    POOLER_SCALES: (0.25, 0.125, 0.0625, 0.03125)
    FEATURE_EXTRACTOR: "MaskRCNNFPNFeatureExtractor"
    PREDICTOR: "MaskRCNNC4Predictor"
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 2
    RESOLUTION: 28
    SHARE_BOX_FEATURE_EXTRACTOR: False
  MASK_ON: True
DATASETS:
  TRAIN: ("coco_2017_train",)
  TEST: ("coco_2017_val",)
DATALOADER:
  SIZE_DIVISIBILITY: 32
SOLVER:
  BASE_LR: 0.02
  WEIGHT_DECAY: 0.0001
  STEPS: (60000, 80000)
  MAX_ITER: 90000

INFO:maskrcnn_benchmark:Running with config:
AMP_VERBOSE: False
CUDA_GRAPH_NUM_SHAPES_PER_ORIENTATION: 1
DATALOADER:
  ALWAYS_PAD_TO_MAX: False
  ASPECT_RATIO_GROUPING: True
  CACHE_EVAL_IMAGES: False
  DALI: False
  DALI_ON_GPU: False
  HYBRID: True
  NUM_WORKERS: 1
  SIZE_DIVISIBILITY: 32
DATASETS:
  TEST: ('coco_2017_val',)
  TRAIN: ('coco_2017_train',)
DISABLE_LOSS_LOGGING: False
DISABLE_REDUCED_LOGGING: True
DTYPE: float16
DYNAMIC_LOSS_SCALE_WINDOW: 1000
EVAL_MASK_VIRTUAL_PASTE: False
EVAL_SEGM_NUMPROCS: 10
FUSED_SGD_DEBUG_PRINTS: False
INPUT:
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (800,)
  PIXEL_MEAN: [102.9801, 115.9465, 122.7717]
  PIXEL_STD: [1.0, 1.0, 1.0]
  TO_BGR255: True
MLPERF:
  MIN_BBOX_MAP: 0.377
  MIN_SEGM_MAP: 0.339
MODEL:
  BACKBONE:
    CONV_BODY: R-50-FPN
    FREEZE_CONV_BODY_AT: 2
    INCLUDE_RPN_HEAD: True
    OUT_CHANNELS: 256
    USE_GN: False
  CLS_AGNOSTIC_BBOX_REG: False
  DEVICE: cuda
  FPN:
    USE_GN: False
    USE_RELU: False
  GROUP_NORM:
    DIM_PER_GP: -1
    EPSILON: 1e-05
    NUM_GROUPS: 32
  KEYPOINT_ON: False
  MASK_ON: True
  META_ARCHITECTURE: GeneralizedRCNN
  RESNETS:
    NUM_GROUPS: 1
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_FUNC: StemWithFixedBatchNorm
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: True
    TRANS_FUNC: BottleneckWithFixedBatchNorm
    WIDTH_PER_GROUP: 64
  RETINANET:
    ANCHOR_SIZES: (32, 64, 128, 256, 512)
    ANCHOR_STRIDES: (8, 16, 32, 64, 128)
    ASPECT_RATIOS: (0.5, 1.0, 2.0)
    BBOX_REG_BETA: 0.11
    BBOX_REG_WEIGHT: 4.0
    BG_IOU_THRESHOLD: 0.4
    FG_IOU_THRESHOLD: 0.5
    INFERENCE_TH: 0.05
    LOSS_ALPHA: 0.25
    LOSS_GAMMA: 2.0
    NMS_TH: 0.4
    NUM_CLASSES: 81
    NUM_CONVS: 4
    OCTAVE: 2.0
    PRE_NMS_TOP_N: 1000
    PRIOR_PROB: 0.01
    SCALES_PER_OCTAVE: 3
    STRADDLE_THRESH: 0
    USE_C5: True
  RETINANET_ON: False
  ROI_BOX_HEAD:
    CONV_HEAD_DIM: 256
    DILATION: 1
    FEATURE_EXTRACTOR: FPN2MLPFeatureExtractor
    MLP_HEAD_DIM: 1024
    NUM_CLASSES: 81
    NUM_STACKED_CONVS: 4
    POOLER_RESOLUTION: 7
    POOLER_SAMPLING_RATIO: 2
    POOLER_SCALES: (0.25, 0.125, 0.0625, 0.03125)
    PREDICTOR: FPNPredictor
    USE_GN: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    BG_IOU_THRESHOLD: 0.5
    DETECTIONS_PER_IMG: 100
    FG_IOU_THRESHOLD: 0.5
    NMS: 0.5
    POSITIVE_FRACTION: 0.25
    SCORE_THRESH: 0.05
    USE_FPN: True
  ROI_KEYPOINT_HEAD:
    CONV_LAYERS: (512, 512, 512, 512, 512, 512, 512, 512)
    FEATURE_EXTRACTOR: KeypointRCNNFeatureExtractor
    MLP_HEAD_DIM: 1024
    NUM_CLASSES: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_SCALES: (0.0625,)
    PREDICTOR: KeypointRCNNPredictor
    RESOLUTION: 14
    SHARE_BOX_FEATURE_EXTRACTOR: True
  ROI_MASK_HEAD:
    CONV_LAYERS: (256, 256, 256, 256)
    DILATION: 1
    FEATURE_EXTRACTOR: MaskRCNNFPNFeatureExtractor
    MLP_HEAD_DIM: 1024
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 2
    POOLER_SCALES: (0.25, 0.125, 0.0625, 0.03125)
    POSTPROCESS_MASKS: False
    POSTPROCESS_MASKS_THRESHOLD: 0.5
    PREDICTOR: MaskRCNNC4Predictor
    RESOLUTION: 28
    SHARE_BOX_FEATURE_EXTRACTOR: False
    USE_GN: False
  RPN:
    ANCHOR_SIZES: (32, 64, 128, 256, 512)
    ANCHOR_STRIDE: (4, 8, 16, 32, 64)
    ASPECT_RATIOS: (0.5, 1.0, 2.0)
    BATCH_SIZE_PER_IMAGE: 256
    BG_IOU_THRESHOLD: 0.3
    FG_IOU_THRESHOLD: 0.7
    FPN_POST_NMS_TOP_N_PER_IMAGE: False
    FPN_POST_NMS_TOP_N_TEST: 1000
    FPN_POST_NMS_TOP_N_TRAIN: 16000
    MIN_SIZE: 0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOP_N_TEST: 1000
    POST_NMS_TOP_N_TRAIN: 2000
    PRE_NMS_TOP_N_TEST: 1000
    PRE_NMS_TOP_N_TRAIN: 2000
    RPN_HEAD: SingleConvRPNHead
    STRADDLE_THRESH: 0
    USE_FPN: True
  RPN_ONLY: False
  WEIGHT: /coco/models/R-50.pkl
NHWC: True
OUTPUT_DIR: .
PATHS_CATALOG: maskrcnn_benchmark/config/paths_catalog_dbcluster.py
PER_EPOCH_EVAL: True
PRECOMPUTE_RPN_CONSTANT_TENSORS: True
SAVE_CHECKPOINTS: False
SOLVER:
  BASE_LR: 0.16
  BIAS_LR_FACTOR: 2
  CHECKPOINT_PERIOD: 2500
  GAMMA: 0.1
  IMS_PER_BATCH: 128
  MAX_ITER: 18000
  MOMENTUM: 0.9
  STEPS: (9000, 12000)
  WARMUP_FACTOR: 0.000192
  WARMUP_ITERS: 625
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0
SYNCFREE_ROI: True
TEST:
  DETECTIONS_PER_IMG: 100
  EXPECTED_RESULTS: []
  EXPECTED_RESULTS_SIGMA_TOL: 4
  IMS_PER_BATCH: 128
USE_CUDA_GRAPH: False
/opt/conda/lib/python3.8/site-packages/torch/jit/_recursive.py:207: UserWarning: 'downsample' was found in ScriptModule constants,  but it is a non-constant submodule. Consider removing it.
  warnings.warn("'{}' was found in ScriptModule constants, "
/opt/conda/lib/python3.8/site-packages/torch/jit/_recursive.py:207: UserWarning: 'downsample' was found in ScriptModule constants,  but it is a non-constant submodule. Consider removing it.
  warnings.warn("'{}' was found in ScriptModule constants, "
/opt/conda/lib/python3.8/site-packages/torch/jit/_recursive.py:207: UserWarning: 'downsample' was found in ScriptModule constants,  but it is a non-constant submodule. Consider removing it.
  warnings.warn("'{}' was found in ScriptModule constants, "
/opt/conda/lib/python3.8/site-packages/torch/jit/_recursive.py:207: UserWarning: 'downsample' was found in ScriptModule constants,  but it is a non-constant submodule. Consider removing it.
  warnings.warn("'{}' was found in ScriptModule constants, "
:::MLLOG {"namespace": "", "time_ms": 1634384292951, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/modeling/backbone/fpn.py", "lineno": 44, "tensor": "FPN_inner_block1"}}
:::MLLOG {"namespace": "", "time_ms": 1634384292958, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/modeling/backbone/fpn.py", "lineno": 47, "tensor": "FPN_layer_block1"}}
:::MLLOG {"namespace": "", "time_ms": 1634384292960, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/modeling/backbone/fpn.py", "lineno": 44, "tensor": "FPN_inner_block2"}}
:::MLLOG {"namespace": "", "time_ms": 1634384292966, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/modeling/backbone/fpn.py", "lineno": 47, "tensor": "FPN_layer_block2"}}
:::MLLOG {"namespace": "", "time_ms": 1634384292969, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/modeling/backbone/fpn.py", "lineno": 44, "tensor": "FPN_inner_block3"}}
:::MLLOG {"namespace": "", "time_ms": 1634384292976, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/modeling/backbone/fpn.py", "lineno": 47, "tensor": "FPN_layer_block3"}}
:::MLLOG {"namespace": "", "time_ms": 1634384292980, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/modeling/backbone/fpn.py", "lineno": 44, "tensor": "FPN_inner_block4"}}
:::MLLOG {"namespace": "", "time_ms": 1634384292987, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/modeling/backbone/fpn.py", "lineno": 47, "tensor": "FPN_layer_block4"}}
:::MLLOG {"namespace": "", "time_ms": 1634384292994, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/modeling/rpn/rpn.py", "lineno": 44, "tensor": "RPNHead_conv"}}
:::MLLOG {"namespace": "", "time_ms": 1634384292994, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/modeling/rpn/rpn.py", "lineno": 45, "tensor": "RPNHead_cls"}}
:::MLLOG {"namespace": "", "time_ms": 1634384292994, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/modeling/rpn/rpn.py", "lineno": 46, "tensor": "RPNHead_bbox"}}
:::MLLOG {"namespace": "", "time_ms": 1634384293112, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/modeling/roi_heads/box_head/roi_box_feature_extractors.py", "lineno": 83, "tensor": "ROI_BOX_FEATURE_EXTRACTOR_fc6"}}
:::MLLOG {"namespace": "", "time_ms": 1634384293121, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/modeling/roi_heads/box_head/roi_box_feature_extractors.py", "lineno": 86, "tensor": "ROI_BOX_FEATURE_EXTRACTOR_fc7"}}
:::MLLOG {"namespace": "", "time_ms": 1634384293124, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/modeling/roi_heads/box_head/roi_box_predictors.py", "lineno": 50, "tensor": "ROI_BOX_PREDICTOR_cls"}}
:::MLLOG {"namespace": "", "time_ms": 1634384293125, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/modeling/roi_heads/box_head/roi_box_predictors.py", "lineno": 52, "tensor": "ROI_BOX_PREDICTOR_bbox"}}
/opt/conda/lib/python3.8/site-packages/torch/nn/modules/conv.py:1003: UserWarning: _ConvTransposeMixin is a deprecated internal class. Please consider using public APIs.
  warnings.warn(
:::MLLOG {"namespace": "", "time_ms": 1634384293134, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/modeling/roi_heads/mask_head/roi_mask_feature_extractors.py", "lineno": 52, "tensor": "ROI_MASK_FEATURE_EXTRACTOR_fcn1"}}
:::MLLOG {"namespace": "", "time_ms": 1634384293142, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/modeling/roi_heads/mask_head/roi_mask_feature_extractors.py", "lineno": 52, "tensor": "ROI_MASK_FEATURE_EXTRACTOR_fcn2"}}
/opt/conda/lib/python3.8/site-packages/torch/nn/modules/conv.py:1003: UserWarning: _ConvTransposeMixin is a deprecated internal class. Please consider using public APIs.
  warnings.warn(
:::MLLOG {"namespace": "", "time_ms": 1634384293149, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/modeling/roi_heads/mask_head/roi_mask_feature_extractors.py", "lineno": 52, "tensor": "ROI_MASK_FEATURE_EXTRACTOR_fcn3"}}
:::MLLOG {"namespace": "", "time_ms": 1634384293157, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/modeling/roi_heads/mask_head/roi_mask_feature_extractors.py", "lineno": 52, "tensor": "ROI_MASK_FEATURE_EXTRACTOR_fcn4"}}
/opt/conda/lib/python3.8/site-packages/torch/nn/modules/conv.py:1003: UserWarning: _ConvTransposeMixin is a deprecated internal class. Please consider using public APIs.
  warnings.warn(
:::MLLOG {"namespace": "", "time_ms": 1634384293161, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/modeling/roi_heads/mask_head/roi_mask_predictors.py", "lineno": 42, "tensor": "ROI_MASK_PREDICTOR_fcn5"}}
:::MLLOG {"namespace": "", "time_ms": 1634384293161, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/modeling/roi_heads/mask_head/roi_mask_predictors.py", "lineno": 43, "tensor": "ROI_MASK_PREDICTOR_fcn_logits"}}
/opt/conda/lib/python3.8/site-packages/torch/nn/modules/conv.py:1003: UserWarning: _ConvTransposeMixin is a deprecated internal class. Please consider using public APIs.
  warnings.warn(
/opt/conda/lib/python3.8/site-packages/torch/nn/modules/conv.py:1003: UserWarning: _ConvTransposeMixin is a deprecated internal class. Please consider using public APIs.
  warnings.warn(
:::MLLOG {"namespace": "", "time_ms": 1634384293297, "event_type": "POINT_IN_TIME", "key": "opt_name", "value": "sgd_with_momentum", "metadata": {"file": "tools/train_mlperf.py", "lineno": 290}}
:::MLLOG {"namespace": "", "time_ms": 1634384293297, "event_type": "POINT_IN_TIME", "key": "opt_base_learning_rate", "value": 0.16, "metadata": {"file": "tools/train_mlperf.py", "lineno": 291}}
:::MLLOG {"namespace": "", "time_ms": 1634384293298, "event_type": "POINT_IN_TIME", "key": "opt_learning_rate_warmup_steps", "value": 625, "metadata": {"file": "tools/train_mlperf.py", "lineno": 292}}
:::MLLOG {"namespace": "", "time_ms": 1634384293298, "event_type": "POINT_IN_TIME", "key": "opt_learning_rate_warmup_factor", "value": 0.000192, "metadata": {"file": "tools/train_mlperf.py", "lineno": 293}}
:::MLLOG {"namespace": "", "time_ms": 1634384293298, "event_type": "POINT_IN_TIME", "key": "opt_learning_rate_decay_factor", "value": 0.1, "metadata": {"file": "tools/train_mlperf.py", "lineno": 294}}
:::MLLOG {"namespace": "", "time_ms": 1634384293298, "event_type": "POINT_IN_TIME", "key": "opt_learning_rate_decay_steps", "value": [9000, 12000], "metadata": {"file": "tools/train_mlperf.py", "lineno": 295}}
:::MLLOG {"namespace": "", "time_ms": 1634384293298, "event_type": "POINT_IN_TIME", "key": "min_image_size", "value": 800, "metadata": {"file": "tools/train_mlperf.py", "lineno": 296}}
:::MLLOG {"namespace": "", "time_ms": 1634384293298, "event_type": "POINT_IN_TIME", "key": "max_image_size", "value": 1333, "metadata": {"file": "tools/train_mlperf.py", "lineno": 297}}
model has 44347573 elements of size 2 bytes
2021-10-16 11:38:13,304 maskrcnn_benchmark.utils.checkpoint INFO: Loading checkpoint from /coco/models/R-50.pkl
INFO:maskrcnn_benchmark.utils.checkpoint:Loading checkpoint from /coco/models/R-50.pkl
model has 44347573 elements of size 2 bytes
model has 44347573 elements of size 2 bytes
model has 44347573 elements of size 2 bytes
model has 44347573 elements of size 2 bytes
INFO:maskrcnn_benchmark.utils.checkpoint:Loading checkpoint from /coco/models/R-50.pkl
INFO:maskrcnn_benchmark.utils.checkpoint:Loading checkpoint from /coco/models/R-50.pkl
INFO:maskrcnn_benchmark.utils.checkpoint:Loading checkpoint from /coco/models/R-50.pkl
INFO:maskrcnn_benchmark.utils.checkpoint:Loading checkpoint from /coco/models/R-50.pkl
2021-10-16 11:38:13,339 maskrcnn_benchmark.utils.c2_model_loading INFO: Remapping C2 weights
INFO:maskrcnn_benchmark.utils.c2_model_loading:Remapping C2 weights
2021-10-16 11:38:13,340 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: conv1_b              mapped name: conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: conv1_b              mapped name: conv1.bias
2021-10-16 11:38:13,340 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: conv1_w              mapped name: conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: conv1_w              mapped name: conv1.weight
2021-10-16 11:38:13,340 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: fc1000_b             mapped name: fc1000.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: fc1000_b             mapped name: fc1000.bias
2021-10-16 11:38:13,340 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: fc1000_w             mapped name: fc1000.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: fc1000_w             mapped name: fc1000.weight
2021-10-16 11:38:13,340 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res2_0_branch1_b     mapped name: layer1.0.downsample.0.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch1_b     mapped name: layer1.0.downsample.0.bias
2021-10-16 11:38:13,340 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res2_0_branch1_bn_b  mapped name: layer1.0.downsample.1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch1_bn_b  mapped name: layer1.0.downsample.1.bias
2021-10-16 11:38:13,340 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res2_0_branch1_bn_s  mapped name: layer1.0.downsample.1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch1_bn_s  mapped name: layer1.0.downsample.1.weight
2021-10-16 11:38:13,340 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res2_0_branch1_w     mapped name: layer1.0.downsample.0.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch1_w     mapped name: layer1.0.downsample.0.weight
2021-10-16 11:38:13,340 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res2_0_branch2a_b    mapped name: layer1.0.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2a_b    mapped name: layer1.0.conv1.bias
2021-10-16 11:38:13,340 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res2_0_branch2a_bn_b mapped name: layer1.0.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2a_bn_b mapped name: layer1.0.bn1.bias
2021-10-16 11:38:13,340 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res2_0_branch2a_bn_s mapped name: layer1.0.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2a_bn_s mapped name: layer1.0.bn1.weight
2021-10-16 11:38:13,340 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res2_0_branch2a_w    mapped name: layer1.0.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2a_w    mapped name: layer1.0.conv1.weight
2021-10-16 11:38:13,340 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res2_0_branch2b_b    mapped name: layer1.0.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2b_b    mapped name: layer1.0.conv2.bias
2021-10-16 11:38:13,340 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res2_0_branch2b_bn_b mapped name: layer1.0.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2b_bn_b mapped name: layer1.0.bn2.bias
2021-10-16 11:38:13,340 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res2_0_branch2b_bn_s mapped name: layer1.0.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2b_bn_s mapped name: layer1.0.bn2.weight
2021-10-16 11:38:13,340 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res2_0_branch2b_w    mapped name: layer1.0.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2b_w    mapped name: layer1.0.conv2.weight
2021-10-16 11:38:13,341 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res2_0_branch2c_b    mapped name: layer1.0.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2c_b    mapped name: layer1.0.conv3.bias
2021-10-16 11:38:13,341 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res2_0_branch2c_bn_b mapped name: layer1.0.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2c_bn_b mapped name: layer1.0.bn3.bias
2021-10-16 11:38:13,341 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res2_0_branch2c_bn_s mapped name: layer1.0.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2c_bn_s mapped name: layer1.0.bn3.weight
2021-10-16 11:38:13,341 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res2_0_branch2c_w    mapped name: layer1.0.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2c_w    mapped name: layer1.0.conv3.weight
2021-10-16 11:38:13,341 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res2_1_branch2a_b    mapped name: layer1.1.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2a_b    mapped name: layer1.1.conv1.bias
2021-10-16 11:38:13,341 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res2_1_branch2a_bn_b mapped name: layer1.1.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2a_bn_b mapped name: layer1.1.bn1.bias
2021-10-16 11:38:13,341 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res2_1_branch2a_bn_s mapped name: layer1.1.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2a_bn_s mapped name: layer1.1.bn1.weight
2021-10-16 11:38:13,341 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res2_1_branch2a_w    mapped name: layer1.1.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2a_w    mapped name: layer1.1.conv1.weight
2021-10-16 11:38:13,341 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res2_1_branch2b_b    mapped name: layer1.1.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2b_b    mapped name: layer1.1.conv2.bias
2021-10-16 11:38:13,341 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res2_1_branch2b_bn_b mapped name: layer1.1.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2b_bn_b mapped name: layer1.1.bn2.bias
2021-10-16 11:38:13,341 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res2_1_branch2b_bn_s mapped name: layer1.1.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2b_bn_s mapped name: layer1.1.bn2.weight
2021-10-16 11:38:13,341 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res2_1_branch2b_w    mapped name: layer1.1.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2b_w    mapped name: layer1.1.conv2.weight
2021-10-16 11:38:13,341 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res2_1_branch2c_b    mapped name: layer1.1.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2c_b    mapped name: layer1.1.conv3.bias
2021-10-16 11:38:13,341 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res2_1_branch2c_bn_b mapped name: layer1.1.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2c_bn_b mapped name: layer1.1.bn3.bias
2021-10-16 11:38:13,341 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res2_1_branch2c_bn_s mapped name: layer1.1.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2c_bn_s mapped name: layer1.1.bn3.weight
2021-10-16 11:38:13,341 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res2_1_branch2c_w    mapped name: layer1.1.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2c_w    mapped name: layer1.1.conv3.weight
2021-10-16 11:38:13,341 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res2_2_branch2a_b    mapped name: layer1.2.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2a_b    mapped name: layer1.2.conv1.bias
2021-10-16 11:38:13,341 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res2_2_branch2a_bn_b mapped name: layer1.2.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2a_bn_b mapped name: layer1.2.bn1.bias
2021-10-16 11:38:13,341 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res2_2_branch2a_bn_s mapped name: layer1.2.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2a_bn_s mapped name: layer1.2.bn1.weight
2021-10-16 11:38:13,341 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res2_2_branch2a_w    mapped name: layer1.2.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2a_w    mapped name: layer1.2.conv1.weight
2021-10-16 11:38:13,341 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res2_2_branch2b_b    mapped name: layer1.2.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2b_b    mapped name: layer1.2.conv2.bias
2021-10-16 11:38:13,341 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res2_2_branch2b_bn_b mapped name: layer1.2.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2b_bn_b mapped name: layer1.2.bn2.bias
2021-10-16 11:38:13,342 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res2_2_branch2b_bn_s mapped name: layer1.2.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2b_bn_s mapped name: layer1.2.bn2.weight
2021-10-16 11:38:13,342 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res2_2_branch2b_w    mapped name: layer1.2.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2b_w    mapped name: layer1.2.conv2.weight
2021-10-16 11:38:13,342 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res2_2_branch2c_b    mapped name: layer1.2.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2c_b    mapped name: layer1.2.conv3.bias
2021-10-16 11:38:13,342 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res2_2_branch2c_bn_b mapped name: layer1.2.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2c_bn_b mapped name: layer1.2.bn3.bias
2021-10-16 11:38:13,342 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res2_2_branch2c_bn_s mapped name: layer1.2.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2c_bn_s mapped name: layer1.2.bn3.weight
2021-10-16 11:38:13,342 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res2_2_branch2c_w    mapped name: layer1.2.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2c_w    mapped name: layer1.2.conv3.weight
2021-10-16 11:38:13,342 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res3_0_branch1_b     mapped name: layer2.0.downsample.0.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch1_b     mapped name: layer2.0.downsample.0.bias
2021-10-16 11:38:13,342 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res3_0_branch1_bn_b  mapped name: layer2.0.downsample.1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch1_bn_b  mapped name: layer2.0.downsample.1.bias
2021-10-16 11:38:13,342 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res3_0_branch1_bn_s  mapped name: layer2.0.downsample.1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch1_bn_s  mapped name: layer2.0.downsample.1.weight
2021-10-16 11:38:13,342 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res3_0_branch1_w     mapped name: layer2.0.downsample.0.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch1_w     mapped name: layer2.0.downsample.0.weight
2021-10-16 11:38:13,342 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res3_0_branch2a_b    mapped name: layer2.0.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2a_b    mapped name: layer2.0.conv1.bias
2021-10-16 11:38:13,342 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res3_0_branch2a_bn_b mapped name: layer2.0.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2a_bn_b mapped name: layer2.0.bn1.bias
2021-10-16 11:38:13,342 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res3_0_branch2a_bn_s mapped name: layer2.0.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2a_bn_s mapped name: layer2.0.bn1.weight
2021-10-16 11:38:13,342 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res3_0_branch2a_w    mapped name: layer2.0.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2a_w    mapped name: layer2.0.conv1.weight
2021-10-16 11:38:13,342 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res3_0_branch2b_b    mapped name: layer2.0.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2b_b    mapped name: layer2.0.conv2.bias
2021-10-16 11:38:13,342 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res3_0_branch2b_bn_b mapped name: layer2.0.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2b_bn_b mapped name: layer2.0.bn2.bias
2021-10-16 11:38:13,342 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res3_0_branch2b_bn_s mapped name: layer2.0.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2b_bn_s mapped name: layer2.0.bn2.weight
2021-10-16 11:38:13,342 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res3_0_branch2b_w    mapped name: layer2.0.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2b_w    mapped name: layer2.0.conv2.weight
2021-10-16 11:38:13,342 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res3_0_branch2c_b    mapped name: layer2.0.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2c_b    mapped name: layer2.0.conv3.bias
2021-10-16 11:38:13,342 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res3_0_branch2c_bn_b mapped name: layer2.0.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2c_bn_b mapped name: layer2.0.bn3.bias
2021-10-16 11:38:13,342 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res3_0_branch2c_bn_s mapped name: layer2.0.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2c_bn_s mapped name: layer2.0.bn3.weight
2021-10-16 11:38:13,342 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res3_0_branch2c_w    mapped name: layer2.0.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2c_w    mapped name: layer2.0.conv3.weight
2021-10-16 11:38:13,343 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res3_1_branch2a_b    mapped name: layer2.1.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2a_b    mapped name: layer2.1.conv1.bias
2021-10-16 11:38:13,343 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res3_1_branch2a_bn_b mapped name: layer2.1.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2a_bn_b mapped name: layer2.1.bn1.bias
2021-10-16 11:38:13,343 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res3_1_branch2a_bn_s mapped name: layer2.1.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2a_bn_s mapped name: layer2.1.bn1.weight
2021-10-16 11:38:13,343 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res3_1_branch2a_w    mapped name: layer2.1.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2a_w    mapped name: layer2.1.conv1.weight
2021-10-16 11:38:13,343 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res3_1_branch2b_b    mapped name: layer2.1.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2b_b    mapped name: layer2.1.conv2.bias
2021-10-16 11:38:13,343 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res3_1_branch2b_bn_b mapped name: layer2.1.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2b_bn_b mapped name: layer2.1.bn2.bias
2021-10-16 11:38:13,343 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res3_1_branch2b_bn_s mapped name: layer2.1.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2b_bn_s mapped name: layer2.1.bn2.weight
2021-10-16 11:38:13,343 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res3_1_branch2b_w    mapped name: layer2.1.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2b_w    mapped name: layer2.1.conv2.weight
2021-10-16 11:38:13,343 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res3_1_branch2c_b    mapped name: layer2.1.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2c_b    mapped name: layer2.1.conv3.bias
2021-10-16 11:38:13,343 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res3_1_branch2c_bn_b mapped name: layer2.1.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2c_bn_b mapped name: layer2.1.bn3.bias
2021-10-16 11:38:13,343 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res3_1_branch2c_bn_s mapped name: layer2.1.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2c_bn_s mapped name: layer2.1.bn3.weight
2021-10-16 11:38:13,343 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res3_1_branch2c_w    mapped name: layer2.1.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2c_w    mapped name: layer2.1.conv3.weight
2021-10-16 11:38:13,343 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res3_2_branch2a_b    mapped name: layer2.2.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2a_b    mapped name: layer2.2.conv1.bias
2021-10-16 11:38:13,343 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res3_2_branch2a_bn_b mapped name: layer2.2.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2a_bn_b mapped name: layer2.2.bn1.bias
2021-10-16 11:38:13,343 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res3_2_branch2a_bn_s mapped name: layer2.2.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2a_bn_s mapped name: layer2.2.bn1.weight
2021-10-16 11:38:13,343 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res3_2_branch2a_w    mapped name: layer2.2.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2a_w    mapped name: layer2.2.conv1.weight
2021-10-16 11:38:13,343 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res3_2_branch2b_b    mapped name: layer2.2.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2b_b    mapped name: layer2.2.conv2.bias
2021-10-16 11:38:13,343 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res3_2_branch2b_bn_b mapped name: layer2.2.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2b_bn_b mapped name: layer2.2.bn2.bias
2021-10-16 11:38:13,343 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res3_2_branch2b_bn_s mapped name: layer2.2.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2b_bn_s mapped name: layer2.2.bn2.weight
2021-10-16 11:38:13,343 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res3_2_branch2b_w    mapped name: layer2.2.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2b_w    mapped name: layer2.2.conv2.weight
2021-10-16 11:38:13,343 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res3_2_branch2c_b    mapped name: layer2.2.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2c_b    mapped name: layer2.2.conv3.bias
2021-10-16 11:38:13,343 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res3_2_branch2c_bn_b mapped name: layer2.2.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2c_bn_b mapped name: layer2.2.bn3.bias
2021-10-16 11:38:13,344 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res3_2_branch2c_bn_s mapped name: layer2.2.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2c_bn_s mapped name: layer2.2.bn3.weight
2021-10-16 11:38:13,344 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res3_2_branch2c_w    mapped name: layer2.2.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2c_w    mapped name: layer2.2.conv3.weight
2021-10-16 11:38:13,344 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res3_3_branch2a_b    mapped name: layer2.3.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2a_b    mapped name: layer2.3.conv1.bias
2021-10-16 11:38:13,344 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res3_3_branch2a_bn_b mapped name: layer2.3.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2a_bn_b mapped name: layer2.3.bn1.bias
2021-10-16 11:38:13,344 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res3_3_branch2a_bn_s mapped name: layer2.3.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2a_bn_s mapped name: layer2.3.bn1.weight
2021-10-16 11:38:13,344 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res3_3_branch2a_w    mapped name: layer2.3.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2a_w    mapped name: layer2.3.conv1.weight
2021-10-16 11:38:13,344 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res3_3_branch2b_b    mapped name: layer2.3.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2b_b    mapped name: layer2.3.conv2.bias
2021-10-16 11:38:13,344 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res3_3_branch2b_bn_b mapped name: layer2.3.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2b_bn_b mapped name: layer2.3.bn2.bias
2021-10-16 11:38:13,344 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res3_3_branch2b_bn_s mapped name: layer2.3.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2b_bn_s mapped name: layer2.3.bn2.weight
2021-10-16 11:38:13,344 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res3_3_branch2b_w    mapped name: layer2.3.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2b_w    mapped name: layer2.3.conv2.weight
2021-10-16 11:38:13,344 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res3_3_branch2c_b    mapped name: layer2.3.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2c_b    mapped name: layer2.3.conv3.bias
2021-10-16 11:38:13,344 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res3_3_branch2c_bn_b mapped name: layer2.3.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2c_bn_b mapped name: layer2.3.bn3.bias
2021-10-16 11:38:13,344 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res3_3_branch2c_bn_s mapped name: layer2.3.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2c_bn_s mapped name: layer2.3.bn3.weight
2021-10-16 11:38:13,344 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res3_3_branch2c_w    mapped name: layer2.3.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2c_w    mapped name: layer2.3.conv3.weight
2021-10-16 11:38:13,344 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_0_branch1_b     mapped name: layer3.0.downsample.0.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch1_b     mapped name: layer3.0.downsample.0.bias
2021-10-16 11:38:13,344 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_0_branch1_bn_b  mapped name: layer3.0.downsample.1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch1_bn_b  mapped name: layer3.0.downsample.1.bias
2021-10-16 11:38:13,344 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_0_branch1_bn_s  mapped name: layer3.0.downsample.1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch1_bn_s  mapped name: layer3.0.downsample.1.weight
2021-10-16 11:38:13,344 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_0_branch1_w     mapped name: layer3.0.downsample.0.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch1_w     mapped name: layer3.0.downsample.0.weight
2021-10-16 11:38:13,344 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_0_branch2a_b    mapped name: layer3.0.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2a_b    mapped name: layer3.0.conv1.bias
2021-10-16 11:38:13,344 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_0_branch2a_bn_b mapped name: layer3.0.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2a_bn_b mapped name: layer3.0.bn1.bias
2021-10-16 11:38:13,344 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_0_branch2a_bn_s mapped name: layer3.0.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2a_bn_s mapped name: layer3.0.bn1.weight
2021-10-16 11:38:13,344 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_0_branch2a_w    mapped name: layer3.0.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2a_w    mapped name: layer3.0.conv1.weight
2021-10-16 11:38:13,345 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_0_branch2b_b    mapped name: layer3.0.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2b_b    mapped name: layer3.0.conv2.bias
2021-10-16 11:38:13,345 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_0_branch2b_bn_b mapped name: layer3.0.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2b_bn_b mapped name: layer3.0.bn2.bias
2021-10-16 11:38:13,345 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_0_branch2b_bn_s mapped name: layer3.0.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2b_bn_s mapped name: layer3.0.bn2.weight
2021-10-16 11:38:13,345 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_0_branch2b_w    mapped name: layer3.0.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2b_w    mapped name: layer3.0.conv2.weight
2021-10-16 11:38:13,345 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_0_branch2c_b    mapped name: layer3.0.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2c_b    mapped name: layer3.0.conv3.bias
2021-10-16 11:38:13,345 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_0_branch2c_bn_b mapped name: layer3.0.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2c_bn_b mapped name: layer3.0.bn3.bias
2021-10-16 11:38:13,345 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_0_branch2c_bn_s mapped name: layer3.0.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2c_bn_s mapped name: layer3.0.bn3.weight
2021-10-16 11:38:13,345 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_0_branch2c_w    mapped name: layer3.0.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2c_w    mapped name: layer3.0.conv3.weight
2021-10-16 11:38:13,345 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_1_branch2a_b    mapped name: layer3.1.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2a_b    mapped name: layer3.1.conv1.bias
2021-10-16 11:38:13,345 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_1_branch2a_bn_b mapped name: layer3.1.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2a_bn_b mapped name: layer3.1.bn1.bias
2021-10-16 11:38:13,345 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_1_branch2a_bn_s mapped name: layer3.1.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2a_bn_s mapped name: layer3.1.bn1.weight
2021-10-16 11:38:13,345 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_1_branch2a_w    mapped name: layer3.1.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2a_w    mapped name: layer3.1.conv1.weight
2021-10-16 11:38:13,345 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_1_branch2b_b    mapped name: layer3.1.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2b_b    mapped name: layer3.1.conv2.bias
2021-10-16 11:38:13,345 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_1_branch2b_bn_b mapped name: layer3.1.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2b_bn_b mapped name: layer3.1.bn2.bias
2021-10-16 11:38:13,345 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_1_branch2b_bn_s mapped name: layer3.1.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2b_bn_s mapped name: layer3.1.bn2.weight
2021-10-16 11:38:13,345 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_1_branch2b_w    mapped name: layer3.1.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2b_w    mapped name: layer3.1.conv2.weight
2021-10-16 11:38:13,345 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_1_branch2c_b    mapped name: layer3.1.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2c_b    mapped name: layer3.1.conv3.bias
2021-10-16 11:38:13,345 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_1_branch2c_bn_b mapped name: layer3.1.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2c_bn_b mapped name: layer3.1.bn3.bias
2021-10-16 11:38:13,345 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_1_branch2c_bn_s mapped name: layer3.1.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2c_bn_s mapped name: layer3.1.bn3.weight
2021-10-16 11:38:13,345 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_1_branch2c_w    mapped name: layer3.1.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2c_w    mapped name: layer3.1.conv3.weight
2021-10-16 11:38:13,345 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_2_branch2a_b    mapped name: layer3.2.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2a_b    mapped name: layer3.2.conv1.bias
2021-10-16 11:38:13,345 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_2_branch2a_bn_b mapped name: layer3.2.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2a_bn_b mapped name: layer3.2.bn1.bias
2021-10-16 11:38:13,345 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_2_branch2a_bn_s mapped name: layer3.2.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2a_bn_s mapped name: layer3.2.bn1.weight
2021-10-16 11:38:13,346 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_2_branch2a_w    mapped name: layer3.2.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2a_w    mapped name: layer3.2.conv1.weight
2021-10-16 11:38:13,346 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_2_branch2b_b    mapped name: layer3.2.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2b_b    mapped name: layer3.2.conv2.bias
2021-10-16 11:38:13,346 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_2_branch2b_bn_b mapped name: layer3.2.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2b_bn_b mapped name: layer3.2.bn2.bias
2021-10-16 11:38:13,346 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_2_branch2b_bn_s mapped name: layer3.2.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2b_bn_s mapped name: layer3.2.bn2.weight
2021-10-16 11:38:13,346 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_2_branch2b_w    mapped name: layer3.2.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2b_w    mapped name: layer3.2.conv2.weight
2021-10-16 11:38:13,346 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_2_branch2c_b    mapped name: layer3.2.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2c_b    mapped name: layer3.2.conv3.bias
2021-10-16 11:38:13,346 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_2_branch2c_bn_b mapped name: layer3.2.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2c_bn_b mapped name: layer3.2.bn3.bias
2021-10-16 11:38:13,346 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_2_branch2c_bn_s mapped name: layer3.2.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2c_bn_s mapped name: layer3.2.bn3.weight
2021-10-16 11:38:13,346 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_2_branch2c_w    mapped name: layer3.2.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2c_w    mapped name: layer3.2.conv3.weight
2021-10-16 11:38:13,346 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_3_branch2a_b    mapped name: layer3.3.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2a_b    mapped name: layer3.3.conv1.bias
2021-10-16 11:38:13,346 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_3_branch2a_bn_b mapped name: layer3.3.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2a_bn_b mapped name: layer3.3.bn1.bias
2021-10-16 11:38:13,346 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_3_branch2a_bn_s mapped name: layer3.3.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2a_bn_s mapped name: layer3.3.bn1.weight
2021-10-16 11:38:13,346 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_3_branch2a_w    mapped name: layer3.3.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2a_w    mapped name: layer3.3.conv1.weight
2021-10-16 11:38:13,346 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_3_branch2b_b    mapped name: layer3.3.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:Remapping C2 weights
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2b_b    mapped name: layer3.3.conv2.bias
2021-10-16 11:38:13,346 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_3_branch2b_bn_b mapped name: layer3.3.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2b_bn_b mapped name: layer3.3.bn2.bias
2021-10-16 11:38:13,346 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_3_branch2b_bn_s mapped name: layer3.3.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: conv1_b              mapped name: conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2b_bn_s mapped name: layer3.3.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: conv1_w              mapped name: conv1.weight
2021-10-16 11:38:13,346 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_3_branch2b_w    mapped name: layer3.3.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: fc1000_b             mapped name: fc1000.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2b_w    mapped name: layer3.3.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: fc1000_w             mapped name: fc1000.weight
2021-10-16 11:38:13,346 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_3_branch2c_b    mapped name: layer3.3.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch1_b     mapped name: layer1.0.downsample.0.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2c_b    mapped name: layer3.3.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch1_bn_b  mapped name: layer1.0.downsample.1.bias
2021-10-16 11:38:13,346 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_3_branch2c_bn_b mapped name: layer3.3.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch1_bn_s  mapped name: layer1.0.downsample.1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2c_bn_b mapped name: layer3.3.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch1_w     mapped name: layer1.0.downsample.0.weight
2021-10-16 11:38:13,346 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_3_branch2c_bn_s mapped name: layer3.3.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2a_b    mapped name: layer1.0.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2c_bn_s mapped name: layer3.3.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2a_bn_b mapped name: layer1.0.bn1.bias
2021-10-16 11:38:13,346 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_3_branch2c_w    mapped name: layer3.3.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2a_bn_s mapped name: layer1.0.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2c_w    mapped name: layer3.3.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2a_w    mapped name: layer1.0.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2b_b    mapped name: layer1.0.conv2.bias
2021-10-16 11:38:13,346 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_4_branch2a_b    mapped name: layer3.4.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2b_bn_b mapped name: layer1.0.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2a_b    mapped name: layer3.4.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2b_bn_s mapped name: layer1.0.bn2.weight
2021-10-16 11:38:13,347 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_4_branch2a_bn_b mapped name: layer3.4.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2b_w    mapped name: layer1.0.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2a_bn_b mapped name: layer3.4.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2c_b    mapped name: layer1.0.conv3.bias
2021-10-16 11:38:13,347 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_4_branch2a_bn_s mapped name: layer3.4.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2c_bn_b mapped name: layer1.0.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2a_bn_s mapped name: layer3.4.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2c_bn_s mapped name: layer1.0.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2c_w    mapped name: layer1.0.conv3.weight
2021-10-16 11:38:13,347 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_4_branch2a_w    mapped name: layer3.4.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2a_b    mapped name: layer1.1.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2a_w    mapped name: layer3.4.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2a_bn_b mapped name: layer1.1.bn1.bias
2021-10-16 11:38:13,347 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_4_branch2b_b    mapped name: layer3.4.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2a_bn_s mapped name: layer1.1.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2b_b    mapped name: layer3.4.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2a_w    mapped name: layer1.1.conv1.weight
2021-10-16 11:38:13,347 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_4_branch2b_bn_b mapped name: layer3.4.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2b_b    mapped name: layer1.1.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2b_bn_b mapped name: layer3.4.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2b_bn_b mapped name: layer1.1.bn2.bias
2021-10-16 11:38:13,347 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_4_branch2b_bn_s mapped name: layer3.4.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2b_bn_s mapped name: layer1.1.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2b_bn_s mapped name: layer3.4.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2b_w    mapped name: layer1.1.conv2.weight
2021-10-16 11:38:13,347 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_4_branch2b_w    mapped name: layer3.4.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2c_b    mapped name: layer1.1.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2b_w    mapped name: layer3.4.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2c_bn_b mapped name: layer1.1.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2c_bn_s mapped name: layer1.1.bn3.weight
2021-10-16 11:38:13,347 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_4_branch2c_b    mapped name: layer3.4.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2c_w    mapped name: layer1.1.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2c_b    mapped name: layer3.4.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2a_b    mapped name: layer1.2.conv1.bias
2021-10-16 11:38:13,347 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_4_branch2c_bn_b mapped name: layer3.4.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2a_bn_b mapped name: layer1.2.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2c_bn_b mapped name: layer3.4.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2a_bn_s mapped name: layer1.2.bn1.weight
2021-10-16 11:38:13,347 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_4_branch2c_bn_s mapped name: layer3.4.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2a_w    mapped name: layer1.2.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2c_bn_s mapped name: layer3.4.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2b_b    mapped name: layer1.2.conv2.bias
2021-10-16 11:38:13,347 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_4_branch2c_w    mapped name: layer3.4.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2b_bn_b mapped name: layer1.2.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2c_w    mapped name: layer3.4.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2b_bn_s mapped name: layer1.2.bn2.weight
2021-10-16 11:38:13,347 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_5_branch2a_b    mapped name: layer3.5.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2b_w    mapped name: layer1.2.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2a_b    mapped name: layer3.5.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2c_b    mapped name: layer1.2.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2c_bn_b mapped name: layer1.2.bn3.bias
2021-10-16 11:38:13,347 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_5_branch2a_bn_b mapped name: layer3.5.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2c_bn_s mapped name: layer1.2.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2a_bn_b mapped name: layer3.5.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2c_w    mapped name: layer1.2.conv3.weight
2021-10-16 11:38:13,347 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_5_branch2a_bn_s mapped name: layer3.5.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch1_b     mapped name: layer2.0.downsample.0.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2a_bn_s mapped name: layer3.5.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch1_bn_b  mapped name: layer2.0.downsample.1.bias
2021-10-16 11:38:13,347 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_5_branch2a_w    mapped name: layer3.5.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch1_bn_s  mapped name: layer2.0.downsample.1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2a_w    mapped name: layer3.5.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch1_w     mapped name: layer2.0.downsample.0.weight
2021-10-16 11:38:13,347 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_5_branch2b_b    mapped name: layer3.5.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2a_b    mapped name: layer2.0.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2b_b    mapped name: layer3.5.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2a_bn_b mapped name: layer2.0.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2a_bn_s mapped name: layer2.0.bn1.weight
2021-10-16 11:38:13,347 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_5_branch2b_bn_b mapped name: layer3.5.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2b_bn_b mapped name: layer3.5.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2a_w    mapped name: layer2.0.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2b_b    mapped name: layer2.0.conv2.bias
2021-10-16 11:38:13,347 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_5_branch2b_bn_s mapped name: layer3.5.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2b_bn_b mapped name: layer2.0.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2b_bn_s mapped name: layer3.5.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2b_bn_s mapped name: layer2.0.bn2.weight
2021-10-16 11:38:13,347 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_5_branch2b_w    mapped name: layer3.5.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2b_w    mapped name: layer2.0.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2b_w    mapped name: layer3.5.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2c_b    mapped name: layer2.0.conv3.bias
2021-10-16 11:38:13,347 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_5_branch2c_b    mapped name: layer3.5.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2c_bn_b mapped name: layer2.0.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2c_b    mapped name: layer3.5.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2c_bn_s mapped name: layer2.0.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2c_w    mapped name: layer2.0.conv3.weight
2021-10-16 11:38:13,347 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_5_branch2c_bn_b mapped name: layer3.5.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2a_b    mapped name: layer2.1.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2c_bn_b mapped name: layer3.5.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2a_bn_b mapped name: layer2.1.bn1.bias
2021-10-16 11:38:13,348 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_5_branch2c_bn_s mapped name: layer3.5.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2a_bn_s mapped name: layer2.1.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2c_bn_s mapped name: layer3.5.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2a_w    mapped name: layer2.1.conv1.weight
2021-10-16 11:38:13,348 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res4_5_branch2c_w    mapped name: layer3.5.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2b_b    mapped name: layer2.1.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2c_w    mapped name: layer3.5.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2b_bn_b mapped name: layer2.1.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2b_bn_s mapped name: layer2.1.bn2.weight
2021-10-16 11:38:13,348 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res5_0_branch1_b     mapped name: layer4.0.downsample.0.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch1_b     mapped name: layer4.0.downsample.0.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2b_w    mapped name: layer2.1.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2c_b    mapped name: layer2.1.conv3.bias
2021-10-16 11:38:13,348 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res5_0_branch1_bn_b  mapped name: layer4.0.downsample.1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2c_bn_b mapped name: layer2.1.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch1_bn_b  mapped name: layer4.0.downsample.1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2c_bn_s mapped name: layer2.1.bn3.weight
2021-10-16 11:38:13,348 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res5_0_branch1_bn_s  mapped name: layer4.0.downsample.1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2c_w    mapped name: layer2.1.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch1_bn_s  mapped name: layer4.0.downsample.1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2a_b    mapped name: layer2.2.conv1.bias
2021-10-16 11:38:13,348 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res5_0_branch1_w     mapped name: layer4.0.downsample.0.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2a_bn_b mapped name: layer2.2.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch1_w     mapped name: layer4.0.downsample.0.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2a_bn_s mapped name: layer2.2.bn1.weight
2021-10-16 11:38:13,348 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res5_0_branch2a_b    mapped name: layer4.0.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2a_w    mapped name: layer2.2.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2a_b    mapped name: layer4.0.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2b_b    mapped name: layer2.2.conv2.bias
2021-10-16 11:38:13,348 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res5_0_branch2a_bn_b mapped name: layer4.0.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2b_bn_b mapped name: layer2.2.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2b_bn_s mapped name: layer2.2.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2a_bn_b mapped name: layer4.0.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2b_w    mapped name: layer2.2.conv2.weight
2021-10-16 11:38:13,348 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res5_0_branch2a_bn_s mapped name: layer4.0.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2c_b    mapped name: layer2.2.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2a_bn_s mapped name: layer4.0.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2c_bn_b mapped name: layer2.2.bn3.bias
2021-10-16 11:38:13,348 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res5_0_branch2a_w    mapped name: layer4.0.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2c_bn_s mapped name: layer2.2.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2a_w    mapped name: layer4.0.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2c_w    mapped name: layer2.2.conv3.weight
2021-10-16 11:38:13,348 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res5_0_branch2b_b    mapped name: layer4.0.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2a_b    mapped name: layer2.3.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2b_b    mapped name: layer4.0.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2a_bn_b mapped name: layer2.3.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2a_bn_s mapped name: layer2.3.bn1.weight
2021-10-16 11:38:13,348 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res5_0_branch2b_bn_b mapped name: layer4.0.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2b_bn_b mapped name: layer4.0.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2a_w    mapped name: layer2.3.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2b_b    mapped name: layer2.3.conv2.bias
2021-10-16 11:38:13,348 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res5_0_branch2b_bn_s mapped name: layer4.0.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2b_bn_b mapped name: layer2.3.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2b_bn_s mapped name: layer4.0.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2b_bn_s mapped name: layer2.3.bn2.weight
2021-10-16 11:38:13,348 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res5_0_branch2b_w    mapped name: layer4.0.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2b_w    mapped name: layer2.3.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2b_w    mapped name: layer4.0.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2c_b    mapped name: layer2.3.conv3.bias
2021-10-16 11:38:13,348 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res5_0_branch2c_b    mapped name: layer4.0.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2c_bn_b mapped name: layer2.3.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2c_b    mapped name: layer4.0.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2c_bn_s mapped name: layer2.3.bn3.weight
2021-10-16 11:38:13,348 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res5_0_branch2c_bn_b mapped name: layer4.0.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2c_w    mapped name: layer2.3.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2c_bn_b mapped name: layer4.0.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch1_b     mapped name: layer3.0.downsample.0.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch1_bn_b  mapped name: layer3.0.downsample.1.bias
2021-10-16 11:38:13,348 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res5_0_branch2c_bn_s mapped name: layer4.0.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch1_bn_s  mapped name: layer3.0.downsample.1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2c_bn_s mapped name: layer4.0.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch1_w     mapped name: layer3.0.downsample.0.weight
2021-10-16 11:38:13,348 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res5_0_branch2c_w    mapped name: layer4.0.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2a_b    mapped name: layer3.0.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2c_w    mapped name: layer4.0.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2a_bn_b mapped name: layer3.0.bn1.bias
2021-10-16 11:38:13,348 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res5_1_branch2a_b    mapped name: layer4.1.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2a_bn_s mapped name: layer3.0.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2a_b    mapped name: layer4.1.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2a_w    mapped name: layer3.0.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2b_b    mapped name: layer3.0.conv2.bias
2021-10-16 11:38:13,348 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res5_1_branch2a_bn_b mapped name: layer4.1.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2b_bn_b mapped name: layer3.0.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2a_bn_b mapped name: layer4.1.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2b_bn_s mapped name: layer3.0.bn2.weight
2021-10-16 11:38:13,348 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res5_1_branch2a_bn_s mapped name: layer4.1.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2b_w    mapped name: layer3.0.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2a_bn_s mapped name: layer4.1.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2c_b    mapped name: layer3.0.conv3.bias
2021-10-16 11:38:13,349 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res5_1_branch2a_w    mapped name: layer4.1.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2c_bn_b mapped name: layer3.0.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2a_w    mapped name: layer4.1.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2c_bn_s mapped name: layer3.0.bn3.weight
2021-10-16 11:38:13,349 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res5_1_branch2b_b    mapped name: layer4.1.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2c_w    mapped name: layer3.0.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2b_b    mapped name: layer4.1.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2a_b    mapped name: layer3.1.conv1.bias
2021-10-16 11:38:13,349 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res5_1_branch2b_bn_b mapped name: layer4.1.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2a_bn_b mapped name: layer3.1.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2b_bn_b mapped name: layer4.1.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2a_bn_s mapped name: layer3.1.bn1.weight
2021-10-16 11:38:13,349 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res5_1_branch2b_bn_s mapped name: layer4.1.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2a_w    mapped name: layer3.1.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2b_bn_s mapped name: layer4.1.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2b_b    mapped name: layer3.1.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2b_bn_b mapped name: layer3.1.bn2.bias
2021-10-16 11:38:13,349 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res5_1_branch2b_w    mapped name: layer4.1.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2b_bn_s mapped name: layer3.1.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2b_w    mapped name: layer4.1.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2b_w    mapped name: layer3.1.conv2.weight
2021-10-16 11:38:13,349 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res5_1_branch2c_b    mapped name: layer4.1.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2c_b    mapped name: layer3.1.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2c_b    mapped name: layer4.1.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2c_bn_b mapped name: layer3.1.bn3.bias
2021-10-16 11:38:13,349 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res5_1_branch2c_bn_b mapped name: layer4.1.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2c_bn_s mapped name: layer3.1.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2c_bn_b mapped name: layer4.1.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2c_w    mapped name: layer3.1.conv3.weight
2021-10-16 11:38:13,349 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res5_1_branch2c_bn_s mapped name: layer4.1.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2a_b    mapped name: layer3.2.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2c_bn_s mapped name: layer4.1.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2a_bn_b mapped name: layer3.2.bn1.bias
2021-10-16 11:38:13,349 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res5_1_branch2c_w    mapped name: layer4.1.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2a_bn_s mapped name: layer3.2.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2c_w    mapped name: layer4.1.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2a_w    mapped name: layer3.2.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2b_b    mapped name: layer3.2.conv2.bias
2021-10-16 11:38:13,349 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res5_2_branch2a_b    mapped name: layer4.2.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2a_b    mapped name: layer4.2.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2b_bn_b mapped name: layer3.2.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2b_bn_s mapped name: layer3.2.bn2.weight
2021-10-16 11:38:13,349 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res5_2_branch2a_bn_b mapped name: layer4.2.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2b_w    mapped name: layer3.2.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2a_bn_b mapped name: layer4.2.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2c_b    mapped name: layer3.2.conv3.bias
2021-10-16 11:38:13,349 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res5_2_branch2a_bn_s mapped name: layer4.2.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2c_bn_b mapped name: layer3.2.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2a_bn_s mapped name: layer4.2.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2c_bn_s mapped name: layer3.2.bn3.weight
2021-10-16 11:38:13,349 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res5_2_branch2a_w    mapped name: layer4.2.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2c_w    mapped name: layer3.2.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2a_w    mapped name: layer4.2.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2a_b    mapped name: layer3.3.conv1.bias
2021-10-16 11:38:13,349 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res5_2_branch2b_b    mapped name: layer4.2.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2a_bn_b mapped name: layer3.3.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2b_b    mapped name: layer4.2.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2a_bn_s mapped name: layer3.3.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2a_w    mapped name: layer3.3.conv1.weight
2021-10-16 11:38:13,349 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res5_2_branch2b_bn_b mapped name: layer4.2.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2b_b    mapped name: layer3.3.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2b_bn_b mapped name: layer4.2.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2b_bn_b mapped name: layer3.3.bn2.bias
2021-10-16 11:38:13,349 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res5_2_branch2b_bn_s mapped name: layer4.2.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2b_bn_s mapped name: layer3.3.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2b_bn_s mapped name: layer4.2.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2b_w    mapped name: layer3.3.conv2.weight
2021-10-16 11:38:13,349 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res5_2_branch2b_w    mapped name: layer4.2.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2c_b    mapped name: layer3.3.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2b_w    mapped name: layer4.2.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2c_bn_b mapped name: layer3.3.bn3.bias
2021-10-16 11:38:13,349 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res5_2_branch2c_b    mapped name: layer4.2.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2c_bn_s mapped name: layer3.3.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2c_w    mapped name: layer3.3.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2c_b    mapped name: layer4.2.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2a_b    mapped name: layer3.4.conv1.bias
2021-10-16 11:38:13,349 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res5_2_branch2c_bn_b mapped name: layer4.2.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2a_bn_b mapped name: layer3.4.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2c_bn_b mapped name: layer4.2.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2a_bn_s mapped name: layer3.4.bn1.weight
2021-10-16 11:38:13,349 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res5_2_branch2c_bn_s mapped name: layer4.2.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2a_w    mapped name: layer3.4.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2c_bn_s mapped name: layer4.2.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2b_b    mapped name: layer3.4.conv2.bias
2021-10-16 11:38:13,349 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res5_2_branch2c_w    mapped name: layer4.2.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2b_bn_b mapped name: layer3.4.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2c_w    mapped name: layer4.2.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2b_bn_s mapped name: layer3.4.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2b_w    mapped name: layer3.4.conv2.weight
2021-10-16 11:38:13,349 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res_conv1_bn_b       mapped name: bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2c_b    mapped name: layer3.4.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res_conv1_bn_b       mapped name: bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2c_bn_b mapped name: layer3.4.bn3.bias
2021-10-16 11:38:13,350 maskrcnn_benchmark.utils.c2_model_loading INFO: C2 name: res_conv1_bn_s       mapped name: bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2c_bn_s mapped name: layer3.4.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res_conv1_bn_s       mapped name: bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2c_w    mapped name: layer3.4.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2a_b    mapped name: layer3.5.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2a_bn_b mapped name: layer3.5.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2a_bn_s mapped name: layer3.5.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2a_w    mapped name: layer3.5.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2b_b    mapped name: layer3.5.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2b_bn_b mapped name: layer3.5.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2b_bn_s mapped name: layer3.5.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2b_w    mapped name: layer3.5.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2c_b    mapped name: layer3.5.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2c_bn_b mapped name: layer3.5.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2c_bn_s mapped name: layer3.5.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2c_w    mapped name: layer3.5.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch1_b     mapped name: layer4.0.downsample.0.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch1_bn_b  mapped name: layer4.0.downsample.1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch1_bn_s  mapped name: layer4.0.downsample.1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch1_w     mapped name: layer4.0.downsample.0.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2a_b    mapped name: layer4.0.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2a_bn_b mapped name: layer4.0.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2a_bn_s mapped name: layer4.0.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2a_w    mapped name: layer4.0.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2b_b    mapped name: layer4.0.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2b_bn_b mapped name: layer4.0.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2b_bn_s mapped name: layer4.0.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2b_w    mapped name: layer4.0.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2c_b    mapped name: layer4.0.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2c_bn_b mapped name: layer4.0.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2c_bn_s mapped name: layer4.0.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2c_w    mapped name: layer4.0.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2a_b    mapped name: layer4.1.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2a_bn_b mapped name: layer4.1.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2a_bn_s mapped name: layer4.1.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2a_w    mapped name: layer4.1.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2b_b    mapped name: layer4.1.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2b_bn_b mapped name: layer4.1.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2b_bn_s mapped name: layer4.1.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2b_w    mapped name: layer4.1.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2c_b    mapped name: layer4.1.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2c_bn_b mapped name: layer4.1.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2c_bn_s mapped name: layer4.1.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2c_w    mapped name: layer4.1.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2a_b    mapped name: layer4.2.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2a_bn_b mapped name: layer4.2.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2a_bn_s mapped name: layer4.2.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2a_w    mapped name: layer4.2.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2b_b    mapped name: layer4.2.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2b_bn_b mapped name: layer4.2.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2b_bn_s mapped name: layer4.2.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2b_w    mapped name: layer4.2.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2c_b    mapped name: layer4.2.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2c_bn_b mapped name: layer4.2.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2c_bn_s mapped name: layer4.2.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2c_w    mapped name: layer4.2.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res_conv1_bn_b       mapped name: bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res_conv1_bn_s       mapped name: bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:Remapping C2 weights
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: conv1_b              mapped name: conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: conv1_w              mapped name: conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: fc1000_b             mapped name: fc1000.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: fc1000_w             mapped name: fc1000.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch1_b     mapped name: layer1.0.downsample.0.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch1_bn_b  mapped name: layer1.0.downsample.1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch1_bn_s  mapped name: layer1.0.downsample.1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch1_w     mapped name: layer1.0.downsample.0.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2a_b    mapped name: layer1.0.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2a_bn_b mapped name: layer1.0.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2a_bn_s mapped name: layer1.0.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2a_w    mapped name: layer1.0.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2b_b    mapped name: layer1.0.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2b_bn_b mapped name: layer1.0.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2b_bn_s mapped name: layer1.0.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2b_w    mapped name: layer1.0.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2c_b    mapped name: layer1.0.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2c_bn_b mapped name: layer1.0.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2c_bn_s mapped name: layer1.0.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2c_w    mapped name: layer1.0.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2a_b    mapped name: layer1.1.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2a_bn_b mapped name: layer1.1.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2a_bn_s mapped name: layer1.1.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2a_w    mapped name: layer1.1.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2b_b    mapped name: layer1.1.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2b_bn_b mapped name: layer1.1.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2b_bn_s mapped name: layer1.1.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2b_w    mapped name: layer1.1.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2c_b    mapped name: layer1.1.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2c_bn_b mapped name: layer1.1.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2c_bn_s mapped name: layer1.1.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2c_w    mapped name: layer1.1.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2a_b    mapped name: layer1.2.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2a_bn_b mapped name: layer1.2.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2a_bn_s mapped name: layer1.2.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2a_w    mapped name: layer1.2.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2b_b    mapped name: layer1.2.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:Remapping C2 weights
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2b_bn_b mapped name: layer1.2.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2b_bn_s mapped name: layer1.2.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2b_w    mapped name: layer1.2.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2c_b    mapped name: layer1.2.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2c_bn_b mapped name: layer1.2.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: conv1_b              mapped name: conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2c_bn_s mapped name: layer1.2.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: conv1_w              mapped name: conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2c_w    mapped name: layer1.2.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: fc1000_b             mapped name: fc1000.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch1_b     mapped name: layer2.0.downsample.0.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: fc1000_w             mapped name: fc1000.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch1_bn_b  mapped name: layer2.0.downsample.1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch1_b     mapped name: layer1.0.downsample.0.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch1_bn_s  mapped name: layer2.0.downsample.1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch1_bn_b  mapped name: layer1.0.downsample.1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch1_w     mapped name: layer2.0.downsample.0.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch1_bn_s  mapped name: layer1.0.downsample.1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2a_b    mapped name: layer2.0.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch1_w     mapped name: layer1.0.downsample.0.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2a_bn_b mapped name: layer2.0.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2a_b    mapped name: layer1.0.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2a_bn_s mapped name: layer2.0.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2a_bn_b mapped name: layer1.0.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2a_w    mapped name: layer2.0.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2a_bn_s mapped name: layer1.0.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2b_b    mapped name: layer2.0.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2a_w    mapped name: layer1.0.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2b_bn_b mapped name: layer2.0.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2b_b    mapped name: layer1.0.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2b_bn_s mapped name: layer2.0.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2b_bn_b mapped name: layer1.0.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2b_w    mapped name: layer2.0.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2b_bn_s mapped name: layer1.0.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2c_b    mapped name: layer2.0.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2b_w    mapped name: layer1.0.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2c_bn_b mapped name: layer2.0.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2c_b    mapped name: layer1.0.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2c_bn_s mapped name: layer2.0.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2c_bn_b mapped name: layer1.0.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2c_w    mapped name: layer2.0.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2c_bn_s mapped name: layer1.0.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2a_b    mapped name: layer2.1.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2c_w    mapped name: layer1.0.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2a_bn_b mapped name: layer2.1.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2a_b    mapped name: layer1.1.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2a_bn_s mapped name: layer2.1.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2a_bn_b mapped name: layer1.1.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2a_w    mapped name: layer2.1.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2a_bn_s mapped name: layer1.1.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2b_b    mapped name: layer2.1.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2a_w    mapped name: layer1.1.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2b_bn_b mapped name: layer2.1.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2b_b    mapped name: layer1.1.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2b_bn_s mapped name: layer2.1.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2b_bn_b mapped name: layer1.1.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2b_w    mapped name: layer2.1.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2b_bn_s mapped name: layer1.1.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2c_b    mapped name: layer2.1.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2b_w    mapped name: layer1.1.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2c_bn_b mapped name: layer2.1.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2c_b    mapped name: layer1.1.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2c_bn_s mapped name: layer2.1.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2c_bn_b mapped name: layer1.1.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2c_w    mapped name: layer2.1.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2c_bn_s mapped name: layer1.1.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2a_b    mapped name: layer2.2.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2c_w    mapped name: layer1.1.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2a_bn_b mapped name: layer2.2.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2a_b    mapped name: layer1.2.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2a_bn_s mapped name: layer2.2.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2a_bn_b mapped name: layer1.2.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2a_bn_s mapped name: layer1.2.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2a_w    mapped name: layer2.2.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2a_w    mapped name: layer1.2.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2b_b    mapped name: layer2.2.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2b_b    mapped name: layer1.2.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2b_bn_b mapped name: layer2.2.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2b_bn_b mapped name: layer1.2.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2b_bn_s mapped name: layer2.2.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2b_bn_s mapped name: layer1.2.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2b_w    mapped name: layer2.2.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2b_w    mapped name: layer1.2.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2c_b    mapped name: layer2.2.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2c_b    mapped name: layer1.2.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2c_bn_b mapped name: layer2.2.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2c_bn_b mapped name: layer1.2.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2c_bn_s mapped name: layer2.2.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2c_bn_s mapped name: layer1.2.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2c_w    mapped name: layer2.2.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2c_w    mapped name: layer1.2.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2a_b    mapped name: layer2.3.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch1_b     mapped name: layer2.0.downsample.0.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2a_bn_b mapped name: layer2.3.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch1_bn_b  mapped name: layer2.0.downsample.1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2a_bn_s mapped name: layer2.3.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch1_bn_s  mapped name: layer2.0.downsample.1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2a_w    mapped name: layer2.3.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch1_w     mapped name: layer2.0.downsample.0.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2a_b    mapped name: layer2.0.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2b_b    mapped name: layer2.3.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2a_bn_b mapped name: layer2.0.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2b_bn_b mapped name: layer2.3.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2a_bn_s mapped name: layer2.0.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2b_bn_s mapped name: layer2.3.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2a_w    mapped name: layer2.0.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2b_w    mapped name: layer2.3.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2b_b    mapped name: layer2.0.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2c_b    mapped name: layer2.3.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2b_bn_b mapped name: layer2.0.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2c_bn_b mapped name: layer2.3.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2b_bn_s mapped name: layer2.0.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2b_w    mapped name: layer2.0.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2c_bn_s mapped name: layer2.3.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2c_b    mapped name: layer2.0.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2c_w    mapped name: layer2.3.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2c_bn_b mapped name: layer2.0.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch1_b     mapped name: layer3.0.downsample.0.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2c_bn_s mapped name: layer2.0.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch1_bn_b  mapped name: layer3.0.downsample.1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2c_w    mapped name: layer2.0.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch1_bn_s  mapped name: layer3.0.downsample.1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2a_b    mapped name: layer2.1.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch1_w     mapped name: layer3.0.downsample.0.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2a_bn_b mapped name: layer2.1.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2a_b    mapped name: layer3.0.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2a_bn_s mapped name: layer2.1.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2a_bn_b mapped name: layer3.0.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2a_w    mapped name: layer2.1.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2a_bn_s mapped name: layer3.0.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2b_b    mapped name: layer2.1.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2a_w    mapped name: layer3.0.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2b_bn_b mapped name: layer2.1.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2b_b    mapped name: layer3.0.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2b_bn_s mapped name: layer2.1.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2b_bn_b mapped name: layer3.0.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2b_w    mapped name: layer2.1.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2b_bn_s mapped name: layer3.0.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2c_b    mapped name: layer2.1.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2c_bn_b mapped name: layer2.1.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2b_w    mapped name: layer3.0.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2c_bn_s mapped name: layer2.1.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2c_b    mapped name: layer3.0.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2c_w    mapped name: layer2.1.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2c_bn_b mapped name: layer3.0.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2a_b    mapped name: layer2.2.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2c_bn_s mapped name: layer3.0.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2a_bn_b mapped name: layer2.2.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2c_w    mapped name: layer3.0.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2a_bn_s mapped name: layer2.2.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2a_b    mapped name: layer3.1.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2a_w    mapped name: layer2.2.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2a_bn_b mapped name: layer3.1.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2b_b    mapped name: layer2.2.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2a_bn_s mapped name: layer3.1.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2b_bn_b mapped name: layer2.2.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2a_w    mapped name: layer3.1.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2b_bn_s mapped name: layer2.2.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2b_b    mapped name: layer3.1.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2b_w    mapped name: layer2.2.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2b_bn_b mapped name: layer3.1.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2c_b    mapped name: layer2.2.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2b_bn_s mapped name: layer3.1.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2c_bn_b mapped name: layer2.2.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2b_w    mapped name: layer3.1.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2c_bn_s mapped name: layer2.2.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2c_b    mapped name: layer3.1.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2c_w    mapped name: layer2.2.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2a_b    mapped name: layer2.3.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2c_bn_b mapped name: layer3.1.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2a_bn_b mapped name: layer2.3.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2c_bn_s mapped name: layer3.1.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2a_bn_s mapped name: layer2.3.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2c_w    mapped name: layer3.1.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2a_w    mapped name: layer2.3.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2a_b    mapped name: layer3.2.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2b_b    mapped name: layer2.3.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2a_bn_b mapped name: layer3.2.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2b_bn_b mapped name: layer2.3.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2a_bn_s mapped name: layer3.2.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2b_bn_s mapped name: layer2.3.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2a_w    mapped name: layer3.2.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2b_w    mapped name: layer2.3.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2b_b    mapped name: layer3.2.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2c_b    mapped name: layer2.3.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2b_bn_b mapped name: layer3.2.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2c_bn_b mapped name: layer2.3.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2b_bn_s mapped name: layer3.2.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2c_bn_s mapped name: layer2.3.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2b_w    mapped name: layer3.2.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2c_w    mapped name: layer2.3.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2c_b    mapped name: layer3.2.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch1_b     mapped name: layer3.0.downsample.0.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2c_bn_b mapped name: layer3.2.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch1_bn_b  mapped name: layer3.0.downsample.1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2c_bn_s mapped name: layer3.2.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch1_bn_s  mapped name: layer3.0.downsample.1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2c_w    mapped name: layer3.2.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch1_w     mapped name: layer3.0.downsample.0.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2a_b    mapped name: layer3.3.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2a_b    mapped name: layer3.0.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2a_bn_b mapped name: layer3.3.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2a_bn_b mapped name: layer3.0.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2a_bn_s mapped name: layer3.3.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2a_bn_s mapped name: layer3.0.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2a_w    mapped name: layer3.0.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2a_w    mapped name: layer3.3.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2b_b    mapped name: layer3.0.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2b_b    mapped name: layer3.3.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2b_bn_b mapped name: layer3.0.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2b_bn_b mapped name: layer3.3.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2b_bn_s mapped name: layer3.0.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2b_bn_s mapped name: layer3.3.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2b_w    mapped name: layer3.0.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2b_w    mapped name: layer3.3.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2c_b    mapped name: layer3.0.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2c_b    mapped name: layer3.3.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2c_bn_b mapped name: layer3.0.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2c_bn_b mapped name: layer3.3.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2c_bn_s mapped name: layer3.0.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2c_bn_s mapped name: layer3.3.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2c_w    mapped name: layer3.0.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2c_w    mapped name: layer3.3.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2a_b    mapped name: layer3.1.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2a_b    mapped name: layer3.4.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2a_bn_b mapped name: layer3.1.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2a_bn_b mapped name: layer3.4.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2a_bn_s mapped name: layer3.1.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2a_bn_s mapped name: layer3.4.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2a_w    mapped name: layer3.1.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2a_w    mapped name: layer3.4.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2b_b    mapped name: layer3.1.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2b_b    mapped name: layer3.4.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2b_bn_b mapped name: layer3.1.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2b_bn_s mapped name: layer3.1.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2b_bn_b mapped name: layer3.4.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2b_w    mapped name: layer3.1.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2b_bn_s mapped name: layer3.4.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2c_b    mapped name: layer3.1.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2b_w    mapped name: layer3.4.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2c_bn_b mapped name: layer3.1.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2c_b    mapped name: layer3.4.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2c_bn_s mapped name: layer3.1.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2c_bn_b mapped name: layer3.4.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2c_w    mapped name: layer3.1.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2c_bn_s mapped name: layer3.4.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2a_b    mapped name: layer3.2.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2c_w    mapped name: layer3.4.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2a_bn_b mapped name: layer3.2.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2a_b    mapped name: layer3.5.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2a_bn_s mapped name: layer3.2.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2a_bn_b mapped name: layer3.5.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2a_w    mapped name: layer3.2.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2a_bn_s mapped name: layer3.5.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2b_b    mapped name: layer3.2.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2a_w    mapped name: layer3.5.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2b_bn_b mapped name: layer3.2.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2b_bn_s mapped name: layer3.2.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2b_b    mapped name: layer3.5.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2b_w    mapped name: layer3.2.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2b_bn_b mapped name: layer3.5.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2c_b    mapped name: layer3.2.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2b_bn_s mapped name: layer3.5.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2c_bn_b mapped name: layer3.2.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2b_w    mapped name: layer3.5.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2c_bn_s mapped name: layer3.2.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2c_b    mapped name: layer3.5.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2c_w    mapped name: layer3.2.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2c_bn_b mapped name: layer3.5.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2a_b    mapped name: layer3.3.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2c_bn_s mapped name: layer3.5.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2a_bn_b mapped name: layer3.3.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2a_bn_s mapped name: layer3.3.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2c_w    mapped name: layer3.5.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2a_w    mapped name: layer3.3.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch1_b     mapped name: layer4.0.downsample.0.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2b_b    mapped name: layer3.3.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch1_bn_b  mapped name: layer4.0.downsample.1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2b_bn_b mapped name: layer3.3.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch1_bn_s  mapped name: layer4.0.downsample.1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2b_bn_s mapped name: layer3.3.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch1_w     mapped name: layer4.0.downsample.0.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2b_w    mapped name: layer3.3.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2a_b    mapped name: layer4.0.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2c_b    mapped name: layer3.3.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2a_bn_b mapped name: layer4.0.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2c_bn_b mapped name: layer3.3.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2a_bn_s mapped name: layer4.0.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2c_bn_s mapped name: layer3.3.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2a_w    mapped name: layer4.0.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2c_w    mapped name: layer3.3.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2b_b    mapped name: layer4.0.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2a_b    mapped name: layer3.4.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:Remapping C2 weights
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2b_bn_b mapped name: layer4.0.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2a_bn_b mapped name: layer3.4.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2b_bn_s mapped name: layer4.0.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2a_bn_s mapped name: layer3.4.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2a_w    mapped name: layer3.4.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2b_w    mapped name: layer4.0.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2b_b    mapped name: layer3.4.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2c_b    mapped name: layer4.0.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: conv1_b              mapped name: conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2b_bn_b mapped name: layer3.4.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2c_bn_b mapped name: layer4.0.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2b_bn_s mapped name: layer3.4.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: conv1_w              mapped name: conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2c_bn_s mapped name: layer4.0.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2b_w    mapped name: layer3.4.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: fc1000_b             mapped name: fc1000.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2c_w    mapped name: layer4.0.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2c_b    mapped name: layer3.4.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: fc1000_w             mapped name: fc1000.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2a_b    mapped name: layer4.1.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2c_bn_b mapped name: layer3.4.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch1_b     mapped name: layer1.0.downsample.0.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2a_bn_b mapped name: layer4.1.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2c_bn_s mapped name: layer3.4.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch1_bn_b  mapped name: layer1.0.downsample.1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2c_w    mapped name: layer3.4.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2a_bn_s mapped name: layer4.1.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch1_bn_s  mapped name: layer1.0.downsample.1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2a_b    mapped name: layer3.5.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2a_w    mapped name: layer4.1.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch1_w     mapped name: layer1.0.downsample.0.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2a_bn_b mapped name: layer3.5.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2b_b    mapped name: layer4.1.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2a_b    mapped name: layer1.0.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2a_bn_s mapped name: layer3.5.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2b_bn_b mapped name: layer4.1.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2a_w    mapped name: layer3.5.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2a_bn_b mapped name: layer1.0.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2b_bn_s mapped name: layer4.1.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2b_b    mapped name: layer3.5.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2a_bn_s mapped name: layer1.0.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2b_w    mapped name: layer4.1.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2b_bn_b mapped name: layer3.5.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2a_w    mapped name: layer1.0.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2c_b    mapped name: layer4.1.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2b_bn_s mapped name: layer3.5.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2b_b    mapped name: layer1.0.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2c_bn_b mapped name: layer4.1.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2b_w    mapped name: layer3.5.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2b_bn_b mapped name: layer1.0.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2c_bn_s mapped name: layer4.1.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2c_b    mapped name: layer3.5.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2b_bn_s mapped name: layer1.0.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2c_w    mapped name: layer4.1.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2c_bn_b mapped name: layer3.5.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2b_w    mapped name: layer1.0.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2a_b    mapped name: layer4.2.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2c_bn_s mapped name: layer3.5.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2c_b    mapped name: layer1.0.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2a_bn_b mapped name: layer4.2.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2c_w    mapped name: layer3.5.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2c_bn_b mapped name: layer1.0.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2a_bn_s mapped name: layer4.2.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch1_b     mapped name: layer4.0.downsample.0.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2c_bn_s mapped name: layer1.0.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch1_bn_b  mapped name: layer4.0.downsample.1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2a_w    mapped name: layer4.2.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_0_branch2c_w    mapped name: layer1.0.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch1_bn_s  mapped name: layer4.0.downsample.1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2b_b    mapped name: layer4.2.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2a_b    mapped name: layer1.1.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch1_w     mapped name: layer4.0.downsample.0.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2b_bn_b mapped name: layer4.2.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2a_bn_b mapped name: layer1.1.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2a_b    mapped name: layer4.0.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2b_bn_s mapped name: layer4.2.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2a_bn_s mapped name: layer1.1.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2a_bn_b mapped name: layer4.0.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2b_w    mapped name: layer4.2.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2a_w    mapped name: layer1.1.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2a_bn_s mapped name: layer4.0.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2c_b    mapped name: layer4.2.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2b_b    mapped name: layer1.1.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2a_w    mapped name: layer4.0.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2c_bn_b mapped name: layer4.2.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2b_bn_b mapped name: layer1.1.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2b_b    mapped name: layer4.0.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2c_bn_s mapped name: layer4.2.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2b_bn_s mapped name: layer1.1.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2b_bn_b mapped name: layer4.0.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2c_w    mapped name: layer4.2.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2b_w    mapped name: layer1.1.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2b_bn_s mapped name: layer4.0.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res_conv1_bn_b       mapped name: bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2c_b    mapped name: layer1.1.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2b_w    mapped name: layer4.0.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res_conv1_bn_s       mapped name: bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2c_bn_b mapped name: layer1.1.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2c_b    mapped name: layer4.0.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2c_bn_s mapped name: layer1.1.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2c_bn_b mapped name: layer4.0.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_1_branch2c_w    mapped name: layer1.1.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2c_bn_s mapped name: layer4.0.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2a_b    mapped name: layer1.2.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2c_w    mapped name: layer4.0.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2a_bn_b mapped name: layer1.2.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2a_b    mapped name: layer4.1.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2a_bn_s mapped name: layer1.2.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2a_bn_b mapped name: layer4.1.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2a_bn_s mapped name: layer4.1.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2a_w    mapped name: layer1.2.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2a_w    mapped name: layer4.1.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2b_b    mapped name: layer1.2.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2b_b    mapped name: layer4.1.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2b_bn_b mapped name: layer1.2.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2b_bn_b mapped name: layer4.1.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2b_bn_s mapped name: layer1.2.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2b_bn_s mapped name: layer4.1.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2b_w    mapped name: layer1.2.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2b_w    mapped name: layer4.1.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2c_b    mapped name: layer1.2.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2c_b    mapped name: layer4.1.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2c_bn_b mapped name: layer1.2.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2c_bn_b mapped name: layer4.1.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2c_bn_s mapped name: layer1.2.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2c_bn_s mapped name: layer4.1.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res2_2_branch2c_w    mapped name: layer1.2.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2c_w    mapped name: layer4.1.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch1_b     mapped name: layer2.0.downsample.0.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2a_b    mapped name: layer4.2.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch1_bn_b  mapped name: layer2.0.downsample.1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2a_bn_b mapped name: layer4.2.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch1_bn_s  mapped name: layer2.0.downsample.1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2a_bn_s mapped name: layer4.2.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch1_w     mapped name: layer2.0.downsample.0.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2a_w    mapped name: layer4.2.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2a_b    mapped name: layer2.0.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2b_b    mapped name: layer4.2.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2a_bn_b mapped name: layer2.0.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2b_bn_b mapped name: layer4.2.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2a_bn_s mapped name: layer2.0.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2b_bn_s mapped name: layer4.2.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2a_w    mapped name: layer2.0.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2b_w    mapped name: layer4.2.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2c_b    mapped name: layer4.2.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2b_b    mapped name: layer2.0.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2c_bn_b mapped name: layer4.2.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2b_bn_b mapped name: layer2.0.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2c_bn_s mapped name: layer4.2.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2b_bn_s mapped name: layer2.0.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2c_w    mapped name: layer4.2.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2b_w    mapped name: layer2.0.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res_conv1_bn_b       mapped name: bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2c_b    mapped name: layer2.0.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res_conv1_bn_s       mapped name: bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2c_bn_b mapped name: layer2.0.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2c_bn_s mapped name: layer2.0.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_0_branch2c_w    mapped name: layer2.0.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2a_b    mapped name: layer2.1.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2a_bn_b mapped name: layer2.1.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2a_bn_s mapped name: layer2.1.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2a_w    mapped name: layer2.1.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2b_b    mapped name: layer2.1.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2b_bn_b mapped name: layer2.1.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2b_bn_s mapped name: layer2.1.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2b_w    mapped name: layer2.1.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2c_b    mapped name: layer2.1.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2c_bn_b mapped name: layer2.1.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2c_bn_s mapped name: layer2.1.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_1_branch2c_w    mapped name: layer2.1.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2a_b    mapped name: layer2.2.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2a_bn_b mapped name: layer2.2.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2a_bn_s mapped name: layer2.2.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2a_w    mapped name: layer2.2.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2b_b    mapped name: layer2.2.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2b_bn_b mapped name: layer2.2.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2b_bn_s mapped name: layer2.2.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2b_w    mapped name: layer2.2.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2c_b    mapped name: layer2.2.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2c_bn_b mapped name: layer2.2.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2c_bn_s mapped name: layer2.2.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_2_branch2c_w    mapped name: layer2.2.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2a_b    mapped name: layer2.3.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2a_bn_b mapped name: layer2.3.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2a_bn_s mapped name: layer2.3.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2a_w    mapped name: layer2.3.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2b_b    mapped name: layer2.3.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2b_bn_b mapped name: layer2.3.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2b_bn_s mapped name: layer2.3.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2b_w    mapped name: layer2.3.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2c_b    mapped name: layer2.3.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2c_bn_b mapped name: layer2.3.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2c_bn_s mapped name: layer2.3.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res3_3_branch2c_w    mapped name: layer2.3.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch1_b     mapped name: layer3.0.downsample.0.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch1_bn_b  mapped name: layer3.0.downsample.1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch1_bn_s  mapped name: layer3.0.downsample.1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch1_w     mapped name: layer3.0.downsample.0.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2a_b    mapped name: layer3.0.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2a_bn_b mapped name: layer3.0.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2a_bn_s mapped name: layer3.0.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2a_w    mapped name: layer3.0.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2b_b    mapped name: layer3.0.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2b_bn_b mapped name: layer3.0.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2b_bn_s mapped name: layer3.0.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2b_w    mapped name: layer3.0.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2c_b    mapped name: layer3.0.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2c_bn_b mapped name: layer3.0.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2c_bn_s mapped name: layer3.0.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_0_branch2c_w    mapped name: layer3.0.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2a_b    mapped name: layer3.1.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2a_bn_b mapped name: layer3.1.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2a_bn_s mapped name: layer3.1.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2a_w    mapped name: layer3.1.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2b_b    mapped name: layer3.1.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2b_bn_b mapped name: layer3.1.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2b_bn_s mapped name: layer3.1.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2b_w    mapped name: layer3.1.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2c_b    mapped name: layer3.1.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2c_bn_b mapped name: layer3.1.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2c_bn_s mapped name: layer3.1.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_1_branch2c_w    mapped name: layer3.1.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2a_b    mapped name: layer3.2.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2a_bn_b mapped name: layer3.2.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2a_bn_s mapped name: layer3.2.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2a_w    mapped name: layer3.2.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2b_b    mapped name: layer3.2.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2b_bn_b mapped name: layer3.2.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2b_bn_s mapped name: layer3.2.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2b_w    mapped name: layer3.2.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2c_b    mapped name: layer3.2.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2c_bn_b mapped name: layer3.2.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2c_bn_s mapped name: layer3.2.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_2_branch2c_w    mapped name: layer3.2.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2a_b    mapped name: layer3.3.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2a_bn_b mapped name: layer3.3.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2a_bn_s mapped name: layer3.3.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2a_w    mapped name: layer3.3.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2b_b    mapped name: layer3.3.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2b_bn_b mapped name: layer3.3.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2b_bn_s mapped name: layer3.3.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2b_w    mapped name: layer3.3.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2c_b    mapped name: layer3.3.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2c_bn_b mapped name: layer3.3.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2c_bn_s mapped name: layer3.3.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_3_branch2c_w    mapped name: layer3.3.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2a_b    mapped name: layer3.4.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2a_bn_b mapped name: layer3.4.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2a_bn_s mapped name: layer3.4.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2a_w    mapped name: layer3.4.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2b_b    mapped name: layer3.4.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2b_bn_b mapped name: layer3.4.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2b_bn_s mapped name: layer3.4.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2b_w    mapped name: layer3.4.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2c_b    mapped name: layer3.4.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2c_bn_b mapped name: layer3.4.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2c_bn_s mapped name: layer3.4.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_4_branch2c_w    mapped name: layer3.4.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2a_b    mapped name: layer3.5.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2a_bn_b mapped name: layer3.5.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2a_bn_s mapped name: layer3.5.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2a_w    mapped name: layer3.5.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2b_b    mapped name: layer3.5.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2b_bn_b mapped name: layer3.5.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2b_bn_s mapped name: layer3.5.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2b_w    mapped name: layer3.5.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2c_b    mapped name: layer3.5.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2c_bn_b mapped name: layer3.5.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2c_bn_s mapped name: layer3.5.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res4_5_branch2c_w    mapped name: layer3.5.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch1_b     mapped name: layer4.0.downsample.0.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch1_bn_b  mapped name: layer4.0.downsample.1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch1_bn_s  mapped name: layer4.0.downsample.1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch1_w     mapped name: layer4.0.downsample.0.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2a_b    mapped name: layer4.0.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2a_bn_b mapped name: layer4.0.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2a_bn_s mapped name: layer4.0.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2a_w    mapped name: layer4.0.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2b_b    mapped name: layer4.0.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2b_bn_b mapped name: layer4.0.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2b_bn_s mapped name: layer4.0.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2b_w    mapped name: layer4.0.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2c_b    mapped name: layer4.0.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2c_bn_b mapped name: layer4.0.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2c_bn_s mapped name: layer4.0.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_0_branch2c_w    mapped name: layer4.0.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2a_b    mapped name: layer4.1.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2a_bn_b mapped name: layer4.1.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2a_bn_s mapped name: layer4.1.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2a_w    mapped name: layer4.1.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2b_b    mapped name: layer4.1.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2b_bn_b mapped name: layer4.1.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2b_bn_s mapped name: layer4.1.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2b_w    mapped name: layer4.1.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2c_b    mapped name: layer4.1.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2c_bn_b mapped name: layer4.1.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2c_bn_s mapped name: layer4.1.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_1_branch2c_w    mapped name: layer4.1.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2a_b    mapped name: layer4.2.conv1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2a_bn_b mapped name: layer4.2.bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2a_bn_s mapped name: layer4.2.bn1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2a_w    mapped name: layer4.2.conv1.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2b_b    mapped name: layer4.2.conv2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2b_bn_b mapped name: layer4.2.bn2.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2b_bn_s mapped name: layer4.2.bn2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2b_w    mapped name: layer4.2.conv2.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2c_b    mapped name: layer4.2.conv3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2c_bn_b mapped name: layer4.2.bn3.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2c_bn_s mapped name: layer4.2.bn3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res5_2_branch2c_w    mapped name: layer4.2.conv3.weight
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res_conv1_bn_b       mapped name: bn1.bias
INFO:maskrcnn_benchmark.utils.c2_model_loading:C2 name: res_conv1_bn_s       mapped name: bn1.weight
2021-10-16 11:38:13,361 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer1.0.bn1.bias                  loaded from layer1.0.bn1.bias            of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.bn1.bias                  loaded from layer1.0.bn1.bias            of shape (64,)
2021-10-16 11:38:13,361 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer1.0.bn1.weight                loaded from layer1.0.bn1.weight          of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.bn1.weight                loaded from layer1.0.bn1.weight          of shape (64,)
2021-10-16 11:38:13,361 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer1.0.bn2.bias                  loaded from layer1.0.bn2.bias            of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.bn2.bias                  loaded from layer1.0.bn2.bias            of shape (64,)
2021-10-16 11:38:13,361 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer1.0.bn2.weight                loaded from layer1.0.bn2.weight          of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.bn2.weight                loaded from layer1.0.bn2.weight          of shape (64,)
2021-10-16 11:38:13,361 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer1.0.bn3.bias                  loaded from layer1.0.bn3.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.bn3.bias                  loaded from layer1.0.bn3.bias            of shape (256,)
2021-10-16 11:38:13,361 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer1.0.bn3.weight                loaded from layer1.0.bn3.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.bn3.weight                loaded from layer1.0.bn3.weight          of shape (256,)
2021-10-16 11:38:13,361 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer1.0.conv1.weight              loaded from layer1.0.conv1.weight        of shape (64, 64, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.conv1.weight              loaded from layer1.0.conv1.weight        of shape (64, 64, 1, 1)
2021-10-16 11:38:13,361 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer1.0.conv2.weight              loaded from layer1.0.conv2.weight        of shape (64, 64, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.conv2.weight              loaded from layer1.0.conv2.weight        of shape (64, 64, 3, 3)
2021-10-16 11:38:13,361 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer1.0.conv3.weight              loaded from layer1.0.conv3.weight        of shape (256, 64, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.conv3.weight              loaded from layer1.0.conv3.weight        of shape (256, 64, 1, 1)
2021-10-16 11:38:13,361 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer1.0.downsample.0.weight       loaded from layer1.0.downsample.0.weight of shape (256, 64, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.downsample.0.weight       loaded from layer1.0.downsample.0.weight of shape (256, 64, 1, 1)
2021-10-16 11:38:13,361 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer1.0.downsample.1.bias         loaded from layer1.0.downsample.1.bias   of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.downsample.1.bias         loaded from layer1.0.downsample.1.bias   of shape (256,)
2021-10-16 11:38:13,361 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer1.0.downsample.1.weight       loaded from layer1.0.downsample.1.weight of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.downsample.1.weight       loaded from layer1.0.downsample.1.weight of shape (256,)
2021-10-16 11:38:13,361 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer1.1.bn1.bias                  loaded from layer1.1.bn1.bias            of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.bn1.bias                  loaded from layer1.1.bn1.bias            of shape (64,)
2021-10-16 11:38:13,361 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer1.1.bn1.weight                loaded from layer1.1.bn1.weight          of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.bn1.weight                loaded from layer1.1.bn1.weight          of shape (64,)
2021-10-16 11:38:13,362 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer1.1.bn2.bias                  loaded from layer1.1.bn2.bias            of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.bn2.bias                  loaded from layer1.1.bn2.bias            of shape (64,)
2021-10-16 11:38:13,362 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer1.1.bn2.weight                loaded from layer1.1.bn2.weight          of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.bn2.weight                loaded from layer1.1.bn2.weight          of shape (64,)
2021-10-16 11:38:13,362 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer1.1.bn3.bias                  loaded from layer1.1.bn3.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.bn3.bias                  loaded from layer1.1.bn3.bias            of shape (256,)
2021-10-16 11:38:13,362 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer1.1.bn3.weight                loaded from layer1.1.bn3.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.bn3.weight                loaded from layer1.1.bn3.weight          of shape (256,)
2021-10-16 11:38:13,362 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer1.1.conv1.weight              loaded from layer1.1.conv1.weight        of shape (64, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.conv1.weight              loaded from layer1.1.conv1.weight        of shape (64, 256, 1, 1)
2021-10-16 11:38:13,362 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer1.1.conv2.weight              loaded from layer1.1.conv2.weight        of shape (64, 64, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.conv2.weight              loaded from layer1.1.conv2.weight        of shape (64, 64, 3, 3)
2021-10-16 11:38:13,362 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer1.1.conv3.weight              loaded from layer1.1.conv3.weight        of shape (256, 64, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.conv3.weight              loaded from layer1.1.conv3.weight        of shape (256, 64, 1, 1)
2021-10-16 11:38:13,362 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer1.2.bn1.bias                  loaded from layer1.2.bn1.bias            of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.bn1.bias                  loaded from layer1.2.bn1.bias            of shape (64,)
2021-10-16 11:38:13,362 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer1.2.bn1.weight                loaded from layer1.2.bn1.weight          of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.bn1.weight                loaded from layer1.2.bn1.weight          of shape (64,)
2021-10-16 11:38:13,362 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer1.2.bn2.bias                  loaded from layer1.2.bn2.bias            of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.bn2.bias                  loaded from layer1.2.bn2.bias            of shape (64,)
2021-10-16 11:38:13,362 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer1.2.bn2.weight                loaded from layer1.2.bn2.weight          of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.bn2.weight                loaded from layer1.2.bn2.weight          of shape (64,)
2021-10-16 11:38:13,362 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer1.2.bn3.bias                  loaded from layer1.2.bn3.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.bn3.bias                  loaded from layer1.2.bn3.bias            of shape (256,)
2021-10-16 11:38:13,362 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer1.2.bn3.weight                loaded from layer1.2.bn3.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.bn3.weight                loaded from layer1.2.bn3.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.bn1.bias                  loaded from layer1.0.bn1.bias            of shape (64,)
2021-10-16 11:38:13,362 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer1.2.conv1.weight              loaded from layer1.2.conv1.weight        of shape (64, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.conv1.weight              loaded from layer1.2.conv1.weight        of shape (64, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.bn1.weight                loaded from layer1.0.bn1.weight          of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.bn2.bias                  loaded from layer1.0.bn2.bias            of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.bn2.weight                loaded from layer1.0.bn2.weight          of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.bn3.bias                  loaded from layer1.0.bn3.bias            of shape (256,)
2021-10-16 11:38:13,362 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer1.2.conv2.weight              loaded from layer1.2.conv2.weight        of shape (64, 64, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.bn3.weight                loaded from layer1.0.bn3.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.conv2.weight              loaded from layer1.2.conv2.weight        of shape (64, 64, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.conv1.weight              loaded from layer1.0.conv1.weight        of shape (64, 64, 1, 1)
2021-10-16 11:38:13,362 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer1.2.conv3.weight              loaded from layer1.2.conv3.weight        of shape (256, 64, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.conv3.weight              loaded from layer1.2.conv3.weight        of shape (256, 64, 1, 1)
2021-10-16 11:38:13,362 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer2.0.bn1.bias                  loaded from layer2.0.bn1.bias            of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.bn1.bias                  loaded from layer2.0.bn1.bias            of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.conv2.weight              loaded from layer1.0.conv2.weight        of shape (64, 64, 3, 3)
2021-10-16 11:38:13,362 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer2.0.bn1.weight                loaded from layer2.0.bn1.weight          of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.conv3.weight              loaded from layer1.0.conv3.weight        of shape (256, 64, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.bn1.weight                loaded from layer2.0.bn1.weight          of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.downsample.0.weight       loaded from layer1.0.downsample.0.weight of shape (256, 64, 1, 1)
2021-10-16 11:38:13,363 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer2.0.bn2.bias                  loaded from layer2.0.bn2.bias            of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.downsample.1.bias         loaded from layer1.0.downsample.1.bias   of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.bn2.bias                  loaded from layer2.0.bn2.bias            of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.downsample.1.weight       loaded from layer1.0.downsample.1.weight of shape (256,)
2021-10-16 11:38:13,363 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer2.0.bn2.weight                loaded from layer2.0.bn2.weight          of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.bn1.bias                  loaded from layer1.1.bn1.bias            of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.bn2.weight                loaded from layer2.0.bn2.weight          of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.bn1.weight                loaded from layer1.1.bn1.weight          of shape (64,)
2021-10-16 11:38:13,363 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer2.0.bn3.bias                  loaded from layer2.0.bn3.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.bn2.bias                  loaded from layer1.1.bn2.bias            of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.bn3.bias                  loaded from layer2.0.bn3.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.bn2.weight                loaded from layer1.1.bn2.weight          of shape (64,)
2021-10-16 11:38:13,363 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer2.0.bn3.weight                loaded from layer2.0.bn3.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.bn3.bias                  loaded from layer1.1.bn3.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.bn3.weight                loaded from layer2.0.bn3.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.bn3.weight                loaded from layer1.1.bn3.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.conv1.weight              loaded from layer1.1.conv1.weight        of shape (64, 256, 1, 1)
2021-10-16 11:38:13,363 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer2.0.conv1.weight              loaded from layer2.0.conv1.weight        of shape (128, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.conv1.weight              loaded from layer2.0.conv1.weight        of shape (128, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.conv2.weight              loaded from layer1.1.conv2.weight        of shape (64, 64, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.conv3.weight              loaded from layer1.1.conv3.weight        of shape (256, 64, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.bn1.bias                  loaded from layer1.2.bn1.bias            of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.bn1.weight                loaded from layer1.2.bn1.weight          of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.bn2.bias                  loaded from layer1.2.bn2.bias            of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.bn2.weight                loaded from layer1.2.bn2.weight          of shape (64,)
2021-10-16 11:38:13,363 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer2.0.conv2.weight              loaded from layer2.0.conv2.weight        of shape (128, 128, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.bn3.bias                  loaded from layer1.2.bn3.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.conv2.weight              loaded from layer2.0.conv2.weight        of shape (128, 128, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.bn3.weight                loaded from layer1.2.bn3.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.conv1.weight              loaded from layer1.2.conv1.weight        of shape (64, 256, 1, 1)
2021-10-16 11:38:13,363 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer2.0.conv3.weight              loaded from layer2.0.conv3.weight        of shape (512, 128, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.conv3.weight              loaded from layer2.0.conv3.weight        of shape (512, 128, 1, 1)
2021-10-16 11:38:13,363 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer2.0.downsample.0.weight       loaded from layer2.0.downsample.0.weight of shape (512, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.conv2.weight              loaded from layer1.2.conv2.weight        of shape (64, 64, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.downsample.0.weight       loaded from layer2.0.downsample.0.weight of shape (512, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.conv3.weight              loaded from layer1.2.conv3.weight        of shape (256, 64, 1, 1)
2021-10-16 11:38:13,363 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer2.0.downsample.1.bias         loaded from layer2.0.downsample.1.bias   of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.bn1.bias                  loaded from layer2.0.bn1.bias            of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.downsample.1.bias         loaded from layer2.0.downsample.1.bias   of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.bn1.weight                loaded from layer2.0.bn1.weight          of shape (128,)
2021-10-16 11:38:13,363 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer2.0.downsample.1.weight       loaded from layer2.0.downsample.1.weight of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.bn2.bias                  loaded from layer2.0.bn2.bias            of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.downsample.1.weight       loaded from layer2.0.downsample.1.weight of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.bn2.weight                loaded from layer2.0.bn2.weight          of shape (128,)
2021-10-16 11:38:13,363 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer2.1.bn1.bias                  loaded from layer2.1.bn1.bias            of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.bn3.bias                  loaded from layer2.0.bn3.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.bn1.bias                  loaded from layer2.1.bn1.bias            of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.bn3.weight                loaded from layer2.0.bn3.weight          of shape (512,)
2021-10-16 11:38:13,363 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer2.1.bn1.weight                loaded from layer2.1.bn1.weight          of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.conv1.weight              loaded from layer2.0.conv1.weight        of shape (128, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.bn1.weight                loaded from layer2.1.bn1.weight          of shape (128,)
2021-10-16 11:38:13,363 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer2.1.bn2.bias                  loaded from layer2.1.bn2.bias            of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.bn2.bias                  loaded from layer2.1.bn2.bias            of shape (128,)
2021-10-16 11:38:13,363 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer2.1.bn2.weight                loaded from layer2.1.bn2.weight          of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.bn2.weight                loaded from layer2.1.bn2.weight          of shape (128,)
2021-10-16 11:38:13,363 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer2.1.bn3.bias                  loaded from layer2.1.bn3.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.bn3.bias                  loaded from layer2.1.bn3.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.conv2.weight              loaded from layer2.0.conv2.weight        of shape (128, 128, 3, 3)
2021-10-16 11:38:13,363 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer2.1.bn3.weight                loaded from layer2.1.bn3.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.bn3.weight                loaded from layer2.1.bn3.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.conv3.weight              loaded from layer2.0.conv3.weight        of shape (512, 128, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.downsample.0.weight       loaded from layer2.0.downsample.0.weight of shape (512, 256, 1, 1)
2021-10-16 11:38:13,364 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer2.1.conv1.weight              loaded from layer2.1.conv1.weight        of shape (128, 512, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.downsample.1.bias         loaded from layer2.0.downsample.1.bias   of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.conv1.weight              loaded from layer2.1.conv1.weight        of shape (128, 512, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.downsample.1.weight       loaded from layer2.0.downsample.1.weight of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.bn1.bias                  loaded from layer2.1.bn1.bias            of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.bn1.weight                loaded from layer2.1.bn1.weight          of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.bn2.bias                  loaded from layer2.1.bn2.bias            of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.bn2.weight                loaded from layer2.1.bn2.weight          of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.bn3.bias                  loaded from layer2.1.bn3.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.bn3.weight                loaded from layer2.1.bn3.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.conv1.weight              loaded from layer2.1.conv1.weight        of shape (128, 512, 1, 1)
2021-10-16 11:38:13,364 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer2.1.conv2.weight              loaded from layer2.1.conv2.weight        of shape (128, 128, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.conv2.weight              loaded from layer2.1.conv2.weight        of shape (128, 128, 3, 3)
2021-10-16 11:38:13,364 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer2.1.conv3.weight              loaded from layer2.1.conv3.weight        of shape (512, 128, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.conv3.weight              loaded from layer2.1.conv3.weight        of shape (512, 128, 1, 1)
2021-10-16 11:38:13,364 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer2.2.bn1.bias                  loaded from layer2.2.bn1.bias            of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.bn1.bias                  loaded from layer2.2.bn1.bias            of shape (128,)
2021-10-16 11:38:13,364 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer2.2.bn1.weight                loaded from layer2.2.bn1.weight          of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.conv2.weight              loaded from layer2.1.conv2.weight        of shape (128, 128, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.bn1.weight                loaded from layer2.2.bn1.weight          of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.conv3.weight              loaded from layer2.1.conv3.weight        of shape (512, 128, 1, 1)
2021-10-16 11:38:13,364 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer2.2.bn2.bias                  loaded from layer2.2.bn2.bias            of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.bn1.bias                  loaded from layer2.2.bn1.bias            of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.bn2.bias                  loaded from layer2.2.bn2.bias            of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.bn1.weight                loaded from layer2.2.bn1.weight          of shape (128,)
2021-10-16 11:38:13,364 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer2.2.bn2.weight                loaded from layer2.2.bn2.weight          of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.bn2.bias                  loaded from layer2.2.bn2.bias            of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.bn2.weight                loaded from layer2.2.bn2.weight          of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.bn2.weight                loaded from layer2.2.bn2.weight          of shape (128,)
2021-10-16 11:38:13,364 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer2.2.bn3.bias                  loaded from layer2.2.bn3.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.bn3.bias                  loaded from layer2.2.bn3.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.bn3.bias                  loaded from layer2.2.bn3.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.bn3.weight                loaded from layer2.2.bn3.weight          of shape (512,)
2021-10-16 11:38:13,364 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer2.2.bn3.weight                loaded from layer2.2.bn3.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.conv1.weight              loaded from layer2.2.conv1.weight        of shape (128, 512, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.bn3.weight                loaded from layer2.2.bn3.weight          of shape (512,)
2021-10-16 11:38:13,364 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer2.2.conv1.weight              loaded from layer2.2.conv1.weight        of shape (128, 512, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.conv1.weight              loaded from layer2.2.conv1.weight        of shape (128, 512, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.conv2.weight              loaded from layer2.2.conv2.weight        of shape (128, 128, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.conv3.weight              loaded from layer2.2.conv3.weight        of shape (512, 128, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.bn1.bias                  loaded from layer2.3.bn1.bias            of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.bn1.weight                loaded from layer2.3.bn1.weight          of shape (128,)
2021-10-16 11:38:13,364 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer2.2.conv2.weight              loaded from layer2.2.conv2.weight        of shape (128, 128, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.bn2.bias                  loaded from layer2.3.bn2.bias            of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.conv2.weight              loaded from layer2.2.conv2.weight        of shape (128, 128, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.bn2.weight                loaded from layer2.3.bn2.weight          of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.bn3.bias                  loaded from layer2.3.bn3.bias            of shape (512,)
2021-10-16 11:38:13,364 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer2.2.conv3.weight              loaded from layer2.2.conv3.weight        of shape (512, 128, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.bn3.weight                loaded from layer2.3.bn3.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.conv3.weight              loaded from layer2.2.conv3.weight        of shape (512, 128, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.conv1.weight              loaded from layer2.3.conv1.weight        of shape (128, 512, 1, 1)
2021-10-16 11:38:13,364 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer2.3.bn1.bias                  loaded from layer2.3.bn1.bias            of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.bn1.bias                  loaded from layer2.3.bn1.bias            of shape (128,)
2021-10-16 11:38:13,364 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer2.3.bn1.weight                loaded from layer2.3.bn1.weight          of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.bn1.weight                loaded from layer2.3.bn1.weight          of shape (128,)
2021-10-16 11:38:13,365 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer2.3.bn2.bias                  loaded from layer2.3.bn2.bias            of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.bn2.bias                  loaded from layer2.3.bn2.bias            of shape (128,)
2021-10-16 11:38:13,365 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer2.3.bn2.weight                loaded from layer2.3.bn2.weight          of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.bn2.weight                loaded from layer2.3.bn2.weight          of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.conv2.weight              loaded from layer2.3.conv2.weight        of shape (128, 128, 3, 3)
2021-10-16 11:38:13,365 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer2.3.bn3.bias                  loaded from layer2.3.bn3.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.conv3.weight              loaded from layer2.3.conv3.weight        of shape (512, 128, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.bn3.bias                  loaded from layer2.3.bn3.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.bn1.bias                  loaded from layer3.0.bn1.bias            of shape (256,)
2021-10-16 11:38:13,365 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer2.3.bn3.weight                loaded from layer2.3.bn3.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.bn1.weight                loaded from layer3.0.bn1.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.bn3.weight                loaded from layer2.3.bn3.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.bn2.bias                  loaded from layer3.0.bn2.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.bn2.weight                loaded from layer3.0.bn2.weight          of shape (256,)
2021-10-16 11:38:13,365 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer2.3.conv1.weight              loaded from layer2.3.conv1.weight        of shape (128, 512, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.bn3.bias                  loaded from layer3.0.bn3.bias            of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.conv1.weight              loaded from layer2.3.conv1.weight        of shape (128, 512, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.bn3.weight                loaded from layer3.0.bn3.weight          of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.conv1.weight              loaded from layer3.0.conv1.weight        of shape (256, 512, 1, 1)
2021-10-16 11:38:13,365 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer2.3.conv2.weight              loaded from layer2.3.conv2.weight        of shape (128, 128, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.conv2.weight              loaded from layer2.3.conv2.weight        of shape (128, 128, 3, 3)
2021-10-16 11:38:13,365 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer2.3.conv3.weight              loaded from layer2.3.conv3.weight        of shape (512, 128, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.conv3.weight              loaded from layer2.3.conv3.weight        of shape (512, 128, 1, 1)
2021-10-16 11:38:13,365 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer3.0.bn1.bias                  loaded from layer3.0.bn1.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.bn1.bias                  loaded from layer3.0.bn1.bias            of shape (256,)
2021-10-16 11:38:13,365 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer3.0.bn1.weight                loaded from layer3.0.bn1.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.bn1.weight                loaded from layer3.0.bn1.weight          of shape (256,)
2021-10-16 11:38:13,365 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer3.0.bn2.bias                  loaded from layer3.0.bn2.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.bn2.bias                  loaded from layer3.0.bn2.bias            of shape (256,)
2021-10-16 11:38:13,365 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer3.0.bn2.weight                loaded from layer3.0.bn2.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.bn2.weight                loaded from layer3.0.bn2.weight          of shape (256,)
2021-10-16 11:38:13,365 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer3.0.bn3.bias                  loaded from layer3.0.bn3.bias            of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.bn3.bias                  loaded from layer3.0.bn3.bias            of shape (1024,)
2021-10-16 11:38:13,365 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer3.0.bn3.weight                loaded from layer3.0.bn3.weight          of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.bn3.weight                loaded from layer3.0.bn3.weight          of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.conv2.weight              loaded from layer3.0.conv2.weight        of shape (256, 256, 3, 3)
2021-10-16 11:38:13,365 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer3.0.conv1.weight              loaded from layer3.0.conv1.weight        of shape (256, 512, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.conv1.weight              loaded from layer3.0.conv1.weight        of shape (256, 512, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.conv3.weight              loaded from layer3.0.conv3.weight        of shape (1024, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.downsample.0.weight       loaded from layer3.0.downsample.0.weight of shape (1024, 512, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.downsample.1.bias         loaded from layer3.0.downsample.1.bias   of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.downsample.1.weight       loaded from layer3.0.downsample.1.weight of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.bn1.bias                  loaded from layer3.1.bn1.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.bn1.weight                loaded from layer3.1.bn1.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.bn2.bias                  loaded from layer3.1.bn2.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.bn2.weight                loaded from layer3.1.bn2.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.bn3.bias                  loaded from layer3.1.bn3.bias            of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.bn3.weight                loaded from layer3.1.bn3.weight          of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.conv1.weight              loaded from layer3.1.conv1.weight        of shape (256, 1024, 1, 1)
2021-10-16 11:38:13,366 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer3.0.conv2.weight              loaded from layer3.0.conv2.weight        of shape (256, 256, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.conv2.weight              loaded from layer3.0.conv2.weight        of shape (256, 256, 3, 3)
2021-10-16 11:38:13,366 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer3.0.conv3.weight              loaded from layer3.0.conv3.weight        of shape (1024, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.conv3.weight              loaded from layer3.0.conv3.weight        of shape (1024, 256, 1, 1)
2021-10-16 11:38:13,366 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer3.0.downsample.0.weight       loaded from layer3.0.downsample.0.weight of shape (1024, 512, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.downsample.0.weight       loaded from layer3.0.downsample.0.weight of shape (1024, 512, 1, 1)
2021-10-16 11:38:13,366 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer3.0.downsample.1.bias         loaded from layer3.0.downsample.1.bias   of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.downsample.1.bias         loaded from layer3.0.downsample.1.bias   of shape (1024,)
2021-10-16 11:38:13,366 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer3.0.downsample.1.weight       loaded from layer3.0.downsample.1.weight of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.conv2.weight              loaded from layer3.1.conv2.weight        of shape (256, 256, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.downsample.1.weight       loaded from layer3.0.downsample.1.weight of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.bn1.bias                  loaded from layer1.0.bn1.bias            of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.conv3.weight              loaded from layer3.1.conv3.weight        of shape (1024, 256, 1, 1)
2021-10-16 11:38:13,366 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer3.1.bn1.bias                  loaded from layer3.1.bn1.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.bn1.bias                  loaded from layer3.2.bn1.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.bn1.bias                  loaded from layer3.1.bn1.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.bn1.weight                loaded from layer1.0.bn1.weight          of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.bn1.weight                loaded from layer3.2.bn1.weight          of shape (256,)
2021-10-16 11:38:13,366 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer3.1.bn1.weight                loaded from layer3.1.bn1.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.bn2.bias                  loaded from layer1.0.bn2.bias            of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.bn2.bias                  loaded from layer3.2.bn2.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.bn1.weight                loaded from layer3.1.bn1.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.bn2.weight                loaded from layer1.0.bn2.weight          of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.bn2.weight                loaded from layer3.2.bn2.weight          of shape (256,)
2021-10-16 11:38:13,366 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer3.1.bn2.bias                  loaded from layer3.1.bn2.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.bn3.bias                  loaded from layer1.0.bn3.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.bn3.bias                  loaded from layer3.2.bn3.bias            of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.bn2.bias                  loaded from layer3.1.bn2.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.bn3.weight                loaded from layer1.0.bn3.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.bn3.weight                loaded from layer3.2.bn3.weight          of shape (1024,)
2021-10-16 11:38:13,366 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer3.1.bn2.weight                loaded from layer3.1.bn2.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.conv1.weight              loaded from layer3.2.conv1.weight        of shape (256, 1024, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.conv1.weight              loaded from layer1.0.conv1.weight        of shape (64, 64, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.bn2.weight                loaded from layer3.1.bn2.weight          of shape (256,)
2021-10-16 11:38:13,366 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer3.1.bn3.bias                  loaded from layer3.1.bn3.bias            of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.bn3.bias                  loaded from layer3.1.bn3.bias            of shape (1024,)
2021-10-16 11:38:13,367 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer3.1.bn3.weight                loaded from layer3.1.bn3.weight          of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.conv2.weight              loaded from layer1.0.conv2.weight        of shape (64, 64, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.bn3.weight                loaded from layer3.1.bn3.weight          of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.conv3.weight              loaded from layer1.0.conv3.weight        of shape (256, 64, 1, 1)
2021-10-16 11:38:13,367 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer3.1.conv1.weight              loaded from layer3.1.conv1.weight        of shape (256, 1024, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.downsample.0.weight       loaded from layer1.0.downsample.0.weight of shape (256, 64, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.conv1.weight              loaded from layer3.1.conv1.weight        of shape (256, 1024, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.downsample.1.bias         loaded from layer1.0.downsample.1.bias   of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.downsample.1.weight       loaded from layer1.0.downsample.1.weight of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.bn1.bias                  loaded from layer1.1.bn1.bias            of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.bn1.weight                loaded from layer1.1.bn1.weight          of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.bn2.bias                  loaded from layer1.1.bn2.bias            of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.bn2.weight                loaded from layer1.1.bn2.weight          of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.bn3.bias                  loaded from layer1.1.bn3.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.bn3.weight                loaded from layer1.1.bn3.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.conv1.weight              loaded from layer1.1.conv1.weight        of shape (64, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.conv2.weight              loaded from layer1.1.conv2.weight        of shape (64, 64, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.conv3.weight              loaded from layer1.1.conv3.weight        of shape (256, 64, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.bn1.bias                  loaded from layer1.2.bn1.bias            of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.bn1.weight                loaded from layer1.2.bn1.weight          of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.bn2.bias                  loaded from layer1.2.bn2.bias            of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.bn2.weight                loaded from layer1.2.bn2.weight          of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.conv2.weight              loaded from layer3.2.conv2.weight        of shape (256, 256, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.bn3.bias                  loaded from layer1.2.bn3.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.conv3.weight              loaded from layer3.2.conv3.weight        of shape (1024, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.bn3.weight                loaded from layer1.2.bn3.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.bn1.bias                  loaded from layer3.3.bn1.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.conv1.weight              loaded from layer1.2.conv1.weight        of shape (64, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.bn1.weight                loaded from layer3.3.bn1.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.bn2.bias                  loaded from layer3.3.bn2.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.bn2.weight                loaded from layer3.3.bn2.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.bn3.bias                  loaded from layer3.3.bn3.bias            of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.conv2.weight              loaded from layer1.2.conv2.weight        of shape (64, 64, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.bn3.weight                loaded from layer3.3.bn3.weight          of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.conv3.weight              loaded from layer1.2.conv3.weight        of shape (256, 64, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.conv1.weight              loaded from layer3.3.conv1.weight        of shape (256, 1024, 1, 1)
2021-10-16 11:38:13,367 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer3.1.conv2.weight              loaded from layer3.1.conv2.weight        of shape (256, 256, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.bn1.bias                  loaded from layer2.0.bn1.bias            of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.bn1.bias                  loaded from layer1.0.bn1.bias            of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.conv2.weight              loaded from layer3.1.conv2.weight        of shape (256, 256, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.bn1.weight                loaded from layer2.0.bn1.weight          of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.bn1.weight                loaded from layer1.0.bn1.weight          of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.bn2.bias                  loaded from layer2.0.bn2.bias            of shape (128,)
2021-10-16 11:38:13,367 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer3.1.conv3.weight              loaded from layer3.1.conv3.weight        of shape (1024, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.bn2.bias                  loaded from layer1.0.bn2.bias            of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.bn2.weight                loaded from layer2.0.bn2.weight          of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.conv3.weight              loaded from layer3.1.conv3.weight        of shape (1024, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.bn2.weight                loaded from layer1.0.bn2.weight          of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.bn3.bias                  loaded from layer2.0.bn3.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.bn3.bias                  loaded from layer1.0.bn3.bias            of shape (256,)
2021-10-16 11:38:13,367 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer3.2.bn1.bias                  loaded from layer3.2.bn1.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.bn3.weight                loaded from layer2.0.bn3.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.bn3.weight                loaded from layer1.0.bn3.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.bn1.bias                  loaded from layer3.2.bn1.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.conv1.weight              loaded from layer2.0.conv1.weight        of shape (128, 256, 1, 1)
2021-10-16 11:38:13,367 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer3.2.bn1.weight                loaded from layer3.2.bn1.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.conv1.weight              loaded from layer1.0.conv1.weight        of shape (64, 64, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.bn1.weight                loaded from layer3.2.bn1.weight          of shape (256,)
2021-10-16 11:38:13,367 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer3.2.bn2.bias                  loaded from layer3.2.bn2.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.bn2.bias                  loaded from layer3.2.bn2.bias            of shape (256,)
2021-10-16 11:38:13,367 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer3.2.bn2.weight                loaded from layer3.2.bn2.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.conv2.weight              loaded from layer1.0.conv2.weight        of shape (64, 64, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.bn2.weight                loaded from layer3.2.bn2.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.conv3.weight              loaded from layer1.0.conv3.weight        of shape (256, 64, 1, 1)
2021-10-16 11:38:13,368 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer3.2.bn3.bias                  loaded from layer3.2.bn3.bias            of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.downsample.0.weight       loaded from layer1.0.downsample.0.weight of shape (256, 64, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.conv2.weight              loaded from layer2.0.conv2.weight        of shape (128, 128, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.bn3.bias                  loaded from layer3.2.bn3.bias            of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.downsample.1.bias         loaded from layer1.0.downsample.1.bias   of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.conv3.weight              loaded from layer2.0.conv3.weight        of shape (512, 128, 1, 1)
2021-10-16 11:38:13,368 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer3.2.bn3.weight                loaded from layer3.2.bn3.weight          of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.downsample.1.weight       loaded from layer1.0.downsample.1.weight of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.bn3.weight                loaded from layer3.2.bn3.weight          of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.downsample.0.weight       loaded from layer2.0.downsample.0.weight of shape (512, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.bn1.bias                  loaded from layer1.1.bn1.bias            of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.downsample.1.bias         loaded from layer2.0.downsample.1.bias   of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.bn1.weight                loaded from layer1.1.bn1.weight          of shape (64,)
2021-10-16 11:38:13,368 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer3.2.conv1.weight              loaded from layer3.2.conv1.weight        of shape (256, 1024, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.downsample.1.weight       loaded from layer2.0.downsample.1.weight of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.bn2.bias                  loaded from layer1.1.bn2.bias            of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.conv1.weight              loaded from layer3.2.conv1.weight        of shape (256, 1024, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.bn1.bias                  loaded from layer2.1.bn1.bias            of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.bn2.weight                loaded from layer1.1.bn2.weight          of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.bn1.weight                loaded from layer2.1.bn1.weight          of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.bn3.bias                  loaded from layer1.1.bn3.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.bn2.bias                  loaded from layer2.1.bn2.bias            of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.bn3.weight                loaded from layer1.1.bn3.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.bn2.weight                loaded from layer2.1.bn2.weight          of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.conv1.weight              loaded from layer1.1.conv1.weight        of shape (64, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.bn3.bias                  loaded from layer2.1.bn3.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.bn3.weight                loaded from layer2.1.bn3.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.conv1.weight              loaded from layer2.1.conv1.weight        of shape (128, 512, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.conv2.weight              loaded from layer3.3.conv2.weight        of shape (256, 256, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.conv2.weight              loaded from layer1.1.conv2.weight        of shape (64, 64, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.conv3.weight              loaded from layer3.3.conv3.weight        of shape (1024, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.conv3.weight              loaded from layer1.1.conv3.weight        of shape (256, 64, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.bn1.bias                  loaded from layer3.4.bn1.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.bn1.bias                  loaded from layer1.2.bn1.bias            of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.bn1.weight                loaded from layer3.4.bn1.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.bn1.weight                loaded from layer1.2.bn1.weight          of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.bn2.bias                  loaded from layer3.4.bn2.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.bn2.bias                  loaded from layer1.2.bn2.bias            of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.bn2.weight                loaded from layer3.4.bn2.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.bn2.weight                loaded from layer1.2.bn2.weight          of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.bn3.bias                  loaded from layer3.4.bn3.bias            of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.bn3.bias                  loaded from layer1.2.bn3.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.bn3.weight                loaded from layer3.4.bn3.weight          of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.bn3.weight                loaded from layer1.2.bn3.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.conv2.weight              loaded from layer2.1.conv2.weight        of shape (128, 128, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.conv1.weight              loaded from layer3.4.conv1.weight        of shape (256, 1024, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.conv1.weight              loaded from layer1.2.conv1.weight        of shape (64, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.conv3.weight              loaded from layer2.1.conv3.weight        of shape (512, 128, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.bn1.bias                  loaded from layer2.2.bn1.bias            of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.bn1.weight                loaded from layer2.2.bn1.weight          of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.bn2.bias                  loaded from layer2.2.bn2.bias            of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.conv2.weight              loaded from layer1.2.conv2.weight        of shape (64, 64, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.bn2.weight                loaded from layer2.2.bn2.weight          of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.conv3.weight              loaded from layer1.2.conv3.weight        of shape (256, 64, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.bn3.bias                  loaded from layer2.2.bn3.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.bn1.bias                  loaded from layer2.0.bn1.bias            of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.bn3.weight                loaded from layer2.2.bn3.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.bn1.weight                loaded from layer2.0.bn1.weight          of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.bn2.bias                  loaded from layer2.0.bn2.bias            of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.conv1.weight              loaded from layer2.2.conv1.weight        of shape (128, 512, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.bn2.weight                loaded from layer2.0.bn2.weight          of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.bn3.bias                  loaded from layer2.0.bn3.bias            of shape (512,)
2021-10-16 11:38:13,368 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer3.2.conv2.weight              loaded from layer3.2.conv2.weight        of shape (256, 256, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.bn3.weight                loaded from layer2.0.bn3.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.conv2.weight              loaded from layer3.2.conv2.weight        of shape (256, 256, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.conv1.weight              loaded from layer2.0.conv1.weight        of shape (128, 256, 1, 1)
2021-10-16 11:38:13,368 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer3.2.conv3.weight              loaded from layer3.2.conv3.weight        of shape (1024, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.conv3.weight              loaded from layer3.2.conv3.weight        of shape (1024, 256, 1, 1)
2021-10-16 11:38:13,368 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer3.3.bn1.bias                  loaded from layer3.3.bn1.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.conv2.weight              loaded from layer2.2.conv2.weight        of shape (128, 128, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.bn1.bias                  loaded from layer3.3.bn1.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.conv3.weight              loaded from layer2.2.conv3.weight        of shape (512, 128, 1, 1)
2021-10-16 11:38:13,369 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer3.3.bn1.weight                loaded from layer3.3.bn1.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.bn1.weight                loaded from layer3.3.bn1.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.bn1.bias                  loaded from layer2.3.bn1.bias            of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.conv2.weight              loaded from layer2.0.conv2.weight        of shape (128, 128, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.bn1.weight                loaded from layer2.3.bn1.weight          of shape (128,)
2021-10-16 11:38:13,369 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer3.3.bn2.bias                  loaded from layer3.3.bn2.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.bn2.bias                  loaded from layer2.3.bn2.bias            of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.conv3.weight              loaded from layer2.0.conv3.weight        of shape (512, 128, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.bn2.bias                  loaded from layer3.3.bn2.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.bn2.weight                loaded from layer2.3.bn2.weight          of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.downsample.0.weight       loaded from layer2.0.downsample.0.weight of shape (512, 256, 1, 1)
2021-10-16 11:38:13,369 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer3.3.bn2.weight                loaded from layer3.3.bn2.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.bn3.bias                  loaded from layer2.3.bn3.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.bn2.weight                loaded from layer3.3.bn2.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.downsample.1.bias         loaded from layer2.0.downsample.1.bias   of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.bn3.weight                loaded from layer2.3.bn3.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.downsample.1.weight       loaded from layer2.0.downsample.1.weight of shape (512,)
2021-10-16 11:38:13,369 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer3.3.bn3.bias                  loaded from layer3.3.bn3.bias            of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.conv2.weight              loaded from layer3.4.conv2.weight        of shape (256, 256, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.conv1.weight              loaded from layer2.3.conv1.weight        of shape (128, 512, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.bn3.bias                  loaded from layer3.3.bn3.bias            of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.bn1.bias                  loaded from layer2.1.bn1.bias            of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.conv3.weight              loaded from layer3.4.conv3.weight        of shape (1024, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.bn1.weight                loaded from layer2.1.bn1.weight          of shape (128,)
2021-10-16 11:38:13,369 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer3.3.bn3.weight                loaded from layer3.3.bn3.weight          of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.bn1.bias                  loaded from layer3.5.bn1.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.bn2.bias                  loaded from layer2.1.bn2.bias            of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.bn3.weight                loaded from layer3.3.bn3.weight          of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.bn1.weight                loaded from layer3.5.bn1.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.bn2.weight                loaded from layer2.1.bn2.weight          of shape (128,)
2021-10-16 11:38:13,369 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer3.3.conv1.weight              loaded from layer3.3.conv1.weight        of shape (256, 1024, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.bn2.bias                  loaded from layer3.5.bn2.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.bn3.bias                  loaded from layer2.1.bn3.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.conv1.weight              loaded from layer3.3.conv1.weight        of shape (256, 1024, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.bn3.weight                loaded from layer2.1.bn3.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.bn2.weight                loaded from layer3.5.bn2.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.bn3.bias                  loaded from layer3.5.bn3.bias            of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.conv1.weight              loaded from layer2.1.conv1.weight        of shape (128, 512, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.bn3.weight                loaded from layer3.5.bn3.weight          of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.conv1.weight              loaded from layer3.5.conv1.weight        of shape (256, 1024, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.conv2.weight              loaded from layer2.3.conv2.weight        of shape (128, 128, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.conv3.weight              loaded from layer2.3.conv3.weight        of shape (512, 128, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.bn1.bias                  loaded from layer3.0.bn1.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.bn1.weight                loaded from layer3.0.bn1.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.bn2.bias                  loaded from layer3.0.bn2.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.bn2.weight                loaded from layer3.0.bn2.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.conv2.weight              loaded from layer2.1.conv2.weight        of shape (128, 128, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.bn3.bias                  loaded from layer3.0.bn3.bias            of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.conv3.weight              loaded from layer2.1.conv3.weight        of shape (512, 128, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.bn3.weight                loaded from layer3.0.bn3.weight          of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.bn1.bias                  loaded from layer2.2.bn1.bias            of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.conv1.weight              loaded from layer3.0.conv1.weight        of shape (256, 512, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.bn1.weight                loaded from layer2.2.bn1.weight          of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.bn2.bias                  loaded from layer2.2.bn2.bias            of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.bn2.weight                loaded from layer2.2.bn2.weight          of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.bn3.bias                  loaded from layer2.2.bn3.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.bn3.weight                loaded from layer2.2.bn3.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.conv1.weight              loaded from layer2.2.conv1.weight        of shape (128, 512, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.conv2.weight              loaded from layer2.2.conv2.weight        of shape (128, 128, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.conv3.weight              loaded from layer2.2.conv3.weight        of shape (512, 128, 1, 1)
2021-10-16 11:38:13,369 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer3.3.conv2.weight              loaded from layer3.3.conv2.weight        of shape (256, 256, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.bn1.bias                  loaded from layer2.3.bn1.bias            of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.conv2.weight              loaded from layer3.3.conv2.weight        of shape (256, 256, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.bn1.weight                loaded from layer2.3.bn1.weight          of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.bn2.bias                  loaded from layer2.3.bn2.bias            of shape (128,)
2021-10-16 11:38:13,369 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer3.3.conv3.weight              loaded from layer3.3.conv3.weight        of shape (1024, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.conv2.weight              loaded from layer3.5.conv2.weight        of shape (256, 256, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.bn2.weight                loaded from layer2.3.bn2.weight          of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.conv3.weight              loaded from layer3.3.conv3.weight        of shape (1024, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.conv3.weight              loaded from layer3.5.conv3.weight        of shape (1024, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.bn3.bias                  loaded from layer2.3.bn3.bias            of shape (512,)
2021-10-16 11:38:13,370 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer3.4.bn1.bias                  loaded from layer3.4.bn1.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.bn1.bias                  loaded from layer4.0.bn1.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.bn3.weight                loaded from layer2.3.bn3.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.bn1.bias                  loaded from layer3.4.bn1.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.bn1.weight                loaded from layer4.0.bn1.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.conv1.weight              loaded from layer2.3.conv1.weight        of shape (128, 512, 1, 1)
2021-10-16 11:38:13,370 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer3.4.bn1.weight                loaded from layer3.4.bn1.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.bn2.bias                  loaded from layer4.0.bn2.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.bn1.weight                loaded from layer3.4.bn1.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.bn2.weight                loaded from layer4.0.bn2.weight          of shape (512,)
2021-10-16 11:38:13,370 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer3.4.bn2.bias                  loaded from layer3.4.bn2.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.bn3.bias                  loaded from layer4.0.bn3.bias            of shape (2048,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.bn2.bias                  loaded from layer3.4.bn2.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.bn3.weight                loaded from layer4.0.bn3.weight          of shape (2048,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.conv2.weight              loaded from layer3.0.conv2.weight        of shape (256, 256, 3, 3)
2021-10-16 11:38:13,370 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer3.4.bn2.weight                loaded from layer3.4.bn2.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.conv1.weight              loaded from layer4.0.conv1.weight        of shape (512, 1024, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.conv3.weight              loaded from layer3.0.conv3.weight        of shape (1024, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.bn2.weight                loaded from layer3.4.bn2.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.downsample.0.weight       loaded from layer3.0.downsample.0.weight of shape (1024, 512, 1, 1)
2021-10-16 11:38:13,370 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer3.4.bn3.bias                  loaded from layer3.4.bn3.bias            of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.bn3.bias                  loaded from layer3.4.bn3.bias            of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.downsample.1.bias         loaded from layer3.0.downsample.1.bias   of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.conv2.weight              loaded from layer2.3.conv2.weight        of shape (128, 128, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.downsample.1.weight       loaded from layer3.0.downsample.1.weight of shape (1024,)
2021-10-16 11:38:13,370 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer3.4.bn3.weight                loaded from layer3.4.bn3.weight          of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.conv3.weight              loaded from layer2.3.conv3.weight        of shape (512, 128, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.bn1.bias                  loaded from layer3.1.bn1.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.bn3.weight                loaded from layer3.4.bn3.weight          of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.bn1.bias                  loaded from layer3.0.bn1.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.bn1.weight                loaded from layer3.1.bn1.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.bn1.weight                loaded from layer3.0.bn1.weight          of shape (256,)
2021-10-16 11:38:13,370 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer3.4.conv1.weight              loaded from layer3.4.conv1.weight        of shape (256, 1024, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.bn2.bias                  loaded from layer3.1.bn2.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.bn2.bias                  loaded from layer3.0.bn2.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.conv1.weight              loaded from layer3.4.conv1.weight        of shape (256, 1024, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.bn2.weight                loaded from layer3.1.bn2.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.bn2.weight                loaded from layer3.0.bn2.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.bn3.bias                  loaded from layer3.1.bn3.bias            of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.bn3.bias                  loaded from layer3.0.bn3.bias            of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.bn3.weight                loaded from layer3.1.bn3.weight          of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.bn3.weight                loaded from layer3.0.bn3.weight          of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.conv1.weight              loaded from layer3.1.conv1.weight        of shape (256, 1024, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.conv1.weight              loaded from layer3.0.conv1.weight        of shape (256, 512, 1, 1)
2021-10-16 11:38:13,370 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer3.4.conv2.weight              loaded from layer3.4.conv2.weight        of shape (256, 256, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.conv2.weight              loaded from layer3.4.conv2.weight        of shape (256, 256, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.conv2.weight              loaded from layer3.0.conv2.weight        of shape (256, 256, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.conv2.weight              loaded from layer3.1.conv2.weight        of shape (256, 256, 3, 3)
2021-10-16 11:38:13,371 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer3.4.conv3.weight              loaded from layer3.4.conv3.weight        of shape (1024, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.conv3.weight              loaded from layer3.0.conv3.weight        of shape (1024, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.conv3.weight              loaded from layer3.1.conv3.weight        of shape (1024, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.conv3.weight              loaded from layer3.4.conv3.weight        of shape (1024, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.bn1.bias                  loaded from layer1.0.bn1.bias            of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.downsample.0.weight       loaded from layer3.0.downsample.0.weight of shape (1024, 512, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.bn1.bias                  loaded from layer3.2.bn1.bias            of shape (256,)
2021-10-16 11:38:13,371 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer3.5.bn1.bias                  loaded from layer3.5.bn1.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.bn1.weight                loaded from layer1.0.bn1.weight          of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.downsample.1.bias         loaded from layer3.0.downsample.1.bias   of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.bn1.weight                loaded from layer3.2.bn1.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.bn1.bias                  loaded from layer3.5.bn1.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.downsample.1.weight       loaded from layer3.0.downsample.1.weight of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.bn2.bias                  loaded from layer1.0.bn2.bias            of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.bn2.bias                  loaded from layer3.2.bn2.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.bn1.bias                  loaded from layer3.1.bn1.bias            of shape (256,)
2021-10-16 11:38:13,371 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer3.5.bn1.weight                loaded from layer3.5.bn1.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.bn2.weight                loaded from layer1.0.bn2.weight          of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.bn2.weight                loaded from layer3.2.bn2.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.bn1.weight                loaded from layer3.1.bn1.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.bn1.weight                loaded from layer3.5.bn1.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.bn3.bias                  loaded from layer1.0.bn3.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.bn3.bias                  loaded from layer3.2.bn3.bias            of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.bn2.bias                  loaded from layer3.1.bn2.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.bn3.weight                loaded from layer1.0.bn3.weight          of shape (256,)
2021-10-16 11:38:13,371 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer3.5.bn2.bias                  loaded from layer3.5.bn2.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.bn3.weight                loaded from layer3.2.bn3.weight          of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.bn2.weight                loaded from layer3.1.bn2.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.bn2.bias                  loaded from layer3.5.bn2.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.bn3.bias                  loaded from layer3.1.bn3.bias            of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.conv1.weight              loaded from layer3.2.conv1.weight        of shape (256, 1024, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.conv1.weight              loaded from layer1.0.conv1.weight        of shape (64, 64, 1, 1)
2021-10-16 11:38:13,371 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer3.5.bn2.weight                loaded from layer3.5.bn2.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.bn3.weight                loaded from layer3.1.bn3.weight          of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.bn2.weight                loaded from layer3.5.bn2.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.conv1.weight              loaded from layer3.1.conv1.weight        of shape (256, 1024, 1, 1)
2021-10-16 11:38:13,371 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer3.5.bn3.bias                  loaded from layer3.5.bn3.bias            of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.bn3.bias                  loaded from layer3.5.bn3.bias            of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.conv2.weight              loaded from layer1.0.conv2.weight        of shape (64, 64, 3, 3)
2021-10-16 11:38:13,371 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer3.5.bn3.weight                loaded from layer3.5.bn3.weight          of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.conv3.weight              loaded from layer1.0.conv3.weight        of shape (256, 64, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.bn3.weight                loaded from layer3.5.bn3.weight          of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.downsample.0.weight       loaded from layer1.0.downsample.0.weight of shape (256, 64, 1, 1)
2021-10-16 11:38:13,371 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer3.5.conv1.weight              loaded from layer3.5.conv1.weight        of shape (256, 1024, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.downsample.1.bias         loaded from layer1.0.downsample.1.bias   of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.conv1.weight              loaded from layer3.5.conv1.weight        of shape (256, 1024, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.0.downsample.1.weight       loaded from layer1.0.downsample.1.weight of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.bn1.bias                  loaded from layer1.1.bn1.bias            of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.bn1.weight                loaded from layer1.1.bn1.weight          of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.bn2.bias                  loaded from layer1.1.bn2.bias            of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.bn2.weight                loaded from layer1.1.bn2.weight          of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.bn3.bias                  loaded from layer1.1.bn3.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.bn3.weight                loaded from layer1.1.bn3.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.conv1.weight              loaded from layer1.1.conv1.weight        of shape (64, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.conv2.weight              loaded from layer1.1.conv2.weight        of shape (64, 64, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.1.conv3.weight              loaded from layer1.1.conv3.weight        of shape (256, 64, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.bn1.bias                  loaded from layer1.2.bn1.bias            of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.bn1.weight                loaded from layer1.2.bn1.weight          of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.bn2.bias                  loaded from layer1.2.bn2.bias            of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.bn2.weight                loaded from layer1.2.bn2.weight          of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.bn3.bias                  loaded from layer1.2.bn3.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.conv2.weight              loaded from layer3.2.conv2.weight        of shape (256, 256, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.bn3.weight                loaded from layer1.2.bn3.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.conv3.weight              loaded from layer3.2.conv3.weight        of shape (1024, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.conv1.weight              loaded from layer1.2.conv1.weight        of shape (64, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.bn1.bias                  loaded from layer3.3.bn1.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.conv2.weight              loaded from layer3.1.conv2.weight        of shape (256, 256, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.bn1.weight                loaded from layer3.3.bn1.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.conv3.weight              loaded from layer3.1.conv3.weight        of shape (1024, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.bn2.bias                  loaded from layer3.3.bn2.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.bn1.bias                  loaded from layer3.2.bn1.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.conv2.weight              loaded from layer1.2.conv2.weight        of shape (64, 64, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.bn2.weight                loaded from layer3.3.bn2.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.bn1.weight                loaded from layer3.2.bn1.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer1.2.conv3.weight              loaded from layer1.2.conv3.weight        of shape (256, 64, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.bn3.bias                  loaded from layer3.3.bn3.bias            of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.bn2.bias                  loaded from layer3.2.bn2.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.bn1.bias                  loaded from layer2.0.bn1.bias            of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.bn3.weight                loaded from layer3.3.bn3.weight          of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.bn2.weight                loaded from layer3.2.bn2.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.bn1.weight                loaded from layer2.0.bn1.weight          of shape (128,)
2021-10-16 11:38:13,372 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer3.5.conv2.weight              loaded from layer3.5.conv2.weight        of shape (256, 256, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.conv1.weight              loaded from layer3.3.conv1.weight        of shape (256, 1024, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.bn3.bias                  loaded from layer3.2.bn3.bias            of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.bn2.bias                  loaded from layer2.0.bn2.bias            of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.conv2.weight              loaded from layer3.5.conv2.weight        of shape (256, 256, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.bn3.weight                loaded from layer3.2.bn3.weight          of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.bn2.weight                loaded from layer2.0.bn2.weight          of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.bn3.bias                  loaded from layer2.0.bn3.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.conv1.weight              loaded from layer3.2.conv1.weight        of shape (256, 1024, 1, 1)
2021-10-16 11:38:13,372 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer3.5.conv3.weight              loaded from layer3.5.conv3.weight        of shape (1024, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.bn3.weight                loaded from layer2.0.bn3.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.conv3.weight              loaded from layer3.5.conv3.weight        of shape (1024, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.conv1.weight              loaded from layer2.0.conv1.weight        of shape (128, 256, 1, 1)
2021-10-16 11:38:13,372 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer4.0.bn1.bias                  loaded from layer4.0.bn1.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.bn1.bias                  loaded from layer4.0.bn1.bias            of shape (512,)
2021-10-16 11:38:13,372 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer4.0.bn1.weight                loaded from layer4.0.bn1.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.bn1.weight                loaded from layer4.0.bn1.weight          of shape (512,)
2021-10-16 11:38:13,372 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer4.0.bn2.bias                  loaded from layer4.0.bn2.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.bn2.bias                  loaded from layer4.0.bn2.bias            of shape (512,)
2021-10-16 11:38:13,372 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer4.0.bn2.weight                loaded from layer4.0.bn2.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.bn2.weight                loaded from layer4.0.bn2.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.conv2.weight              loaded from layer2.0.conv2.weight        of shape (128, 128, 3, 3)
2021-10-16 11:38:13,372 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer4.0.bn3.bias                  loaded from layer4.0.bn3.bias            of shape (2048,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.conv3.weight              loaded from layer2.0.conv3.weight        of shape (512, 128, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.bn3.bias                  loaded from layer4.0.bn3.bias            of shape (2048,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.downsample.0.weight       loaded from layer2.0.downsample.0.weight of shape (512, 256, 1, 1)
2021-10-16 11:38:13,372 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer4.0.bn3.weight                loaded from layer4.0.bn3.weight          of shape (2048,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.bn3.weight                loaded from layer4.0.bn3.weight          of shape (2048,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.downsample.1.bias         loaded from layer2.0.downsample.1.bias   of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.0.downsample.1.weight       loaded from layer2.0.downsample.1.weight of shape (512,)
2021-10-16 11:38:13,372 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer4.0.conv1.weight              loaded from layer4.0.conv1.weight        of shape (512, 1024, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.bn1.bias                  loaded from layer2.1.bn1.bias            of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.conv1.weight              loaded from layer4.0.conv1.weight        of shape (512, 1024, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.bn1.weight                loaded from layer2.1.bn1.weight          of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.bn2.bias                  loaded from layer2.1.bn2.bias            of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.bn2.weight                loaded from layer2.1.bn2.weight          of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.bn3.bias                  loaded from layer2.1.bn3.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.bn3.weight                loaded from layer2.1.bn3.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.conv1.weight              loaded from layer2.1.conv1.weight        of shape (128, 512, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.conv2.weight              loaded from layer3.3.conv2.weight        of shape (256, 256, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.conv3.weight              loaded from layer3.3.conv3.weight        of shape (1024, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.bn1.bias                  loaded from layer3.4.bn1.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.conv2.weight              loaded from layer3.2.conv2.weight        of shape (256, 256, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.bn1.weight                loaded from layer3.4.bn1.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.conv3.weight              loaded from layer3.2.conv3.weight        of shape (1024, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.bn2.bias                  loaded from layer3.4.bn2.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.bn1.bias                  loaded from layer3.3.bn1.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.bn2.weight                loaded from layer3.4.bn2.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.conv2.weight              loaded from layer2.1.conv2.weight        of shape (128, 128, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.bn1.weight                loaded from layer3.3.bn1.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.bn3.bias                  loaded from layer3.4.bn3.bias            of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.bn2.bias                  loaded from layer3.3.bn2.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.1.conv3.weight              loaded from layer2.1.conv3.weight        of shape (512, 128, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.bn3.weight                loaded from layer3.4.bn3.weight          of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.bn2.weight                loaded from layer3.3.bn2.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.bn1.bias                  loaded from layer2.2.bn1.bias            of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.conv1.weight              loaded from layer3.4.conv1.weight        of shape (256, 1024, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.bn3.bias                  loaded from layer3.3.bn3.bias            of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.bn1.weight                loaded from layer2.2.bn1.weight          of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.bn3.weight                loaded from layer3.3.bn3.weight          of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.bn2.bias                  loaded from layer2.2.bn2.bias            of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.conv1.weight              loaded from layer3.3.conv1.weight        of shape (256, 1024, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.bn2.weight                loaded from layer2.2.bn2.weight          of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.bn3.bias                  loaded from layer2.2.bn3.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.bn3.weight                loaded from layer2.2.bn3.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.conv1.weight              loaded from layer2.2.conv1.weight        of shape (128, 512, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.conv2.weight              loaded from layer4.0.conv2.weight        of shape (512, 512, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.conv3.weight              loaded from layer4.0.conv3.weight        of shape (2048, 512, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.downsample.0.weight       loaded from layer4.0.downsample.0.weight of shape (2048, 1024, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.downsample.1.bias         loaded from layer4.0.downsample.1.bias   of shape (2048,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.downsample.1.weight       loaded from layer4.0.downsample.1.weight of shape (2048,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.conv2.weight              loaded from layer2.2.conv2.weight        of shape (128, 128, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.bn1.bias                  loaded from layer4.1.bn1.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.2.conv3.weight              loaded from layer2.2.conv3.weight        of shape (512, 128, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.bn1.weight                loaded from layer4.1.bn1.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.bn1.bias                  loaded from layer2.3.bn1.bias            of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.bn2.bias                  loaded from layer4.1.bn2.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.bn1.weight                loaded from layer2.3.bn1.weight          of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.bn2.weight                loaded from layer4.1.bn2.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.bn2.bias                  loaded from layer2.3.bn2.bias            of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.bn3.bias                  loaded from layer4.1.bn3.bias            of shape (2048,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.bn2.weight                loaded from layer2.3.bn2.weight          of shape (128,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.bn3.weight                loaded from layer4.1.bn3.weight          of shape (2048,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.bn3.bias                  loaded from layer2.3.bn3.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.conv1.weight              loaded from layer4.1.conv1.weight        of shape (512, 2048, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.bn3.weight                loaded from layer2.3.bn3.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.conv1.weight              loaded from layer2.3.conv1.weight        of shape (128, 512, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.conv2.weight              loaded from layer3.3.conv2.weight        of shape (256, 256, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.conv3.weight              loaded from layer3.3.conv3.weight        of shape (1024, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.bn1.bias                  loaded from layer3.4.bn1.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.conv2.weight              loaded from layer2.3.conv2.weight        of shape (128, 128, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.bn1.weight                loaded from layer3.4.bn1.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer2.3.conv3.weight              loaded from layer2.3.conv3.weight        of shape (512, 128, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.bn2.bias                  loaded from layer3.4.bn2.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.bn1.bias                  loaded from layer3.0.bn1.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.bn2.weight                loaded from layer3.4.bn2.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.bn1.weight                loaded from layer3.0.bn1.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.bn3.bias                  loaded from layer3.4.bn3.bias            of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.bn2.bias                  loaded from layer3.0.bn2.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.bn3.weight                loaded from layer3.4.bn3.weight          of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.bn2.weight                loaded from layer3.0.bn2.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.conv1.weight              loaded from layer3.4.conv1.weight        of shape (256, 1024, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.conv2.weight              loaded from layer3.4.conv2.weight        of shape (256, 256, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.bn3.bias                  loaded from layer3.0.bn3.bias            of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.bn3.weight                loaded from layer3.0.bn3.weight          of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.conv3.weight              loaded from layer3.4.conv3.weight        of shape (1024, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.conv1.weight              loaded from layer3.0.conv1.weight        of shape (256, 512, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.bn1.bias                  loaded from layer3.5.bn1.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.bn1.weight                loaded from layer3.5.bn1.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.bn2.bias                  loaded from layer3.5.bn2.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.bn2.weight                loaded from layer3.5.bn2.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.bn3.bias                  loaded from layer3.5.bn3.bias            of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.bn3.weight                loaded from layer3.5.bn3.weight          of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.conv1.weight              loaded from layer3.5.conv1.weight        of shape (256, 1024, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.conv2.weight              loaded from layer3.4.conv2.weight        of shape (256, 256, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.conv3.weight              loaded from layer3.4.conv3.weight        of shape (1024, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.conv2.weight              loaded from layer3.0.conv2.weight        of shape (256, 256, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.bn1.bias                  loaded from layer3.5.bn1.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.conv3.weight              loaded from layer3.0.conv3.weight        of shape (1024, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.bn1.weight                loaded from layer3.5.bn1.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.downsample.0.weight       loaded from layer3.0.downsample.0.weight of shape (1024, 512, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.bn2.bias                  loaded from layer3.5.bn2.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.downsample.1.bias         loaded from layer3.0.downsample.1.bias   of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.bn2.weight                loaded from layer3.5.bn2.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.0.downsample.1.weight       loaded from layer3.0.downsample.1.weight of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.bn3.bias                  loaded from layer3.5.bn3.bias            of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.bn1.bias                  loaded from layer3.1.bn1.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.bn3.weight                loaded from layer3.5.bn3.weight          of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.bn1.weight                loaded from layer3.1.bn1.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.conv1.weight              loaded from layer3.5.conv1.weight        of shape (256, 1024, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.bn2.bias                  loaded from layer3.1.bn2.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.bn2.weight                loaded from layer3.1.bn2.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.bn3.bias                  loaded from layer3.1.bn3.bias            of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.bn3.weight                loaded from layer3.1.bn3.weight          of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.conv1.weight              loaded from layer3.1.conv1.weight        of shape (256, 1024, 1, 1)
2021-10-16 11:38:13,374 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer4.0.conv2.weight              loaded from layer4.0.conv2.weight        of shape (512, 512, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.conv2.weight              loaded from layer4.0.conv2.weight        of shape (512, 512, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.conv2.weight              loaded from layer3.5.conv2.weight        of shape (256, 256, 3, 3)
2021-10-16 11:38:13,375 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer4.0.conv3.weight              loaded from layer4.0.conv3.weight        of shape (2048, 512, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.conv3.weight              loaded from layer3.5.conv3.weight        of shape (1024, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.conv3.weight              loaded from layer4.0.conv3.weight        of shape (2048, 512, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.bn1.bias                  loaded from layer4.0.bn1.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.conv2.weight              loaded from layer3.5.conv2.weight        of shape (256, 256, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.bn1.weight                loaded from layer4.0.bn1.weight          of shape (512,)
2021-10-16 11:38:13,375 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer4.0.downsample.0.weight       loaded from layer4.0.downsample.0.weight of shape (2048, 1024, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.conv3.weight              loaded from layer3.5.conv3.weight        of shape (1024, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.bn2.bias                  loaded from layer4.0.bn2.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.downsample.0.weight       loaded from layer4.0.downsample.0.weight of shape (2048, 1024, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.bn1.bias                  loaded from layer4.0.bn1.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.bn2.weight                loaded from layer4.0.bn2.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.bn1.weight                loaded from layer4.0.bn1.weight          of shape (512,)
2021-10-16 11:38:13,375 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer4.0.downsample.1.bias         loaded from layer4.0.downsample.1.bias   of shape (2048,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.bn3.bias                  loaded from layer4.0.bn3.bias            of shape (2048,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.bn2.bias                  loaded from layer4.0.bn2.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.downsample.1.bias         loaded from layer4.0.downsample.1.bias   of shape (2048,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.bn3.weight                loaded from layer4.0.bn3.weight          of shape (2048,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.bn2.weight                loaded from layer4.0.bn2.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.conv2.weight              loaded from layer3.1.conv2.weight        of shape (256, 256, 3, 3)
2021-10-16 11:38:13,375 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer4.0.downsample.1.weight       loaded from layer4.0.downsample.1.weight of shape (2048,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.conv1.weight              loaded from layer4.0.conv1.weight        of shape (512, 1024, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.bn3.bias                  loaded from layer4.0.bn3.bias            of shape (2048,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.downsample.1.weight       loaded from layer4.0.downsample.1.weight of shape (2048,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.1.conv3.weight              loaded from layer3.1.conv3.weight        of shape (1024, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.bn3.weight                loaded from layer4.0.bn3.weight          of shape (2048,)
2021-10-16 11:38:13,375 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer4.1.bn1.bias                  loaded from layer4.1.bn1.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.bn1.bias                  loaded from layer3.2.bn1.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.conv1.weight              loaded from layer4.0.conv1.weight        of shape (512, 1024, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.bn1.weight                loaded from layer3.2.bn1.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.bn1.bias                  loaded from layer4.1.bn1.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.bn2.bias                  loaded from layer3.2.bn2.bias            of shape (256,)
2021-10-16 11:38:13,375 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer4.1.bn1.weight                loaded from layer4.1.bn1.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.bn2.weight                loaded from layer3.2.bn2.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.bn1.weight                loaded from layer4.1.bn1.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.bn3.bias                  loaded from layer3.2.bn3.bias            of shape (1024,)
2021-10-16 11:38:13,375 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer4.1.bn2.bias                  loaded from layer4.1.bn2.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.bn3.weight                loaded from layer3.2.bn3.weight          of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.bn2.bias                  loaded from layer4.1.bn2.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.conv1.weight              loaded from layer3.2.conv1.weight        of shape (256, 1024, 1, 1)
2021-10-16 11:38:13,375 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer4.1.bn2.weight                loaded from layer4.1.bn2.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.bn2.weight                loaded from layer4.1.bn2.weight          of shape (512,)
2021-10-16 11:38:13,375 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer4.1.bn3.bias                  loaded from layer4.1.bn3.bias            of shape (2048,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.bn3.bias                  loaded from layer4.1.bn3.bias            of shape (2048,)
2021-10-16 11:38:13,375 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer4.1.bn3.weight                loaded from layer4.1.bn3.weight          of shape (2048,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.bn3.weight                loaded from layer4.1.bn3.weight          of shape (2048,)
2021-10-16 11:38:13,375 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer4.1.conv1.weight              loaded from layer4.1.conv1.weight        of shape (512, 2048, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.conv1.weight              loaded from layer4.1.conv1.weight        of shape (512, 2048, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.conv2.weight              loaded from layer3.2.conv2.weight        of shape (256, 256, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.2.conv3.weight              loaded from layer3.2.conv3.weight        of shape (1024, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.bn1.bias                  loaded from layer3.3.bn1.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.bn1.weight                loaded from layer3.3.bn1.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.bn2.bias                  loaded from layer3.3.bn2.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.bn2.weight                loaded from layer3.3.bn2.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.bn3.bias                  loaded from layer3.3.bn3.bias            of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.bn3.weight                loaded from layer3.3.bn3.weight          of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.conv1.weight              loaded from layer3.3.conv1.weight        of shape (256, 1024, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.conv2.weight              loaded from layer3.3.conv2.weight        of shape (256, 256, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.3.conv3.weight              loaded from layer3.3.conv3.weight        of shape (1024, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.bn1.bias                  loaded from layer3.4.bn1.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.bn1.weight                loaded from layer3.4.bn1.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.bn2.bias                  loaded from layer3.4.bn2.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.bn2.weight                loaded from layer3.4.bn2.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.bn3.bias                  loaded from layer3.4.bn3.bias            of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.bn3.weight                loaded from layer3.4.bn3.weight          of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.conv1.weight              loaded from layer3.4.conv1.weight        of shape (256, 1024, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.conv2.weight              loaded from layer3.4.conv2.weight        of shape (256, 256, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.4.conv3.weight              loaded from layer3.4.conv3.weight        of shape (1024, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.conv2.weight              loaded from layer4.1.conv2.weight        of shape (512, 512, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.bn1.bias                  loaded from layer3.5.bn1.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.conv3.weight              loaded from layer4.1.conv3.weight        of shape (2048, 512, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.bn1.weight                loaded from layer3.5.bn1.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.bn1.bias                  loaded from layer4.2.bn1.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.bn2.bias                  loaded from layer3.5.bn2.bias            of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.bn1.weight                loaded from layer4.2.bn1.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.bn2.weight                loaded from layer3.5.bn2.weight          of shape (256,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.bn2.bias                  loaded from layer4.2.bn2.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.bn3.bias                  loaded from layer3.5.bn3.bias            of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.bn2.weight                loaded from layer4.2.bn2.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.bn3.weight                loaded from layer3.5.bn3.weight          of shape (1024,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.bn3.bias                  loaded from layer4.2.bn3.bias            of shape (2048,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.conv1.weight              loaded from layer3.5.conv1.weight        of shape (256, 1024, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.bn3.weight                loaded from layer4.2.bn3.weight          of shape (2048,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.conv1.weight              loaded from layer4.2.conv1.weight        of shape (512, 2048, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.conv2.weight              loaded from layer3.5.conv2.weight        of shape (256, 256, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer3.5.conv3.weight              loaded from layer3.5.conv3.weight        of shape (1024, 256, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.bn1.bias                  loaded from layer4.0.bn1.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.bn1.weight                loaded from layer4.0.bn1.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.bn2.bias                  loaded from layer4.0.bn2.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.bn2.weight                loaded from layer4.0.bn2.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.bn3.bias                  loaded from layer4.0.bn3.bias            of shape (2048,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.bn3.weight                loaded from layer4.0.bn3.weight          of shape (2048,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.conv1.weight              loaded from layer4.0.conv1.weight        of shape (512, 1024, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.conv2.weight              loaded from layer4.0.conv2.weight        of shape (512, 512, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.conv3.weight              loaded from layer4.0.conv3.weight        of shape (2048, 512, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.downsample.0.weight       loaded from layer4.0.downsample.0.weight of shape (2048, 1024, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.downsample.1.bias         loaded from layer4.0.downsample.1.bias   of shape (2048,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.downsample.1.weight       loaded from layer4.0.downsample.1.weight of shape (2048,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.bn1.bias                  loaded from layer4.1.bn1.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.bn1.weight                loaded from layer4.1.bn1.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.bn2.bias                  loaded from layer4.1.bn2.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.bn2.weight                loaded from layer4.1.bn2.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.bn3.bias                  loaded from layer4.1.bn3.bias            of shape (2048,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.bn3.weight                loaded from layer4.1.bn3.weight          of shape (2048,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.conv1.weight              loaded from layer4.1.conv1.weight        of shape (512, 2048, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.conv2.weight              loaded from layer4.0.conv2.weight        of shape (512, 512, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.conv3.weight              loaded from layer4.0.conv3.weight        of shape (2048, 512, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.downsample.0.weight       loaded from layer4.0.downsample.0.weight of shape (2048, 1024, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.downsample.1.bias         loaded from layer4.0.downsample.1.bias   of shape (2048,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.downsample.1.weight       loaded from layer4.0.downsample.1.weight of shape (2048,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.bn1.bias                  loaded from layer4.1.bn1.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.bn1.weight                loaded from layer4.1.bn1.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.bn2.bias                  loaded from layer4.1.bn2.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.bn2.weight                loaded from layer4.1.bn2.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.bn3.bias                  loaded from layer4.1.bn3.bias            of shape (2048,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.bn3.weight                loaded from layer4.1.bn3.weight          of shape (2048,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.conv1.weight              loaded from layer4.1.conv1.weight        of shape (512, 2048, 1, 1)
2021-10-16 11:38:13,379 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer4.1.conv2.weight              loaded from layer4.1.conv2.weight        of shape (512, 512, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.conv2.weight              loaded from layer4.1.conv2.weight        of shape (512, 512, 3, 3)
2021-10-16 11:38:13,379 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer4.1.conv3.weight              loaded from layer4.1.conv3.weight        of shape (2048, 512, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.conv3.weight              loaded from layer4.1.conv3.weight        of shape (2048, 512, 1, 1)
2021-10-16 11:38:13,379 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer4.2.bn1.bias                  loaded from layer4.2.bn1.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.bn1.bias                  loaded from layer4.2.bn1.bias            of shape (512,)
2021-10-16 11:38:13,379 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer4.2.bn1.weight                loaded from layer4.2.bn1.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.bn1.weight                loaded from layer4.2.bn1.weight          of shape (512,)
2021-10-16 11:38:13,379 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer4.2.bn2.bias                  loaded from layer4.2.bn2.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.bn2.bias                  loaded from layer4.2.bn2.bias            of shape (512,)
2021-10-16 11:38:13,380 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer4.2.bn2.weight                loaded from layer4.2.bn2.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.bn2.weight                loaded from layer4.2.bn2.weight          of shape (512,)
2021-10-16 11:38:13,380 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer4.2.bn3.bias                  loaded from layer4.2.bn3.bias            of shape (2048,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.bn3.bias                  loaded from layer4.2.bn3.bias            of shape (2048,)
2021-10-16 11:38:13,380 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer4.2.bn3.weight                loaded from layer4.2.bn3.weight          of shape (2048,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.bn3.weight                loaded from layer4.2.bn3.weight          of shape (2048,)
2021-10-16 11:38:13,380 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer4.2.conv1.weight              loaded from layer4.2.conv1.weight        of shape (512, 2048, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.conv1.weight              loaded from layer4.2.conv1.weight        of shape (512, 2048, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.conv2.weight              loaded from layer4.0.conv2.weight        of shape (512, 512, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.conv3.weight              loaded from layer4.0.conv3.weight        of shape (2048, 512, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.downsample.0.weight       loaded from layer4.0.downsample.0.weight of shape (2048, 1024, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.downsample.1.bias         loaded from layer4.0.downsample.1.bias   of shape (2048,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.0.downsample.1.weight       loaded from layer4.0.downsample.1.weight of shape (2048,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.bn1.bias                  loaded from layer4.1.bn1.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.bn1.weight                loaded from layer4.1.bn1.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.bn2.bias                  loaded from layer4.1.bn2.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.bn2.weight                loaded from layer4.1.bn2.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.bn3.bias                  loaded from layer4.1.bn3.bias            of shape (2048,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.bn3.weight                loaded from layer4.1.bn3.weight          of shape (2048,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.conv1.weight              loaded from layer4.1.conv1.weight        of shape (512, 2048, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.conv2.weight              loaded from layer4.2.conv2.weight        of shape (512, 512, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.conv3.weight              loaded from layer4.2.conv3.weight        of shape (2048, 512, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.stem.bn1.bias                      loaded from bn1.bias                     of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.stem.bn1.weight                    loaded from bn1.weight                   of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.stem.conv1.weight                  loaded from conv1.weight                 of shape (64, 3, 7, 7)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.conv2.weight              loaded from layer4.1.conv2.weight        of shape (512, 512, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.conv3.weight              loaded from layer4.1.conv3.weight        of shape (2048, 512, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.bn1.bias                  loaded from layer4.2.bn1.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.bn1.weight                loaded from layer4.2.bn1.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.bn2.bias                  loaded from layer4.2.bn2.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.bn2.weight                loaded from layer4.2.bn2.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.bn3.bias                  loaded from layer4.2.bn3.bias            of shape (2048,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.bn3.weight                loaded from layer4.2.bn3.weight          of shape (2048,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.conv1.weight              loaded from layer4.2.conv1.weight        of shape (512, 2048, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.conv2.weight              loaded from layer4.1.conv2.weight        of shape (512, 512, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.conv3.weight              loaded from layer4.1.conv3.weight        of shape (2048, 512, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.bn1.bias                  loaded from layer4.2.bn1.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.bn1.weight                loaded from layer4.2.bn1.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.bn2.bias                  loaded from layer4.2.bn2.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.bn2.weight                loaded from layer4.2.bn2.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.bn3.bias                  loaded from layer4.2.bn3.bias            of shape (2048,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.bn3.weight                loaded from layer4.2.bn3.weight          of shape (2048,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.conv1.weight              loaded from layer4.2.conv1.weight        of shape (512, 2048, 1, 1)
2021-10-16 11:38:13,384 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer4.2.conv2.weight              loaded from layer4.2.conv2.weight        of shape (512, 512, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.conv2.weight              loaded from layer4.2.conv2.weight        of shape (512, 512, 3, 3)
2021-10-16 11:38:13,384 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.layer4.2.conv3.weight              loaded from layer4.2.conv3.weight        of shape (2048, 512, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.conv3.weight              loaded from layer4.2.conv3.weight        of shape (2048, 512, 1, 1)
2021-10-16 11:38:13,384 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.stem.bn1.bias                      loaded from bn1.bias                     of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.stem.bn1.bias                      loaded from bn1.bias                     of shape (64,)
2021-10-16 11:38:13,384 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.stem.bn1.weight                    loaded from bn1.weight                   of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.stem.bn1.weight                    loaded from bn1.weight                   of shape (64,)
2021-10-16 11:38:13,384 maskrcnn_benchmark.utils.model_serialization INFO: module.graphable.backbone.body.stem.conv1.weight                  loaded from conv1.weight                 of shape (64, 3, 7, 7)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.stem.conv1.weight                  loaded from conv1.weight                 of shape (64, 3, 7, 7)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.conv2.weight              loaded from layer4.1.conv2.weight        of shape (512, 512, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.1.conv3.weight              loaded from layer4.1.conv3.weight        of shape (2048, 512, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.bn1.bias                  loaded from layer4.2.bn1.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.bn1.weight                loaded from layer4.2.bn1.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.bn2.bias                  loaded from layer4.2.bn2.bias            of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.bn2.weight                loaded from layer4.2.bn2.weight          of shape (512,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.bn3.bias                  loaded from layer4.2.bn3.bias            of shape (2048,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.bn3.weight                loaded from layer4.2.bn3.weight          of shape (2048,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.conv1.weight              loaded from layer4.2.conv1.weight        of shape (512, 2048, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.conv2.weight              loaded from layer4.2.conv2.weight        of shape (512, 512, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.conv3.weight              loaded from layer4.2.conv3.weight        of shape (2048, 512, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.stem.bn1.bias                      loaded from bn1.bias                     of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.stem.bn1.weight                    loaded from bn1.weight                   of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.conv2.weight              loaded from layer4.2.conv2.weight        of shape (512, 512, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.stem.conv1.weight                  loaded from conv1.weight                 of shape (64, 3, 7, 7)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.conv3.weight              loaded from layer4.2.conv3.weight        of shape (2048, 512, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.stem.bn1.bias                      loaded from bn1.bias                     of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.stem.bn1.weight                    loaded from bn1.weight                   of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.stem.conv1.weight                  loaded from conv1.weight                 of shape (64, 3, 7, 7)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.conv2.weight              loaded from layer4.2.conv2.weight        of shape (512, 512, 3, 3)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.layer4.2.conv3.weight              loaded from layer4.2.conv3.weight        of shape (2048, 512, 1, 1)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.stem.bn1.bias                      loaded from bn1.bias                     of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.stem.bn1.weight                    loaded from bn1.weight                   of shape (64,)
INFO:maskrcnn_benchmark.utils.model_serialization:module.graphable.backbone.body.stem.conv1.weight                  loaded from conv1.weight                 of shape (64, 3, 7, 7)
:::MLLOG {"namespace": "", "time_ms": 1634384293413, "event_type": "INTERVAL_END", "key": "init_stop", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 329}}
:::MLLOG {"namespace": "", "time_ms": 1634384293420, "event_type": "INTERVAL_START", "key": "run_start", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 331}}
2021-10-16 11:38:13,421 maskrcnn_benchmark.data.build WARNING: When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
loading annotations into memory...
loading annotations into memory...
loading annotations into memory...
loading annotations into memory...
loading annotations into memory...
loading annotations into memory...
loading annotations into memory...
Done (t=14.42s)
creating index...
Done (t=14.73s)
creating index...
Done (t=14.23s)
creating index...
Done (t=14.63s)
creating index...
Done (t=14.56s)
creating index...
Done (t=14.36s)
creating index...
Done (t=14.83s)
creating index...
Done (t=14.23s)
creating index...
index created!
index created!
index created!
index created!
index created!
index created!
index created!
index created!
shapes=None
passthrough=True
INFO:maskrcnn_benchmark.trainer:Start training
shapes=None
passthrough=True
INFO:maskrcnn_benchmark.trainer:Start training
shapes=None
passthrough=True
INFO:maskrcnn_benchmark.trainer:Start training
shapes=None
passthrough=True
INFO:maskrcnn_benchmark.trainer:Start training
shapes=None
passthrough=True
INFO:maskrcnn_benchmark.trainer:Start training
shapes=None
passthrough=True
:::MLLOG {"namespace": "", "time_ms": 1634384310759, "event_type": "POINT_IN_TIME", "key": "train_samples", "value": 18000, "metadata": {"file": "tools/train_mlperf.py", "lineno": 343}}
2021-10-16 11:38:30,760 maskrcnn_benchmark.trainer INFO: Start training
INFO:maskrcnn_benchmark.trainer:Start training
shapes=None
passthrough=True
INFO:maskrcnn_benchmark.trainer:Start training
shapes=None
passthrough=True
INFO:maskrcnn_benchmark.trainer:Start training
:::MLLOG {"namespace": "", "time_ms": 1634384310983, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 163, "first_epoch_num": 1, "epoch_count": 1}}
:::MLLOG {"namespace": "", "time_ms": 1634384310983, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 164, "epoch_num": 1}}

Grad overflow on iteration  0
Using dynamic loss scale of  65536

Grad overflow on iteration  0
Using dynamic loss scale of  65536

Grad overflow on iteration  0
Using dynamic loss scale of  65536

Grad overflow on iteration  0
Using dynamic loss scale of  65536
/opt/conda/lib/python3.8/site-packages/torch/optim/lr_scheduler.py:129: UserWarning: Detected call of `lr_scheduler.step()` before `optimizer.step()`. In PyTorch 1.1.0 and later, you should call them in the opposite order: `optimizer.step()` before `lr_scheduler.step()`.  Failure to do this will result in PyTorch skipping the first value of the learning rate schedule. See more details at https://pytorch.org/docs/stable/optim.html#how-to-adjust-learning-rate
  warnings.warn("Detected call of `lr_scheduler.step()` before `optimizer.step()`. "
/opt/conda/lib/python3.8/site-packages/torch/optim/lr_scheduler.py:129: UserWarning: Detected call of `lr_scheduler.step()` before `optimizer.step()`. In PyTorch 1.1.0 and later, you should call them in the opposite order: `optimizer.step()` before `lr_scheduler.step()`.  Failure to do this will result in PyTorch skipping the first value of the learning rate schedule. See more details at https://pytorch.org/docs/stable/optim.html#how-to-adjust-learning-rate
  warnings.warn("Detected call of `lr_scheduler.step()` before `optimizer.step()`. "
/opt/conda/lib/python3.8/site-packages/torch/optim/lr_scheduler.py:129: UserWarning: Detected call of `lr_scheduler.step()` before `optimizer.step()`. In PyTorch 1.1.0 and later, you should call them in the opposite order: `optimizer.step()` before `lr_scheduler.step()`.  Failure to do this will result in PyTorch skipping the first value of the learning rate schedule. See more details at https://pytorch.org/docs/stable/optim.html#how-to-adjust-learning-rate
  warnings.warn("Detected call of `lr_scheduler.step()` before `optimizer.step()`. "
/opt/conda/lib/python3.8/site-packages/torch/optim/lr_scheduler.py:129: UserWarning: Detected call of `lr_scheduler.step()` before `optimizer.step()`. In PyTorch 1.1.0 and later, you should call them in the opposite order: `optimizer.step()` before `lr_scheduler.step()`.  Failure to do this will result in PyTorch skipping the first value of the learning rate schedule. See more details at https://pytorch.org/docs/stable/optim.html#how-to-adjust-learning-rate
  warnings.warn("Detected call of `lr_scheduler.step()` before `optimizer.step()`. "

Grad overflow on iteration  0
Using dynamic loss scale of  65536

Grad overflow on iteration  0
Using dynamic loss scale of  65536
/opt/conda/lib/python3.8/site-packages/torch/optim/lr_scheduler.py:129: UserWarning: Detected call of `lr_scheduler.step()` before `optimizer.step()`. In PyTorch 1.1.0 and later, you should call them in the opposite order: `optimizer.step()` before `lr_scheduler.step()`.  Failure to do this will result in PyTorch skipping the first value of the learning rate schedule. See more details at https://pytorch.org/docs/stable/optim.html#how-to-adjust-learning-rate
  warnings.warn("Detected call of `lr_scheduler.step()` before `optimizer.step()`. "

Grad overflow on iteration  0
Using dynamic loss scale of  65536

Grad overflow on iteration  0
Using dynamic loss scale of  65536
/opt/conda/lib/python3.8/site-packages/torch/optim/lr_scheduler.py:129: UserWarning: Detected call of `lr_scheduler.step()` before `optimizer.step()`. In PyTorch 1.1.0 and later, you should call them in the opposite order: `optimizer.step()` before `lr_scheduler.step()`.  Failure to do this will result in PyTorch skipping the first value of the learning rate schedule. See more details at https://pytorch.org/docs/stable/optim.html#how-to-adjust-learning-rate
  warnings.warn("Detected call of `lr_scheduler.step()` before `optimizer.step()`. "
/opt/conda/lib/python3.8/site-packages/torch/optim/lr_scheduler.py:129: UserWarning: Detected call of `lr_scheduler.step()` before `optimizer.step()`. In PyTorch 1.1.0 and later, you should call them in the opposite order: `optimizer.step()` before `lr_scheduler.step()`.  Failure to do this will result in PyTorch skipping the first value of the learning rate schedule. See more details at https://pytorch.org/docs/stable/optim.html#how-to-adjust-learning-rate
  warnings.warn("Detected call of `lr_scheduler.step()` before `optimizer.step()`. "
/opt/conda/lib/python3.8/site-packages/torch/optim/lr_scheduler.py:129: UserWarning: Detected call of `lr_scheduler.step()` before `optimizer.step()`. In PyTorch 1.1.0 and later, you should call them in the opposite order: `optimizer.step()` before `lr_scheduler.step()`.  Failure to do this will result in PyTorch skipping the first value of the learning rate schedule. See more details at https://pytorch.org/docs/stable/optim.html#how-to-adjust-learning-rate
  warnings.warn("Detected call of `lr_scheduler.step()` before `optimizer.step()`. "

Grad overflow on iteration  1
Using dynamic loss scale of  32768.0

Grad overflow on iteration  1
Using dynamic loss scale of  32768.0

Grad overflow on iteration  1
Using dynamic loss scale of  32768.0

Grad overflow on iteration  1
Using dynamic loss scale of  32768.0

Grad overflow on iteration  1
Using dynamic loss scale of  32768.0

Grad overflow on iteration  1
Using dynamic loss scale of  32768.0

Grad overflow on iteration  1
Using dynamic loss scale of  32768.0

Grad overflow on iteration  1
Using dynamic loss scale of  32768.0

Grad overflow on iteration  2
Using dynamic loss scale of  16384.0

Grad overflow on iteration  2
Using dynamic loss scale of  16384.0

Grad overflow on iteration  2
Using dynamic loss scale of  16384.0

Grad overflow on iteration  2
Using dynamic loss scale of  16384.0

Grad overflow on iteration  2
Using dynamic loss scale of  16384.0

Grad overflow on iteration  2
Using dynamic loss scale of  16384.0

Grad overflow on iteration  2
Using dynamic loss scale of  16384.0

Grad overflow on iteration  2
Using dynamic loss scale of  16384.0

Grad overflow on iteration  3
Using dynamic loss scale of  
Grad overflow on iteration 8192.0 
3
Using dynamic loss scale of  8192.0

Grad overflow on iteration  3
Using dynamic loss scale of  8192.0

Grad overflow on iteration  3
Using dynamic loss scale of  8192.0

Grad overflow on iteration  3
Using dynamic loss scale of  8192.0

Grad overflow on iteration  3
Using dynamic loss scale of  8192.0

Grad overflow on iteration  3
Using dynamic loss scale of  8192.0

Grad overflow on iteration  3
Using dynamic loss scale of  8192.0

Grad overflow on iteration  4

Grad overflow on iteration Using dynamic loss scale of   4096.0
4
Using dynamic loss scale of  4096.0

Grad overflow on iteration  4
Using dynamic loss scale of  4096.0

Grad overflow on iteration  4
Using dynamic loss scale of  4096.0

Grad overflow on iteration  4
Using dynamic loss scale of  4096.0

Grad overflow on iteration 
Grad overflow on iteration   44

Using dynamic loss scale of  Using dynamic loss scale of  4096.0
4096.0

Grad overflow on iteration  4
Using dynamic loss scale of  4096.0

Grad overflow on iteration  5
Using dynamic loss scale of  2048.0

Grad overflow on iteration  5
Using dynamic loss scale of  2048.0

Grad overflow on iteration  5
Using dynamic loss scale of  2048.0

Grad overflow on iteration  5
Using dynamic loss scale of  2048.0

Grad overflow on iteration  5

Grad overflow on iteration Using dynamic loss scale of   5
2048.0Using dynamic loss scale of 
 2048.0

Grad overflow on iteration  5
Using dynamic loss scale of  2048.0

Grad overflow on iteration  5
Using dynamic loss scale of  2048.0
INFO:maskrcnn_benchmark.trainer:eta: 20:32:51  iter: 50  loss: 1.3011 (2.3554)  loss_classifier: 0.3161 (1.0214)  loss_box_reg: 0.0658 (0.0508)  loss_mask: 0.6852 (0.8077)  loss_objectness: 0.2153 (0.3651)  loss_rpn_box_reg: 0.0715 (0.1104)  time: 0.5737 (4.1210)  data: 0.0003 (0.0062)  lr: 0.012828  max mem: 13636
INFO:maskrcnn_benchmark.trainer:eta: 20:33:01  iter: 50  loss: 1.3675 (2.3688)  loss_classifier: 0.2971 (1.0247)  loss_box_reg: 0.0638 (0.0490)  loss_mask: 0.6855 (0.8104)  loss_objectness: 0.2349 (0.3735)  loss_rpn_box_reg: 0.0815 (0.1111)  time: 0.5735 (4.1216)  data: 0.0003 (0.0066)  lr: 0.012828  max mem: 13981
2021-10-16 11:41:56,782 maskrcnn_benchmark.trainer INFO: eta: 20:32:41  iter: 50  loss: 1.3833 (2.3898)  loss_classifier: 0.3096 (1.0381)  loss_box_reg: 0.0701 (0.0503)  loss_mask: 0.6847 (0.8139)  loss_objectness: 0.2164 (0.3766)  loss_rpn_box_reg: 0.0974 (0.1108)  time: 0.5735 (4.1204)  data: 0.0003 (0.0055)  lr: 0.012828  max mem: 13964
INFO:maskrcnn_benchmark.trainer:eta: 20:32:41  iter: 50  loss: 1.3833 (2.3898)  loss_classifier: 0.3096 (1.0381)  loss_box_reg: 0.0701 (0.0503)  loss_mask: 0.6847 (0.8139)  loss_objectness: 0.2164 (0.3766)  loss_rpn_box_reg: 0.0974 (0.1108)  time: 0.5735 (4.1204)  data: 0.0003 (0.0055)  lr: 0.012828  max mem: 13964
INFO:maskrcnn_benchmark.trainer:eta: 20:32:54  iter: 50  loss: 1.3318 (2.3545)  loss_classifier: 0.3295 (1.0216)  loss_box_reg: 0.0850 (0.0512)  loss_mask: 0.6850 (0.8161)  loss_objectness: 0.2127 (0.3595)  loss_rpn_box_reg: 0.0815 (0.1061)  time: 0.5720 (4.1212)  data: 0.0003 (0.0062)  lr: 0.012828  max mem: 13447
:::MLLOG {"namespace": "", "time_ms": 1634384516782, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 2.389755005836487, "loss_classifier": 1.0381497249007225, "loss_box_reg": 0.050295058549381794, "loss_mask": 0.8138957178592682, "loss_objectness": 0.37664379984140395, "loss_rpn_box_reg": 0.11077070288360119, "time": 4.1204117584228515, "data": 0.005472640991210937, "throughput": 31.064856500893466}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 50}}
INFO:maskrcnn_benchmark.trainer:eta: 20:33:01  iter: 50  loss: 1.3725 (2.4243)  loss_classifier: 0.2970 (1.0496)  loss_box_reg: 0.0524 (0.0545)  loss_mask: 0.6839 (0.8087)  loss_objectness: 0.2568 (0.3845)  loss_rpn_box_reg: 0.0996 (0.1270)  time: 0.5737 (4.1215)  data: 0.0003 (0.0069)  lr: 0.012828  max mem: 13522
:::MLLOG {"namespace": "", "time_ms": 1634384516782, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 31.064856500893466, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 20:32:54  iter: 50  loss: 1.3145 (2.4075)  loss_classifier: 0.2747 (1.0420)  loss_box_reg: 0.0549 (0.0506)  loss_mask: 0.6825 (0.8076)  loss_objectness: 0.2082 (0.3870)  loss_rpn_box_reg: 0.0892 (0.1203)  time: 0.5739 (4.1211)  data: 0.0003 (0.0062)  lr: 0.012828  max mem: 13972
INFO:maskrcnn_benchmark.trainer:eta: 20:32:26  iter: 50  loss: 1.4442 (2.4067)  loss_classifier: 0.3458 (1.0508)  loss_box_reg: 0.0727 (0.0527)  loss_mask: 0.6832 (0.8016)  loss_objectness: 0.2237 (0.3814)  loss_rpn_box_reg: 0.0900 (0.1202)  time: 0.5739 (4.1196)  data: 0.0003 (0.0050)  lr: 0.012828  max mem: 13982
INFO:maskrcnn_benchmark.trainer:eta: 20:32:32  iter: 50  loss: 1.4802 (2.3907)  loss_classifier: 0.3661 (1.0428)  loss_box_reg: 0.0876 (0.0545)  loss_mask: 0.6829 (0.8003)  loss_objectness: 0.2367 (0.3849)  loss_rpn_box_reg: 0.1142 (0.1083)  time: 0.5739 (4.1199)  data: 0.0004 (0.0053)  lr: 0.012828  max mem: 13981
INFO:maskrcnn_benchmark.trainer:eta: 14:15:23  iter: 100  loss: 1.2994 (1.8288)  loss_classifier: 0.3346 (0.6558)  loss_box_reg: 0.1034 (0.0629)  loss_mask: 0.6263 (0.7288)  loss_objectness: 0.1476 (0.2791)  loss_rpn_box_reg: 0.0846 (0.1022)  time: 0.5829 (2.8672)  data: 0.0003 (0.0035)  lr: 0.025626  max mem: 13981
INFO:maskrcnn_benchmark.trainer:eta: 14:15:18  iter: 100  loss: 1.2993 (1.8108)  loss_classifier: 0.3600 (0.6593)  loss_box_reg: 0.1268 (0.0661)  loss_mask: 0.6349 (0.7299)  loss_objectness: 0.1231 (0.2589)  loss_rpn_box_reg: 0.0767 (0.0966)  time: 0.5806 (2.8670)  data: 0.0003 (0.0033)  lr: 0.025626  max mem: 13636
2021-10-16 11:43:17,428 maskrcnn_benchmark.trainer INFO: eta: 14:15:13  iter: 100  loss: 1.3423 (1.8398)  loss_classifier: 0.3584 (0.6664)  loss_box_reg: 0.1088 (0.0652)  loss_mask: 0.6378 (0.7314)  loss_objectness: 0.1478 (0.2720)  loss_rpn_box_reg: 0.0943 (0.1048)  time: 0.5815 (2.8667)  data: 0.0003 (0.0029)  lr: 0.025626  max mem: 13964
INFO:maskrcnn_benchmark.trainer:eta: 14:15:13  iter: 100  loss: 1.3423 (1.8398)  loss_classifier: 0.3584 (0.6664)  loss_box_reg: 0.1088 (0.0652)  loss_mask: 0.6378 (0.7314)  loss_objectness: 0.1478 (0.2720)  loss_rpn_box_reg: 0.0943 (0.1048)  time: 0.5815 (2.8667)  data: 0.0003 (0.0029)  lr: 0.025626  max mem: 13964
:::MLLOG {"namespace": "", "time_ms": 1634384597428, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 1.8398040640354156, "loss_classifier": 0.6664259375631809, "loss_box_reg": 0.06517663128441199, "loss_mask": 0.7313978970050812, "loss_objectness": 0.2720260126143694, "loss_rpn_box_reg": 0.1047775848209858, "time": 2.8666700434684755, "data": 0.0029259204864501955, "throughput": 44.65111019373849}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 100}}
:::MLLOG {"namespace": "", "time_ms": 1634384597429, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 44.65111019373849, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 14:15:20  iter: 100  loss: 1.3149 (1.8085)  loss_classifier: 0.3411 (0.6510)  loss_box_reg: 0.1065 (0.0613)  loss_mask: 0.6389 (0.7332)  loss_objectness: 0.1223 (0.2633)  loss_rpn_box_reg: 0.0872 (0.0997)  time: 0.5830 (2.8671)  data: 0.0003 (0.0034)  lr: 0.025626  max mem: 13447
INFO:maskrcnn_benchmark.trainer:eta: 14:15:23  iter: 100  loss: 1.2466 (1.8593)  loss_classifier: 0.3447 (0.6723)  loss_box_reg: 0.0961 (0.0667)  loss_mask: 0.6289 (0.7289)  loss_objectness: 0.1379 (0.2780)  loss_rpn_box_reg: 0.0820 (0.1135)  time: 0.5828 (2.8672)  data: 0.0003 (0.0037)  lr: 0.025626  max mem: 13522
INFO:maskrcnn_benchmark.trainer:eta: 14:15:20  iter: 100  loss: 1.2654 (1.8403)  loss_classifier: 0.3172 (0.6636)  loss_box_reg: 0.1042 (0.0631)  loss_mask: 0.6309 (0.7268)  loss_objectness: 0.1347 (0.2771)  loss_rpn_box_reg: 0.0904 (0.1096)  time: 0.5832 (2.8670)  data: 0.0003 (0.0033)  lr: 0.025626  max mem: 13972
INFO:maskrcnn_benchmark.trainer:eta: 14:15:05  iter: 100  loss: 1.3667 (1.8302)  loss_classifier: 0.3768 (0.6659)  loss_box_reg: 0.1084 (0.0629)  loss_mask: 0.6364 (0.7256)  loss_objectness: 0.1279 (0.2707)  loss_rpn_box_reg: 0.0860 (0.1051)  time: 0.5831 (2.8663)  data: 0.0003 (0.0027)  lr: 0.025626  max mem: 13982
INFO:maskrcnn_benchmark.trainer:eta: 14:15:09  iter: 100  loss: 1.2246 (1.8140)  loss_classifier: 0.2977 (0.6547)  loss_box_reg: 0.0883 (0.0619)  loss_mask: 0.6264 (0.7234)  loss_objectness: 0.1408 (0.2756)  loss_rpn_box_reg: 0.0723 (0.0984)  time: 0.5802 (2.8664)  data: 0.0003 (0.0029)  lr: 0.025626  max mem: 13981
INFO:maskrcnn_benchmark.trainer:eta: 10:56:37  iter: 150  loss: 1.5054 (1.7138)  loss_classifier: 0.5077 (0.6073)  loss_box_reg: 0.2012 (0.1054)  loss_mask: 0.5639 (0.6789)  loss_objectness: 0.1034 (0.2214)  loss_rpn_box_reg: 0.0682 (0.1008)  time: 0.6052 (2.2071)  data: 0.0003 (0.0023)  lr: 0.038423  max mem: 13972
INFO:maskrcnn_benchmark.trainer:eta: 10:56:37  iter: 150  loss: 1.4373 (1.6947)  loss_classifier: 0.4987 (0.6001)  loss_box_reg: 0.1944 (0.1041)  loss_mask: 0.5602 (0.6819)  loss_objectness: 0.1077 (0.2153)  loss_rpn_box_reg: 0.0759 (0.0931)  time: 0.6037 (2.2071)  data: 0.0003 (0.0024)  lr: 0.038423  max mem: 13617
INFO:maskrcnn_benchmark.trainer:eta: 10:56:27  iter: 150  loss: 1.5441 (1.7288)  loss_classifier: 0.5413 (0.6197)  loss_box_reg: 0.2102 (0.1075)  loss_mask: 0.5629 (0.6787)  loss_objectness: 0.1192 (0.2226)  loss_rpn_box_reg: 0.0799 (0.1003)  time: 0.6053 (2.2066)  data: 0.0003 (0.0020)  lr: 0.038423  max mem: 13982
INFO:maskrcnn_benchmark.trainer:eta: 10:56:39  iter: 150  loss: 1.5092 (1.7323)  loss_classifier: 0.5472 (0.6165)  loss_box_reg: 0.2002 (0.1078)  loss_mask: 0.5581 (0.6796)  loss_objectness: 0.1228 (0.2239)  loss_rpn_box_reg: 0.0789 (0.1046)  time: 0.6038 (2.2073)  data: 0.0003 (0.0026)  lr: 0.038423  max mem: 13522
INFO:maskrcnn_benchmark.trainer:eta: 10:56:29  iter: 150  loss: 1.5300 (1.7127)  loss_classifier: 0.5235 (0.6084)  loss_box_reg: 0.2050 (0.1066)  loss_mask: 0.5460 (0.6760)  loss_objectness: 0.1222 (0.2254)  loss_rpn_box_reg: 0.1020 (0.0962)  time: 0.6053 (2.2067)  data: 0.0003 (0.0020)  lr: 0.038423  max mem: 13981
INFO:maskrcnn_benchmark.trainer:eta: 10:56:36  iter: 150  loss: 1.5511 (1.7082)  loss_classifier: 0.5616 (0.6141)  loss_box_reg: 0.1953 (0.1092)  loss_mask: 0.5569 (0.6810)  loss_objectness: 0.1094 (0.2110)  loss_rpn_box_reg: 0.0729 (0.0929)  time: 0.6038 (2.2071)  data: 0.0003 (0.0024)  lr: 0.038423  max mem: 13636
2021-10-16 11:44:01,796 maskrcnn_benchmark.trainer INFO: eta: 10:56:33  iter: 150  loss: 1.4719 (1.7207)  loss_classifier: 0.5326 (0.6135)  loss_box_reg: 0.2078 (0.1078)  loss_mask: 0.5439 (0.6800)  loss_objectness: 0.1137 (0.2209)  loss_rpn_box_reg: 0.0759 (0.0985)  time: 0.6038 (2.2069)  data: 0.0003 (0.0021)  lr: 0.038423  max mem: 13964
INFO:maskrcnn_benchmark.trainer:eta: 10:56:39  iter: 150  loss: 1.5068 (1.7147)  loss_classifier: 0.5157 (0.6103)  loss_box_reg: 0.2005 (0.1062)  loss_mask: 0.5647 (0.6803)  loss_objectness: 0.0989 (0.2236)  loss_rpn_box_reg: 0.0694 (0.0944)  time: 0.6038 (2.2073)  data: 0.0003 (0.0025)  lr: 0.038423  max mem: 13981
INFO:maskrcnn_benchmark.trainer:eta: 10:56:33  iter: 150  loss: 1.4719 (1.7207)  loss_classifier: 0.5326 (0.6135)  loss_box_reg: 0.2078 (0.1078)  loss_mask: 0.5439 (0.6800)  loss_objectness: 0.1137 (0.2209)  loss_rpn_box_reg: 0.0759 (0.0985)  time: 0.6038 (2.2069)  data: 0.0003 (0.0021)  lr: 0.038423  max mem: 13964
:::MLLOG {"namespace": "", "time_ms": 1634384641796, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 1.7206676324208579, "loss_classifier": 0.6134691306948662, "loss_box_reg": 0.10778792803330968, "loss_mask": 0.6800395021835963, "loss_objectness": 0.220914973244071, "loss_rpn_box_reg": 0.09845610686888297, "time": 2.206895257631938, "data": 0.0021034733454386393, "throughput": 58.000034010380574}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 150}}
:::MLLOG {"namespace": "", "time_ms": 1634384641796, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 58.000034010380574, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 9:00:38  iter: 200  loss: 1.4145 (1.6666)  loss_classifier: 0.5138 (0.5995)  loss_box_reg: 0.2182 (0.1363)  loss_mask: 0.4974 (0.6405)  loss_objectness: 0.0871 (0.1930)  loss_rpn_box_reg: 0.0689 (0.0974)  time: 0.6018 (1.8224)  data: 0.0003 (0.0020)  lr: 0.051221  max mem: 13677
INFO:maskrcnn_benchmark.trainer:eta: 9:00:37  iter: 200  loss: 1.4029 (1.6365)  loss_classifier: 0.5306 (0.5861)  loss_box_reg: 0.2128 (0.1335)  loss_mask: 0.5051 (0.6415)  loss_objectness: 0.0874 (0.1861)  loss_rpn_box_reg: 0.0637 (0.0893)  time: 0.6021 (1.8223)  data: 0.0003 (0.0019)  lr: 0.051221  max mem: 13895
INFO:maskrcnn_benchmark.trainer:eta: 9:00:37  iter: 200  loss: 1.3811 (1.6465)  loss_classifier: 0.5037 (0.5887)  loss_box_reg: 0.2092 (0.1335)  loss_mask: 0.4941 (0.6375)  loss_objectness: 0.0816 (0.1911)  loss_rpn_box_reg: 0.0757 (0.0958)  time: 0.6024 (1.8223)  data: 0.0003 (0.0019)  lr: 0.051221  max mem: 13972
INFO:maskrcnn_benchmark.trainer:eta: 9:00:31  iter: 200  loss: 1.4495 (1.6475)  loss_classifier: 0.5297 (0.5905)  loss_box_reg: 0.2134 (0.1338)  loss_mask: 0.4894 (0.6374)  loss_objectness: 0.0932 (0.1947)  loss_rpn_box_reg: 0.0765 (0.0910)  time: 0.6021 (1.8220)  data: 0.0003 (0.0016)  lr: 0.051221  max mem: 13981
INFO:maskrcnn_benchmark.trainer:eta: 9:00:36  iter: 200  loss: 1.2955 (1.6331)  loss_classifier: 0.4654 (0.5894)  loss_box_reg: 0.1880 (0.1337)  loss_mask: 0.4947 (0.6406)  loss_objectness: 0.0797 (0.1822)  loss_rpn_box_reg: 0.0585 (0.0873)  time: 0.6015 (1.8223)  data: 0.0003 (0.0019)  lr: 0.051221  max mem: 13636
2021-10-16 11:44:35,188 maskrcnn_benchmark.trainer INFO: eta: 9:00:34  iter: 200  loss: 1.4635 (1.6680)  loss_classifier: 0.5171 (0.6012)  loss_box_reg: 0.2109 (0.1381)  loss_mask: 0.5120 (0.6403)  loss_objectness: 0.1059 (0.1926)  loss_rpn_box_reg: 0.0885 (0.0957)  time: 0.6013 (1.8221)  data: 0.0003 (0.0017)  lr: 0.051221  max mem: 13964
INFO:maskrcnn_benchmark.trainer:eta: 9:00:39  iter: 200  loss: 1.4946 (1.6503)  loss_classifier: 0.5480 (0.5917)  loss_box_reg: 0.2349 (0.1339)  loss_mask: 0.4981 (0.6397)  loss_objectness: 0.1071 (0.1937)  loss_rpn_box_reg: 0.0841 (0.0912)  time: 0.6009 (1.8224)  data: 0.0003 (0.0020)  lr: 0.051221  max mem: 13981
INFO:maskrcnn_benchmark.trainer:eta: 9:00:30  iter: 200  loss: 1.3587 (1.6604)  loss_classifier: 0.4746 (0.6001)  loss_box_reg: 0.1908 (0.1362)  loss_mask: 0.4945 (0.6374)  loss_objectness: 0.0981 (0.1921)  loss_rpn_box_reg: 0.0819 (0.0945)  time: 0.6024 (1.8219)  data: 0.0003 (0.0016)  lr: 0.051221  max mem: 13994
INFO:maskrcnn_benchmark.trainer:eta: 9:00:34  iter: 200  loss: 1.4635 (1.6680)  loss_classifier: 0.5171 (0.6012)  loss_box_reg: 0.2109 (0.1381)  loss_mask: 0.5120 (0.6403)  loss_objectness: 0.1059 (0.1926)  loss_rpn_box_reg: 0.0885 (0.0957)  time: 0.6013 (1.8221)  data: 0.0003 (0.0017)  lr: 0.051221  max mem: 13964
:::MLLOG {"namespace": "", "time_ms": 1634384675189, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 1.6679956394433975, "loss_classifier": 0.6012339857965707, "loss_box_reg": 0.13813327167066747, "loss_mask": 0.6403019365668297, "loss_objectness": 0.19259758858010173, "loss_rpn_box_reg": 0.09572886158712209, "time": 1.8221353554725648, "data": 0.0016726434230804443, "throughput": 70.2472511800879}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 200}}
:::MLLOG {"namespace": "", "time_ms": 1634384675189, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 70.2472511800879, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 7:50:55  iter: 250  loss: 1.3621 (1.5991)  loss_classifier: 0.4940 (0.5800)  loss_box_reg: 0.1860 (0.1490)  loss_mask: 0.4559 (0.6052)  loss_objectness: 0.0968 (0.1734)  loss_rpn_box_reg: 0.0715 (0.0915)  time: 0.6066 (1.5919)  data: 0.0003 (0.0016)  lr: 0.064018  max mem: 13972
INFO:maskrcnn_benchmark.trainer:eta: 7:50:50  iter: 250  loss: 1.3061 (1.6032)  loss_classifier: 0.5165 (0.5853)  loss_box_reg: 0.1860 (0.1491)  loss_mask: 0.4602 (0.6043)  loss_objectness: 0.0957 (0.1734)  loss_rpn_box_reg: 0.0611 (0.0911)  time: 0.6064 (1.5916)  data: 0.0003 (0.0013)  lr: 0.064018  max mem: 13994
INFO:maskrcnn_benchmark.trainer:eta: 7:50:51  iter: 250  loss: 1.4024 (1.5983)  loss_classifier: 0.5227 (0.5797)  loss_box_reg: 0.1907 (0.1494)  loss_mask: 0.4732 (0.6060)  loss_objectness: 0.1181 (0.1766)  loss_rpn_box_reg: 0.0733 (0.0866)  time: 0.6063 (1.5916)  data: 0.0003 (0.0014)  lr: 0.064018  max mem: 13981
INFO:maskrcnn_benchmark.trainer:eta: 7:50:56  iter: 250  loss: 1.3499 (1.5943)  loss_classifier: 0.5346 (0.5799)  loss_box_reg: 0.2003 (0.1500)  loss_mask: 0.4641 (0.6079)  loss_objectness: 0.0913 (0.1694)  loss_rpn_box_reg: 0.0666 (0.0872)  time: 0.6062 (1.5919)  data: 0.0003 (0.0016)  lr: 0.064018  max mem: 14072
INFO:maskrcnn_benchmark.trainer:eta: 7:50:57  iter: 250  loss: 1.3824 (1.6179)  loss_classifier: 0.4840 (0.5909)  loss_box_reg: 0.1849 (0.1513)  loss_mask: 0.4487 (0.6067)  loss_objectness: 0.1042 (0.1748)  loss_rpn_box_reg: 0.0645 (0.0941)  time: 0.6062 (1.5920)  data: 0.0003 (0.0017)  lr: 0.064018  max mem: 13747
INFO:maskrcnn_benchmark.trainer:eta: 7:50:55  iter: 250  loss: 1.5004 (1.5904)  loss_classifier: 0.5983 (0.5804)  loss_box_reg: 0.1883 (0.1488)  loss_mask: 0.4725 (0.6089)  loss_objectness: 0.1145 (0.1665)  loss_rpn_box_reg: 0.0707 (0.0857)  time: 0.6062 (1.5919)  data: 0.0003 (0.0016)  lr: 0.064018  max mem: 13894
INFO:maskrcnn_benchmark.trainer:eta: 7:50:57  iter: 250  loss: 1.3496 (1.6042)  loss_classifier: 0.5199 (0.5840)  loss_box_reg: 0.1893 (0.1497)  loss_mask: 0.4767 (0.6071)  loss_objectness: 0.1023 (0.1753)  loss_rpn_box_reg: 0.0663 (0.0881)  time: 0.6062 (1.5920)  data: 0.0003 (0.0016)  lr: 0.064018  max mem: 13981
2021-10-16 11:45:08,697 maskrcnn_benchmark.trainer INFO: eta: 7:50:53  iter: 250  loss: 1.3909 (1.6265)  loss_classifier: 0.5516 (0.5943)  loss_box_reg: 0.2064 (0.1544)  loss_mask: 0.4742 (0.6064)  loss_objectness: 0.1046 (0.1768)  loss_rpn_box_reg: 0.0660 (0.0946)  time: 0.6063 (1.5917)  data: 0.0003 (0.0014)  lr: 0.064018  max mem: 13964
INFO:maskrcnn_benchmark.trainer:eta: 7:50:53  iter: 250  loss: 1.3909 (1.6265)  loss_classifier: 0.5516 (0.5943)  loss_box_reg: 0.2064 (0.1544)  loss_mask: 0.4742 (0.6064)  loss_objectness: 0.1046 (0.1768)  loss_rpn_box_reg: 0.0660 (0.0946)  time: 0.6063 (1.5917)  data: 0.0003 (0.0014)  lr: 0.064018  max mem: 13964
:::MLLOG {"namespace": "", "time_ms": 1634384708697, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 1.6265371594429017, "loss_classifier": 0.5943115356564522, "loss_box_reg": 0.15443077427055688, "loss_mask": 0.6064227139949798, "loss_objectness": 0.17679819618165493, "loss_rpn_box_reg": 0.09457394266873598, "time": 1.591742971420288, "data": 0.0014141225814819336, "throughput": 80.41499305995839}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 250}}
:::MLLOG {"namespace": "", "time_ms": 1634384708697, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 80.41499305995839, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 7:01:15  iter: 300  loss: 1.2724 (1.5555)  loss_classifier: 0.4828 (0.5688)  loss_box_reg: 0.1956 (0.1579)  loss_mask: 0.4257 (0.5779)  loss_objectness: 0.0688 (0.1612)  loss_rpn_box_reg: 0.0786 (0.0897)  time: 0.6082 (1.4280)  data: 0.0003 (0.0014)  lr: 0.076816  max mem: 13972
INFO:maskrcnn_benchmark.trainer:eta: 7:01:11  iter: 300  loss: 1.2691 (1.5510)  loss_classifier: 0.4641 (0.5655)  loss_box_reg: 0.1911 (0.1565)  loss_mask: 0.4228 (0.5797)  loss_objectness: 0.0800 (0.1640)  loss_rpn_box_reg: 0.0681 (0.0853)  time: 0.6079 (1.4278)  data: 0.0003 (0.0012)  lr: 0.076816  max mem: 13981
INFO:maskrcnn_benchmark.trainer:eta: 7:01:10  iter: 300  loss: 1.3137 (1.5619)  loss_classifier: 0.4855 (0.5750)  loss_box_reg: 0.2098 (0.1581)  loss_mask: 0.4349 (0.5786)  loss_objectness: 0.0877 (0.1612)  loss_rpn_box_reg: 0.0499 (0.0890)  time: 0.6081 (1.4277)  data: 0.0003 (0.0012)  lr: 0.076816  max mem: 13994
INFO:maskrcnn_benchmark.trainer:eta: 7:01:16  iter: 300  loss: 1.2949 (1.5708)  loss_classifier: 0.4932 (0.5766)  loss_box_reg: 0.2009 (0.1592)  loss_mask: 0.4221 (0.5803)  loss_objectness: 0.0920 (0.1633)  loss_rpn_box_reg: 0.0710 (0.0914)  time: 0.6071 (1.4280)  data: 0.0003 (0.0015)  lr: 0.076816  max mem: 13894
INFO:maskrcnn_benchmark.trainer:eta: 7:01:15  iter: 300  loss: 1.2844 (1.5503)  loss_classifier: 0.5042 (0.5681)  loss_box_reg: 0.1988 (0.1578)  loss_mask: 0.4296 (0.5798)  loss_objectness: 0.1043 (0.1590)  loss_rpn_box_reg: 0.0818 (0.0856)  time: 0.6074 (1.4280)  data: 0.0003 (0.0014)  lr: 0.076816  max mem: 14072
INFO:maskrcnn_benchmark.trainer:eta: 7:01:14  iter: 300  loss: 1.2698 (1.5529)  loss_classifier: 0.4957 (0.5711)  loss_box_reg: 0.2111 (0.1589)  loss_mask: 0.4286 (0.5826)  loss_objectness: 0.0792 (0.1555)  loss_rpn_box_reg: 0.0719 (0.0849)  time: 0.6073 (1.4280)  data: 0.0003 (0.0014)  lr: 0.076816  max mem: 14048
INFO:maskrcnn_benchmark.trainer:eta: 7:01:16  iter: 300  loss: 1.2695 (1.5596)  loss_classifier: 0.4922 (0.5718)  loss_box_reg: 0.2043 (0.1581)  loss_mask: 0.4380 (0.5808)  loss_objectness: 0.0853 (0.1622)  loss_rpn_box_reg: 0.0740 (0.0867)  time: 0.6072 (1.4281)  data: 0.0003 (0.0014)  lr: 0.076816  max mem: 13981
2021-10-16 11:45:39,120 maskrcnn_benchmark.trainer INFO: eta: 7:01:13  iter: 300  loss: 1.3019 (1.5727)  loss_classifier: 0.4775 (0.5772)  loss_box_reg: 0.1886 (0.1612)  loss_mask: 0.4231 (0.5790)  loss_objectness: 0.0760 (0.1637)  loss_rpn_box_reg: 0.0696 (0.0915)  time: 0.6074 (1.4279)  data: 0.0003 (0.0012)  lr: 0.076816  max mem: 13964
INFO:maskrcnn_benchmark.trainer:eta: 7:01:13  iter: 300  loss: 1.3019 (1.5727)  loss_classifier: 0.4775 (0.5772)  loss_box_reg: 0.1886 (0.1612)  loss_mask: 0.4231 (0.5790)  loss_objectness: 0.0760 (0.1637)  loss_rpn_box_reg: 0.0696 (0.0915)  time: 0.6074 (1.4279)  data: 0.0003 (0.0012)  lr: 0.076816  max mem: 13964
:::MLLOG {"namespace": "", "time_ms": 1634384739120, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 1.572704147497813, "loss_classifier": 0.5772256091733774, "loss_box_reg": 0.16117116247536614, "loss_mask": 0.5790358264247576, "loss_objectness": 0.16373227500667176, "loss_rpn_box_reg": 0.09153927806143959, "time": 1.4278623151779175, "data": 0.001247543493906657, "throughput": 89.6444976797715}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 300}}
:::MLLOG {"namespace": "", "time_ms": 1634384739120, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 89.6444976797715, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 6:25:45  iter: 350  loss: 1.1849 (1.5129)  loss_classifier: 0.4516 (0.5549)  loss_box_reg: 0.1697 (0.1627)  loss_mask: 0.4203 (0.5550)  loss_objectness: 0.0895 (0.1523)  loss_rpn_box_reg: 0.0625 (0.0881)  time: 0.6130 (1.3114)  data: 0.0003 (0.0013)  lr: 0.089614  max mem: 13972
INFO:maskrcnn_benchmark.trainer:eta: 6:25:41  iter: 350  loss: 1.2497 (1.5198)  loss_classifier: 0.4937 (0.5604)  loss_box_reg: 0.2045 (0.1636)  loss_mask: 0.4133 (0.5554)  loss_objectness: 0.0810 (0.1518)  loss_rpn_box_reg: 0.0839 (0.0886)  time: 0.6130 (1.3111)  data: 0.0003 (0.0011)  lr: 0.089614  max mem: 14129
INFO:maskrcnn_benchmark.trainer:eta: 6:25:42  iter: 350  loss: 1.2755 (1.5103)  loss_classifier: 0.4875 (0.5526)  loss_box_reg: 0.1993 (0.1620)  loss_mask: 0.4203 (0.5569)  loss_objectness: 0.0930 (0.1542)  loss_rpn_box_reg: 0.0739 (0.0846)  time: 0.6130 (1.3112)  data: 0.0003 (0.0011)  lr: 0.089614  max mem: 13981
INFO:maskrcnn_benchmark.trainer:eta: 6:25:46  iter: 350  loss: 1.2599 (1.5280)  loss_classifier: 0.4656 (0.5624)  loss_box_reg: 0.1932 (0.1653)  loss_mask: 0.4239 (0.5571)  loss_objectness: 0.0951 (0.1533)  loss_rpn_box_reg: 0.0743 (0.0898)  time: 0.6113 (1.3114)  data: 0.0003 (0.0014)  lr: 0.089614  max mem: 13894
INFO:maskrcnn_benchmark.trainer:eta: 6:25:45  iter: 350  loss: 1.2360 (1.4990)  loss_classifier: 0.4502 (0.5500)  loss_box_reg: 0.1859 (0.1609)  loss_mask: 0.4160 (0.5559)  loss_objectness: 0.0810 (0.1484)  loss_rpn_box_reg: 0.0711 (0.0838)  time: 0.6118 (1.3114)  data: 0.0003 (0.0013)  lr: 0.089614  max mem: 14072
INFO:maskrcnn_benchmark.trainer:eta: 6:25:46  iter: 350  loss: 1.2357 (1.5176)  loss_classifier: 0.4774 (0.5586)  loss_box_reg: 0.1957 (0.1638)  loss_mask: 0.4182 (0.5579)  loss_objectness: 0.0855 (0.1518)  loss_rpn_box_reg: 0.0733 (0.0856)  time: 0.6113 (1.3114)  data: 0.0003 (0.0013)  lr: 0.089614  max mem: 14141
INFO:maskrcnn_benchmark.trainer:eta: 6:25:45  iter: 350  loss: 1.2525 (1.5096)  loss_classifier: 0.4688 (0.5559)  loss_box_reg: 0.1887 (0.1633)  loss_mask: 0.4119 (0.5589)  loss_objectness: 0.0908 (0.1471)  loss_rpn_box_reg: 0.0775 (0.0844)  time: 0.6115 (1.3113)  data: 0.0003 (0.0012)  lr: 0.089614  max mem: 14048
2021-10-16 11:46:09,705 maskrcnn_benchmark.trainer INFO: eta: 6:25:43  iter: 350  loss: 1.2690 (1.5282)  loss_classifier: 0.4828 (0.5626)  loss_box_reg: 0.1976 (0.1658)  loss_mask: 0.4168 (0.5551)  loss_objectness: 0.0844 (0.1541)  loss_rpn_box_reg: 0.0871 (0.0906)  time: 0.6113 (1.3113)  data: 0.0003 (0.0011)  lr: 0.089614  max mem: 14007
INFO:maskrcnn_benchmark.trainer:eta: 6:25:43  iter: 350  loss: 1.2690 (1.5282)  loss_classifier: 0.4828 (0.5626)  loss_box_reg: 0.1976 (0.1658)  loss_mask: 0.4168 (0.5551)  loss_objectness: 0.0844 (0.1541)  loss_rpn_box_reg: 0.0871 (0.0906)  time: 0.6113 (1.3113)  data: 0.0003 (0.0011)  lr: 0.089614  max mem: 14007
:::MLLOG {"namespace": "", "time_ms": 1634384769705, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 1.5282405837944575, "loss_classifier": 0.5625875872799329, "loss_box_reg": 0.16583976421970875, "loss_mask": 0.5551216069289616, "loss_objectness": 0.1540752202378852, "loss_rpn_box_reg": 0.09061640714428254, "time": 1.311266497203282, "data": 0.0011207376207624162, "throughput": 97.61554975514373}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 350}}
:::MLLOG {"namespace": "", "time_ms": 1634384769705, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 97.61554975514373, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 5:59:03  iter: 400  loss: 1.2045 (1.4706)  loss_classifier: 0.4464 (0.5401)  loss_box_reg: 0.1720 (0.1640)  loss_mask: 0.3925 (0.5364)  loss_objectness: 0.0904 (0.1441)  loss_rpn_box_reg: 0.0669 (0.0860)  time: 0.6116 (1.2241)  data: 0.0003 (0.0012)  lr: 0.102411  max mem: 13972
INFO:maskrcnn_benchmark.trainer:eta: 5:59:00  iter: 400  loss: 1.1460 (1.4784)  loss_classifier: 0.4271 (0.5455)  loss_box_reg: 0.1647 (0.1657)  loss_mask: 0.4077 (0.5365)  loss_objectness: 0.0774 (0.1440)  loss_rpn_box_reg: 0.0605 (0.0867)  time: 0.6118 (1.2239)  data: 0.0003 (0.0010)  lr: 0.102411  max mem: 14129
INFO:maskrcnn_benchmark.trainer:eta: 5:59:01  iter: 400  loss: 1.1865 (1.4702)  loss_classifier: 0.4194 (0.5390)  loss_box_reg: 0.1745 (0.1642)  loss_mask: 0.4077 (0.5369)  loss_objectness: 0.0877 (0.1457)  loss_rpn_box_reg: 0.0739 (0.0843)  time: 0.6118 (1.2239)  data: 0.0003 (0.0011)  lr: 0.102411  max mem: 13981
INFO:maskrcnn_benchmark.trainer:eta: 5:59:03  iter: 400  loss: 1.2342 (1.4626)  loss_classifier: 0.4624 (0.5378)  loss_box_reg: 0.1840 (0.1638)  loss_mask: 0.4001 (0.5369)  loss_objectness: 0.0859 (0.1411)  loss_rpn_box_reg: 0.0672 (0.0830)  time: 0.6127 (1.2241)  data: 0.0003 (0.0012)  lr: 0.102411  max mem: 14072
INFO:maskrcnn_benchmark.trainer:eta: 5:59:04  iter: 400  loss: 1.2407 (1.4865)  loss_classifier: 0.4524 (0.5482)  loss_box_reg: 0.1807 (0.1671)  loss_mask: 0.4167 (0.5381)  loss_objectness: 0.0853 (0.1453)  loss_rpn_box_reg: 0.0771 (0.0877)  time: 0.6126 (1.2241)  data: 0.0003 (0.0012)  lr: 0.102411  max mem: 13908
INFO:maskrcnn_benchmark.trainer:eta: 5:59:03  iter: 400  loss: 1.2004 (1.4694)  loss_classifier: 0.4525 (0.5414)  loss_box_reg: 0.1838 (0.1658)  loss_mask: 0.3904 (0.5395)  loss_objectness: 0.0814 (0.1395)  loss_rpn_box_reg: 0.0663 (0.0833)  time: 0.6115 (1.2241)  data: 0.0003 (0.0011)  lr: 0.102411  max mem: 14048
2021-10-16 11:46:40,358 maskrcnn_benchmark.trainer INFO: eta: 5:59:02  iter: 400  loss: 1.2271 (1.4896)  loss_classifier: 0.4659 (0.5493)  loss_box_reg: 0.1765 (0.1682)  loss_mask: 0.4040 (0.5367)  loss_objectness: 0.0954 (0.1461)  loss_rpn_box_reg: 0.0684 (0.0893)  time: 0.6121 (1.2240)  data: 0.0003 (0.0010)  lr: 0.102411  max mem: 14007
INFO:maskrcnn_benchmark.trainer:eta: 5:59:04  iter: 400  loss: 1.1863 (1.4802)  loss_classifier: 0.4473 (0.5451)  loss_box_reg: 0.1752 (0.1663)  loss_mask: 0.4012 (0.5387)  loss_objectness: 0.0865 (0.1448)  loss_rpn_box_reg: 0.0818 (0.0853)  time: 0.6117 (1.2241)  data: 0.0003 (0.0012)  lr: 0.102411  max mem: 14335
INFO:maskrcnn_benchmark.trainer:eta: 5:59:02  iter: 400  loss: 1.2271 (1.4896)  loss_classifier: 0.4659 (0.5493)  loss_box_reg: 0.1765 (0.1682)  loss_mask: 0.4040 (0.5367)  loss_objectness: 0.0954 (0.1461)  loss_rpn_box_reg: 0.0684 (0.0893)  time: 0.6121 (1.2240)  data: 0.0003 (0.0010)  lr: 0.102411  max mem: 14007
:::MLLOG {"namespace": "", "time_ms": 1634384800358, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 1.489600383490324, "loss_classifier": 0.5492884964123368, "loss_box_reg": 0.16823546390922275, "loss_mask": 0.5367337246239186, "loss_objectness": 0.1460826209001243, "loss_rpn_box_reg": 0.08926007931586355, "time": 1.2239904236793517, "data": 0.0010252952575683593, "throughput": 104.57598157935597}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 400}}
:::MLLOG {"namespace": "", "time_ms": 1634384800358, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 104.57598157935597, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 5:38:11  iter: 450  loss: 1.0924 (1.4258)  loss_classifier: 0.4049 (0.5232)  loss_box_reg: 0.1689 (0.1649)  loss_mask: 0.3812 (0.5204)  loss_objectness: 0.0783 (0.1349)  loss_rpn_box_reg: 0.0635 (0.0824)  time: 0.6152 (1.1562)  data: 0.0003 (0.0011)  lr: 0.115209  max mem: 14072
INFO:maskrcnn_benchmark.trainer:eta: 5:38:11  iter: 450  loss: 1.1010 (1.4492)  loss_classifier: 0.3783 (0.5323)  loss_box_reg: 0.1747 (0.1681)  loss_mask: 0.3858 (0.5218)  loss_objectness: 0.0754 (0.1397)  loss_rpn_box_reg: 0.0801 (0.0873)  time: 0.6143 (1.1562)  data: 0.0003 (0.0012)  lr: 0.115209  max mem: 13997
INFO:maskrcnn_benchmark.trainer:eta: 5:38:11  iter: 450  loss: 1.0711 (1.4347)  loss_classifier: 0.3676 (0.5253)  loss_box_reg: 0.1647 (0.1652)  loss_mask: 0.3852 (0.5206)  loss_objectness: 0.0833 (0.1385)  loss_rpn_box_reg: 0.0557 (0.0850)  time: 0.6140 (1.1562)  data: 0.0003 (0.0011)  lr: 0.115209  max mem: 14294
INFO:maskrcnn_benchmark.trainer:eta: 5:38:08  iter: 450  loss: 1.1232 (1.4382)  loss_classifier: 0.3896 (0.5263)  loss_box_reg: 0.1764 (0.1663)  loss_mask: 0.3736 (0.5214)  loss_objectness: 0.0857 (0.1399)  loss_rpn_box_reg: 0.0704 (0.0843)  time: 0.6143 (1.1560)  data: 0.0003 (0.0010)  lr: 0.115209  max mem: 14078
INFO:maskrcnn_benchmark.trainer:eta: 5:38:07  iter: 450  loss: 1.1859 (1.4448)  loss_classifier: 0.4250 (0.5328)  loss_box_reg: 0.1882 (0.1676)  loss_mask: 0.3891 (0.5206)  loss_objectness: 0.0827 (0.1378)  loss_rpn_box_reg: 0.0752 (0.0859)  time: 0.6140 (1.1560)  data: 0.0003 (0.0009)  lr: 0.115209  max mem: 14129
INFO:maskrcnn_benchmark.trainer:eta: 5:38:10  iter: 450  loss: 1.0621 (1.4358)  loss_classifier: 0.3873 (0.5287)  loss_box_reg: 0.1744 (0.1674)  loss_mask: 0.3865 (0.5230)  loss_objectness: 0.0822 (0.1340)  loss_rpn_box_reg: 0.0672 (0.0826)  time: 0.6138 (1.1562)  data: 0.0003 (0.0010)  lr: 0.115209  max mem: 14048
2021-10-16 11:47:11,009 maskrcnn_benchmark.trainer INFO: eta: 5:38:09  iter: 450  loss: 1.1313 (1.4495)  loss_classifier: 0.4040 (0.5334)  loss_box_reg: 0.1708 (0.1688)  loss_mask: 0.3814 (0.5205)  loss_objectness: 0.0846 (0.1392)  loss_rpn_box_reg: 0.0735 (0.0876)  time: 0.6137 (1.1561)  data: 0.0003 (0.0010)  lr: 0.115209  max mem: 14007
INFO:maskrcnn_benchmark.trainer:eta: 5:38:09  iter: 450  loss: 1.1313 (1.4495)  loss_classifier: 0.4040 (0.5334)  loss_box_reg: 0.1708 (0.1688)  loss_mask: 0.3814 (0.5205)  loss_objectness: 0.0846 (0.1392)  loss_rpn_box_reg: 0.0735 (0.0876)  time: 0.6137 (1.1561)  data: 0.0003 (0.0010)  lr: 0.115209  max mem: 14007
INFO:maskrcnn_benchmark.trainer:eta: 5:38:11  iter: 450  loss: 1.0955 (1.4395)  loss_classifier: 0.4057 (0.5294)  loss_box_reg: 0.1709 (0.1671)  loss_mask: 0.3806 (0.5220)  loss_objectness: 0.0693 (0.1376)  loss_rpn_box_reg: 0.0542 (0.0834)  time: 0.6139 (1.1562)  data: 0.0003 (0.0011)  lr: 0.115209  max mem: 14335
:::MLLOG {"namespace": "", "time_ms": 1634384831009, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 1.4495330450269912, "loss_classifier": 0.5333849227759573, "loss_box_reg": 0.1688397414314871, "loss_mask": 0.5205191407601039, "loss_objectness": 0.13921121491326227, "loss_rpn_box_reg": 0.08757802596108781, "time": 1.1561055930455526, "data": 0.0009561533398098416, "throughput": 110.7165303670982}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 450}}
:::MLLOG {"namespace": "", "time_ms": 1634384831009, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 110.7165303670982, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 5:21:25  iter: 500  loss: 1.1069 (1.4027)  loss_classifier: 0.4050 (0.5156)  loss_box_reg: 0.1671 (0.1679)  loss_mask: 0.3780 (0.5089)  loss_objectness: 0.0764 (0.1288)  loss_rpn_box_reg: 0.0581 (0.0815)  time: 0.6141 (1.1020)  data: 0.0003 (0.0010)  lr: 0.128006  max mem: 14048
2021-10-16 11:47:41,733 maskrcnn_benchmark.trainer INFO: eta: 5:21:24  iter: 500  loss: 1.0907 (1.4174)  loss_classifier: 0.4034 (0.5202)  loss_box_reg: 0.1561 (0.1696)  loss_mask: 0.3770 (0.5065)  loss_objectness: 0.0860 (0.1343)  loss_rpn_box_reg: 0.0748 (0.0868)  time: 0.6142 (1.1019)  data: 0.0003 (0.0009)  lr: 0.128006  max mem: 14007
INFO:maskrcnn_benchmark.trainer:eta: 5:21:26  iter: 500  loss: 1.0703 (1.4074)  loss_classifier: 0.3837 (0.5168)  loss_box_reg: 0.1658 (0.1678)  loss_mask: 0.3853 (0.5082)  loss_objectness: 0.0734 (0.1321)  loss_rpn_box_reg: 0.0618 (0.0826)  time: 0.6141 (1.1021)  data: 0.0003 (0.0010)  lr: 0.128006  max mem: 14335
INFO:maskrcnn_benchmark.trainer:eta: 5:21:24  iter: 500  loss: 1.0907 (1.4174)  loss_classifier: 0.4034 (0.5202)  loss_box_reg: 0.1561 (0.1696)  loss_mask: 0.3770 (0.5065)  loss_objectness: 0.0860 (0.1343)  loss_rpn_box_reg: 0.0748 (0.0868)  time: 0.6142 (1.1019)  data: 0.0003 (0.0009)  lr: 0.128006  max mem: 14007
:::MLLOG {"namespace": "", "time_ms": 1634384861733, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 1.4173789463043214, "loss_classifier": 0.5202430494725704, "loss_box_reg": 0.16964613725198432, "loss_mask": 0.5064599000811577, "loss_objectness": 0.13427642239630222, "loss_rpn_box_reg": 0.08675343791767955, "time": 1.1019433255195619, "data": 0.000902681827545166, "throughput": 116.15842397307367}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 500}}
:::MLLOG {"namespace": "", "time_ms": 1634384861733, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 116.15842397307367, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 5:21:25  iter: 500  loss: 1.1281 (1.4154)  loss_classifier: 0.3975 (0.5187)  loss_box_reg: 0.1728 (0.1686)  loss_mask: 0.3770 (0.5078)  loss_objectness: 0.0809 (0.1343)  loss_rpn_box_reg: 0.0713 (0.0860)  time: 0.6145 (1.1021)  data: 0.0003 (0.0011)  lr: 0.128006  max mem: 13997
INFO:maskrcnn_benchmark.trainer:eta: 5:21:25  iter: 500  loss: 1.0907 (1.3953)  loss_classifier: 0.3873 (0.5106)  loss_box_reg: 0.1685 (0.1657)  loss_mask: 0.3661 (0.5062)  loss_objectness: 0.0843 (0.1308)  loss_rpn_box_reg: 0.0721 (0.0821)  time: 0.6149 (1.1020)  data: 0.0003 (0.0010)  lr: 0.128006  max mem: 14072
INFO:maskrcnn_benchmark.trainer:eta: 5:21:25  iter: 500  loss: 1.0915 (1.4060)  loss_classifier: 0.3951 (0.5145)  loss_box_reg: 0.1594 (0.1666)  loss_mask: 0.3882 (0.5071)  loss_objectness: 0.0781 (0.1333)  loss_rpn_box_reg: 0.0725 (0.0845)  time: 0.6156 (1.1020)  data: 0.0003 (0.0010)  lr: 0.128006  max mem: 14294
INFO:maskrcnn_benchmark.trainer:eta: 5:21:23  iter: 500  loss: 1.1592 (1.4102)  loss_classifier: 0.4214 (0.5158)  loss_box_reg: 0.1773 (0.1680)  loss_mask: 0.3799 (0.5078)  loss_objectness: 0.0896 (0.1349)  loss_rpn_box_reg: 0.0709 (0.0837)  time: 0.6157 (1.1019)  data: 0.0003 (0.0009)  lr: 0.128006  max mem: 14078
INFO:maskrcnn_benchmark.trainer:eta: 5:21:22  iter: 500  loss: 1.0981 (1.4152)  loss_classifier: 0.3960 (0.5216)  loss_box_reg: 0.1647 (0.1690)  loss_mask: 0.3758 (0.5064)  loss_objectness: 0.0776 (0.1327)  loss_rpn_box_reg: 0.0667 (0.0854)  time: 0.6156 (1.1019)  data: 0.0003 (0.0009)  lr: 0.128006  max mem: 14139
INFO:maskrcnn_benchmark.trainer:eta: 5:07:39  iter: 550  loss: 1.1044 (1.3891)  loss_classifier: 0.3793 (0.5077)  loss_box_reg: 0.1735 (0.1693)  loss_mask: 0.3695 (0.4960)  loss_objectness: 0.0798 (0.1302)  loss_rpn_box_reg: 0.0937 (0.0860)  time: 0.6157 (1.0579)  data: 0.0003 (0.0010)  lr: 0.140804  max mem: 14094
INFO:maskrcnn_benchmark.trainer:eta: 5:07:39  iter: 550  loss: 1.0483 (1.3687)  loss_classifier: 0.3412 (0.4998)  loss_box_reg: 0.1570 (0.1663)  loss_mask: 0.3590 (0.4938)  loss_objectness: 0.0801 (0.1266)  loss_rpn_box_reg: 0.0778 (0.0822)  time: 0.6155 (1.0578)  data: 0.0003 (0.0010)  lr: 0.140804  max mem: 14072
INFO:maskrcnn_benchmark.trainer:eta: 5:07:39  iter: 550  loss: 1.0553 (1.3772)  loss_classifier: 0.3669 (0.5029)  loss_box_reg: 0.1563 (0.1669)  loss_mask: 0.3674 (0.4954)  loss_objectness: 0.0711 (0.1287)  loss_rpn_box_reg: 0.0657 (0.0833)  time: 0.6164 (1.0578)  data: 0.0003 (0.0010)  lr: 0.140804  max mem: 14294
INFO:maskrcnn_benchmark.trainer:eta: 5:07:36  iter: 550  loss: 1.0971 (1.3867)  loss_classifier: 0.3588 (0.5094)  loss_box_reg: 0.1642 (0.1693)  loss_mask: 0.3656 (0.4947)  loss_objectness: 0.0834 (0.1285)  loss_rpn_box_reg: 0.0672 (0.0848)  time: 0.6165 (1.0577)  data: 0.0003 (0.0008)  lr: 0.140804  max mem: 14139
INFO:maskrcnn_benchmark.trainer:eta: 5:07:37  iter: 550  loss: 1.0779 (1.3816)  loss_classifier: 0.3307 (0.5039)  loss_box_reg: 0.1607 (0.1682)  loss_mask: 0.3706 (0.4960)  loss_objectness: 0.0786 (0.1305)  loss_rpn_box_reg: 0.0603 (0.0829)  time: 0.6165 (1.0577)  data: 0.0003 (0.0009)  lr: 0.140804  max mem: 14078
INFO:maskrcnn_benchmark.trainer:eta: 5:07:39  iter: 550  loss: 1.0082 (1.3738)  loss_classifier: 0.3363 (0.5033)  loss_box_reg: 0.1598 (0.1683)  loss_mask: 0.3617 (0.4968)  loss_objectness: 0.0827 (0.1247)  loss_rpn_box_reg: 0.0738 (0.0807)  time: 0.6159 (1.0578)  data: 0.0003 (0.0009)  lr: 0.140804  max mem: 14139
2021-10-16 11:48:12,539 maskrcnn_benchmark.trainer INFO: eta: 5:07:38  iter: 550  loss: 1.0489 (1.3869)  loss_classifier: 0.3588 (0.5077)  loss_box_reg: 0.1563 (0.1696)  loss_mask: 0.3584 (0.4940)  loss_objectness: 0.0792 (0.1295)  loss_rpn_box_reg: 0.0841 (0.0860)  time: 0.6159 (1.0578)  data: 0.0003 (0.0009)  lr: 0.140804  max mem: 14189
INFO:maskrcnn_benchmark.trainer:eta: 5:07:40  iter: 550  loss: 1.1300 (1.3811)  loss_classifier: 0.3553 (0.5050)  loss_box_reg: 0.1766 (0.1682)  loss_mask: 0.3743 (0.4966)  loss_objectness: 0.0943 (0.1283)  loss_rpn_box_reg: 0.0833 (0.0830)  time: 0.6159 (1.0579)  data: 0.0003 (0.0010)  lr: 0.140804  max mem: 14335
INFO:maskrcnn_benchmark.trainer:eta: 5:07:38  iter: 550  loss: 1.0489 (1.3869)  loss_classifier: 0.3588 (0.5077)  loss_box_reg: 0.1563 (0.1696)  loss_mask: 0.3584 (0.4940)  loss_objectness: 0.0792 (0.1295)  loss_rpn_box_reg: 0.0841 (0.0860)  time: 0.6159 (1.0578)  data: 0.0003 (0.0009)  lr: 0.140804  max mem: 14189
:::MLLOG {"namespace": "", "time_ms": 1634384892539, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 1.3868514398011293, "loss_classifier": 0.5076969802379608, "loss_box_reg": 0.16961851518220183, "loss_mask": 0.49402684959498316, "loss_objectness": 0.129525733881376, "loss_rpn_box_reg": 0.08598336193371903, "time": 1.0577766201712868, "data": 0.0008628333698619496, "throughput": 121.0085357901679}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 550}}
:::MLLOG {"namespace": "", "time_ms": 1634384892539, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 121.0085357901679, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 4:56:04  iter: 600  loss: 1.0494 (1.3551)  loss_classifier: 0.3602 (0.4947)  loss_box_reg: 0.1569 (0.1679)  loss_mask: 0.3612 (0.4857)  loss_objectness: 0.0763 (0.1245)  loss_rpn_box_reg: 0.0647 (0.0824)  time: 0.6165 (1.0210)  data: 0.0003 (0.0009)  lr: 0.153601  max mem: 14335
INFO:maskrcnn_benchmark.trainer:eta: 4:56:03  iter: 600  loss: 1.0816 (1.3498)  loss_classifier: 0.3798 (0.4933)  loss_box_reg: 0.1552 (0.1682)  loss_mask: 0.3697 (0.4862)  loss_objectness: 0.0878 (0.1213)  loss_rpn_box_reg: 0.0826 (0.0808)  time: 0.6164 (1.0209)  data: 0.0003 (0.0009)  lr: 0.153601  max mem: 14139
2021-10-16 11:48:43,283 maskrcnn_benchmark.trainer INFO: eta: 4:56:03  iter: 600  loss: 1.0073 (1.3599)  loss_classifier: 0.3535 (0.4959)  loss_box_reg: 0.1501 (0.1687)  loss_mask: 0.3665 (0.4841)  loss_objectness: 0.0791 (0.1261)  loss_rpn_box_reg: 0.0773 (0.0851)  time: 0.6165 (1.0209)  data: 0.0003 (0.0008)  lr: 0.153601  max mem: 14189
INFO:maskrcnn_benchmark.trainer:eta: 4:56:03  iter: 600  loss: 1.0073 (1.3599)  loss_classifier: 0.3535 (0.4959)  loss_box_reg: 0.1501 (0.1687)  loss_mask: 0.3665 (0.4841)  loss_objectness: 0.0791 (0.1261)  loss_rpn_box_reg: 0.0773 (0.0851)  time: 0.6165 (1.0209)  data: 0.0003 (0.0008)  lr: 0.153601  max mem: 14189
:::MLLOG {"namespace": "", "time_ms": 1634384923283, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 1.3598935117324193, "loss_classifier": 0.4959223556518555, "loss_box_reg": 0.168702760040372, "loss_mask": 0.4840540401637554, "loss_objectness": 0.12608997356767457, "loss_rpn_box_reg": 0.08512438302238783, "time": 1.02086962501208, "data": 0.0008250578244527181, "throughput": 125.38329759638542}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 600}}
:::MLLOG {"namespace": "", "time_ms": 1634384923284, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 125.38329759638542, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 4:56:04  iter: 600  loss: 1.0987 (1.3663)  loss_classifier: 0.4087 (0.4990)  loss_box_reg: 0.1636 (0.1694)  loss_mask: 0.3646 (0.4855)  loss_objectness: 0.0841 (0.1268)  loss_rpn_box_reg: 0.0623 (0.0857)  time: 0.6175 (1.0210)  data: 0.0003 (0.0010)  lr: 0.153601  max mem: 14371
INFO:maskrcnn_benchmark.trainer:eta: 4:56:04  iter: 600  loss: 1.0742 (1.3447)  loss_classifier: 0.3919 (0.4907)  loss_box_reg: 0.1627 (0.1664)  loss_mask: 0.3638 (0.4835)  loss_objectness: 0.0833 (0.1229)  loss_rpn_box_reg: 0.0598 (0.0813)  time: 0.6168 (1.0209)  data: 0.0003 (0.0009)  lr: 0.153601  max mem: 14153
INFO:maskrcnn_benchmark.trainer:eta: 4:56:04  iter: 600  loss: 1.0365 (1.3508)  loss_classifier: 0.3508 (0.4925)  loss_box_reg: 0.1533 (0.1666)  loss_mask: 0.3699 (0.4847)  loss_objectness: 0.0778 (0.1249)  loss_rpn_box_reg: 0.0626 (0.0821)  time: 0.6172 (1.0209)  data: 0.0003 (0.0009)  lr: 0.153601  max mem: 14294
INFO:maskrcnn_benchmark.trainer:eta: 4:56:02  iter: 600  loss: 1.0088 (1.3569)  loss_classifier: 0.3601 (0.4939)  loss_box_reg: 0.1556 (0.1680)  loss_mask: 0.3579 (0.4856)  loss_objectness: 0.0793 (0.1270)  loss_rpn_box_reg: 0.0600 (0.0824)  time: 0.6172 (1.0208)  data: 0.0003 (0.0008)  lr: 0.153601  max mem: 14102
INFO:maskrcnn_benchmark.trainer:eta: 4:56:01  iter: 600  loss: 1.1278 (1.3602)  loss_classifier: 0.4066 (0.4982)  loss_box_reg: 0.1680 (0.1687)  loss_mask: 0.3678 (0.4840)  loss_objectness: 0.0810 (0.1249)  loss_rpn_box_reg: 0.0729 (0.0845)  time: 0.6171 (1.0208)  data: 0.0003 (0.0008)  lr: 0.153601  max mem: 14139
INFO:maskrcnn_benchmark.trainer:eta: 4:46:12  iter: 650  loss: 1.0379 (1.3224)  loss_classifier: 0.3659 (0.4814)  loss_box_reg: 0.1629 (0.1661)  loss_mask: 0.3614 (0.4743)  loss_objectness: 0.0697 (0.1196)  loss_rpn_box_reg: 0.0674 (0.0809)  time: 0.6187 (0.9898)  data: 0.0003 (0.0009)  lr: 0.160000  max mem: 14153
INFO:maskrcnn_benchmark.trainer:eta: 4:46:12  iter: 650  loss: 1.1478 (1.3310)  loss_classifier: 0.4150 (0.4845)  loss_box_reg: 0.1930 (0.1669)  loss_mask: 0.3693 (0.4756)  loss_objectness: 0.0887 (0.1220)  loss_rpn_box_reg: 0.0726 (0.0819)  time: 0.6188 (0.9898)  data: 0.0003 (0.0009)  lr: 0.160000  max mem: 14294
INFO:maskrcnn_benchmark.trainer:eta: 4:46:11  iter: 650  loss: 1.0306 (1.3334)  loss_classifier: 0.3697 (0.4850)  loss_box_reg: 0.1619 (0.1675)  loss_mask: 0.3593 (0.4759)  loss_objectness: 0.0876 (0.1235)  loss_rpn_box_reg: 0.0774 (0.0815)  time: 0.6188 (0.9897)  data: 0.0003 (0.0008)  lr: 0.160000  max mem: 14102
INFO:maskrcnn_benchmark.trainer:eta: 4:46:10  iter: 650  loss: 1.0942 (1.3390)  loss_classifier: 0.3824 (0.4895)  loss_box_reg: 0.1650 (0.1687)  loss_mask: 0.3593 (0.4748)  loss_objectness: 0.0818 (0.1221)  loss_rpn_box_reg: 0.0616 (0.0839)  time: 0.6188 (0.9897)  data: 0.0003 (0.0008)  lr: 0.160000  max mem: 14139
INFO:maskrcnn_benchmark.trainer:eta: 4:46:13  iter: 650  loss: 1.0373 (1.3430)  loss_classifier: 0.3606 (0.4893)  loss_box_reg: 0.1607 (0.1689)  loss_mask: 0.3595 (0.4763)  loss_objectness: 0.0742 (0.1234)  loss_rpn_box_reg: 0.0627 (0.0850)  time: 0.6182 (0.9898)  data: 0.0003 (0.0009)  lr: 0.160000  max mem: 14371
INFO:maskrcnn_benchmark.trainer:eta: 4:46:12  iter: 650  loss: 1.0218 (1.3279)  loss_classifier: 0.3607 (0.4843)  loss_box_reg: 0.1578 (0.1678)  loss_mask: 0.3529 (0.4766)  loss_objectness: 0.0781 (0.1184)  loss_rpn_box_reg: 0.0770 (0.0809)  time: 0.6173 (0.9898)  data: 0.0003 (0.0009)  lr: 0.160000  max mem: 14290
2021-10-16 11:49:14,087 maskrcnn_benchmark.trainer INFO: eta: 4:46:11  iter: 650  loss: 0.9701 (1.3362)  loss_classifier: 0.3593 (0.4869)  loss_box_reg: 0.1562 (0.1682)  loss_mask: 0.3542 (0.4745)  loss_objectness: 0.0687 (0.1223)  loss_rpn_box_reg: 0.0611 (0.0843)  time: 0.6173 (0.9897)  data: 0.0003 (0.0008)  lr: 0.160000  max mem: 14189
INFO:maskrcnn_benchmark.trainer:eta: 4:46:11  iter: 650  loss: 0.9701 (1.3362)  loss_classifier: 0.3593 (0.4869)  loss_box_reg: 0.1562 (0.1682)  loss_mask: 0.3542 (0.4745)  loss_objectness: 0.0687 (0.1223)  loss_rpn_box_reg: 0.0611 (0.0843)  time: 0.6173 (0.9897)  data: 0.0003 (0.0008)  lr: 0.160000  max mem: 14189
INFO:maskrcnn_benchmark.trainer:eta: 4:46:13  iter: 650  loss: 1.0256 (1.3318)  loss_classifier: 0.3532 (0.4858)  loss_box_reg: 0.1502 (0.1675)  loss_mask: 0.3588 (0.4759)  loss_objectness: 0.0670 (0.1209)  loss_rpn_box_reg: 0.0769 (0.0818)  time: 0.6174 (0.9898)  data: 0.0003 (0.0009)  lr: 0.160000  max mem: 14335
:::MLLOG {"namespace": "", "time_ms": 1634384954087, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 1.3361777178140788, "loss_classifier": 0.48688018798828125, "loss_box_reg": 0.16820063788121423, "loss_mask": 0.47449384230833785, "loss_objectness": 0.12226883356387798, "loss_rpn_box_reg": 0.0843342171007624, "time": 0.9897313539798444, "data": 0.0007905604289128231, "throughput": 129.32802369581867}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 650}}
:::MLLOG {"namespace": "", "time_ms": 1634384954087, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 129.32802369581867, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 4:37:41  iter: 700  loss: 1.0224 (1.3103)  loss_classifier: 0.3515 (0.4773)  loss_box_reg: 0.1586 (0.1678)  loss_mask: 0.3410 (0.4682)  loss_objectness: 0.0853 (0.1164)  loss_rpn_box_reg: 0.0700 (0.0806)  time: 0.6178 (0.9631)  data: 0.0003 (0.0008)  lr: 0.160000  max mem: 14290
INFO:maskrcnn_benchmark.trainer:eta: 4:37:42  iter: 700  loss: 0.9907 (1.3084)  loss_classifier: 0.3658 (0.4763)  loss_box_reg: 0.1605 (0.1664)  loss_mask: 0.3398 (0.4667)  loss_objectness: 0.0687 (0.1179)  loss_rpn_box_reg: 0.0624 (0.0811)  time: 0.6179 (0.9632)  data: 0.0003 (0.0008)  lr: 0.160000  max mem: 14335
2021-10-16 11:49:44,913 maskrcnn_benchmark.trainer INFO: eta: 4:37:41  iter: 700  loss: 0.9522 (1.3142)  loss_classifier: 0.3591 (0.4786)  loss_box_reg: 0.1502 (0.1673)  loss_mask: 0.3516 (0.4658)  loss_objectness: 0.0716 (0.1191)  loss_rpn_box_reg: 0.0554 (0.0835)  time: 0.6178 (0.9631)  data: 0.0003 (0.0008)  lr: 0.160000  max mem: 14189
INFO:maskrcnn_benchmark.trainer:eta: 4:37:41  iter: 700  loss: 0.9522 (1.3142)  loss_classifier: 0.3591 (0.4786)  loss_box_reg: 0.1502 (0.1673)  loss_mask: 0.3516 (0.4658)  loss_objectness: 0.0716 (0.1191)  loss_rpn_box_reg: 0.0554 (0.0835)  time: 0.6178 (0.9631)  data: 0.0003 (0.0008)  lr: 0.160000  max mem: 14189
:::MLLOG {"namespace": "", "time_ms": 1634384984913, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 1.3142341818128314, "loss_classifier": 0.4786259951336043, "loss_box_reg": 0.16725080344260537, "loss_mask": 0.46578467973640986, "loss_objectness": 0.11909614825355155, "loss_rpn_box_reg": 0.08347655619095479, "time": 0.963073091847556, "data": 0.0007620443616594587, "throughput": 132.9078769654391}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 700}}
:::MLLOG {"namespace": "", "time_ms": 1634384984913, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 132.9078769654391, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 4:37:42  iter: 700  loss: 1.0025 (1.3205)  loss_classifier: 0.3581 (0.4803)  loss_box_reg: 0.1433 (0.1680)  loss_mask: 0.3615 (0.4678)  loss_objectness: 0.0691 (0.1203)  loss_rpn_box_reg: 0.0719 (0.0841)  time: 0.6172 (0.9632)  data: 0.0003 (0.0009)  lr: 0.160000  max mem: 14371
INFO:maskrcnn_benchmark.trainer:eta: 4:37:42  iter: 700  loss: 1.0265 (1.3021)  loss_classifier: 0.3802 (0.4739)  loss_box_reg: 0.1548 (0.1654)  loss_mask: 0.3447 (0.4654)  loss_objectness: 0.0762 (0.1170)  loss_rpn_box_reg: 0.0663 (0.0803)  time: 0.6172 (0.9631)  data: 0.0003 (0.0009)  lr: 0.160000  max mem: 14153
INFO:maskrcnn_benchmark.trainer:eta: 4:37:42  iter: 700  loss: 1.0045 (1.3113)  loss_classifier: 0.3474 (0.4762)  loss_box_reg: 0.1616 (0.1664)  loss_mask: 0.3589 (0.4676)  loss_objectness: 0.0819 (0.1194)  loss_rpn_box_reg: 0.0692 (0.0816)  time: 0.6174 (0.9631)  data: 0.0003 (0.0009)  lr: 0.160000  max mem: 14294
INFO:maskrcnn_benchmark.trainer:eta: 4:37:40  iter: 700  loss: 1.0611 (1.3122)  loss_classifier: 0.3621 (0.4765)  loss_box_reg: 0.1659 (0.1669)  loss_mask: 0.3548 (0.4670)  loss_objectness: 0.0769 (0.1206)  loss_rpn_box_reg: 0.0809 (0.0811)  time: 0.6173 (0.9630)  data: 0.0003 (0.0008)  lr: 0.160000  max mem: 14102
INFO:maskrcnn_benchmark.trainer:eta: 4:37:40  iter: 700  loss: 1.0519 (1.3183)  loss_classifier: 0.3344 (0.4808)  loss_box_reg: 0.1632 (0.1680)  loss_mask: 0.3554 (0.4664)  loss_objectness: 0.0720 (0.1192)  loss_rpn_box_reg: 0.0648 (0.0838)  time: 0.6173 (0.9630)  data: 0.0003 (0.0008)  lr: 0.160000  max mem: 14139
INFO:maskrcnn_benchmark.trainer:eta: 4:31:13  iter: 750  loss: 0.9998 (1.2924)  loss_classifier: 0.3605 (0.4682)  loss_box_reg: 0.1595 (0.1663)  loss_mask: 0.3521 (0.4602)  loss_objectness: 0.0685 (0.1167)  loss_rpn_box_reg: 0.0626 (0.0809)  time: 0.6201 (0.9434)  data: 0.0003 (0.0008)  lr: 0.160000  max mem: 14294
INFO:maskrcnn_benchmark.trainer:eta: 4:31:11  iter: 750  loss: 0.9446 (1.2979)  loss_classifier: 0.3285 (0.4724)  loss_box_reg: 0.1421 (0.1674)  loss_mask: 0.3438 (0.4587)  loss_objectness: 0.0635 (0.1164)  loss_rpn_box_reg: 0.0701 (0.0830)  time: 0.6202 (0.9433)  data: 0.0003 (0.0007)  lr: 0.160000  max mem: 14139
INFO:maskrcnn_benchmark.trainer:eta: 4:31:12  iter: 750  loss: 1.0469 (1.2937)  loss_classifier: 0.3519 (0.4686)  loss_box_reg: 0.1591 (0.1665)  loss_mask: 0.3505 (0.4597)  loss_objectness: 0.0804 (0.1181)  loss_rpn_box_reg: 0.0753 (0.0808)  time: 0.6201 (0.9433)  data: 0.0003 (0.0008)  lr: 0.160000  max mem: 14157
INFO:maskrcnn_benchmark.trainer:eta: 4:31:13  iter: 750  loss: 1.0102 (1.2827)  loss_classifier: 0.3506 (0.4656)  loss_box_reg: 0.1527 (0.1649)  loss_mask: 0.3436 (0.4579)  loss_objectness: 0.0612 (0.1143)  loss_rpn_box_reg: 0.0693 (0.0801)  time: 0.6191 (0.9434)  data: 0.0003 (0.0008)  lr: 0.160000  max mem: 14198
INFO:maskrcnn_benchmark.trainer:eta: 4:31:13  iter: 750  loss: 1.0710 (1.3001)  loss_classifier: 0.3617 (0.4718)  loss_box_reg: 0.1601 (0.1674)  loss_mask: 0.3481 (0.4599)  loss_objectness: 0.0813 (0.1176)  loss_rpn_box_reg: 0.0722 (0.0834)  time: 0.6191 (0.9434)  data: 0.0003 (0.0009)  lr: 0.160000  max mem: 14371
INFO:maskrcnn_benchmark.trainer:eta: 4:31:13  iter: 750  loss: 0.9662 (1.2901)  loss_classifier: 0.3254 (0.4692)  loss_box_reg: 0.1414 (0.1672)  loss_mask: 0.3494 (0.4602)  loss_objectness: 0.0722 (0.1136)  loss_rpn_box_reg: 0.0609 (0.0798)  time: 0.6190 (0.9434)  data: 0.0003 (0.0008)  lr: 0.160000  max mem: 14290
2021-10-16 11:50:18,271 maskrcnn_benchmark.trainer INFO: eta: 4:31:12  iter: 750  loss: 1.0440 (1.2951)  loss_classifier: 0.3683 (0.4712)  loss_box_reg: 0.1568 (0.1667)  loss_mask: 0.3500 (0.4580)  loss_objectness: 0.0685 (0.1165)  loss_rpn_box_reg: 0.0678 (0.0827)  time: 0.6191 (0.9433)  data: 0.0003 (0.0007)  lr: 0.160000  max mem: 14189
INFO:maskrcnn_benchmark.trainer:eta: 4:31:12  iter: 750  loss: 1.0440 (1.2951)  loss_classifier: 0.3683 (0.4712)  loss_box_reg: 0.1568 (0.1667)  loss_mask: 0.3500 (0.4580)  loss_objectness: 0.0685 (0.1165)  loss_rpn_box_reg: 0.0678 (0.0827)  time: 0.6191 (0.9433)  data: 0.0003 (0.0007)  lr: 0.160000  max mem: 14189
:::MLLOG {"namespace": "", "time_ms": 1634385018271, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 1.2950740292867025, "loss_classifier": 0.47116471829017004, "loss_box_reg": 0.16670702364016324, "loss_mask": 0.45802115492026013, "loss_objectness": 0.11652062707146009, "loss_rpn_box_reg": 0.08266050653904676, "time": 0.9433455820083618, "data": 0.000736964225769043, "throughput": 135.6872841101252}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 750}}
INFO:maskrcnn_benchmark.trainer:eta: 4:31:14  iter: 750  loss: 1.0304 (1.2904)  loss_classifier: 0.3579 (0.4689)  loss_box_reg: 0.1591 (0.1661)  loss_mask: 0.3525 (0.4593)  loss_objectness: 0.0650 (0.1152)  loss_rpn_box_reg: 0.0818 (0.0809)  time: 0.6189 (0.9434)  data: 0.0003 (0.0008)  lr: 0.160000  max mem: 14541
:::MLLOG {"namespace": "", "time_ms": 1634385018271, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 135.6872841101252, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 4:24:34  iter: 800  loss: 1.0270 (1.2717)  loss_classifier: 0.3829 (0.4619)  loss_box_reg: 0.1660 (0.1666)  loss_mask: 0.3475 (0.4528)  loss_objectness: 0.0715 (0.1111)  loss_rpn_box_reg: 0.0684 (0.0793)  time: 0.6146 (0.9230)  data: 0.0003 (0.0008)  lr: 0.160000  max mem: 14290
2021-10-16 11:50:49,100 maskrcnn_benchmark.trainer INFO: eta: 4:24:34  iter: 800  loss: 0.9904 (1.2757)  loss_classifier: 0.3362 (0.4630)  loss_box_reg: 0.1594 (0.1659)  loss_mask: 0.3431 (0.4509)  loss_objectness: 0.0830 (0.1140)  loss_rpn_box_reg: 0.0618 (0.0820)  time: 0.6141 (0.9229)  data: 0.0003 (0.0007)  lr: 0.160000  max mem: 14189
INFO:maskrcnn_benchmark.trainer:eta: 4:24:35  iter: 800  loss: 1.0245 (1.2748)  loss_classifier: 0.3414 (0.4626)  loss_box_reg: 0.1560 (0.1660)  loss_mask: 0.3433 (0.4524)  loss_objectness: 0.0761 (0.1131)  loss_rpn_box_reg: 0.0715 (0.0806)  time: 0.6152 (0.9230)  data: 0.0003 (0.0008)  lr: 0.160000  max mem: 14541
INFO:maskrcnn_benchmark.trainer:eta: 4:24:34  iter: 800  loss: 0.9904 (1.2757)  loss_classifier: 0.3362 (0.4630)  loss_box_reg: 0.1594 (0.1659)  loss_mask: 0.3431 (0.4509)  loss_objectness: 0.0830 (0.1140)  loss_rpn_box_reg: 0.0618 (0.0820)  time: 0.6141 (0.9229)  data: 0.0003 (0.0007)  lr: 0.160000  max mem: 14189
:::MLLOG {"namespace": "", "time_ms": 1634385049100, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 1.2756709035485982, "loss_classifier": 0.46295168260112407, "loss_box_reg": 0.16587734753236874, "loss_mask": 0.45091196209192275, "loss_objectness": 0.11395461023785174, "loss_rpn_box_reg": 0.08197530236793682, "time": 0.9229227578639985, "data": 0.0007137352228164673, "throughput": 138.68982957603265}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 800}}
:::MLLOG {"namespace": "", "time_ms": 1634385049100, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 138.68982957603265, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 4:24:35  iter: 800  loss: 1.0519 (1.2817)  loss_classifier: 0.3824 (0.4647)  loss_box_reg: 0.1723 (0.1668)  loss_mask: 0.3431 (0.4527)  loss_objectness: 0.0699 (0.1152)  loss_rpn_box_reg: 0.0601 (0.0823)  time: 0.6141 (0.9230)  data: 0.0003 (0.0008)  lr: 0.160000  max mem: 14371
INFO:maskrcnn_benchmark.trainer:eta: 4:24:35  iter: 800  loss: 0.9577 (1.2632)  loss_classifier: 0.3220 (0.4577)  loss_box_reg: 0.1533 (0.1641)  loss_mask: 0.3377 (0.4507)  loss_objectness: 0.0619 (0.1114)  loss_rpn_box_reg: 0.0654 (0.0793)  time: 0.6145 (0.9230)  data: 0.0003 (0.0008)  lr: 0.160000  max mem: 14198
INFO:maskrcnn_benchmark.trainer:eta: 4:24:35  iter: 800  loss: 1.0559 (1.2753)  loss_classifier: 0.3703 (0.4615)  loss_box_reg: 0.1717 (0.1658)  loss_mask: 0.3444 (0.4535)  loss_objectness: 0.0813 (0.1142)  loss_rpn_box_reg: 0.0747 (0.0802)  time: 0.6145 (0.9230)  data: 0.0003 (0.0008)  lr: 0.160000  max mem: 14294
INFO:maskrcnn_benchmark.trainer:eta: 4:24:33  iter: 800  loss: 0.9784 (1.2761)  loss_classifier: 0.3350 (0.4614)  loss_box_reg: 0.1460 (0.1659)  loss_mask: 0.3487 (0.4528)  loss_objectness: 0.0687 (0.1159)  loss_rpn_box_reg: 0.0669 (0.0801)  time: 0.6143 (0.9229)  data: 0.0003 (0.0007)  lr: 0.160000  max mem: 14356
INFO:maskrcnn_benchmark.trainer:eta: 4:24:33  iter: 800  loss: 1.0382 (1.2813)  loss_classifier: 0.3617 (0.4658)  loss_box_reg: 0.1626 (0.1672)  loss_mask: 0.3542 (0.4518)  loss_objectness: 0.0704 (0.1140)  loss_rpn_box_reg: 0.0804 (0.0825)  time: 0.6143 (0.9229)  data: 0.0003 (0.0007)  lr: 0.160000  max mem: 14193
INFO:maskrcnn_benchmark.trainer:eta: 4:19:32  iter: 850  loss: 0.9162 (1.2472)  loss_classifier: 0.3373 (0.4514)  loss_box_reg: 0.1445 (0.1636)  loss_mask: 0.3357 (0.4441)  loss_objectness: 0.0603 (0.1091)  loss_rpn_box_reg: 0.0610 (0.0790)  time: 0.6183 (0.9080)  data: 0.0003 (0.0008)  lr: 0.160000  max mem: 14198
INFO:maskrcnn_benchmark.trainer:eta: 4:19:32  iter: 850  loss: 0.9097 (1.2654)  loss_classifier: 0.3086 (0.4583)  loss_box_reg: 0.1385 (0.1662)  loss_mask: 0.3399 (0.4461)  loss_objectness: 0.0544 (0.1129)  loss_rpn_box_reg: 0.0589 (0.0820)  time: 0.6185 (0.9080)  data: 0.0003 (0.0008)  lr: 0.160000  max mem: 14371
2021-10-16 11:51:22,516 maskrcnn_benchmark.trainer INFO: eta: 4:19:31  iter: 850  loss: 1.0023 (1.2601)  loss_classifier: 0.3533 (0.4566)  loss_box_reg: 0.1560 (0.1655)  loss_mask: 0.3437 (0.4449)  loss_objectness: 0.0690 (0.1115)  loss_rpn_box_reg: 0.0678 (0.0817)  time: 0.6182 (0.9079)  data: 0.0003 (0.0007)  lr: 0.160000  max mem: 14340
INFO:maskrcnn_benchmark.trainer:eta: 4:19:30  iter: 850  loss: 0.9635 (1.2633)  loss_classifier: 0.3494 (0.4585)  loss_box_reg: 0.1539 (0.1666)  loss_mask: 0.3363 (0.4451)  loss_objectness: 0.0639 (0.1115)  loss_rpn_box_reg: 0.0502 (0.0815)  time: 0.6186 (0.9079)  data: 0.0003 (0.0007)  lr: 0.160000  max mem: 14193
INFO:maskrcnn_benchmark.trainer:eta: 4:19:32  iter: 850  loss: 1.0330 (1.2592)  loss_classifier: 0.3406 (0.4548)  loss_box_reg: 0.1616 (0.1655)  loss_mask: 0.3459 (0.4469)  loss_objectness: 0.0767 (0.1121)  loss_rpn_box_reg: 0.0799 (0.0799)  time: 0.6187 (0.9080)  data: 0.0003 (0.0008)  lr: 0.160000  max mem: 14294
INFO:maskrcnn_benchmark.trainer:eta: 4:19:30  iter: 850  loss: 0.9489 (1.2592)  loss_classifier: 0.3278 (0.4543)  loss_box_reg: 0.1588 (0.1652)  loss_mask: 0.3356 (0.4461)  loss_objectness: 0.0631 (0.1136)  loss_rpn_box_reg: 0.0660 (0.0800)  time: 0.6186 (0.9079)  data: 0.0003 (0.0007)  lr: 0.160000  max mem: 14356
INFO:maskrcnn_benchmark.trainer:eta: 4:19:32  iter: 850  loss: 0.9952 (1.2580)  loss_classifier: 0.3290 (0.4555)  loss_box_reg: 0.1456 (0.1650)  loss_mask: 0.3471 (0.4461)  loss_objectness: 0.0745 (0.1112)  loss_rpn_box_reg: 0.0672 (0.0801)  time: 0.6183 (0.9080)  data: 0.0003 (0.0008)  lr: 0.160000  max mem: 14541
INFO:maskrcnn_benchmark.trainer:eta: 4:19:31  iter: 850  loss: 1.0023 (1.2601)  loss_classifier: 0.3533 (0.4566)  loss_box_reg: 0.1560 (0.1655)  loss_mask: 0.3437 (0.4449)  loss_objectness: 0.0690 (0.1115)  loss_rpn_box_reg: 0.0678 (0.0817)  time: 0.6182 (0.9079)  data: 0.0003 (0.0007)  lr: 0.160000  max mem: 14340
INFO:maskrcnn_benchmark.trainer:eta: 4:19:31  iter: 850  loss: 0.9944 (1.2561)  loss_classifier: 0.3653 (0.4555)  loss_box_reg: 0.1664 (0.1663)  loss_mask: 0.3398 (0.4465)  loss_objectness: 0.0629 (0.1089)  loss_rpn_box_reg: 0.0760 (0.0789)  time: 0.6183 (0.9080)  data: 0.0003 (0.0008)  lr: 0.160000  max mem: 14290
:::MLLOG {"namespace": "", "time_ms": 1634385082516, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 1.2601236309724695, "loss_classifier": 0.4565858156190199, "loss_box_reg": 0.16551683344357812, "loss_mask": 0.44486015947426066, "loss_objectness": 0.11145938419024734, "loss_rpn_box_reg": 0.08170143958838547, "time": 0.9079468572840971, "data": 0.0006994286705465878, "throughput": 140.9774140117418}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 850}}
:::MLLOG {"namespace": "", "time_ms": 1634385082517, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 140.9774140117418, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 4:14:09  iter: 900  loss: 0.9922 (1.2432)  loss_classifier: 0.3476 (0.4491)  loss_box_reg: 0.1628 (0.1645)  loss_mask: 0.3489 (0.4403)  loss_objectness: 0.0666 (0.1094)  loss_rpn_box_reg: 0.0745 (0.0799)  time: 0.6163 (0.8918)  data: 0.0003 (0.0007)  lr: 0.160000  max mem: 14541
2021-10-16 11:51:53,324 maskrcnn_benchmark.trainer INFO: eta: 4:14:08  iter: 900  loss: 0.9547 (1.2464)  loss_classifier: 0.3147 (0.4506)  loss_box_reg: 0.1530 (0.1652)  loss_mask: 0.3522 (0.4395)  loss_objectness: 0.0704 (0.1097)  loss_rpn_box_reg: 0.0643 (0.0813)  time: 0.6164 (0.8917)  data: 0.0003 (0.0007)  lr: 0.160000  max mem: 14340
INFO:maskrcnn_benchmark.trainer:eta: 4:14:08  iter: 900  loss: 0.9547 (1.2464)  loss_classifier: 0.3147 (0.4506)  loss_box_reg: 0.1530 (0.1652)  loss_mask: 0.3522 (0.4395)  loss_objectness: 0.0704 (0.1097)  loss_rpn_box_reg: 0.0643 (0.0813)  time: 0.6164 (0.8917)  data: 0.0003 (0.0007)  lr: 0.160000  max mem: 14340
:::MLLOG {"namespace": "", "time_ms": 1634385113324, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 1.2463600169950062, "loss_classifier": 0.4505952833427323, "loss_box_reg": 0.16515391822464556, "loss_mask": 0.43954124391078947, "loss_objectness": 0.10972559748217464, "loss_rpn_box_reg": 0.0813439754727814, "time": 0.891736299196879, "data": 0.0006839513778686523, "throughput": 143.5401924484628}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 900}}
INFO:maskrcnn_benchmark.trainer:eta: 4:14:09  iter: 900  loss: 0.9580 (1.2402)  loss_classifier: 0.3268 (0.4489)  loss_box_reg: 0.1451 (0.1654)  loss_mask: 0.3257 (0.4404)  loss_objectness: 0.0697 (0.1072)  loss_rpn_box_reg: 0.0687 (0.0784)  time: 0.6161 (0.8918)  data: 0.0003 (0.0007)  lr: 0.160000  max mem: 14290
:::MLLOG {"namespace": "", "time_ms": 1634385113325, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 143.5401924484628, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 4:14:09  iter: 900  loss: 0.9630 (1.2503)  loss_classifier: 0.3231 (0.4515)  loss_box_reg: 0.1450 (0.1654)  loss_mask: 0.3437 (0.4405)  loss_objectness: 0.0672 (0.1113)  loss_rpn_box_reg: 0.0692 (0.0817)  time: 0.6157 (0.8918)  data: 0.0003 (0.0008)  lr: 0.160000  max mem: 14371
INFO:maskrcnn_benchmark.trainer:eta: 4:14:09  iter: 900  loss: 0.9950 (1.2334)  loss_classifier: 0.3501 (0.4455)  loss_box_reg: 0.1470 (0.1630)  loss_mask: 0.3399 (0.4385)  loss_objectness: 0.0721 (0.1074)  loss_rpn_box_reg: 0.0709 (0.0791)  time: 0.6160 (0.8918)  data: 0.0003 (0.0008)  lr: 0.160000  max mem: 14231
INFO:maskrcnn_benchmark.trainer:eta: 4:14:09  iter: 900  loss: 0.9702 (1.2438)  loss_classifier: 0.3387 (0.4486)  loss_box_reg: 0.1472 (0.1647)  loss_mask: 0.3383 (0.4410)  loss_objectness: 0.0676 (0.1100)  loss_rpn_box_reg: 0.0652 (0.0795)  time: 0.6147 (0.8918)  data: 0.0003 (0.0008)  lr: 0.160000  max mem: 14294
INFO:maskrcnn_benchmark.trainer:eta: 4:14:08  iter: 900  loss: 1.0366 (1.2460)  loss_classifier: 0.3629 (0.4489)  loss_box_reg: 0.1621 (0.1650)  loss_mask: 0.3468 (0.4405)  loss_objectness: 0.0688 (0.1115)  loss_rpn_box_reg: 0.0681 (0.0801)  time: 0.6146 (0.8917)  data: 0.0003 (0.0007)  lr: 0.160000  max mem: 14585
INFO:maskrcnn_benchmark.trainer:eta: 4:14:07  iter: 900  loss: 0.9855 (1.2503)  loss_classifier: 0.3625 (0.4530)  loss_box_reg: 0.1535 (0.1665)  loss_mask: 0.3384 (0.4396)  loss_objectness: 0.0707 (0.1098)  loss_rpn_box_reg: 0.0613 (0.0814)  time: 0.6155 (0.8917)  data: 0.0003 (0.0007)  lr: 0.160000  max mem: 14193
:::MLLOG {"namespace": "", "time_ms": 1634385138076, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 111, "epoch_num": 1}}
:::MLLOG {"namespace": "", "time_ms": 1634385138077, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 112, "first_epoch_num": 1}}
:::MLLOG {"namespace": "", "time_ms": 1634385138077, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 113, "epoch_num": 1}}
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
2021-10-16 11:52:18,613 maskrcnn_benchmark.data.build WARNING: When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
Done (t=0.63s)
creating index...
Done (t=0.64s)
Done (t=0.64s)creating index...

creating index...
Done (t=0.64s)
creating index...
Done (t=0.63s)
creating index...
Done (t=0.64s)
creating index...
Done (t=0.64s)
creating index...
Done (t=0.65s)
creating index...
index created!
index created!index created!

index created!
index created!
index created!
index created!
shapes=None
passthrough=True
shapes=None
passthrough=True
shapes=None
passthrough=True
creating index...
creating index...
creating index...
shapes=None
passthrough=True
shapes=None
passthrough=True
creating index...
index created!
creating index...
shapes=None
passthrough=True
creating index...
shapes=None
passthrough=True
creating index...
shapes=None
passthrough=True
creating index...
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
:::MLLOG {"namespace": "", "time_ms": 1634385140033, "event_type": "POINT_IN_TIME", "key": "eval_samples", "value": 1, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/tester.py", "lineno": 77}}
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
2021-10-16 11:52:20,034 maskrcnn_benchmark.inference INFO: Start evaluation on coco_2017_val dataset(5000 images).
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]  0% 0/40 [00:00<?, ?it/s]  0% 0/40 [00:00<?, ?it/s]INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]  0% 0/40 [00:00<?, ?it/s]  2% 1/40 [00:01<00:55,  1.43s/it]  2% 1/40 [00:01<00:55,  1.43s/it]  2% 1/40 [00:01<00:55,  1.43s/it]  2% 1/40 [00:01<00:56,  1.44s/it]  2% 1/40 [00:01<00:56,  1.44s/it]  2% 1/40 [00:01<00:56,  1.44s/it]  2% 1/40 [00:01<00:56,  1.45s/it]  2% 1/40 [00:01<00:56,  1.45s/it]  5% 2/40 [00:04<01:12,  1.90s/it]  5% 2/40 [00:04<01:12,  1.90s/it]  5% 2/40 [00:04<01:12,  1.90s/it]  5% 2/40 [00:04<01:12,  1.90s/it]  5% 2/40 [00:04<01:12,  1.90s/it]  5% 2/40 [00:04<01:12,  1.91s/it]  5% 2/40 [00:04<01:12,  1.91s/it]  5% 2/40 [00:04<01:12,  1.91s/it]  8% 3/40 [00:04<00:52,  1.41s/it]  8% 3/40 [00:04<00:52,  1.42s/it]  8% 3/40 [00:04<00:52,  1.42s/it] 10% 4/40 [00:04<00:38,  1.08s/it] 10% 4/40 [00:05<00:39,  1.09s/it] 10% 4/40 [00:05<00:39,  1.09s/it] 12% 5/40 [00:05<00:29,  1.19it/s]  8% 3/40 [00:06<01:09,  1.88s/it]  8% 3/40 [00:06<01:09,  1.88s/it] 10% 4/40 [00:06<00:50,  1.41s/it] 10% 4/40 [00:06<00:50,  1.41s/it] 15% 6/40 [00:07<00:38,  1.13s/it]  8% 3/40 [00:07<01:22,  2.22s/it] 18% 7/40 [00:07<00:29,  1.13it/s]  8% 3/40 [00:07<01:22,  2.22s/it]  8% 3/40 [00:07<01:22,  2.23s/it] 10% 4/40 [00:07<00:59,  1.64s/it] 20% 8/40 [00:07<00:22,  1.42it/s] 12% 5/40 [00:07<00:49,  1.41s/it] 12% 5/40 [00:07<00:49,  1.41s/it] 22% 9/40 [00:07<00:18,  1.71it/s] 12% 5/40 [00:08<00:57,  1.66s/it] 12% 5/40 [00:08<00:57,  1.66s/it] 15% 6/40 [00:08<00:36,  1.08s/it] 15% 6/40 [00:08<00:42,  1.25s/it] 15% 6/40 [00:08<00:42,  1.25s/it] 18% 7/40 [00:08<00:31,  1.04it/s] 18% 7/40 [00:08<00:31,  1.04it/s] 20% 8/40 [00:08<00:24,  1.32it/s] 20% 8/40 [00:08<00:24,  1.31it/s] 22% 9/40 [00:09<00:19,  1.61it/s] 10% 4/40 [00:09<01:15,  2.10s/it] 25% 10/40 [00:09<00:24,  1.20it/s] 25% 10/40 [00:09<00:15,  1.91it/s] 12% 5/40 [00:09<00:54,  1.56s/it] 28% 11/40 [00:09<00:13,  2.18it/s] 15% 6/40 [00:09<00:40,  1.19s/it] 18% 7/40 [00:10<00:30,  1.08it/s] 10% 4/40 [00:10<01:28,  2.45s/it] 20% 8/40 [00:10<00:23,  1.36it/s] 12% 5/40 [00:10<01:11,  2.05s/it] 22% 9/40 [00:10<00:18,  1.66it/s] 15% 6/40 [00:10<01:04,  1.88s/it] 25% 10/40 [00:11<00:15,  1.94it/s] 18% 7/40 [00:11<00:54,  1.65s/it] 28% 11/40 [00:11<00:13,  2.21it/s] 22% 9/40 [00:11<00:44,  1.43s/it] 12% 5/40 [00:12<01:19,  2.26s/it] 28% 11/40 [00:12<00:42,  1.48s/it] 15% 6/40 [00:12<00:56,  1.67s/it] 30% 12/40 [00:12<00:31,  1.12s/it] 30% 12/40 [00:12<00:20,  1.35it/s] 30% 12/40 [00:12<00:34,  1.22s/it] 18% 7/40 [00:12<00:41,  1.26s/it] 32% 13/40 [00:12<00:23,  1.14it/s] 32% 13/40 [00:13<00:16,  1.65it/s] 32% 13/40 [00:13<00:25,  1.06it/s] 20% 8/40 [00:13<00:31,  1.02it/s] 35% 14/40 [00:13<00:18,  1.43it/s] 22% 9/40 [00:13<00:23,  1.30it/s] 15% 6/40 [00:13<01:19,  2.33s/it] 25% 10/40 [00:13<00:46,  1.54s/it] 25% 10/40 [00:13<00:18,  1.59it/s] 18% 7/40 [00:13<01:13,  2.22s/it] 18% 7/40 [00:13<00:56,  1.72s/it] 28% 11/40 [00:13<00:33,  1.17s/it] 20% 8/40 [00:14<01:05,  2.05s/it] 20% 8/40 [00:14<00:52,  1.65s/it] 20% 8/40 [00:14<00:41,  1.29s/it] 30% 12/40 [00:14<00:25,  1.10it/s] 22% 9/40 [00:14<00:47,  1.52s/it] 32% 13/40 [00:14<00:19,  1.40it/s] 22% 9/40 [00:14<00:38,  1.24s/it] 22% 9/40 [00:14<00:30,  1.01it/s] 25% 10/40 [00:14<00:34,  1.15s/it] 35% 14/40 [00:14<00:15,  1.69it/s] 25% 10/40 [00:14<00:23,  1.27it/s] 28% 11/40 [00:15<00:25,  1.12it/s] 28% 11/40 [00:15<00:25,  1.16it/s] 38% 15/40 [00:15<00:12,  1.98it/s] 28% 11/40 [00:15<00:18,  1.56it/s] 30% 12/40 [00:15<00:19,  1.40it/s] 30% 12/40 [00:15<00:19,  1.43it/s] 32% 13/40 [00:15<00:15,  1.70it/s] 35% 14/40 [00:16<00:13,  1.98it/s] 35% 14/40 [00:16<00:34,  1.32s/it] 35% 14/40 [00:16<00:40,  1.55s/it] 38% 15/40 [00:16<00:34,  1.38s/it] 38% 15/40 [00:16<00:11,  2.25it/s] 38% 15/40 [00:16<00:25,  1.02s/it] 38% 15/40 [00:16<00:29,  1.18s/it] 40% 16/40 [00:16<00:25,  1.06s/it] 40% 16/40 [00:16<00:18,  1.29it/s] 40% 16/40 [00:16<00:19,  1.24it/s] 42% 17/40 [00:16<00:18,  1.21it/s] 30% 12/40 [00:16<00:27,  1.01it/s] 42% 17/40 [00:16<00:15,  1.53it/s] 32% 13/40 [00:17<00:21,  1.28it/s] 45% 18/40 [00:17<00:12,  1.82it/s] 25% 10/40 [00:17<00:52,  1.76s/it] 35% 14/40 [00:17<00:16,  1.57it/s] 48% 19/40 [00:17<00:09,  2.12it/s] 38% 15/40 [00:17<00:13,  1.88it/s] 50% 20/40 [00:17<00:08,  2.39it/s] 40% 16/40 [00:18<00:10,  2.19it/s] 32% 13/40 [00:18<00:37,  1.38s/it] 42% 17/40 [00:18<00:09,  2.47it/s] 45% 18/40 [00:18<00:24,  1.11s/it] 35% 14/40 [00:18<00:27,  1.05s/it] 45% 18/40 [00:18<00:08,  2.67it/s] 48% 19/40 [00:18<00:18,  1.15it/s] 38% 15/40 [00:18<00:20,  1.21it/s] 48% 19/40 [00:19<00:07,  2.83it/s] 40% 16/40 [00:19<00:15,  1.50it/s] 40% 16/40 [00:19<00:28,  1.21s/it] 50% 20/40 [00:19<00:06,  2.94it/s] 28% 11/40 [00:19<00:51,  1.78s/it] 40% 16/40 [00:19<00:41,  1.72s/it] 42% 17/40 [00:19<00:33,  1.44s/it] 42% 17/40 [00:19<00:21,  1.07it/s] 52% 21/40 [00:19<00:06,  3.08it/s] 30% 12/40 [00:19<00:37,  1.33s/it] 42% 17/40 [00:19<00:29,  1.29s/it] 52% 21/40 [00:19<00:15,  1.20it/s] 45% 18/40 [00:19<00:24,  1.10s/it] 45% 18/40 [00:19<00:16,  1.35it/s] 55% 22/40 [00:19<00:05,  3.12it/s] 45% 18/40 [00:19<00:21,  1.01it/s] 55% 22/40 [00:19<00:12,  1.49it/s] 48% 19/40 [00:20<00:18,  1.16it/s] 48% 19/40 [00:20<00:12,  1.65it/s] 57% 23/40 [00:20<00:05,  3.17it/s] 48% 19/40 [00:20<00:16,  1.28it/s] 57% 23/40 [00:20<00:09,  1.78it/s] 50% 20/40 [00:20<00:20,  1.03s/it] 50% 20/40 [00:20<00:13,  1.45it/s] 50% 20/40 [00:20<00:10,  1.96it/s] 60% 24/40 [00:20<00:04,  3.23it/s] 50% 20/40 [00:20<00:12,  1.57it/s] 60% 24/40 [00:20<00:07,  2.09it/s] 52% 21/40 [00:20<00:15,  1.23it/s] 52% 21/40 [00:20<00:10,  1.75it/s] 52% 21/40 [00:20<00:08,  2.25it/s] 52% 21/40 [00:20<00:10,  1.87it/s] 62% 25/40 [00:20<00:06,  2.34it/s] 55% 22/40 [00:20<00:11,  1.54it/s] 32% 13/40 [00:21<00:36,  1.35s/it] 55% 22/40 [00:21<00:07,  2.53it/s] 55% 22/40 [00:21<00:08,  2.15it/s] 57% 23/40 [00:21<00:09,  1.84it/s] 35% 14/40 [00:21<00:26,  1.04s/it] 57% 23/40 [00:21<00:07,  2.40it/s] 38% 15/40 [00:21<00:20,  1.23it/s] 60% 24/40 [00:21<00:06,  2.63it/s] 40% 16/40 [00:21<00:15,  1.51it/s] 62% 25/40 [00:21<00:09,  1.55it/s] 62% 25/40 [00:22<00:05,  2.80it/s] 42% 17/40 [00:22<00:12,  1.81it/s] 42% 17/40 [00:22<00:31,  1.36s/it] 65% 26/40 [00:22<00:07,  1.84it/s] 65% 26/40 [00:22<00:10,  1.39it/s] 65% 26/40 [00:22<00:04,  2.95it/s] 45% 18/40 [00:22<00:10,  2.09it/s] 45% 18/40 [00:22<00:22,  1.04s/it] 68% 27/40 [00:22<00:07,  1.68it/s] 68% 27/40 [00:22<00:04,  3.08it/s] 48% 19/40 [00:22<00:08,  2.37it/s] 48% 19/40 [00:22<00:17,  1.23it/s] 57% 23/40 [00:22<00:13,  1.22it/s] 70% 28/40 [00:22<00:06,  1.97it/s] 70% 28/40 [00:22<00:03,  3.14it/s] 50% 20/40 [00:23<00:07,  2.61it/s] 60% 24/40 [00:23<00:10,  1.52it/s] 50% 20/40 [00:23<00:13,  1.51it/s] 72% 29/40 [00:23<00:03,  3.23it/s] 52% 21/40 [00:23<00:06,  2.79it/s] 62% 25/40 [00:23<00:08,  1.82it/s] 75% 30/40 [00:23<00:03,  3.27it/s] 55% 22/40 [00:23<00:23,  1.29s/it] 55% 22/40 [00:23<00:06,  2.92it/s] 65% 26/40 [00:23<00:06,  2.10it/s] 78% 31/40 [00:23<00:02,  3.29it/s] 57% 23/40 [00:24<00:16,  1.01it/s] 57% 23/40 [00:24<00:05,  3.06it/s] 68% 27/40 [00:24<00:05,  2.36it/s] 80% 32/40 [00:24<00:02,  3.30it/s] 60% 24/40 [00:24<00:20,  1.28s/it] 60% 24/40 [00:24<00:05,  3.14it/s] 82% 33/40 [00:24<00:02,  3.38it/s] 62% 25/40 [00:24<00:14,  1.02it/s] 62% 25/40 [00:24<00:04,  3.16it/s] 85% 34/40 [00:24<00:01,  3.43it/s] 65% 26/40 [00:24<00:10,  1.28it/s] 65% 26/40 [00:24<00:04,  3.25it/s] 52% 21/40 [00:24<00:19,  1.00s/it] 88% 35/40 [00:24<00:01,  3.35it/s] 68% 27/40 [00:25<00:08,  1.58it/s] 68% 27/40 [00:25<00:03,  3.29it/s] 68% 27/40 [00:25<00:16,  1.27s/it] 55% 22/40 [00:25<00:14,  1.26it/s] 90% 36/40 [00:25<00:01,  3.32it/s] 70% 28/40 [00:25<00:06,  1.89it/s] 70% 28/40 [00:25<00:08,  1.39it/s] 57% 23/40 [00:25<00:10,  1.57it/s] 70% 28/40 [00:25<00:11,  1.02it/s] 92% 37/40 [00:25<00:00,  3.31it/s] 72% 29/40 [00:25<00:05,  2.19it/s] 72% 29/40 [00:25<00:06,  1.68it/s] 60% 24/40 [00:25<00:08,  1.88it/s] 72% 29/40 [00:25<00:08,  1.28it/s] 72% 29/40 [00:25<00:13,  1.25s/it] 95% 38/40 [00:25<00:00,  3.36it/s] 75% 30/40 [00:25<00:04,  2.49it/s] 75% 30/40 [00:26<00:05,  1.98it/s] 62% 25/40 [00:26<00:06,  2.19it/s] 75% 30/40 [00:26<00:06,  1.57it/s] 75% 30/40 [00:26<00:09,  1.04it/s] 78% 31/40 [00:26<00:03,  2.72it/s] 65% 26/40 [00:26<00:05,  2.44it/s] 78% 31/40 [00:26<00:04,  1.88it/s] 78% 31/40 [00:26<00:06,  1.31it/s] 68% 27/40 [00:26<00:04,  2.68it/s] 80% 32/40 [00:26<00:04,  1.60it/s] 70% 28/40 [00:26<00:04,  2.90it/s] 60% 24/40 [00:26<00:25,  1.59s/it] 70% 28/40 [00:27<00:09,  1.33it/s] 82% 33/40 [00:27<00:03,  1.90it/s] 72% 29/40 [00:27<00:03,  3.02it/s] 62% 25/40 [00:27<00:17,  1.20s/it] 72% 29/40 [00:27<00:06,  1.63it/s] 85% 34/40 [00:27<00:02,  2.20it/s] 75% 30/40 [00:27<00:03,  3.09it/s] 65% 26/40 [00:27<00:12,  1.08it/s] 75% 30/40 [00:27<00:05,  1.93it/s] 88% 35/40 [00:27<00:02,  2.46it/s] 78% 31/40 [00:27<00:08,  1.12it/s] 78% 31/40 [00:27<00:02,  3.17it/s] 68% 27/40 [00:27<00:09,  1.36it/s] 78% 31/40 [00:27<00:04,  2.21it/s] 90% 36/40 [00:27<00:01,  2.70it/s] 80% 32/40 [00:28<00:02,  3.26it/s] 80% 32/40 [00:28<00:05,  1.39it/s] 70% 28/40 [00:28<00:07,  1.66it/s] 80% 32/40 [00:28<00:03,  2.46it/s] 82% 33/40 [00:28<00:02,  3.35it/s] 82% 33/40 [00:28<00:04,  1.71it/s] 72% 29/40 [00:28<00:05,  1.96it/s] 82% 33/40 [00:28<00:02,  2.66it/s] 85% 34/40 [00:28<00:01,  3.33it/s] 85% 34/40 [00:28<00:03,  1.99it/s] 75% 30/40 [00:28<00:04,  2.24it/s] 85% 34/40 [00:28<00:02,  2.85it/s] 88% 35/40 [00:29<00:01,  3.39it/s] 88% 35/40 [00:29<00:02,  2.26it/s] 78% 31/40 [00:29<00:03,  2.49it/s] 88% 35/40 [00:29<00:01,  2.95it/s] 80% 32/40 [00:29<00:09,  1.15s/it] 90% 36/40 [00:29<00:01,  3.43it/s] 90% 36/40 [00:29<00:01,  2.50it/s] 80% 32/40 [00:29<00:02,  2.68it/s] 90% 36/40 [00:29<00:01,  3.05it/s] 80% 32/40 [00:29<00:10,  1.27s/it] 82% 33/40 [00:29<00:06,  1.11it/s] 92% 37/40 [00:29<00:00,  3.42it/s] 82% 33/40 [00:29<00:02,  2.83it/s] 92% 37/40 [00:29<00:00,  3.15it/s] 82% 33/40 [00:29<00:06,  1.02it/s] 85% 34/40 [00:29<00:04,  1.40it/s] 95% 38/40 [00:29<00:00,  3.36it/s] 98% 39/40 [00:29<00:01,  1.41s/it] 85% 34/40 [00:29<00:02,  2.97it/s] 95% 38/40 [00:29<00:00,  3.23it/s] 85% 34/40 [00:30<00:04,  1.29it/s] 88% 35/40 [00:30<00:02,  1.70it/s] 88% 35/40 [00:30<00:01,  3.08it/s] 88% 35/40 [00:30<00:03,  1.58it/s] 90% 36/40 [00:30<00:02,  1.99it/s] 90% 36/40 [00:30<00:01,  3.17it/s] 90% 36/40 [00:30<00:02,  1.87it/s] 92% 37/40 [00:30<00:01,  2.27it/s] 92% 37/40 [00:30<00:02,  1.42it/s] 92% 37/40 [00:30<00:00,  3.18it/s] 92% 37/40 [00:30<00:03,  1.15s/it] 92% 37/40 [00:30<00:01,  2.15it/s] 95% 38/40 [00:31<00:01,  1.75it/s] 95% 38/40 [00:31<00:00,  3.24it/s] 95% 38/40 [00:31<00:01,  1.12it/s] 98% 39/40 [00:31<00:00,  2.05it/s] 98% 39/40 [00:32<00:00,  1.07it/s] 98% 39/40 [00:32<00:00,  1.05it/s] 95% 38/40 [00:32<00:01,  1.18it/s]100% 40/40 [00:33<00:00,  2.14s/it]100% 40/40 [00:33<00:00,  1.19it/s]
 98% 39/40 [00:34<00:01,  1.30s/it] 95% 38/40 [00:34<00:03,  1.51s/it] 98% 39/40 [00:35<00:01,  1.39s/it] 98% 39/40 [00:35<00:01,  1.80s/it]100% 40/40 [00:35<00:00,  1.49s/it]100% 40/40 [00:35<00:00,  1.14it/s]
 98% 39/40 [00:35<00:01,  1.15s/it]100% 40/40 [00:36<00:00,  1.81s/it]100% 40/40 [00:36<00:00,  1.11it/s]
100% 40/40 [00:36<00:00,  1.82s/it]100% 40/40 [00:36<00:00,  1.10it/s]
100% 40/40 [00:38<00:00,  2.10s/it]100% 40/40 [00:38<00:00,  1.03it/s]
100% 40/40 [00:39<00:00,  2.44s/it]100% 40/40 [00:39<00:00,  1.02it/s]
100% 40/40 [00:39<00:00,  2.16s/it]100% 40/40 [00:39<00:00,  1.02it/s]
100% 40/40 [00:39<00:00,  1.98s/it]100% 40/40 [00:39<00:00,  1.02it/s]
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:39.101450 (0.06256231994628907 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:39.098666 (0.06255786552429199 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:39.100846 (0.06256135406494141 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:39.094928 (0.06255188484191894 s / img per device, on 8 devices)
2021-10-16 11:52:59,134 maskrcnn_benchmark.inference INFO: Total inference time: 0:00:39.100724 (0.06256115913391114 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:39.104190 (0.06256670341491699 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:39.096238 (0.06255398025512696 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:39.098300 (0.062557279586792 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:39.100724 (0.06256115913391114 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.084s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.086s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.087s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.089s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.090s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.091s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.092s
2021-10-16 11:52:59,295 maskrcnn_benchmark.timed_section INFO: EXPOSED: Launching evaluation preparation tasks took 0.077s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.077s
:::MLLOG {"namespace": "", "time_ms": 1634385179304, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 168, "first_epoch_num": 2, "epoch_count": 1}}
:::MLLOG {"namespace": "", "time_ms": 1634385179305, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 169, "epoch_num": 2}}
INFO:maskrcnn_benchmark.timed_section:Prepping took 8.889 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 8.949 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 9.091 seconds total
2021-10-16 11:53:09,788 maskrcnn_benchmark.timed_section INFO: Prepping took 9.050 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 9.050 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 9.118 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 9.134 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 9.291 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 9.512 seconds total
INFO:maskrcnn_benchmark.trainer:eta: 4:26:19  iter: 950  loss: 0.9115 (1.2290)  loss_classifier: 0.3269 (0.4424)  loss_box_reg: 0.1477 (0.1641)  loss_mask: 0.3379 (0.4359)  loss_objectness: 0.0610 (0.1080)  loss_rpn_box_reg: 0.0593 (0.0786)  time: 0.6142 (0.9372)  data: 0.0003 (0.0441)  lr: 0.160000  max mem: 14294
INFO:maskrcnn_benchmark.trainer:eta: 4:26:18  iter: 950  loss: 0.9406 (1.2302)  loss_classifier: 0.3208 (0.4423)  loss_box_reg: 0.1444 (0.1643)  loss_mask: 0.3307 (0.4350)  loss_objectness: 0.0648 (0.1091)  loss_rpn_box_reg: 0.0613 (0.0794)  time: 0.6143 (0.9372)  data: 0.0003 (0.0441)  lr: 0.160000  max mem: 14585
INFO:maskrcnn_benchmark.trainer:eta: 4:26:18  iter: 950  loss: 0.9035 (1.2332)  loss_classifier: 0.2876 (0.4458)  loss_box_reg: 0.1403 (0.1655)  loss_mask: 0.3182 (0.4339)  loss_objectness: 0.0667 (0.1076)  loss_rpn_box_reg: 0.0644 (0.0805)  time: 0.6138 (0.9371)  data: 0.0003 (0.0440)  lr: 0.160000  max mem: 14221
INFO:maskrcnn_benchmark.trainer:eta: 4:26:19  iter: 950  loss: 0.9157 (1.2182)  loss_classifier: 0.3198 (0.4394)  loss_box_reg: 0.1494 (0.1624)  loss_mask: 0.3275 (0.4329)  loss_objectness: 0.0559 (0.1051)  loss_rpn_box_reg: 0.0507 (0.0784)  time: 0.6158 (0.9372)  data: 0.0003 (0.0441)  lr: 0.160000  max mem: 14231
INFO:maskrcnn_benchmark.trainer:eta: 4:26:19  iter: 950  loss: 0.9876 (1.2348)  loss_classifier: 0.3467 (0.4449)  loss_box_reg: 0.1511 (0.1647)  loss_mask: 0.3336 (0.4351)  loss_objectness: 0.0684 (0.1090)  loss_rpn_box_reg: 0.0624 (0.0812)  time: 0.6153 (0.9372)  data: 0.0004 (0.0442)  lr: 0.160000  max mem: 14371
INFO:maskrcnn_benchmark.trainer:eta: 4:26:19  iter: 950  loss: 0.9463 (1.2293)  loss_classifier: 0.3310 (0.4432)  loss_box_reg: 0.1464 (0.1640)  loss_mask: 0.3293 (0.4347)  loss_objectness: 0.0664 (0.1075)  loss_rpn_box_reg: 0.0745 (0.0798)  time: 0.6185 (0.9372)  data: 0.0004 (0.0441)  lr: 0.160000  max mem: 14541
2021-10-16 11:53:21,085 maskrcnn_benchmark.trainer INFO: eta: 4:26:18  iter: 950  loss: 0.9610 (1.2326)  loss_classifier: 0.3332 (0.4448)  loss_box_reg: 0.1592 (0.1648)  loss_mask: 0.3408 (0.4341)  loss_objectness: 0.0663 (0.1079)  loss_rpn_box_reg: 0.0686 (0.0809)  time: 0.6180 (0.9372)  data: 0.0004 (0.0441)  lr: 0.160000  max mem: 14340
INFO:maskrcnn_benchmark.trainer:eta: 4:26:19  iter: 950  loss: 0.8940 (1.2257)  loss_classifier: 0.3259 (0.4430)  loss_box_reg: 0.1459 (0.1649)  loss_mask: 0.3317 (0.4349)  loss_objectness: 0.0636 (0.1051)  loss_rpn_box_reg: 0.0589 (0.0779)  time: 0.6173 (0.9372)  data: 0.0004 (0.0441)  lr: 0.160000  max mem: 14290
INFO:maskrcnn_benchmark.trainer:eta: 4:26:18  iter: 950  loss: 0.9610 (1.2326)  loss_classifier: 0.3332 (0.4448)  loss_box_reg: 0.1592 (0.1648)  loss_mask: 0.3408 (0.4341)  loss_objectness: 0.0663 (0.1079)  loss_rpn_box_reg: 0.0686 (0.0809)  time: 0.6180 (0.9372)  data: 0.0004 (0.0441)  lr: 0.160000  max mem: 14340
:::MLLOG {"namespace": "", "time_ms": 1634385201086, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 1.2326186887841475, "loss_classifier": 0.4448149688463462, "loss_box_reg": 0.16482517849433384, "loss_mask": 0.43412881524939284, "loss_objectness": 0.10791754827883683, "loss_rpn_box_reg": 0.08093217906002935, "time": 0.937183007441069, "data": 0.044124015005011306, "throughput": 136.57951433572995}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 950}}
:::MLLOG {"namespace": "", "time_ms": 1634385201086, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 136.57951433572995, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.191s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.192s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.193s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.193s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.193s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.194s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.194s
2021-10-16 11:53:21,280 maskrcnn_benchmark.timed_section INFO: EXPOSED: Launching evaluation task took 0.194s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.194s
Evaluating predictions
Loading and preparing results...
resFile is ./inference/coco_2017_val/segm.json
Loading and preparing results...
resFile is ./inference/coco_2017_val/bbox.json
DONE (t=0.78s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=1.98s)
Running per image evaluation...
Evaluate annotation type *segm*
DONE (t=1.68s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.16533
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.32960
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.15141
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.08579
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.18786
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.21076
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.18389
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.30391
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.31808
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.15008
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.35275
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.40993
DONE (t=2.73s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.16756
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.30898
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.16385
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.06348
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.18646
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.24843
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.18798
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.29711
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.30917
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.13215
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.34789
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.41307
2021-10-16 11:53:33,767 maskrcnn_benchmark.trainer INFO: bbox mAP: 0.16532591477777622, segm mAP: 0.16756100066793891
INFO:maskrcnn_benchmark.trainer:bbox mAP: 0.16532591477777622, segm mAP: 0.16756100066793891
:::MLLOG {"namespace": "", "time_ms": 1634385213767, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": {"BBOX": 0.16532591477777622, "SEGM": 0.16756100066793891}, "metadata": {"file": "tools/train_mlperf.py", "lineno": 133, "epoch_num": 1}}
:::MLLOG {"namespace": "", "time_ms": 1634385213767, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 134, "epoch_num": 1}}
INFO:maskrcnn_benchmark.trainer:eta: 4:21:06  iter: 1000  loss: 0.9324 (1.2062)  loss_classifier: 0.3173 (0.4344)  loss_box_reg: 0.1547 (0.1618)  loss_mask: 0.3415 (0.4281)  loss_objectness: 0.0647 (0.1036)  loss_rpn_box_reg: 0.0719 (0.0783)  time: 0.6179 (0.9216)  data: 0.0003 (0.0422)  lr: 0.160000  max mem: 14231
INFO:maskrcnn_benchmark.trainer:eta: 4:21:07  iter: 1000  loss: 0.9277 (1.2203)  loss_classifier: 0.3225 (0.4389)  loss_box_reg: 0.1502 (0.1640)  loss_mask: 0.3351 (0.4299)  loss_objectness: 0.0675 (0.1070)  loss_rpn_box_reg: 0.0622 (0.0806)  time: 0.6179 (0.9216)  data: 0.0003 (0.0423)  lr: 0.160000  max mem: 14371
INFO:maskrcnn_benchmark.trainer:eta: 4:21:06  iter: 1000  loss: 0.8938 (1.2153)  loss_classifier: 0.2995 (0.4370)  loss_box_reg: 0.1382 (0.1634)  loss_mask: 0.3309 (0.4308)  loss_objectness: 0.0669 (0.1060)  loss_rpn_box_reg: 0.0620 (0.0782)  time: 0.6184 (0.9216)  data: 0.0003 (0.0422)  lr: 0.160000  max mem: 14294
INFO:maskrcnn_benchmark.trainer:eta: 4:21:05  iter: 1000  loss: 0.9256 (1.2171)  loss_classifier: 0.3349 (0.4375)  loss_box_reg: 0.1354 (0.1637)  loss_mask: 0.3286 (0.4296)  loss_objectness: 0.0686 (0.1074)  loss_rpn_box_reg: 0.0615 (0.0789)  time: 0.6184 (0.9215)  data: 0.0003 (0.0421)  lr: 0.160000  max mem: 14585
INFO:maskrcnn_benchmark.trainer:eta: 4:21:05  iter: 1000  loss: 0.9482 (1.2204)  loss_classifier: 0.3226 (0.4407)  loss_box_reg: 0.1485 (0.1651)  loss_mask: 0.3391 (0.4289)  loss_objectness: 0.0673 (0.1058)  loss_rpn_box_reg: 0.0662 (0.0799)  time: 0.6185 (0.9215)  data: 0.0003 (0.0421)  lr: 0.160000  max mem: 14221
INFO:maskrcnn_benchmark.trainer:eta: 4:21:06  iter: 1000  loss: 0.9460 (1.2124)  loss_classifier: 0.3333 (0.4375)  loss_box_reg: 0.1580 (0.1643)  loss_mask: 0.3334 (0.4296)  loss_objectness: 0.0769 (0.1035)  loss_rpn_box_reg: 0.0704 (0.0775)  time: 0.6188 (0.9216)  data: 0.0004 (0.0422)  lr: 0.160000  max mem: 14290
2021-10-16 11:53:52,299 maskrcnn_benchmark.trainer INFO: eta: 4:21:06  iter: 1000  loss: 0.9879 (1.2197)  loss_classifier: 0.3437 (0.4398)  loss_box_reg: 0.1462 (0.1644)  loss_mask: 0.3231 (0.4288)  loss_objectness: 0.0683 (0.1062)  loss_rpn_box_reg: 0.0667 (0.0805)  time: 0.6187 (0.9215)  data: 0.0003 (0.0423)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 4:21:07  iter: 1000  loss: 0.9534 (1.2156)  loss_classifier: 0.3326 (0.4378)  loss_box_reg: 0.1555 (0.1634)  loss_mask: 0.3380 (0.4294)  loss_objectness: 0.0686 (0.1058)  loss_rpn_box_reg: 0.0589 (0.0792)  time: 0.6188 (0.9216)  data: 0.0003 (0.0421)  lr: 0.160000  max mem: 14541
INFO:maskrcnn_benchmark.trainer:eta: 4:21:06  iter: 1000  loss: 0.9879 (1.2197)  loss_classifier: 0.3437 (0.4398)  loss_box_reg: 0.1462 (0.1644)  loss_mask: 0.3231 (0.4288)  loss_objectness: 0.0683 (0.1062)  loss_rpn_box_reg: 0.0667 (0.0805)  time: 0.6187 (0.9215)  data: 0.0003 (0.0423)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634385232299, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 1.2196803611516953, "loss_classifier": 0.4398063513189554, "loss_box_reg": 0.16439795414335096, "loss_mask": 0.428771910071373, "loss_objectness": 0.10617529557459056, "loss_rpn_box_reg": 0.08052885122597217, "time": 0.9215370283126831, "data": 0.04225152349472046, "throughput": 138.8983796281801}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 1000}}
:::MLLOG {"namespace": "", "time_ms": 1634385232299, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 138.8983796281801, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
2021-10-16 11:54:23,131 maskrcnn_benchmark.trainer INFO: eta: 4:16:13  iter: 1050  loss: 0.9370 (1.2079)  loss_classifier: 0.3242 (0.4350)  loss_box_reg: 0.1539 (0.1639)  loss_mask: 0.3266 (0.4243)  loss_objectness: 0.0696 (0.1046)  loss_rpn_box_reg: 0.0563 (0.0802)  time: 0.6193 (0.9070)  data: 0.0003 (0.0403)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 4:16:14  iter: 1050  loss: 0.9110 (1.2029)  loss_classifier: 0.3168 (0.4325)  loss_box_reg: 0.1516 (0.1629)  loss_mask: 0.3203 (0.4249)  loss_objectness: 0.0604 (0.1040)  loss_rpn_box_reg: 0.0614 (0.0787)  time: 0.6195 (0.9071)  data: 0.0003 (0.0401)  lr: 0.160000  max mem: 14541
INFO:maskrcnn_benchmark.trainer:eta: 4:16:13  iter: 1050  loss: 0.9370 (1.2079)  loss_classifier: 0.3242 (0.4350)  loss_box_reg: 0.1539 (0.1639)  loss_mask: 0.3266 (0.4243)  loss_objectness: 0.0696 (0.1046)  loss_rpn_box_reg: 0.0563 (0.0802)  time: 0.6193 (0.9070)  data: 0.0003 (0.0403)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 4:16:14  iter: 1050  loss: 1.0191 (1.2020)  loss_classifier: 0.3619 (0.4332)  loss_box_reg: 0.1643 (0.1642)  loss_mask: 0.3327 (0.4252)  loss_objectness: 0.0675 (0.1021)  loss_rpn_box_reg: 0.0644 (0.0774)  time: 0.6192 (0.9070)  data: 0.0004 (0.0402)  lr: 0.160000  max mem: 14436
:::MLLOG {"namespace": "", "time_ms": 1634385263131, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 1.207922967502049, "loss_classifier": 0.4349949769320942, "loss_box_reg": 0.16391615842047724, "loss_mask": 0.42426009941668735, "loss_objectness": 0.10455571894666978, "loss_rpn_box_reg": 0.08019601465335914, "time": 0.9070181624094645, "data": 0.04025755155654181, "throughput": 141.12176062712143}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 1050}}
:::MLLOG {"namespace": "", "time_ms": 1634385263131, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 141.12176062712143, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 4:16:14  iter: 1050  loss: 0.9183 (1.1938)  loss_classifier: 0.3157 (0.4294)  loss_box_reg: 0.1501 (0.1614)  loss_mask: 0.3232 (0.4234)  loss_objectness: 0.0608 (0.1016)  loss_rpn_box_reg: 0.0611 (0.0780)  time: 0.6183 (0.9071)  data: 0.0003 (0.0402)  lr: 0.160000  max mem: 14231
INFO:maskrcnn_benchmark.trainer:eta: 4:16:14  iter: 1050  loss: 0.9006 (1.2059)  loss_classifier: 0.3271 (0.4333)  loss_box_reg: 0.1522 (0.1631)  loss_mask: 0.3301 (0.4248)  loss_objectness: 0.0543 (0.1049)  loss_rpn_box_reg: 0.0547 (0.0797)  time: 0.6186 (0.9071)  data: 0.0003 (0.0403)  lr: 0.160000  max mem: 14371
INFO:maskrcnn_benchmark.trainer:eta: 4:16:14  iter: 1050  loss: 0.9810 (1.2026)  loss_classifier: 0.3535 (0.4319)  loss_box_reg: 0.1617 (0.1629)  loss_mask: 0.3324 (0.4259)  loss_objectness: 0.0591 (0.1040)  loss_rpn_box_reg: 0.0654 (0.0778)  time: 0.6178 (0.9071)  data: 0.0004 (0.0402)  lr: 0.160000  max mem: 14294
INFO:maskrcnn_benchmark.trainer:eta: 4:16:13  iter: 1050  loss: 0.9381 (1.2093)  loss_classifier: 0.3470 (0.4360)  loss_box_reg: 0.1520 (0.1647)  loss_mask: 0.3168 (0.4245)  loss_objectness: 0.0574 (0.1043)  loss_rpn_box_reg: 0.0577 (0.0797)  time: 0.6178 (0.9070)  data: 0.0003 (0.0401)  lr: 0.160000  max mem: 14221
INFO:maskrcnn_benchmark.trainer:eta: 4:16:13  iter: 1050  loss: 0.9564 (1.2041)  loss_classifier: 0.3222 (0.4324)  loss_box_reg: 0.1447 (0.1630)  loss_mask: 0.3254 (0.4249)  loss_objectness: 0.0690 (0.1056)  loss_rpn_box_reg: 0.0708 (0.0783)  time: 0.6177 (0.9070)  data: 0.0003 (0.0401)  lr: 0.160000  max mem: 14585
INFO:maskrcnn_benchmark.trainer:eta: 4:11:46  iter: 1100  loss: 0.9415 (1.1920)  loss_classifier: 0.3490 (0.4279)  loss_box_reg: 0.1475 (0.1625)  loss_mask: 0.3300 (0.4218)  loss_objectness: 0.0543 (0.1024)  loss_rpn_box_reg: 0.0617 (0.0773)  time: 0.6149 (0.8939)  data: 0.0003 (0.0384)  lr: 0.160000  max mem: 14294
INFO:maskrcnn_benchmark.trainer:eta: 4:11:44  iter: 1100  loss: 0.9249 (1.1976)  loss_classifier: 0.3094 (0.4312)  loss_box_reg: 0.1440 (0.1643)  loss_mask: 0.3239 (0.4204)  loss_objectness: 0.0646 (0.1026)  loss_rpn_box_reg: 0.0593 (0.0792)  time: 0.6149 (0.8938)  data: 0.0003 (0.0383)  lr: 0.160000  max mem: 14221
INFO:maskrcnn_benchmark.trainer:eta: 4:11:45  iter: 1100  loss: 0.9068 (1.1920)  loss_classifier: 0.3054 (0.4276)  loss_box_reg: 0.1318 (0.1622)  loss_mask: 0.3321 (0.4206)  loss_objectness: 0.0653 (0.1039)  loss_rpn_box_reg: 0.0556 (0.0777)  time: 0.6148 (0.8938)  data: 0.0003 (0.0383)  lr: 0.160000  max mem: 14585
INFO:maskrcnn_benchmark.trainer:eta: 4:11:46  iter: 1100  loss: 0.9409 (1.1826)  loss_classifier: 0.3325 (0.4251)  loss_box_reg: 0.1458 (0.1609)  loss_mask: 0.3170 (0.4191)  loss_objectness: 0.0595 (0.1001)  loss_rpn_box_reg: 0.0560 (0.0775)  time: 0.6151 (0.8939)  data: 0.0003 (0.0384)  lr: 0.160000  max mem: 14231
INFO:maskrcnn_benchmark.trainer:eta: 4:11:46  iter: 1100  loss: 0.9187 (1.1942)  loss_classifier: 0.3119 (0.4286)  loss_box_reg: 0.1496 (0.1627)  loss_mask: 0.3255 (0.4204)  loss_objectness: 0.0564 (0.1031)  loss_rpn_box_reg: 0.0629 (0.0795)  time: 0.6146 (0.8939)  data: 0.0003 (0.0385)  lr: 0.160000  max mem: 14371
INFO:maskrcnn_benchmark.trainer:eta: 4:11:46  iter: 1100  loss: 0.9106 (1.1900)  loss_classifier: 0.3288 (0.4283)  loss_box_reg: 0.1490 (0.1635)  loss_mask: 0.3251 (0.4209)  loss_objectness: 0.0585 (0.1004)  loss_rpn_box_reg: 0.0665 (0.0769)  time: 0.6145 (0.8939)  data: 0.0003 (0.0384)  lr: 0.160000  max mem: 14436
INFO:maskrcnn_benchmark.trainer:eta: 4:11:46  iter: 1100  loss: 0.8931 (1.1897)  loss_classifier: 0.3085 (0.4272)  loss_box_reg: 0.1447 (0.1621)  loss_mask: 0.3190 (0.4203)  loss_objectness: 0.0518 (0.1021)  loss_rpn_box_reg: 0.0614 (0.0780)  time: 0.6148 (0.8939)  data: 0.0003 (0.0383)  lr: 0.160000  max mem: 14541
2021-10-16 11:54:53,968 maskrcnn_benchmark.trainer INFO: eta: 4:11:45  iter: 1100  loss: 0.9605 (1.1973)  loss_classifier: 0.3321 (0.4307)  loss_box_reg: 0.1591 (0.1636)  loss_mask: 0.3313 (0.4202)  loss_objectness: 0.0679 (0.1030)  loss_rpn_box_reg: 0.0630 (0.0797)  time: 0.6147 (0.8938)  data: 0.0003 (0.0384)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 4:11:45  iter: 1100  loss: 0.9605 (1.1973)  loss_classifier: 0.3321 (0.4307)  loss_box_reg: 0.1591 (0.1636)  loss_mask: 0.3313 (0.4202)  loss_objectness: 0.0679 (0.1030)  loss_rpn_box_reg: 0.0630 (0.0797)  time: 0.6147 (0.8938)  data: 0.0003 (0.0384)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634385293968, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 1.1972970907254652, "loss_classifier": 0.43073428242044015, "loss_box_reg": 0.16360909417250447, "loss_mask": 0.42024524000557983, "loss_objectness": 0.10297909092496742, "loss_rpn_box_reg": 0.07972938400100578, "time": 0.893824249831113, "data": 0.03844686616550792, "throughput": 143.2048862225269}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 1100}}
:::MLLOG {"namespace": "", "time_ms": 1634385293969, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 143.2048862225269, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 4:09:06  iter: 1150  loss: 0.9276 (1.1818)  loss_classifier: 0.2970 (0.4235)  loss_box_reg: 0.1448 (0.1617)  loss_mask: 0.3248 (0.4161)  loss_objectness: 0.0638 (0.1015)  loss_rpn_box_reg: 0.0569 (0.0789)  time: 0.6161 (0.8870)  data: 0.0003 (0.0368)  lr: 0.160000  max mem: 14371
INFO:maskrcnn_benchmark.trainer:eta: 4:09:06  iter: 1150  loss: 0.9768 (1.1726)  loss_classifier: 0.3331 (0.4210)  loss_box_reg: 0.1485 (0.1605)  loss_mask: 0.3171 (0.4151)  loss_objectness: 0.0662 (0.0988)  loss_rpn_box_reg: 0.0685 (0.0772)  time: 0.6159 (0.8870)  data: 0.0003 (0.0368)  lr: 0.160000  max mem: 14231
INFO:maskrcnn_benchmark.trainer:eta: 4:09:06  iter: 1150  loss: 0.9587 (1.1814)  loss_classifier: 0.3361 (0.4237)  loss_box_reg: 0.1611 (0.1621)  loss_mask: 0.3208 (0.4180)  loss_objectness: 0.0594 (0.1009)  loss_rpn_box_reg: 0.0667 (0.0768)  time: 0.6150 (0.8870)  data: 0.0004 (0.0367)  lr: 0.160000  max mem: 14294
INFO:maskrcnn_benchmark.trainer:eta: 4:09:05  iter: 1150  loss: 0.9358 (1.1810)  loss_classifier: 0.3142 (0.4229)  loss_box_reg: 0.1499 (0.1618)  loss_mask: 0.3247 (0.4167)  loss_objectness: 0.0595 (0.1023)  loss_rpn_box_reg: 0.0641 (0.0772)  time: 0.6150 (0.8870)  data: 0.0003 (0.0367)  lr: 0.160000  max mem: 14585
INFO:maskrcnn_benchmark.trainer:eta: 4:09:05  iter: 1150  loss: 0.9057 (1.1847)  loss_classifier: 0.3236 (0.4261)  loss_box_reg: 0.1407 (0.1633)  loss_mask: 0.3080 (0.4158)  loss_objectness: 0.0655 (0.1010)  loss_rpn_box_reg: 0.0713 (0.0785)  time: 0.6152 (0.8870)  data: 0.0003 (0.0367)  lr: 0.160000  max mem: 14221
INFO:maskrcnn_benchmark.trainer:eta: 4:09:06  iter: 1150  loss: 0.8689 (1.1778)  loss_classifier: 0.3041 (0.4224)  loss_box_reg: 0.1397 (0.1614)  loss_mask: 0.3182 (0.4162)  loss_objectness: 0.0628 (0.1005)  loss_rpn_box_reg: 0.0585 (0.0773)  time: 0.6158 (0.8870)  data: 0.0004 (0.0367)  lr: 0.160000  max mem: 14541
2021-10-16 11:55:30,807 maskrcnn_benchmark.trainer INFO: eta: 4:09:05  iter: 1150  loss: 0.9256 (1.1856)  loss_classifier: 0.3286 (0.4262)  loss_box_reg: 0.1476 (0.1630)  loss_mask: 0.3286 (0.4160)  loss_objectness: 0.0638 (0.1013)  loss_rpn_box_reg: 0.0643 (0.0792)  time: 0.6157 (0.8870)  data: 0.0003 (0.0368)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 4:09:06  iter: 1150  loss: 0.9055 (1.1787)  loss_classifier: 0.3169 (0.4236)  loss_box_reg: 0.1528 (0.1629)  loss_mask: 0.3285 (0.4168)  loss_objectness: 0.0627 (0.0990)  loss_rpn_box_reg: 0.0633 (0.0764)  time: 0.6159 (0.8870)  data: 0.0003 (0.0367)  lr: 0.160000  max mem: 14436
INFO:maskrcnn_benchmark.trainer:eta: 4:09:05  iter: 1150  loss: 0.9256 (1.1856)  loss_classifier: 0.3286 (0.4262)  loss_box_reg: 0.1476 (0.1630)  loss_mask: 0.3286 (0.4160)  loss_objectness: 0.0638 (0.1013)  loss_rpn_box_reg: 0.0643 (0.0792)  time: 0.6157 (0.8870)  data: 0.0003 (0.0368)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634385330807, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 1.1856376374804456, "loss_classifier": 0.4261703312915304, "loss_box_reg": 0.16295251644803616, "loss_mask": 0.4160474229377249, "loss_objectness": 0.101260143003386, "loss_rpn_box_reg": 0.0792072247746198, "time": 0.8869962165666663, "data": 0.036791662340578825, "throughput": 144.3072671667699}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 1150}}
:::MLLOG {"namespace": "", "time_ms": 1634385330808, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 144.3072671667699, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 4:05:13  iter: 1200  loss: 0.9289 (1.1680)  loss_classifier: 0.3235 (0.4195)  loss_box_reg: 0.1433 (0.1622)  loss_mask: 0.3089 (0.4129)  loss_objectness: 0.0655 (0.0976)  loss_rpn_box_reg: 0.0578 (0.0759)  time: 0.6200 (0.8758)  data: 0.0004 (0.0352)  lr: 0.160000  max mem: 14436
2021-10-16 11:56:01,719 maskrcnn_benchmark.trainer INFO: eta: 4:05:13  iter: 1200  loss: 0.9721 (1.1750)  loss_classifier: 0.3326 (0.4220)  loss_box_reg: 0.1506 (0.1623)  loss_mask: 0.3248 (0.4122)  loss_objectness: 0.0599 (0.0997)  loss_rpn_box_reg: 0.0644 (0.0788)  time: 0.6199 (0.8758)  data: 0.0003 (0.0353)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 4:05:14  iter: 1200  loss: 0.9118 (1.1669)  loss_classifier: 0.3081 (0.4180)  loss_box_reg: 0.1455 (0.1605)  loss_mask: 0.3238 (0.4122)  loss_objectness: 0.0626 (0.0991)  loss_rpn_box_reg: 0.0730 (0.0771)  time: 0.6201 (0.8758)  data: 0.0003 (0.0352)  lr: 0.160000  max mem: 14541
INFO:maskrcnn_benchmark.trainer:eta: 4:05:13  iter: 1200  loss: 0.9721 (1.1750)  loss_classifier: 0.3326 (0.4220)  loss_box_reg: 0.1506 (0.1623)  loss_mask: 0.3248 (0.4122)  loss_objectness: 0.0599 (0.0997)  loss_rpn_box_reg: 0.0644 (0.0788)  time: 0.6199 (0.8758)  data: 0.0003 (0.0353)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634385361719, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 1.174993307640155, "loss_classifier": 0.4219748168811202, "loss_box_reg": 0.16234390978992452, "loss_mask": 0.41220503715177376, "loss_objectness": 0.09968387034411232, "loss_rpn_box_reg": 0.07878567411253849, "time": 0.875797627568245, "data": 0.03527768850326538, "throughput": 146.15248542680692}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 1200}}
:::MLLOG {"namespace": "", "time_ms": 1634385361719, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 146.15248542680692, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 4:05:14  iter: 1200  loss: 0.9575 (1.1728)  loss_classifier: 0.3325 (0.4199)  loss_box_reg: 0.1522 (0.1615)  loss_mask: 0.3325 (0.4124)  loss_objectness: 0.0690 (0.1003)  loss_rpn_box_reg: 0.0689 (0.0786)  time: 0.6198 (0.8758)  data: 0.0004 (0.0353)  lr: 0.160000  max mem: 14371
INFO:maskrcnn_benchmark.trainer:eta: 4:05:13  iter: 1200  loss: 0.9532 (1.1633)  loss_classifier: 0.3238 (0.4170)  loss_box_reg: 0.1350 (0.1600)  loss_mask: 0.3201 (0.4114)  loss_objectness: 0.0627 (0.0977)  loss_rpn_box_reg: 0.0669 (0.0771)  time: 0.6196 (0.8758)  data: 0.0003 (0.0352)  lr: 0.160000  max mem: 14231
INFO:maskrcnn_benchmark.trainer:eta: 4:05:13  iter: 1200  loss: 0.8905 (1.1709)  loss_classifier: 0.3012 (0.4196)  loss_box_reg: 0.1328 (0.1616)  loss_mask: 0.3212 (0.4142)  loss_objectness: 0.0565 (0.0993)  loss_rpn_box_reg: 0.0552 (0.0763)  time: 0.6188 (0.8758)  data: 0.0003 (0.0352)  lr: 0.160000  max mem: 14294
INFO:maskrcnn_benchmark.trainer:eta: 4:05:13  iter: 1200  loss: 0.9407 (1.1703)  loss_classifier: 0.3202 (0.4188)  loss_box_reg: 0.1533 (0.1611)  loss_mask: 0.3254 (0.4128)  loss_objectness: 0.0632 (0.1008)  loss_rpn_box_reg: 0.0663 (0.0768)  time: 0.6189 (0.8758)  data: 0.0003 (0.0352)  lr: 0.160000  max mem: 14585
INFO:maskrcnn_benchmark.trainer:eta: 4:05:12  iter: 1200  loss: 0.8755 (1.1738)  loss_classifier: 0.3133 (0.4217)  loss_box_reg: 0.1274 (0.1627)  loss_mask: 0.3082 (0.4118)  loss_objectness: 0.0626 (0.0995)  loss_rpn_box_reg: 0.0551 (0.0781)  time: 0.6189 (0.8758)  data: 0.0003 (0.0352)  lr: 0.160000  max mem: 14275
2021-10-16 11:56:32,699 maskrcnn_benchmark.trainer INFO: eta: 4:01:37  iter: 1250  loss: 0.9103 (1.1649)  loss_classifier: 0.3280 (0.4177)  loss_box_reg: 0.1560 (0.1616)  loss_mask: 0.3129 (0.4086)  loss_objectness: 0.0641 (0.0985)  loss_rpn_box_reg: 0.0694 (0.0784)  time: 0.6214 (0.8656)  data: 0.0003 (0.0339)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 4:01:37  iter: 1250  loss: 0.9103 (1.1649)  loss_classifier: 0.3280 (0.4177)  loss_box_reg: 0.1560 (0.1616)  loss_mask: 0.3129 (0.4086)  loss_objectness: 0.0641 (0.0985)  loss_rpn_box_reg: 0.0694 (0.0784)  time: 0.6214 (0.8656)  data: 0.0003 (0.0339)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 4:01:38  iter: 1250  loss: 0.9178 (1.1572)  loss_classifier: 0.3245 (0.4141)  loss_box_reg: 0.1477 (0.1601)  loss_mask: 0.3251 (0.4087)  loss_objectness: 0.0570 (0.0976)  loss_rpn_box_reg: 0.0543 (0.0766)  time: 0.6214 (0.8656)  data: 0.0004 (0.0338)  lr: 0.160000  max mem: 14541
INFO:maskrcnn_benchmark.trainer:eta: 4:01:38  iter: 1250  loss: 0.9612 (1.1588)  loss_classifier: 0.3391 (0.4156)  loss_box_reg: 0.1451 (0.1616)  loss_mask: 0.3200 (0.4095)  loss_objectness: 0.0604 (0.0965)  loss_rpn_box_reg: 0.0661 (0.0757)  time: 0.6214 (0.8656)  data: 0.0003 (0.0338)  lr: 0.160000  max mem: 14436
:::MLLOG {"namespace": "", "time_ms": 1634385392700, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 1.1648502636909486, "loss_classifier": 0.41770797274112703, "loss_box_reg": 0.16163048480730505, "loss_mask": 0.4085545182943344, "loss_objectness": 0.0985124671369791, "loss_rpn_box_reg": 0.07844482146650553, "time": 0.8655502265930176, "data": 0.03388467922210693, "throughput": 147.88281034115622}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 1250}}
:::MLLOG {"namespace": "", "time_ms": 1634385392700, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 147.88281034115622, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 4:01:38  iter: 1250  loss: 0.9229 (1.1537)  loss_classifier: 0.3300 (0.4133)  loss_box_reg: 0.1514 (0.1595)  loss_mask: 0.3231 (0.4080)  loss_objectness: 0.0549 (0.0964)  loss_rpn_box_reg: 0.0622 (0.0766)  time: 0.6199 (0.8656)  data: 0.0003 (0.0339)  lr: 0.160000  max mem: 14231
INFO:maskrcnn_benchmark.trainer:eta: 4:01:38  iter: 1250  loss: 0.8980 (1.1624)  loss_classifier: 0.3076 (0.4158)  loss_box_reg: 0.1387 (0.1607)  loss_mask: 0.3167 (0.4088)  loss_objectness: 0.0612 (0.0990)  loss_rpn_box_reg: 0.0514 (0.0781)  time: 0.6204 (0.8656)  data: 0.0003 (0.0339)  lr: 0.160000  max mem: 14371
INFO:maskrcnn_benchmark.trainer:eta: 4:01:38  iter: 1250  loss: 0.9566 (1.1602)  loss_classifier: 0.3333 (0.4152)  loss_box_reg: 0.1625 (0.1608)  loss_mask: 0.3322 (0.4104)  loss_objectness: 0.0629 (0.0978)  loss_rpn_box_reg: 0.0672 (0.0759)  time: 0.6188 (0.8656)  data: 0.0004 (0.0338)  lr: 0.160000  max mem: 14294
INFO:maskrcnn_benchmark.trainer:eta: 4:01:37  iter: 1250  loss: 0.9519 (1.1637)  loss_classifier: 0.3050 (0.4175)  loss_box_reg: 0.1528 (0.1621)  loss_mask: 0.3207 (0.4082)  loss_objectness: 0.0631 (0.0983)  loss_rpn_box_reg: 0.0676 (0.0777)  time: 0.6191 (0.8655)  data: 0.0003 (0.0338)  lr: 0.160000  max mem: 14275
INFO:maskrcnn_benchmark.trainer:eta: 4:01:37  iter: 1250  loss: 0.9177 (1.1600)  loss_classifier: 0.3119 (0.4145)  loss_box_reg: 0.1448 (0.1605)  loss_mask: 0.3209 (0.4092)  loss_objectness: 0.0615 (0.0994)  loss_rpn_box_reg: 0.0627 (0.0764)  time: 0.6191 (0.8655)  data: 0.0003 (0.0338)  lr: 0.160000  max mem: 14585
INFO:maskrcnn_benchmark.trainer:eta: 3:58:17  iter: 1300  loss: 0.9154 (1.1517)  loss_classifier: 0.2873 (0.4119)  loss_box_reg: 0.1405 (0.1603)  loss_mask: 0.3266 (0.4070)  loss_objectness: 0.0683 (0.0966)  loss_rpn_box_reg: 0.0607 (0.0758)  time: 0.6188 (0.8561)  data: 0.0003 (0.0326)  lr: 0.160000  max mem: 14294
INFO:maskrcnn_benchmark.trainer:eta: 3:58:16  iter: 1300  loss: 0.8873 (1.1534)  loss_classifier: 0.3001 (0.4134)  loss_box_reg: 0.1426 (0.1612)  loss_mask: 0.3180 (0.4047)  loss_objectness: 0.0613 (0.0969)  loss_rpn_box_reg: 0.0532 (0.0771)  time: 0.6191 (0.8561)  data: 0.0003 (0.0325)  lr: 0.160000  max mem: 14275
INFO:maskrcnn_benchmark.trainer:eta: 3:58:16  iter: 1300  loss: 0.8895 (1.1518)  loss_classifier: 0.3041 (0.4115)  loss_box_reg: 0.1380 (0.1600)  loss_mask: 0.3175 (0.4057)  loss_objectness: 0.0621 (0.0982)  loss_rpn_box_reg: 0.0675 (0.0764)  time: 0.6192 (0.8561)  data: 0.0003 (0.0325)  lr: 0.160000  max mem: 14585
INFO:maskrcnn_benchmark.trainer:eta: 3:58:17  iter: 1300  loss: 0.9358 (1.1450)  loss_classifier: 0.3383 (0.4098)  loss_box_reg: 0.1354 (0.1590)  loss_mask: 0.3167 (0.4046)  loss_objectness: 0.0678 (0.0953)  loss_rpn_box_reg: 0.0598 (0.0762)  time: 0.6191 (0.8561)  data: 0.0003 (0.0326)  lr: 0.160000  max mem: 14307
INFO:maskrcnn_benchmark.trainer:eta: 3:58:17  iter: 1300  loss: 0.9010 (1.1523)  loss_classifier: 0.3179 (0.4118)  loss_box_reg: 0.1458 (0.1599)  loss_mask: 0.3165 (0.4054)  loss_objectness: 0.0575 (0.0976)  loss_rpn_box_reg: 0.0645 (0.0776)  time: 0.6200 (0.8561)  data: 0.0003 (0.0326)  lr: 0.160000  max mem: 14371
INFO:maskrcnn_benchmark.trainer:eta: 3:58:17  iter: 1300  loss: 0.8709 (1.1496)  loss_classifier: 0.2998 (0.4118)  loss_box_reg: 0.1408 (0.1610)  loss_mask: 0.2969 (0.4059)  loss_objectness: 0.0580 (0.0953)  loss_rpn_box_reg: 0.0571 (0.0756)  time: 0.6201 (0.8561)  data: 0.0003 (0.0325)  lr: 0.160000  max mem: 14436
INFO:maskrcnn_benchmark.trainer:eta: 3:58:17  iter: 1300  loss: 0.8700 (1.1474)  loss_classifier: 0.2872 (0.4102)  loss_box_reg: 0.1294 (0.1594)  loss_mask: 0.3043 (0.4053)  loss_objectness: 0.0610 (0.0964)  loss_rpn_box_reg: 0.0631 (0.0762)  time: 0.6200 (0.8561)  data: 0.0003 (0.0325)  lr: 0.160000  max mem: 14541
2021-10-16 11:57:03,698 maskrcnn_benchmark.trainer INFO: eta: 3:58:16  iter: 1300  loss: 0.9265 (1.1554)  loss_classifier: 0.3108 (0.4136)  loss_box_reg: 0.1533 (0.1610)  loss_mask: 0.3212 (0.4051)  loss_objectness: 0.0684 (0.0975)  loss_rpn_box_reg: 0.0695 (0.0784)  time: 0.6199 (0.8561)  data: 0.0004 (0.0326)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 3:58:16  iter: 1300  loss: 0.9265 (1.1554)  loss_classifier: 0.3108 (0.4136)  loss_box_reg: 0.1533 (0.1610)  loss_mask: 0.3212 (0.4051)  loss_objectness: 0.0684 (0.0975)  loss_rpn_box_reg: 0.0695 (0.0784)  time: 0.6199 (0.8561)  data: 0.0004 (0.0326)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634385423698, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 1.1554374798444602, "loss_classifier": 0.4135700925611533, "loss_box_reg": 0.1609509654627898, "loss_mask": 0.4050557299760672, "loss_objectness": 0.09745457233431247, "loss_rpn_box_reg": 0.07840612004439418, "time": 0.8561046248215896, "data": 0.03260018697151771, "throughput": 149.51443583974907}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 1300}}
:::MLLOG {"namespace": "", "time_ms": 1634385423698, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 149.51443583974907, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 3:55:08  iter: 1350  loss: 0.8929 (1.1429)  loss_classifier: 0.2962 (0.4080)  loss_box_reg: 0.1379 (0.1593)  loss_mask: 0.3233 (0.4023)  loss_objectness: 0.0626 (0.0962)  loss_rpn_box_reg: 0.0592 (0.0771)  time: 0.6154 (0.8473)  data: 0.0003 (0.0314)  lr: 0.160000  max mem: 14371
INFO:maskrcnn_benchmark.trainer:eta: 3:55:07  iter: 1350  loss: 0.8842 (1.1366)  loss_classifier: 0.3129 (0.4065)  loss_box_reg: 0.1347 (0.1584)  loss_mask: 0.3173 (0.4015)  loss_objectness: 0.0618 (0.0943)  loss_rpn_box_reg: 0.0509 (0.0759)  time: 0.6160 (0.8473)  data: 0.0003 (0.0314)  lr: 0.160000  max mem: 14339
INFO:maskrcnn_benchmark.trainer:eta: 3:55:07  iter: 1350  loss: 0.8331 (1.1395)  loss_classifier: 0.2916 (0.4076)  loss_box_reg: 0.1300 (0.1600)  loss_mask: 0.3114 (0.4027)  loss_objectness: 0.0605 (0.0941)  loss_rpn_box_reg: 0.0637 (0.0751)  time: 0.6165 (0.8473)  data: 0.0003 (0.0314)  lr: 0.160000  max mem: 14436
INFO:maskrcnn_benchmark.trainer:eta: 3:55:08  iter: 1350  loss: 0.9511 (1.1386)  loss_classifier: 0.3022 (0.4064)  loss_box_reg: 0.1446 (0.1587)  loss_mask: 0.3245 (0.4023)  loss_objectness: 0.0642 (0.0954)  loss_rpn_box_reg: 0.0618 (0.0759)  time: 0.6167 (0.8473)  data: 0.0003 (0.0313)  lr: 0.160000  max mem: 14541
2021-10-16 11:57:34,605 maskrcnn_benchmark.trainer INFO: eta: 3:55:07  iter: 1350  loss: 0.8517 (1.1454)  loss_classifier: 0.2867 (0.4095)  loss_box_reg: 0.1360 (0.1602)  loss_mask: 0.3188 (0.4018)  loss_objectness: 0.0489 (0.0961)  loss_rpn_box_reg: 0.0439 (0.0778)  time: 0.6164 (0.8473)  data: 0.0003 (0.0314)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 3:55:07  iter: 1350  loss: 0.8517 (1.1454)  loss_classifier: 0.2867 (0.4095)  loss_box_reg: 0.1360 (0.1602)  loss_mask: 0.3188 (0.4018)  loss_objectness: 0.0489 (0.0961)  loss_rpn_box_reg: 0.0439 (0.0778)  time: 0.6164 (0.8473)  data: 0.0003 (0.0314)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 3:55:07  iter: 1350  loss: 0.9249 (1.1434)  loss_classifier: 0.3055 (0.4085)  loss_box_reg: 0.1563 (0.1599)  loss_mask: 0.3203 (0.4039)  loss_objectness: 0.0649 (0.0955)  loss_rpn_box_reg: 0.0608 (0.0755)  time: 0.6156 (0.8473)  data: 0.0003 (0.0314)  lr: 0.160000  max mem: 14294
INFO:maskrcnn_benchmark.trainer:eta: 3:55:07  iter: 1350  loss: 0.9363 (1.1437)  loss_classifier: 0.3450 (0.4082)  loss_box_reg: 0.1559 (0.1597)  loss_mask: 0.3276 (0.4027)  loss_objectness: 0.0513 (0.0971)  loss_rpn_box_reg: 0.0534 (0.0761)  time: 0.6153 (0.8473)  data: 0.0003 (0.0313)  lr: 0.160000  max mem: 14585
INFO:maskrcnn_benchmark.trainer:eta: 3:55:06  iter: 1350  loss: 0.9414 (1.1454)  loss_classifier: 0.3277 (0.4098)  loss_box_reg: 0.1514 (0.1607)  loss_mask: 0.3290 (0.4019)  loss_objectness: 0.0688 (0.0960)  loss_rpn_box_reg: 0.0746 (0.0771)  time: 0.6153 (0.8473)  data: 0.0003 (0.0313)  lr: 0.160000  max mem: 14446
:::MLLOG {"namespace": "", "time_ms": 1634385454605, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 1.1454337171271995, "loss_classifier": 0.4094672821296586, "loss_box_reg": 0.16023480604075033, "loss_mask": 0.4018215042794192, "loss_objectness": 0.09607495220447028, "loss_rpn_box_reg": 0.07783517318467299, "time": 0.8472915380972403, "data": 0.03140992040987368, "throughput": 151.06960738383998}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 1350}}
:::MLLOG {"namespace": "", "time_ms": 1634385454606, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 151.06960738383998, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 3:52:09  iter: 1400  loss: 0.9201 (1.1290)  loss_classifier: 0.3228 (0.4034)  loss_box_reg: 0.1427 (0.1579)  loss_mask: 0.3201 (0.3985)  loss_objectness: 0.0675 (0.0934)  loss_rpn_box_reg: 0.0603 (0.0757)  time: 0.6183 (0.8391)  data: 0.0003 (0.0303)  lr: 0.160000  max mem: 14339
INFO:maskrcnn_benchmark.trainer:eta: 3:52:09  iter: 1400  loss: 0.8431 (1.1339)  loss_classifier: 0.3019 (0.4045)  loss_box_reg: 0.1218 (0.1586)  loss_mask: 0.3050 (0.3991)  loss_objectness: 0.0576 (0.0951)  loss_rpn_box_reg: 0.0533 (0.0767)  time: 0.6183 (0.8391)  data: 0.0003 (0.0303)  lr: 0.160000  max mem: 14371
INFO:maskrcnn_benchmark.trainer:eta: 3:52:09  iter: 1400  loss: 0.8815 (1.1351)  loss_classifier: 0.2947 (0.4052)  loss_box_reg: 0.1392 (0.1595)  loss_mask: 0.3244 (0.4009)  loss_objectness: 0.0583 (0.0943)  loss_rpn_box_reg: 0.0609 (0.0752)  time: 0.6188 (0.8391)  data: 0.0003 (0.0303)  lr: 0.160000  max mem: 14294
INFO:maskrcnn_benchmark.trainer:eta: 3:52:08  iter: 1400  loss: 0.9356 (1.1355)  loss_classifier: 0.3306 (0.4048)  loss_box_reg: 0.1585 (0.1592)  loss_mask: 0.3153 (0.3996)  loss_objectness: 0.0673 (0.0960)  loss_rpn_box_reg: 0.0749 (0.0759)  time: 0.6188 (0.8391)  data: 0.0003 (0.0302)  lr: 0.160000  max mem: 14585
INFO:maskrcnn_benchmark.trainer:eta: 3:52:08  iter: 1400  loss: 0.9523 (1.1377)  loss_classifier: 0.3283 (0.4065)  loss_box_reg: 0.1559 (0.1601)  loss_mask: 0.3144 (0.3990)  loss_objectness: 0.0637 (0.0952)  loss_rpn_box_reg: 0.0695 (0.0769)  time: 0.6189 (0.8391)  data: 0.0003 (0.0302)  lr: 0.160000  max mem: 14446
INFO:maskrcnn_benchmark.trainer:eta: 3:52:09  iter: 1400  loss: 0.9273 (1.1304)  loss_classifier: 0.3256 (0.4038)  loss_box_reg: 0.1444 (0.1592)  loss_mask: 0.3209 (0.3996)  loss_objectness: 0.0680 (0.0929)  loss_rpn_box_reg: 0.0663 (0.0748)  time: 0.6179 (0.8391)  data: 0.0003 (0.0302)  lr: 0.160000  max mem: 14436
INFO:maskrcnn_benchmark.trainer:eta: 3:52:09  iter: 1400  loss: 0.9238 (1.1311)  loss_classifier: 0.3371 (0.4035)  loss_box_reg: 0.1491 (0.1583)  loss_mask: 0.3154 (0.3993)  loss_objectness: 0.0650 (0.0942)  loss_rpn_box_reg: 0.0686 (0.0758)  time: 0.6179 (0.8391)  data: 0.0003 (0.0302)  lr: 0.160000  max mem: 14541
2021-10-16 11:58:05,509 maskrcnn_benchmark.trainer INFO: eta: 3:52:09  iter: 1400  loss: 0.9396 (1.1372)  loss_classifier: 0.3151 (0.4062)  loss_box_reg: 0.1346 (0.1596)  loss_mask: 0.3156 (0.3989)  loss_objectness: 0.0757 (0.0952)  loss_rpn_box_reg: 0.0741 (0.0774)  time: 0.6179 (0.8391)  data: 0.0003 (0.0303)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 3:52:09  iter: 1400  loss: 0.9396 (1.1372)  loss_classifier: 0.3151 (0.4062)  loss_box_reg: 0.1346 (0.1596)  loss_mask: 0.3156 (0.3989)  loss_objectness: 0.0757 (0.0952)  loss_rpn_box_reg: 0.0741 (0.0774)  time: 0.6179 (0.8391)  data: 0.0003 (0.0303)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634385485510, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 1.1372372697506632, "loss_classifier": 0.40619709899382933, "loss_box_reg": 0.1595746744209568, "loss_mask": 0.39894735434225626, "loss_objectness": 0.09515581212804786, "loss_rpn_box_reg": 0.07736233038694731, "time": 0.839105510030474, "data": 0.030302964619227817, "throughput": 152.54339111103133}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 1400}}
:::MLLOG {"namespace": "", "time_ms": 1634385485510, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 152.54339111103133, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 3:49:21  iter: 1450  loss: 0.8383 (1.1215)  loss_classifier: 0.2979 (0.4006)  loss_box_reg: 0.1421 (0.1576)  loss_mask: 0.3170 (0.3959)  loss_objectness: 0.0493 (0.0923)  loss_rpn_box_reg: 0.0509 (0.0752)  time: 0.6153 (0.8315)  data: 0.0003 (0.0292)  lr: 0.160000  max mem: 14339
INFO:maskrcnn_benchmark.trainer:eta: 3:49:21  iter: 1450  loss: 0.8357 (1.1247)  loss_classifier: 0.2813 (0.4008)  loss_box_reg: 0.1299 (0.1577)  loss_mask: 0.3127 (0.3962)  loss_objectness: 0.0572 (0.0940)  loss_rpn_box_reg: 0.0503 (0.0760)  time: 0.6158 (0.8315)  data: 0.0003 (0.0293)  lr: 0.160000  max mem: 14371
INFO:maskrcnn_benchmark.trainer:eta: 3:49:21  iter: 1450  loss: 0.9011 (1.1276)  loss_classifier: 0.2912 (0.4020)  loss_box_reg: 0.1407 (0.1591)  loss_mask: 0.3213 (0.3982)  loss_objectness: 0.0615 (0.0933)  loss_rpn_box_reg: 0.0664 (0.0751)  time: 0.6148 (0.8315)  data: 0.0003 (0.0292)  lr: 0.160000  max mem: 14294
INFO:maskrcnn_benchmark.trainer:eta: 3:49:20  iter: 1450  loss: 0.8846 (1.1292)  loss_classifier: 0.2882 (0.4029)  loss_box_reg: 0.1304 (0.1594)  loss_mask: 0.3194 (0.3962)  loss_objectness: 0.0587 (0.0941)  loss_rpn_box_reg: 0.0545 (0.0766)  time: 0.6148 (0.8314)  data: 0.0003 (0.0292)  lr: 0.160000  max mem: 14446
INFO:maskrcnn_benchmark.trainer:eta: 3:49:20  iter: 1450  loss: 0.9284 (1.1280)  loss_classifier: 0.3227 (0.4019)  loss_box_reg: 0.1406 (0.1586)  loss_mask: 0.3190 (0.3968)  loss_objectness: 0.0622 (0.0950)  loss_rpn_box_reg: 0.0612 (0.0757)  time: 0.6150 (0.8315)  data: 0.0003 (0.0292)  lr: 0.160000  max mem: 14585
INFO:maskrcnn_benchmark.trainer:eta: 3:49:21  iter: 1450  loss: 0.8649 (1.1218)  loss_classifier: 0.2895 (0.4002)  loss_box_reg: 0.1365 (0.1586)  loss_mask: 0.3243 (0.3968)  loss_objectness: 0.0510 (0.0918)  loss_rpn_box_reg: 0.0606 (0.0744)  time: 0.6154 (0.8315)  data: 0.0003 (0.0292)  lr: 0.160000  max mem: 14436
INFO:maskrcnn_benchmark.trainer:eta: 3:49:21  iter: 1450  loss: 0.9162 (1.1242)  loss_classifier: 0.3173 (0.4007)  loss_box_reg: 0.1508 (0.1579)  loss_mask: 0.3173 (0.3965)  loss_objectness: 0.0628 (0.0933)  loss_rpn_box_reg: 0.0677 (0.0758)  time: 0.6154 (0.8315)  data: 0.0004 (0.0292)  lr: 0.160000  max mem: 14541
2021-10-16 11:58:36,404 maskrcnn_benchmark.trainer INFO: eta: 3:49:20  iter: 1450  loss: 0.8926 (1.1294)  loss_classifier: 0.2884 (0.4030)  loss_box_reg: 0.1409 (0.1591)  loss_mask: 0.3141 (0.3962)  loss_objectness: 0.0636 (0.0941)  loss_rpn_box_reg: 0.0584 (0.0771)  time: 0.6154 (0.8315)  data: 0.0003 (0.0293)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 3:49:20  iter: 1450  loss: 0.8926 (1.1294)  loss_classifier: 0.2884 (0.4030)  loss_box_reg: 0.1409 (0.1591)  loss_mask: 0.3141 (0.3962)  loss_objectness: 0.0636 (0.0941)  loss_rpn_box_reg: 0.0584 (0.0771)  time: 0.6154 (0.8315)  data: 0.0003 (0.0293)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634385516405, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 1.129431419578092, "loss_classifier": 0.4030228952909338, "loss_box_reg": 0.1590519003722624, "loss_mask": 0.3962148269394348, "loss_objectness": 0.09406223730152023, "loss_rpn_box_reg": 0.07707956008741568, "time": 0.831477735289212, "data": 0.02927436483317408, "throughput": 153.9427871216274}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 1450}}
:::MLLOG {"namespace": "", "time_ms": 1634385516405, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 153.9427871216274, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 3:46:43  iter: 1500  loss: 0.9758 (1.1214)  loss_classifier: 0.3380 (0.3995)  loss_box_reg: 0.1535 (0.1589)  loss_mask: 0.3139 (0.3956)  loss_objectness: 0.0689 (0.0924)  loss_rpn_box_reg: 0.0716 (0.0750)  time: 0.6188 (0.8245)  data: 0.0004 (0.0283)  lr: 0.160000  max mem: 14294
INFO:maskrcnn_benchmark.trainer:eta: 3:46:42  iter: 1500  loss: 0.8740 (1.1212)  loss_classifier: 0.2980 (0.3997)  loss_box_reg: 0.1280 (0.1588)  loss_mask: 0.3134 (0.3933)  loss_objectness: 0.0601 (0.0930)  loss_rpn_box_reg: 0.0625 (0.0764)  time: 0.6189 (0.8244)  data: 0.0003 (0.0282)  lr: 0.160000  max mem: 14446
INFO:maskrcnn_benchmark.trainer:eta: 3:46:43  iter: 1500  loss: 0.8919 (1.1198)  loss_classifier: 0.3020 (0.3985)  loss_box_reg: 0.1320 (0.1580)  loss_mask: 0.3208 (0.3939)  loss_objectness: 0.0553 (0.0939)  loss_rpn_box_reg: 0.0533 (0.0754)  time: 0.6190 (0.8244)  data: 0.0003 (0.0282)  lr: 0.160000  max mem: 14585
INFO:maskrcnn_benchmark.trainer:eta: 3:46:44  iter: 1500  loss: 0.9028 (1.1177)  loss_classifier: 0.3184 (0.3981)  loss_box_reg: 0.1450 (0.1574)  loss_mask: 0.3159 (0.3935)  loss_objectness: 0.0575 (0.0930)  loss_rpn_box_reg: 0.0522 (0.0757)  time: 0.6207 (0.8245)  data: 0.0003 (0.0283)  lr: 0.160000  max mem: 14444
INFO:maskrcnn_benchmark.trainer:eta: 3:46:43  iter: 1500  loss: 0.9182 (1.1142)  loss_classifier: 0.3273 (0.3977)  loss_box_reg: 0.1483 (0.1572)  loss_mask: 0.3174 (0.3931)  loss_objectness: 0.0727 (0.0913)  loss_rpn_box_reg: 0.0627 (0.0749)  time: 0.6208 (0.8245)  data: 0.0003 (0.0283)  lr: 0.160000  max mem: 14339
INFO:maskrcnn_benchmark.trainer:eta: 3:46:43  iter: 1500  loss: 0.9000 (1.1146)  loss_classifier: 0.3339 (0.3973)  loss_box_reg: 0.1429 (0.1581)  loss_mask: 0.3175 (0.3941)  loss_objectness: 0.0707 (0.0910)  loss_rpn_box_reg: 0.0614 (0.0742)  time: 0.6222 (0.8245)  data: 0.0004 (0.0283)  lr: 0.160000  max mem: 14436
INFO:maskrcnn_benchmark.trainer:eta: 3:46:44  iter: 1500  loss: 0.9052 (1.1172)  loss_classifier: 0.3132 (0.3977)  loss_box_reg: 0.1482 (0.1576)  loss_mask: 0.3282 (0.3940)  loss_objectness: 0.0607 (0.0923)  loss_rpn_box_reg: 0.0623 (0.0756)  time: 0.6223 (0.8245)  data: 0.0003 (0.0282)  lr: 0.160000  max mem: 14541
2021-10-16 11:59:07,443 maskrcnn_benchmark.trainer INFO: eta: 3:46:43  iter: 1500  loss: 0.8748 (1.1225)  loss_classifier: 0.3140 (0.4003)  loss_box_reg: 0.1328 (0.1587)  loss_mask: 0.3085 (0.3936)  loss_objectness: 0.0607 (0.0930)  loss_rpn_box_reg: 0.0555 (0.0768)  time: 0.6224 (0.8245)  data: 0.0003 (0.0283)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 3:46:43  iter: 1500  loss: 0.8748 (1.1225)  loss_classifier: 0.3140 (0.4003)  loss_box_reg: 0.1328 (0.1587)  loss_mask: 0.3085 (0.3936)  loss_objectness: 0.0607 (0.0930)  loss_rpn_box_reg: 0.0555 (0.0768)  time: 0.6224 (0.8245)  data: 0.0003 (0.0283)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634385547443, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 1.12247697921594, "loss_classifier": 0.4003064047495524, "loss_box_reg": 0.15868470332507664, "loss_mask": 0.39364882809917134, "loss_objectness": 0.09300981277227402, "loss_rpn_box_reg": 0.07682723098496597, "time": 0.8244544242223104, "data": 0.028314168294270834, "throughput": 155.25418536111266}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 1500}}
:::MLLOG {"namespace": "", "time_ms": 1634385547444, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 155.25418536111266, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 3:44:13  iter: 1550  loss: 0.9246 (1.1080)  loss_classifier: 0.3034 (0.3945)  loss_box_reg: 0.1414 (0.1576)  loss_mask: 0.3164 (0.3918)  loss_objectness: 0.0646 (0.0902)  loss_rpn_box_reg: 0.0709 (0.0740)  time: 0.6151 (0.8178)  data: 0.0003 (0.0274)  lr: 0.160000  max mem: 14436
INFO:maskrcnn_benchmark.trainer:eta: 3:44:13  iter: 1550  loss: 0.8805 (1.1102)  loss_classifier: 0.3028 (0.3950)  loss_box_reg: 0.1544 (0.1570)  loss_mask: 0.3135 (0.3915)  loss_objectness: 0.0510 (0.0914)  loss_rpn_box_reg: 0.0592 (0.0752)  time: 0.6149 (0.8179)  data: 0.0003 (0.0273)  lr: 0.160000  max mem: 14541
2021-10-16 11:59:38,375 maskrcnn_benchmark.trainer INFO: eta: 3:44:13  iter: 1550  loss: 0.9316 (1.1153)  loss_classifier: 0.3158 (0.3974)  loss_box_reg: 0.1415 (0.1581)  loss_mask: 0.3250 (0.3914)  loss_objectness: 0.0591 (0.0920)  loss_rpn_box_reg: 0.0644 (0.0764)  time: 0.6149 (0.8178)  data: 0.0003 (0.0274)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 3:44:13  iter: 1550  loss: 0.9316 (1.1153)  loss_classifier: 0.3158 (0.3974)  loss_box_reg: 0.1415 (0.1581)  loss_mask: 0.3250 (0.3914)  loss_objectness: 0.0591 (0.0920)  loss_rpn_box_reg: 0.0644 (0.0764)  time: 0.6149 (0.8178)  data: 0.0003 (0.0274)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 3:44:13  iter: 1550  loss: 0.9547 (1.1079)  loss_classifier: 0.3240 (0.3954)  loss_box_reg: 0.1526 (0.1568)  loss_mask: 0.3127 (0.3907)  loss_objectness: 0.0586 (0.0904)  loss_rpn_box_reg: 0.0641 (0.0746)  time: 0.6146 (0.8178)  data: 0.0004 (0.0274)  lr: 0.160000  max mem: 14339
:::MLLOG {"namespace": "", "time_ms": 1634385578375, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 1.115322486123731, "loss_classifier": 0.39740602260635743, "loss_box_reg": 0.1580922757664455, "loss_mask": 0.39142116270719035, "loss_objectness": 0.09203893430290684, "loss_rpn_box_reg": 0.07636409129947425, "time": 0.8178150746130174, "data": 0.0274149174844065, "throughput": 156.51460088403044}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 1550}}
INFO:maskrcnn_benchmark.trainer:eta: 3:44:13  iter: 1550  loss: 0.8820 (1.1108)  loss_classifier: 0.2951 (0.3951)  loss_box_reg: 0.1401 (0.1568)  loss_mask: 0.3187 (0.3913)  loss_objectness: 0.0608 (0.0922)  loss_rpn_box_reg: 0.0613 (0.0754)  time: 0.6146 (0.8179)  data: 0.0003 (0.0274)  lr: 0.160000  max mem: 14444
:::MLLOG {"namespace": "", "time_ms": 1634385578375, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 156.51460088403044, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 3:44:13  iter: 1550  loss: 0.8923 (1.1148)  loss_classifier: 0.3040 (0.3969)  loss_box_reg: 0.1476 (0.1584)  loss_mask: 0.3186 (0.3931)  loss_objectness: 0.0585 (0.0915)  loss_rpn_box_reg: 0.0642 (0.0749)  time: 0.6152 (0.8178)  data: 0.0004 (0.0274)  lr: 0.160000  max mem: 14294
INFO:maskrcnn_benchmark.trainer:eta: 3:44:12  iter: 1550  loss: 0.8506 (1.1135)  loss_classifier: 0.2740 (0.3967)  loss_box_reg: 0.1280 (0.1582)  loss_mask: 0.3102 (0.3908)  loss_objectness: 0.0534 (0.0919)  loss_rpn_box_reg: 0.0469 (0.0759)  time: 0.6153 (0.8178)  data: 0.0003 (0.0273)  lr: 0.160000  max mem: 14446
INFO:maskrcnn_benchmark.trainer:eta: 3:44:12  iter: 1550  loss: 0.8772 (1.1128)  loss_classifier: 0.2967 (0.3959)  loss_box_reg: 0.1353 (0.1575)  loss_mask: 0.3074 (0.3915)  loss_objectness: 0.0630 (0.0929)  loss_rpn_box_reg: 0.0613 (0.0751)  time: 0.6153 (0.8178)  data: 0.0003 (0.0273)  lr: 0.160000  max mem: 14585
INFO:maskrcnn_benchmark.trainer:eta: 3:41:51  iter: 1600  loss: 0.8552 (1.1007)  loss_classifier: 0.2983 (0.3927)  loss_box_reg: 0.1352 (0.1563)  loss_mask: 0.3021 (0.3881)  loss_objectness: 0.0535 (0.0894)  loss_rpn_box_reg: 0.0553 (0.0742)  time: 0.6194 (0.8117)  data: 0.0003 (0.0266)  lr: 0.160000  max mem: 14339
INFO:maskrcnn_benchmark.trainer:eta: 3:41:51  iter: 1600  loss: 0.8172 (1.1005)  loss_classifier: 0.2680 (0.3914)  loss_box_reg: 0.1297 (0.1569)  loss_mask: 0.3057 (0.3892)  loss_objectness: 0.0565 (0.0894)  loss_rpn_box_reg: 0.0509 (0.0736)  time: 0.6202 (0.8117)  data: 0.0003 (0.0265)  lr: 0.160000  max mem: 14436
2021-10-16 12:00:09,393 maskrcnn_benchmark.trainer INFO: eta: 3:41:50  iter: 1600  loss: 0.8698 (1.1079)  loss_classifier: 0.2930 (0.3947)  loss_box_reg: 0.1339 (0.1574)  loss_mask: 0.3138 (0.3889)  loss_objectness: 0.0600 (0.0911)  loss_rpn_box_reg: 0.0519 (0.0759)  time: 0.6202 (0.8116)  data: 0.0003 (0.0266)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 3:41:51  iter: 1600  loss: 0.9077 (1.1035)  loss_classifier: 0.3055 (0.3924)  loss_box_reg: 0.1351 (0.1564)  loss_mask: 0.3227 (0.3891)  loss_objectness: 0.0585 (0.0906)  loss_rpn_box_reg: 0.0502 (0.0749)  time: 0.6202 (0.8117)  data: 0.0003 (0.0265)  lr: 0.160000  max mem: 14541
INFO:maskrcnn_benchmark.trainer:eta: 3:41:50  iter: 1600  loss: 0.8698 (1.1079)  loss_classifier: 0.2930 (0.3947)  loss_box_reg: 0.1339 (0.1574)  loss_mask: 0.3138 (0.3889)  loss_objectness: 0.0600 (0.0911)  loss_rpn_box_reg: 0.0519 (0.0759)  time: 0.6202 (0.8116)  data: 0.0003 (0.0266)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634385609393, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 1.1078990889340639, "loss_classifier": 0.39466093824245035, "loss_box_reg": 0.15738296162788173, "loss_mask": 0.38888559040613474, "loss_objectness": 0.0910986457800027, "loss_rpn_box_reg": 0.07587095345719717, "time": 0.8116444493830204, "data": 0.026573196053504944, "throughput": 157.70452209375728}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 1600}}
INFO:maskrcnn_benchmark.trainer:eta: 3:41:51  iter: 1600  loss: 0.9448 (1.1045)  loss_classifier: 0.3208 (0.3927)  loss_box_reg: 0.1452 (0.1564)  loss_mask: 0.3168 (0.3889)  loss_objectness: 0.0622 (0.0914)  loss_rpn_box_reg: 0.0606 (0.0751)  time: 0.6196 (0.8117)  data: 0.0003 (0.0266)  lr: 0.160000  max mem: 14444
:::MLLOG {"namespace": "", "time_ms": 1634385609393, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 157.70452209375728, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 3:41:51  iter: 1600  loss: 0.8371 (1.1079)  loss_classifier: 0.2865 (0.3941)  loss_box_reg: 0.1311 (0.1579)  loss_mask: 0.3095 (0.3906)  loss_objectness: 0.0660 (0.0907)  loss_rpn_box_reg: 0.0667 (0.0746)  time: 0.6206 (0.8117)  data: 0.0003 (0.0265)  lr: 0.160000  max mem: 14294
INFO:maskrcnn_benchmark.trainer:eta: 3:41:50  iter: 1600  loss: 0.8876 (1.1068)  loss_classifier: 0.3071 (0.3940)  loss_box_reg: 0.1362 (0.1577)  loss_mask: 0.3077 (0.3884)  loss_objectness: 0.0638 (0.0911)  loss_rpn_box_reg: 0.0600 (0.0755)  time: 0.6204 (0.8116)  data: 0.0003 (0.0265)  lr: 0.160000  max mem: 14446
INFO:maskrcnn_benchmark.trainer:eta: 3:41:50  iter: 1600  loss: 0.8250 (1.1057)  loss_classifier: 0.2760 (0.3929)  loss_box_reg: 0.1255 (0.1569)  loss_mask: 0.3066 (0.3891)  loss_objectness: 0.0576 (0.0920)  loss_rpn_box_reg: 0.0581 (0.0749)  time: 0.6207 (0.8116)  data: 0.0003 (0.0265)  lr: 0.160000  max mem: 14585
INFO:maskrcnn_benchmark.trainer:eta: 3:39:35  iter: 1650  loss: 0.8571 (1.0976)  loss_classifier: 0.2795 (0.3899)  loss_box_reg: 0.1333 (0.1558)  loss_mask: 0.3168 (0.3866)  loss_objectness: 0.0561 (0.0906)  loss_rpn_box_reg: 0.0522 (0.0748)  time: 0.6185 (0.8058)  data: 0.0003 (0.0258)  lr: 0.160000  max mem: 14444
INFO:maskrcnn_benchmark.trainer:eta: 3:39:35  iter: 1650  loss: 0.8500 (1.0941)  loss_classifier: 0.2959 (0.3899)  loss_box_reg: 0.1350 (0.1558)  loss_mask: 0.3090 (0.3859)  loss_objectness: 0.0517 (0.0885)  loss_rpn_box_reg: 0.0501 (0.0740)  time: 0.6185 (0.8058)  data: 0.0003 (0.0258)  lr: 0.160000  max mem: 14339
INFO:maskrcnn_benchmark.trainer:eta: 3:39:35  iter: 1650  loss: 0.8127 (1.1006)  loss_classifier: 0.2803 (0.3909)  loss_box_reg: 0.1160 (0.1571)  loss_mask: 0.3059 (0.3881)  loss_objectness: 0.0477 (0.0899)  loss_rpn_box_reg: 0.0534 (0.0745)  time: 0.6181 (0.8058)  data: 0.0003 (0.0258)  lr: 0.160000  max mem: 14294
INFO:maskrcnn_benchmark.trainer:eta: 3:39:34  iter: 1650  loss: 0.9160 (1.1006)  loss_classifier: 0.3102 (0.3914)  loss_box_reg: 0.1404 (0.1572)  loss_mask: 0.3169 (0.3862)  loss_objectness: 0.0591 (0.0903)  loss_rpn_box_reg: 0.0720 (0.0755)  time: 0.6183 (0.8058)  data: 0.0004 (0.0257)  lr: 0.160000  max mem: 14446
INFO:maskrcnn_benchmark.trainer:eta: 3:39:35  iter: 1650  loss: 0.9022 (1.0945)  loss_classifier: 0.3171 (0.3889)  loss_box_reg: 0.1413 (0.1566)  loss_mask: 0.3073 (0.3870)  loss_objectness: 0.0553 (0.0887)  loss_rpn_box_reg: 0.0633 (0.0734)  time: 0.6186 (0.8058)  data: 0.0003 (0.0257)  lr: 0.160000  max mem: 14436
INFO:maskrcnn_benchmark.trainer:eta: 3:39:35  iter: 1650  loss: 0.9477 (1.0979)  loss_classifier: 0.3176 (0.3900)  loss_box_reg: 0.1547 (0.1562)  loss_mask: 0.3299 (0.3869)  loss_objectness: 0.0669 (0.0899)  loss_rpn_box_reg: 0.0739 (0.0750)  time: 0.6186 (0.8058)  data: 0.0004 (0.0257)  lr: 0.160000  max mem: 14541
2021-10-16 12:00:40,338 maskrcnn_benchmark.trainer INFO: eta: 3:39:34  iter: 1650  loss: 0.8973 (1.1014)  loss_classifier: 0.2903 (0.3919)  loss_box_reg: 0.1393 (0.1569)  loss_mask: 0.3129 (0.3867)  loss_objectness: 0.0595 (0.0902)  loss_rpn_box_reg: 0.0673 (0.0757)  time: 0.6187 (0.8058)  data: 0.0003 (0.0258)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 3:39:34  iter: 1650  loss: 0.9572 (1.0992)  loss_classifier: 0.3171 (0.3902)  loss_box_reg: 0.1569 (0.1564)  loss_mask: 0.3248 (0.3868)  loss_objectness: 0.0617 (0.0911)  loss_rpn_box_reg: 0.0734 (0.0746)  time: 0.6183 (0.8058)  data: 0.0004 (0.0257)  lr: 0.160000  max mem: 14585
INFO:maskrcnn_benchmark.trainer:eta: 3:39:34  iter: 1650  loss: 0.8973 (1.1014)  loss_classifier: 0.2903 (0.3919)  loss_box_reg: 0.1393 (0.1569)  loss_mask: 0.3129 (0.3867)  loss_objectness: 0.0595 (0.0902)  loss_rpn_box_reg: 0.0673 (0.0757)  time: 0.6187 (0.8058)  data: 0.0003 (0.0258)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634385640338, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 1.1013728419578437, "loss_classifier": 0.3919167787197864, "loss_box_reg": 0.15688748706456726, "loss_mask": 0.38665144583492567, "loss_objectness": 0.09021333334346612, "loss_rpn_box_reg": 0.07570379740812562, "time": 0.8058035970456673, "data": 0.025782010338523172, "throughput": 158.84764037947807}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 1650}}
:::MLLOG {"namespace": "", "time_ms": 1634385640338, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 158.84764037947807, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
2021-10-16 12:01:11,456 maskrcnn_benchmark.trainer INFO: eta: 3:37:26  iter: 1700  loss: 0.9268 (1.0953)  loss_classifier: 0.3131 (0.3891)  loss_box_reg: 0.1457 (0.1565)  loss_mask: 0.3205 (0.3845)  loss_objectness: 0.0639 (0.0896)  loss_rpn_box_reg: 0.0589 (0.0756)  time: 0.6203 (0.8004)  data: 0.0004 (0.0250)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 3:37:27  iter: 1700  loss: 0.9016 (1.0918)  loss_classifier: 0.2958 (0.3875)  loss_box_reg: 0.1350 (0.1556)  loss_mask: 0.3059 (0.3846)  loss_objectness: 0.0590 (0.0891)  loss_rpn_box_reg: 0.0663 (0.0749)  time: 0.6204 (0.8004)  data: 0.0004 (0.0250)  lr: 0.160000  max mem: 14541
INFO:maskrcnn_benchmark.trainer:eta: 3:37:26  iter: 1700  loss: 0.9268 (1.0953)  loss_classifier: 0.3131 (0.3891)  loss_box_reg: 0.1457 (0.1565)  loss_mask: 0.3205 (0.3845)  loss_objectness: 0.0639 (0.0896)  loss_rpn_box_reg: 0.0589 (0.0756)  time: 0.6203 (0.8004)  data: 0.0004 (0.0250)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 3:37:26  iter: 1700  loss: 0.8141 (1.0889)  loss_classifier: 0.2689 (0.3865)  loss_box_reg: 0.1195 (0.1563)  loss_mask: 0.3044 (0.3848)  loss_objectness: 0.0610 (0.0881)  loss_rpn_box_reg: 0.0619 (0.0732)  time: 0.6205 (0.8004)  data: 0.0003 (0.0250)  lr: 0.160000  max mem: 14436
:::MLLOG {"namespace": "", "time_ms": 1634385671456, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 1.0952854566714343, "loss_classifier": 0.38913096931050806, "loss_box_reg": 0.15645653000197318, "loss_mask": 0.384508353629533, "loss_objectness": 0.08957552331773674, "loss_rpn_box_reg": 0.07561408083995476, "time": 0.8004083120121676, "data": 0.025035397024715647, "throughput": 159.91837925597926}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 1700}}
:::MLLOG {"namespace": "", "time_ms": 1634385671456, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 159.91837925597926, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 3:37:27  iter: 1700  loss: 0.8747 (1.0878)  loss_classifier: 0.2943 (0.3873)  loss_box_reg: 0.1429 (0.1553)  loss_mask: 0.3187 (0.3839)  loss_objectness: 0.0576 (0.0878)  loss_rpn_box_reg: 0.0532 (0.0736)  time: 0.6207 (0.8004)  data: 0.0003 (0.0250)  lr: 0.160000  max mem: 14339
INFO:maskrcnn_benchmark.trainer:eta: 3:37:27  iter: 1700  loss: 0.8663 (1.0915)  loss_classifier: 0.2829 (0.3872)  loss_box_reg: 0.1296 (0.1553)  loss_mask: 0.3077 (0.3845)  loss_objectness: 0.0623 (0.0897)  loss_rpn_box_reg: 0.0740 (0.0747)  time: 0.6204 (0.8004)  data: 0.0003 (0.0251)  lr: 0.160000  max mem: 14444
INFO:maskrcnn_benchmark.trainer:eta: 3:37:27  iter: 1700  loss: 0.8938 (1.0941)  loss_classifier: 0.2883 (0.3882)  loss_box_reg: 0.1362 (0.1564)  loss_mask: 0.3132 (0.3858)  loss_objectness: 0.0607 (0.0892)  loss_rpn_box_reg: 0.0693 (0.0744)  time: 0.6202 (0.8004)  data: 0.0003 (0.0250)  lr: 0.160000  max mem: 14294
INFO:maskrcnn_benchmark.trainer:eta: 3:37:26  iter: 1700  loss: 0.9225 (1.0949)  loss_classifier: 0.3149 (0.3890)  loss_box_reg: 0.1434 (0.1568)  loss_mask: 0.3268 (0.3843)  loss_objectness: 0.0617 (0.0896)  loss_rpn_box_reg: 0.0616 (0.0752)  time: 0.6203 (0.8004)  data: 0.0003 (0.0250)  lr: 0.160000  max mem: 14446
INFO:maskrcnn_benchmark.trainer:eta: 3:37:26  iter: 1700  loss: 0.8516 (1.0937)  loss_classifier: 0.2978 (0.3879)  loss_box_reg: 0.1351 (0.1561)  loss_mask: 0.3113 (0.3849)  loss_objectness: 0.0565 (0.0903)  loss_rpn_box_reg: 0.0627 (0.0745)  time: 0.6204 (0.8004)  data: 0.0003 (0.0250)  lr: 0.160000  max mem: 14585
INFO:maskrcnn_benchmark.trainer:eta: 3:35:23  iter: 1750  loss: 0.8821 (1.0821)  loss_classifier: 0.3133 (0.3850)  loss_box_reg: 0.1428 (0.1550)  loss_mask: 0.3101 (0.3818)  loss_objectness: 0.0571 (0.0870)  loss_rpn_box_reg: 0.0549 (0.0734)  time: 0.6199 (0.7953)  data: 0.0003 (0.0243)  lr: 0.160000  max mem: 14339
INFO:maskrcnn_benchmark.trainer:eta: 3:35:23  iter: 1750  loss: 0.9337 (1.0883)  loss_classifier: 0.3257 (0.3858)  loss_box_reg: 0.1577 (0.1560)  loss_mask: 0.3179 (0.3838)  loss_objectness: 0.0519 (0.0884)  loss_rpn_box_reg: 0.0718 (0.0742)  time: 0.6213 (0.7953)  data: 0.0003 (0.0243)  lr: 0.160000  max mem: 14294
INFO:maskrcnn_benchmark.trainer:eta: 3:35:22  iter: 1750  loss: 0.8659 (1.0887)  loss_classifier: 0.3040 (0.3865)  loss_box_reg: 0.1341 (0.1564)  loss_mask: 0.3032 (0.3822)  loss_objectness: 0.0675 (0.0887)  loss_rpn_box_reg: 0.0612 (0.0750)  time: 0.6211 (0.7952)  data: 0.0004 (0.0243)  lr: 0.160000  max mem: 14446
INFO:maskrcnn_benchmark.trainer:eta: 3:35:22  iter: 1750  loss: 0.8675 (1.0884)  loss_classifier: 0.3092 (0.3858)  loss_box_reg: 0.1387 (0.1558)  loss_mask: 0.3139 (0.3829)  loss_objectness: 0.0492 (0.0896)  loss_rpn_box_reg: 0.0510 (0.0743)  time: 0.6208 (0.7952)  data: 0.0003 (0.0243)  lr: 0.160000  max mem: 14585
INFO:maskrcnn_benchmark.trainer:eta: 3:35:23  iter: 1750  loss: 0.9060 (1.0854)  loss_classifier: 0.3161 (0.3848)  loss_box_reg: 0.1392 (0.1548)  loss_mask: 0.3122 (0.3824)  loss_objectness: 0.0543 (0.0890)  loss_rpn_box_reg: 0.0680 (0.0744)  time: 0.6192 (0.7953)  data: 0.0004 (0.0244)  lr: 0.160000  max mem: 14444
INFO:maskrcnn_benchmark.trainer:eta: 3:35:23  iter: 1750  loss: 0.8906 (1.0826)  loss_classifier: 0.2763 (0.3840)  loss_box_reg: 0.1305 (0.1557)  loss_mask: 0.3134 (0.3827)  loss_objectness: 0.0512 (0.0873)  loss_rpn_box_reg: 0.0748 (0.0730)  time: 0.6203 (0.7953)  data: 0.0003 (0.0243)  lr: 0.160000  max mem: 14436
2021-10-16 12:01:42,468 maskrcnn_benchmark.trainer INFO: eta: 3:35:22  iter: 1750  loss: 0.8816 (1.0883)  loss_classifier: 0.2935 (0.3862)  loss_box_reg: 0.1351 (0.1558)  loss_mask: 0.3067 (0.3823)  loss_objectness: 0.0486 (0.0887)  loss_rpn_box_reg: 0.0498 (0.0753)  time: 0.6199 (0.7953)  data: 0.0003 (0.0243)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 3:35:23  iter: 1750  loss: 0.8819 (1.0864)  loss_classifier: 0.3036 (0.3853)  loss_box_reg: 0.1311 (0.1552)  loss_mask: 0.3234 (0.3827)  loss_objectness: 0.0617 (0.0884)  loss_rpn_box_reg: 0.0686 (0.0748)  time: 0.6200 (0.7953)  data: 0.0003 (0.0243)  lr: 0.160000  max mem: 14541
INFO:maskrcnn_benchmark.trainer:eta: 3:35:22  iter: 1750  loss: 0.8816 (1.0883)  loss_classifier: 0.2935 (0.3862)  loss_box_reg: 0.1351 (0.1558)  loss_mask: 0.3067 (0.3823)  loss_objectness: 0.0486 (0.0887)  loss_rpn_box_reg: 0.0498 (0.0753)  time: 0.6199 (0.7953)  data: 0.0003 (0.0243)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634385702468, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 1.0883340822969165, "loss_classifier": 0.38624167014871325, "loss_box_reg": 0.15579061010040876, "loss_mask": 0.3822587771160262, "loss_objectness": 0.08873737547227314, "loss_rpn_box_reg": 0.07530565003412111, "time": 0.7952604751586914, "data": 0.024332689149039133, "throughput": 160.95355421059756}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 1750}}
:::MLLOG {"namespace": "", "time_ms": 1634385702468, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 160.95355421059756, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 3:33:25  iter: 1800  loss: 0.8514 (1.0774)  loss_classifier: 0.2706 (0.3830)  loss_box_reg: 0.1319 (0.1547)  loss_mask: 0.3155 (0.3801)  loss_objectness: 0.0527 (0.0864)  loss_rpn_box_reg: 0.0581 (0.0732)  time: 0.6209 (0.7904)  data: 0.0003 (0.0237)  lr: 0.160000  max mem: 14339
INFO:maskrcnn_benchmark.trainer:eta: 3:33:25  iter: 1800  loss: 0.8036 (1.0820)  loss_classifier: 0.2588 (0.3832)  loss_box_reg: 0.1193 (0.1553)  loss_mask: 0.3108 (0.3819)  loss_objectness: 0.0494 (0.0876)  loss_rpn_box_reg: 0.0569 (0.0740)  time: 0.6197 (0.7904)  data: 0.0003 (0.0236)  lr: 0.160000  max mem: 14467
INFO:maskrcnn_benchmark.trainer:eta: 3:33:24  iter: 1800  loss: 0.8988 (1.0828)  loss_classifier: 0.2878 (0.3834)  loss_box_reg: 0.1356 (0.1553)  loss_mask: 0.3128 (0.3810)  loss_objectness: 0.0706 (0.0890)  loss_rpn_box_reg: 0.0650 (0.0742)  time: 0.6197 (0.7904)  data: 0.0004 (0.0236)  lr: 0.160000  max mem: 14585
INFO:maskrcnn_benchmark.trainer:eta: 3:33:25  iter: 1800  loss: 0.8355 (1.0800)  loss_classifier: 0.2862 (0.3825)  loss_box_reg: 0.1354 (0.1544)  loss_mask: 0.3073 (0.3806)  loss_objectness: 0.0484 (0.0882)  loss_rpn_box_reg: 0.0555 (0.0742)  time: 0.6208 (0.7904)  data: 0.0003 (0.0237)  lr: 0.160000  max mem: 14444
INFO:maskrcnn_benchmark.trainer:eta: 3:33:24  iter: 1800  loss: 0.8130 (1.0835)  loss_classifier: 0.2932 (0.3843)  loss_box_reg: 0.1231 (0.1560)  loss_mask: 0.3159 (0.3804)  loss_objectness: 0.0452 (0.0880)  loss_rpn_box_reg: 0.0523 (0.0748)  time: 0.6197 (0.7904)  data: 0.0003 (0.0236)  lr: 0.160000  max mem: 14446
INFO:maskrcnn_benchmark.trainer:eta: 3:33:24  iter: 1800  loss: 0.8855 (1.0770)  loss_classifier: 0.2735 (0.3815)  loss_box_reg: 0.1369 (0.1553)  loss_mask: 0.3195 (0.3809)  loss_objectness: 0.0608 (0.0866)  loss_rpn_box_reg: 0.0600 (0.0727)  time: 0.6210 (0.7904)  data: 0.0003 (0.0236)  lr: 0.160000  max mem: 14639
2021-10-16 12:02:13,507 maskrcnn_benchmark.trainer INFO: eta: 3:33:24  iter: 1800  loss: 0.8668 (1.0825)  loss_classifier: 0.2970 (0.3839)  loss_box_reg: 0.1348 (0.1554)  loss_mask: 0.3108 (0.3803)  loss_objectness: 0.0513 (0.0880)  loss_rpn_box_reg: 0.0517 (0.0748)  time: 0.6211 (0.7904)  data: 0.0003 (0.0237)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 3:33:25  iter: 1800  loss: 0.8690 (1.0803)  loss_classifier: 0.2928 (0.3828)  loss_box_reg: 0.1283 (0.1545)  loss_mask: 0.3130 (0.3807)  loss_objectness: 0.0586 (0.0877)  loss_rpn_box_reg: 0.0641 (0.0746)  time: 0.6211 (0.7904)  data: 0.0003 (0.0236)  lr: 0.160000  max mem: 14541
INFO:maskrcnn_benchmark.trainer:eta: 3:33:24  iter: 1800  loss: 0.8668 (1.0825)  loss_classifier: 0.2970 (0.3839)  loss_box_reg: 0.1348 (0.1554)  loss_mask: 0.3108 (0.3803)  loss_objectness: 0.0513 (0.0880)  loss_rpn_box_reg: 0.0517 (0.0748)  time: 0.6211 (0.7904)  data: 0.0003 (0.0237)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634385733508, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 1.082477147711648, "loss_classifier": 0.3839168341540628, "loss_box_reg": 0.15537796497745957, "loss_mask": 0.3803174390312698, "loss_objectness": 0.08803931770018406, "loss_rpn_box_reg": 0.07482559258842633, "time": 0.7904142888387045, "data": 0.02366986009809706, "throughput": 161.94039228220515}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 1800}}
:::MLLOG {"namespace": "", "time_ms": 1634385733508, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 161.94039228220515, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
:::MLLOG {"namespace": "", "time_ms": 1634385772406, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 111, "epoch_num": 2}}
:::MLLOG {"namespace": "", "time_ms": 1634385772406, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 112, "first_epoch_num": 2}}
:::MLLOG {"namespace": "", "time_ms": 1634385772406, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 113, "epoch_num": 2}}
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
2021-10-16 12:02:52,773 maskrcnn_benchmark.data.build WARNING: When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
Done (t=0.55s)
creating index...
index created!
shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]Done (t=0.55s)
creating index...
Done (t=0.55s)
creating index...
index created!
index created!
shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]Done (t=0.55s)
creating index...
Done (t=0.55s)
creating index...
Done (t=0.55s)
creating index...
Done (t=0.56s)
creating index...
Done (t=0.55s)
creating index...
index created!
shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
index created!
  0% 0/40 [00:00<?, ?it/s]index created!
shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
index created!
shapes=None
passthrough=True
index created!
creating index...
GT annotations already exist!
  0% 0/40 [00:00<?, ?it/s]INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]shapes=None
passthrough=True
shapes=None
passthrough=True
creating index...
GT annotations already exist!
2021-10-16 12:02:53,362 maskrcnn_benchmark.inference INFO: Start evaluation on coco_2017_val dataset(5000 images).
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]  0% 0/40 [00:00<?, ?it/s]  2% 1/40 [00:00<00:11,  3.36it/s]  2% 1/40 [00:00<00:11,  3.42it/s]  2% 1/40 [00:00<00:11,  3.37it/s]  2% 1/40 [00:00<00:11,  3.38it/s]  2% 1/40 [00:00<00:11,  3.39it/s]  2% 1/40 [00:00<00:11,  3.30it/s]  2% 1/40 [00:00<00:11,  3.35it/s]  2% 1/40 [00:00<00:11,  3.25it/s]  5% 2/40 [00:00<00:11,  3.37it/s]  5% 2/40 [00:00<00:11,  3.42it/s]  5% 2/40 [00:00<00:11,  3.36it/s]  5% 2/40 [00:00<00:11,  3.41it/s]  5% 2/40 [00:00<00:11,  3.40it/s]  5% 2/40 [00:00<00:10,  3.46it/s]  5% 2/40 [00:00<00:11,  3.42it/s]  5% 2/40 [00:00<00:11,  3.30it/s]  8% 3/40 [00:00<00:10,  3.39it/s]  8% 3/40 [00:00<00:10,  3.47it/s]  8% 3/40 [00:00<00:11,  3.35it/s]  8% 3/40 [00:00<00:10,  3.48it/s]  8% 3/40 [00:00<00:10,  3.40it/s]  8% 3/40 [00:00<00:10,  3.39it/s]  8% 3/40 [00:00<00:10,  3.43it/s]  8% 3/40 [00:00<00:11,  3.31it/s] 10% 4/40 [00:01<00:10,  3.40it/s] 10% 4/40 [00:01<00:10,  3.44it/s] 10% 4/40 [00:01<00:10,  3.35it/s] 10% 4/40 [00:01<00:10,  3.44it/s] 10% 4/40 [00:01<00:10,  3.43it/s] 10% 4/40 [00:01<00:10,  3.39it/s] 10% 4/40 [00:01<00:10,  3.38it/s] 10% 4/40 [00:01<00:10,  3.30it/s] 12% 5/40 [00:01<00:10,  3.39it/s] 12% 5/40 [00:01<00:10,  3.43it/s] 12% 5/40 [00:01<00:10,  3.41it/s] 12% 5/40 [00:01<00:10,  3.44it/s] 12% 5/40 [00:01<00:10,  3.43it/s] 12% 5/40 [00:01<00:10,  3.42it/s] 12% 5/40 [00:01<00:10,  3.41it/s] 12% 5/40 [00:01<00:10,  3.38it/s] 15% 6/40 [00:01<00:10,  3.39it/s] 15% 6/40 [00:01<00:09,  3.45it/s] 15% 6/40 [00:01<00:10,  3.37it/s] 15% 6/40 [00:01<00:09,  3.48it/s] 15% 6/40 [00:01<00:09,  3.43it/s] 15% 6/40 [00:01<00:09,  3.43it/s] 15% 6/40 [00:01<00:09,  3.41it/s] 15% 6/40 [00:01<00:10,  3.38it/s] 18% 7/40 [00:02<00:09,  3.38it/s] 18% 7/40 [00:02<00:09,  3.41it/s] 18% 7/40 [00:02<00:09,  3.39it/s] 18% 7/40 [00:02<00:09,  3.45it/s] 18% 7/40 [00:02<00:09,  3.44it/s] 18% 7/40 [00:02<00:09,  3.42it/s] 18% 7/40 [00:02<00:09,  3.44it/s] 18% 7/40 [00:02<00:09,  3.45it/s] 20% 8/40 [00:02<00:09,  3.38it/s] 20% 8/40 [00:02<00:09,  3.40it/s] 20% 8/40 [00:02<00:09,  3.50it/s] 20% 8/40 [00:02<00:09,  3.34it/s] 20% 8/40 [00:02<00:09,  3.46it/s] 20% 8/40 [00:02<00:09,  3.43it/s] 20% 8/40 [00:02<00:09,  3.38it/s] 20% 8/40 [00:02<00:09,  3.44it/s] 22% 9/40 [00:02<00:09,  3.41it/s] 22% 9/40 [00:02<00:09,  3.39it/s] 22% 9/40 [00:02<00:08,  3.47it/s] 22% 9/40 [00:02<00:08,  3.45it/s] 22% 9/40 [00:02<00:09,  3.36it/s] 22% 9/40 [00:02<00:09,  3.43it/s] 22% 9/40 [00:02<00:08,  3.49it/s] 22% 9/40 [00:02<00:09,  3.40it/s] 25% 10/40 [00:02<00:08,  3.39it/s] 25% 10/40 [00:02<00:08,  3.37it/s] 25% 10/40 [00:02<00:08,  3.51it/s] 25% 10/40 [00:02<00:08,  3.44it/s] 25% 10/40 [00:02<00:08,  3.48it/s] 25% 10/40 [00:02<00:08,  3.47it/s] 25% 10/40 [00:02<00:08,  3.41it/s] 25% 10/40 [00:02<00:08,  3.43it/s] 28% 11/40 [00:03<00:08,  3.38it/s] 28% 11/40 [00:03<00:08,  3.47it/s] 28% 11/40 [00:03<00:08,  3.37it/s] 28% 11/40 [00:03<00:08,  3.49it/s] 28% 11/40 [00:03<00:08,  3.45it/s] 28% 11/40 [00:03<00:08,  3.44it/s] 28% 11/40 [00:03<00:08,  3.46it/s] 28% 11/40 [00:03<00:08,  3.40it/s] 30% 12/40 [00:03<00:08,  3.39it/s] 30% 12/40 [00:03<00:08,  3.50it/s] 30% 12/40 [00:03<00:08,  3.42it/s] 30% 12/40 [00:03<00:08,  3.47it/s] 30% 12/40 [00:03<00:08,  3.48it/s] 30% 12/40 [00:03<00:08,  3.47it/s] 30% 12/40 [00:03<00:08,  3.43it/s] 30% 12/40 [00:03<00:08,  3.40it/s] 32% 13/40 [00:03<00:07,  3.44it/s] 32% 13/40 [00:03<00:07,  3.54it/s] 32% 13/40 [00:03<00:07,  3.46it/s] 32% 13/40 [00:03<00:07,  3.41it/s] 32% 13/40 [00:03<00:07,  3.44it/s] 32% 13/40 [00:03<00:07,  3.45it/s] 32% 13/40 [00:03<00:07,  3.46it/s] 32% 13/40 [00:03<00:07,  3.42it/s] 35% 14/40 [00:04<00:07,  3.47it/s] 35% 14/40 [00:04<00:07,  3.51it/s] 35% 14/40 [00:04<00:07,  3.48it/s] 35% 14/40 [00:04<00:07,  3.42it/s] 35% 14/40 [00:04<00:07,  3.43it/s] 35% 14/40 [00:04<00:07,  3.48it/s] 35% 14/40 [00:04<00:07,  3.47it/s] 35% 14/40 [00:04<00:07,  3.40it/s] 38% 15/40 [00:04<00:07,  3.45it/s] 38% 15/40 [00:04<00:07,  3.55it/s] 38% 15/40 [00:04<00:07,  3.44it/s] 38% 15/40 [00:04<00:07,  3.43it/s] 38% 15/40 [00:04<00:07,  3.45it/s] 38% 15/40 [00:04<00:07,  3.50it/s] 38% 15/40 [00:04<00:07,  3.45it/s] 38% 15/40 [00:04<00:07,  3.38it/s] 40% 16/40 [00:04<00:07,  3.40it/s] 40% 16/40 [00:04<00:06,  3.50it/s] 40% 16/40 [00:04<00:06,  3.48it/s] 40% 16/40 [00:04<00:06,  3.46it/s] 40% 16/40 [00:04<00:07,  3.42it/s] 40% 16/40 [00:04<00:06,  3.48it/s] 40% 16/40 [00:04<00:07,  3.43it/s] 40% 16/40 [00:04<00:07,  3.40it/s] 42% 17/40 [00:04<00:06,  3.56it/s] 42% 17/40 [00:05<00:06,  3.38it/s] 42% 17/40 [00:04<00:06,  3.49it/s] 42% 17/40 [00:04<00:06,  3.44it/s] 42% 17/40 [00:04<00:06,  3.54it/s] 42% 17/40 [00:04<00:06,  3.40it/s] 42% 17/40 [00:04<00:06,  3.50it/s] 42% 17/40 [00:04<00:06,  3.43it/s] 45% 18/40 [00:05<00:06,  3.59it/s] 45% 18/40 [00:05<00:06,  3.38it/s] 45% 18/40 [00:05<00:06,  3.44it/s] 45% 18/40 [00:05<00:06,  3.44it/s] 45% 18/40 [00:05<00:06,  3.50it/s] 45% 18/40 [00:05<00:06,  3.39it/s] 45% 18/40 [00:05<00:06,  3.46it/s] 45% 18/40 [00:05<00:06,  3.43it/s] 48% 19/40 [00:05<00:05,  3.55it/s] 48% 19/40 [00:05<00:06,  3.40it/s] 48% 19/40 [00:05<00:06,  3.41it/s] 48% 19/40 [00:05<00:05,  3.53it/s] 48% 19/40 [00:05<00:06,  3.43it/s] 48% 19/40 [00:05<00:06,  3.41it/s] 48% 19/40 [00:05<00:06,  3.45it/s] 48% 19/40 [00:05<00:06,  3.45it/s] 50% 20/40 [00:05<00:05,  3.54it/s] 50% 20/40 [00:05<00:05,  3.43it/s] 50% 20/40 [00:05<00:05,  3.51it/s] 50% 20/40 [00:05<00:05,  3.44it/s] 50% 20/40 [00:05<00:05,  3.38it/s] 50% 20/40 [00:05<00:05,  3.43it/s] 50% 20/40 [00:05<00:05,  3.43it/s] 50% 20/40 [00:05<00:05,  3.46it/s] 52% 21/40 [00:06<00:05,  3.51it/s] 52% 21/40 [00:06<00:05,  3.50it/s] 52% 21/40 [00:06<00:05,  3.53it/s] 52% 21/40 [00:06<00:05,  3.41it/s] 52% 21/40 [00:06<00:05,  3.43it/s] 52% 21/40 [00:06<00:05,  3.43it/s] 52% 21/40 [00:06<00:05,  3.47it/s] 52% 21/40 [00:06<00:05,  3.47it/s] 55% 22/40 [00:06<00:05,  3.55it/s] 55% 22/40 [00:06<00:05,  3.46it/s] 55% 22/40 [00:06<00:05,  3.49it/s] 55% 22/40 [00:06<00:05,  3.46it/s] 55% 22/40 [00:06<00:05,  3.38it/s] 55% 22/40 [00:06<00:05,  3.41it/s] 55% 22/40 [00:06<00:05,  3.50it/s] 55% 22/40 [00:06<00:05,  3.42it/s] 57% 23/40 [00:06<00:04,  3.54it/s] 57% 23/40 [00:06<00:04,  3.44it/s] 57% 23/40 [00:06<00:04,  3.53it/s] 57% 23/40 [00:06<00:04,  3.48it/s] 57% 23/40 [00:06<00:04,  3.44it/s] 57% 23/40 [00:06<00:05,  3.38it/s] 57% 23/40 [00:06<00:04,  3.47it/s] 57% 23/40 [00:06<00:05,  3.39it/s] 60% 24/40 [00:06<00:04,  3.52it/s] 60% 24/40 [00:07<00:04,  3.45it/s] 60% 24/40 [00:06<00:04,  3.55it/s] 60% 24/40 [00:06<00:04,  3.48it/s] 60% 24/40 [00:07<00:04,  3.43it/s] 60% 24/40 [00:06<00:04,  3.51it/s] 60% 24/40 [00:07<00:04,  3.38it/s] 60% 24/40 [00:06<00:04,  3.43it/s] 62% 25/40 [00:07<00:04,  3.48it/s] 62% 25/40 [00:07<00:04,  3.56it/s] 62% 25/40 [00:07<00:04,  3.41it/s] 62% 25/40 [00:07<00:04,  3.51it/s] 62% 25/40 [00:07<00:04,  3.49it/s] 62% 25/40 [00:07<00:04,  3.40it/s] 62% 25/40 [00:07<00:04,  3.39it/s] 62% 25/40 [00:07<00:04,  3.41it/s] 65% 26/40 [00:07<00:04,  3.45it/s] 65% 26/40 [00:07<00:04,  3.50it/s] 65% 26/40 [00:07<00:04,  3.45it/s] 65% 26/40 [00:07<00:03,  3.51it/s] 65% 26/40 [00:07<00:04,  3.48it/s] 65% 26/40 [00:07<00:04,  3.44it/s] 65% 26/40 [00:07<00:04,  3.39it/s] 65% 26/40 [00:07<00:04,  3.41it/s] 68% 27/40 [00:07<00:03,  3.52it/s] 68% 27/40 [00:07<00:03,  3.51it/s] 68% 27/40 [00:07<00:03,  3.43it/s] 68% 27/40 [00:07<00:03,  3.47it/s] 68% 27/40 [00:07<00:03,  3.43it/s] 68% 27/40 [00:07<00:03,  3.43it/s] 68% 27/40 [00:07<00:03,  3.45it/s] 68% 27/40 [00:07<00:03,  3.46it/s] 70% 28/40 [00:07<00:03,  3.51it/s] 70% 28/40 [00:08<00:03,  3.57it/s] 70% 28/40 [00:08<00:03,  3.42it/s] 70% 28/40 [00:08<00:03,  3.46it/s] 70% 28/40 [00:08<00:03,  3.47it/s] 70% 28/40 [00:08<00:03,  3.43it/s] 70% 28/40 [00:08<00:03,  3.40it/s] 70% 28/40 [00:08<00:03,  3.45it/s] 72% 29/40 [00:08<00:03,  3.49it/s] 72% 29/40 [00:08<00:03,  3.52it/s] 72% 29/40 [00:08<00:03,  3.47it/s] 72% 29/40 [00:08<00:03,  3.48it/s] 72% 29/40 [00:08<00:03,  3.45it/s] 72% 29/40 [00:08<00:03,  3.43it/s] 72% 29/40 [00:08<00:03,  3.46it/s] 72% 29/40 [00:08<00:03,  3.36it/s] 75% 30/40 [00:08<00:02,  3.55it/s] 75% 30/40 [00:08<00:02,  3.44it/s] 75% 30/40 [00:08<00:02,  3.43it/s] 75% 30/40 [00:08<00:02,  3.47it/s] 75% 30/40 [00:08<00:02,  3.46it/s] 75% 30/40 [00:08<00:02,  3.43it/s] 75% 30/40 [00:08<00:02,  3.45it/s] 75% 30/40 [00:08<00:02,  3.34it/s] 78% 31/40 [00:08<00:02,  3.53it/s] 78% 31/40 [00:08<00:02,  3.42it/s] 78% 31/40 [00:09<00:02,  3.42it/s] 78% 31/40 [00:08<00:02,  3.43it/s] 78% 31/40 [00:08<00:02,  3.47it/s] 78% 31/40 [00:09<00:02,  3.41it/s] 78% 31/40 [00:09<00:02,  3.44it/s] 78% 31/40 [00:09<00:02,  3.39it/s] 80% 32/40 [00:09<00:02,  3.51it/s] 80% 32/40 [00:09<00:02,  3.46it/s] 80% 32/40 [00:09<00:02,  3.42it/s] 80% 32/40 [00:09<00:02,  3.40it/s] 80% 32/40 [00:09<00:02,  3.41it/s] 80% 32/40 [00:09<00:02,  3.39it/s] 80% 32/40 [00:09<00:02,  3.41it/s] 80% 32/40 [00:09<00:02,  3.39it/s] 82% 33/40 [00:09<00:02,  3.49it/s] 82% 33/40 [00:09<00:01,  3.51it/s] 82% 33/40 [00:09<00:02,  3.42it/s] 82% 33/40 [00:09<00:02,  3.38it/s] 82% 33/40 [00:09<00:02,  3.48it/s] 82% 33/40 [00:09<00:02,  3.46it/s] 82% 33/40 [00:09<00:02,  3.34it/s] 82% 33/40 [00:09<00:02,  3.37it/s] 85% 34/40 [00:09<00:01,  3.49it/s] 85% 34/40 [00:09<00:01,  3.44it/s] 85% 34/40 [00:09<00:01,  3.46it/s] 85% 34/40 [00:09<00:01,  3.40it/s] 85% 34/40 [00:09<00:01,  3.51it/s] 85% 34/40 [00:09<00:01,  3.42it/s] 85% 34/40 [00:09<00:01,  3.37it/s] 85% 34/40 [00:09<00:01,  3.36it/s] 88% 35/40 [00:10<00:01,  3.46it/s] 88% 35/40 [00:10<00:01,  3.49it/s] 88% 35/40 [00:10<00:01,  3.46it/s] 88% 35/40 [00:10<00:01,  3.39it/s] 88% 35/40 [00:10<00:01,  3.43it/s] 88% 35/40 [00:10<00:01,  3.40it/s] 88% 35/40 [00:10<00:01,  3.33it/s] 88% 35/40 [00:10<00:01,  3.36it/s] 90% 36/40 [00:10<00:01,  3.44it/s] 90% 36/40 [00:10<00:01,  3.49it/s] 90% 36/40 [00:10<00:01,  3.45it/s] 90% 36/40 [00:10<00:01,  3.41it/s] 90% 36/40 [00:10<00:01,  3.39it/s] 90% 36/40 [00:10<00:01,  3.37it/s] 90% 36/40 [00:10<00:01,  3.33it/s] 90% 36/40 [00:10<00:01,  3.34it/s] 92% 37/40 [00:10<00:00,  3.43it/s] 92% 37/40 [00:10<00:00,  3.47it/s] 92% 37/40 [00:10<00:00,  3.50it/s] 92% 37/40 [00:10<00:00,  3.35it/s] 92% 37/40 [00:10<00:00,  3.42it/s] 92% 37/40 [00:10<00:00,  3.37it/s] 92% 37/40 [00:10<00:00,  3.37it/s] 92% 37/40 [00:10<00:00,  3.34it/s] 95% 38/40 [00:10<00:00,  3.46it/s] 95% 38/40 [00:10<00:00,  3.46it/s] 95% 38/40 [00:11<00:00,  3.52it/s] 98% 39/40 [00:10<00:00,  4.26it/s] 95% 38/40 [00:11<00:00,  3.75it/s] 95% 38/40 [00:11<00:00,  3.50it/s] 95% 38/40 [00:11<00:00,  3.37it/s] 95% 38/40 [00:11<00:00,  3.40it/s] 98% 39/40 [00:11<00:00,  4.12it/s] 95% 38/40 [00:11<00:00,  3.38it/s] 98% 39/40 [00:11<00:00,  4.13it/s] 98% 39/40 [00:11<00:00,  3.71it/s] 98% 39/40 [00:11<00:00,  3.50it/s] 98% 39/40 [00:11<00:00,  3.62it/s] 98% 39/40 [00:11<00:00,  3.46it/s] 98% 39/40 [00:11<00:00,  3.42it/s]100% 40/40 [00:12<00:00,  1.46it/s]100% 40/40 [00:12<00:00,  3.14it/s]
100% 40/40 [00:12<00:00,  1.47it/s]100% 40/40 [00:12<00:00,  3.09it/s]
100% 40/40 [00:12<00:00,  1.47it/s]100% 40/40 [00:12<00:00,  3.13it/s]
100% 40/40 [00:12<00:00,  1.45it/s]100% 40/40 [00:12<00:00,  3.10it/s]
100% 40/40 [00:12<00:00,  1.47it/s]100% 40/40 [00:12<00:00,  3.09it/s]
100% 40/40 [00:12<00:00,  1.46it/s]100% 40/40 [00:12<00:00,  3.09it/s]
100% 40/40 [00:13<00:00,  1.43it/s]100% 40/40 [00:13<00:00,  3.06it/s]
100% 40/40 [00:13<00:00,  1.45it/s]100% 40/40 [00:13<00:00,  3.06it/s]
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:13.073137 (0.02091701889038086 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:13.019441 (0.020831105804443358 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:13.010724 (0.020817158126831055 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:13.004252 (0.020806803131103516 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:13.135085 (0.021016135787963866 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:13.011941 (0.02081910629272461 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:13.077549 (0.0209240779876709 s / img per device, on 8 devices)
2021-10-16 12:03:06,366 maskrcnn_benchmark.inference INFO: Total inference time: 0:00:13.004773 (0.020807636642456055 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:13.004773 (0.020807636642456055 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.027s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.027s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.027s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.027s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.028s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.028s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.028s
2021-10-16 12:03:06,630 maskrcnn_benchmark.timed_section INFO: EXPOSED: Launching evaluation preparation tasks took 0.034s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.034s
:::MLLOG {"namespace": "", "time_ms": 1634385786633, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 168, "first_epoch_num": 3, "epoch_count": 1}}
:::MLLOG {"namespace": "", "time_ms": 1634385786634, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 169, "epoch_num": 3}}
INFO:maskrcnn_benchmark.trainer:eta: 3:36:20  iter: 1850  loss: 0.8923 (1.0754)  loss_classifier: 0.3035 (0.3809)  loss_box_reg: 0.1352 (0.1542)  loss_mask: 0.3099 (0.3789)  loss_objectness: 0.0584 (0.0875)  loss_rpn_box_reg: 0.0500 (0.0740)  time: 0.6934 (0.8038)  data: 0.0004 (0.0307)  lr: 0.160000  max mem: 14444
INFO:maskrcnn_benchmark.trainer:eta: 3:36:20  iter: 1850  loss: 0.8946 (1.0759)  loss_classifier: 0.3087 (0.3812)  loss_box_reg: 0.1579 (0.1543)  loss_mask: 0.3184 (0.3791)  loss_objectness: 0.0631 (0.0870)  loss_rpn_box_reg: 0.0578 (0.0744)  time: 0.6939 (0.8038)  data: 0.0005 (0.0306)  lr: 0.160000  max mem: 14541
2021-10-16 12:03:17,673 maskrcnn_benchmark.trainer INFO: eta: 3:36:20  iter: 1850  loss: 0.8496 (1.0769)  loss_classifier: 0.2763 (0.3817)  loss_box_reg: 0.1308 (0.1549)  loss_mask: 0.3032 (0.3785)  loss_objectness: 0.0599 (0.0873)  loss_rpn_box_reg: 0.0573 (0.0745)  time: 0.6975 (0.8037)  data: 0.0005 (0.0308)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 3:36:20  iter: 1850  loss: 0.8289 (1.0717)  loss_classifier: 0.2951 (0.3795)  loss_box_reg: 0.1305 (0.1548)  loss_mask: 0.2997 (0.3789)  loss_objectness: 0.0510 (0.0859)  loss_rpn_box_reg: 0.0589 (0.0727)  time: 0.6986 (0.8038)  data: 0.0005 (0.0306)  lr: 0.160000  max mem: 14639
INFO:maskrcnn_benchmark.trainer:eta: 3:36:20  iter: 1850  loss: 0.8496 (1.0769)  loss_classifier: 0.2763 (0.3817)  loss_box_reg: 0.1308 (0.1549)  loss_mask: 0.3032 (0.3785)  loss_objectness: 0.0599 (0.0873)  loss_rpn_box_reg: 0.0573 (0.0745)  time: 0.6975 (0.8037)  data: 0.0005 (0.0308)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634385797673, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 1.0769220860262174, "loss_classifier": 0.3816635249998118, "loss_box_reg": 0.1549466677814269, "loss_mask": 0.3785248902601165, "loss_objectness": 0.08727244072165843, "loss_rpn_box_reg": 0.07451456274333838, "time": 0.8037357280061052, "data": 0.03076573539424587, "throughput": 159.2563270983864}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 1850}}
:::MLLOG {"namespace": "", "time_ms": 1634385797673, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 159.2563270983864, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 3:36:20  iter: 1850  loss: 0.8580 (1.0769)  loss_classifier: 0.2932 (0.3814)  loss_box_reg: 0.1303 (0.1550)  loss_mask: 0.3068 (0.3799)  loss_objectness: 0.0558 (0.0869)  loss_rpn_box_reg: 0.0572 (0.0738)  time: 0.6924 (0.8038)  data: 0.0005 (0.0306)  lr: 0.160000  max mem: 14467
INFO:maskrcnn_benchmark.trainer:eta: 3:36:19  iter: 1850  loss: 0.8898 (1.0775)  loss_classifier: 0.3142 (0.3820)  loss_box_reg: 0.1350 (0.1554)  loss_mask: 0.2921 (0.3785)  loss_objectness: 0.0530 (0.0872)  loss_rpn_box_reg: 0.0643 (0.0745)  time: 0.6960 (0.8037)  data: 0.0005 (0.0306)  lr: 0.160000  max mem: 14503
INFO:maskrcnn_benchmark.trainer:eta: 3:36:20  iter: 1850  loss: 0.8998 (1.0719)  loss_classifier: 0.3158 (0.3809)  loss_box_reg: 0.1389 (0.1542)  loss_mask: 0.3080 (0.3781)  loss_objectness: 0.0509 (0.0856)  loss_rpn_box_reg: 0.0616 (0.0731)  time: 0.6918 (0.8037)  data: 0.0004 (0.0306)  lr: 0.160000  max mem: 14339
INFO:maskrcnn_benchmark.trainer:eta: 3:36:20  iter: 1850  loss: 0.8885 (1.0775)  loss_classifier: 0.3138 (0.3815)  loss_box_reg: 0.1412 (0.1549)  loss_mask: 0.3030 (0.3790)  loss_objectness: 0.0545 (0.0882)  loss_rpn_box_reg: 0.0560 (0.0740)  time: 0.6918 (0.8037)  data: 0.0004 (0.0306)  lr: 0.160000  max mem: 14585
INFO:maskrcnn_benchmark.timed_section:Prepping took 11.924 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 12.227 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 12.268 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 12.279 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 12.459 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 12.597 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 12.937 seconds total
2021-10-16 12:03:20,727 maskrcnn_benchmark.timed_section INFO: Prepping took 12.951 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 12.951 seconds total
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.232s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.233s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.236s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.236s
2021-10-16 12:03:30,947 maskrcnn_benchmark.timed_section INFO: EXPOSED: Launching evaluation task took 0.237s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.237s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.238s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.238s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.239s
Evaluating predictions
Loading and preparing results...
resFile is ./inference/coco_2017_val/segm.json
Loading and preparing results...
resFile is ./inference/coco_2017_val/bbox.json
DONE (t=1.18s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=3.00s)
Running per image evaluation...
Evaluate annotation type *segm*
DONE (t=2.17s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.21428
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.40662
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.20525
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.11313
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.24556
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.26850
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.21737
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.36346
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.38524
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.20640
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.42274
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.49022
DONE (t=3.37s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.21048
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.37961
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.21066
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.08130
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.23632
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.30938
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.21973
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.35021
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.36821
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.17872
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.41297
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.48380
2021-10-16 12:03:43,514 maskrcnn_benchmark.trainer INFO: bbox mAP: 0.21427679134025684, segm mAP: 0.21047642332241845
INFO:maskrcnn_benchmark.trainer:bbox mAP: 0.21427679134025684, segm mAP: 0.21047642332241845
:::MLLOG {"namespace": "", "time_ms": 1634385823514, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": {"BBOX": 0.21427679134025684, "SEGM": 0.21047642332241845}, "metadata": {"file": "tools/train_mlperf.py", "lineno": 133, "epoch_num": 2}}
:::MLLOG {"namespace": "", "time_ms": 1634385823514, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 134, "epoch_num": 2}}
INFO:maskrcnn_benchmark.trainer:eta: 3:34:31  iter: 1900  loss: 0.8823 (1.0666)  loss_classifier: 0.2902 (0.3786)  loss_box_reg: 0.1278 (0.1538)  loss_mask: 0.3111 (0.3763)  loss_objectness: 0.0531 (0.0849)  loss_rpn_box_reg: 0.0582 (0.0730)  time: 0.6185 (0.7995)  data: 0.0003 (0.0300)  lr: 0.160000  max mem: 14339
INFO:maskrcnn_benchmark.trainer:eta: 3:34:31  iter: 1900  loss: 0.8685 (1.0713)  loss_classifier: 0.3075 (0.3792)  loss_box_reg: 0.1384 (0.1545)  loss_mask: 0.2969 (0.3780)  loss_objectness: 0.0544 (0.0861)  loss_rpn_box_reg: 0.0596 (0.0735)  time: 0.6172 (0.7995)  data: 0.0003 (0.0300)  lr: 0.160000  max mem: 14467
INFO:maskrcnn_benchmark.trainer:eta: 3:34:31  iter: 1900  loss: 0.8123 (1.0718)  loss_classifier: 0.2828 (0.3790)  loss_box_reg: 0.1263 (0.1544)  loss_mask: 0.2997 (0.3771)  loss_objectness: 0.0540 (0.0874)  loss_rpn_box_reg: 0.0560 (0.0739)  time: 0.6172 (0.7994)  data: 0.0003 (0.0300)  lr: 0.160000  max mem: 14585
INFO:maskrcnn_benchmark.trainer:eta: 3:34:31  iter: 1900  loss: 0.8261 (1.0687)  loss_classifier: 0.2803 (0.3781)  loss_box_reg: 0.1276 (0.1535)  loss_mask: 0.3062 (0.3768)  loss_objectness: 0.0494 (0.0865)  loss_rpn_box_reg: 0.0494 (0.0737)  time: 0.6184 (0.7995)  data: 0.0003 (0.0301)  lr: 0.160000  max mem: 14444
INFO:maskrcnn_benchmark.trainer:eta: 3:34:30  iter: 1900  loss: 0.8776 (1.0718)  loss_classifier: 0.2937 (0.3796)  loss_box_reg: 0.1348 (0.1550)  loss_mask: 0.2947 (0.3765)  loss_objectness: 0.0555 (0.0864)  loss_rpn_box_reg: 0.0621 (0.0743)  time: 0.6171 (0.7994)  data: 0.0003 (0.0299)  lr: 0.160000  max mem: 14503
INFO:maskrcnn_benchmark.trainer:eta: 3:34:31  iter: 1900  loss: 0.8821 (1.0664)  loss_classifier: 0.2871 (0.3773)  loss_box_reg: 0.1432 (0.1545)  loss_mask: 0.2981 (0.3769)  loss_objectness: 0.0567 (0.0852)  loss_rpn_box_reg: 0.0613 (0.0725)  time: 0.6180 (0.7995)  data: 0.0003 (0.0300)  lr: 0.160000  max mem: 14639
2021-10-16 12:03:49,738 maskrcnn_benchmark.trainer INFO: eta: 3:34:31  iter: 1900  loss: 0.8666 (1.0714)  loss_classifier: 0.2807 (0.3794)  loss_box_reg: 0.1416 (0.1545)  loss_mask: 0.3167 (0.3767)  loss_objectness: 0.0495 (0.0864)  loss_rpn_box_reg: 0.0547 (0.0743)  time: 0.6179 (0.7995)  data: 0.0004 (0.0302)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 3:34:31  iter: 1900  loss: 0.8430 (1.0703)  loss_classifier: 0.2938 (0.3789)  loss_box_reg: 0.1358 (0.1538)  loss_mask: 0.3030 (0.3772)  loss_objectness: 0.0524 (0.0862)  loss_rpn_box_reg: 0.0634 (0.0741)  time: 0.6170 (0.7995)  data: 0.0003 (0.0300)  lr: 0.160000  max mem: 14541
INFO:maskrcnn_benchmark.trainer:eta: 3:34:31  iter: 1900  loss: 0.8666 (1.0714)  loss_classifier: 0.2807 (0.3794)  loss_box_reg: 0.1416 (0.1545)  loss_mask: 0.3167 (0.3767)  loss_objectness: 0.0495 (0.0864)  loss_rpn_box_reg: 0.0547 (0.0743)  time: 0.6179 (0.7995)  data: 0.0004 (0.0302)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634385829738, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 1.071397250890732, "loss_classifier": 0.3794331492326762, "loss_box_reg": 0.15453002430878482, "loss_mask": 0.37672640180117206, "loss_objectness": 0.08642727368854379, "loss_rpn_box_reg": 0.07428040234273986, "time": 0.7994613272265384, "data": 0.030169315714585154, "throughput": 160.10780714566002}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 1900}}
:::MLLOG {"namespace": "", "time_ms": 1634385829739, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 160.10780714566002, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 3:32:37  iter: 1950  loss: 0.8605 (1.0612)  loss_classifier: 0.2908 (0.3751)  loss_box_reg: 0.1445 (0.1541)  loss_mask: 0.3102 (0.3752)  loss_objectness: 0.0531 (0.0845)  loss_rpn_box_reg: 0.0559 (0.0723)  time: 0.6172 (0.7949)  data: 0.0003 (0.0292)  lr: 0.160000  max mem: 14639
2021-10-16 12:04:20,701 maskrcnn_benchmark.trainer INFO: eta: 3:32:37  iter: 1950  loss: 0.8585 (1.0658)  loss_classifier: 0.2752 (0.3770)  loss_box_reg: 0.1328 (0.1541)  loss_mask: 0.2991 (0.3750)  loss_objectness: 0.0560 (0.0858)  loss_rpn_box_reg: 0.0625 (0.0741)  time: 0.6172 (0.7948)  data: 0.0003 (0.0294)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 3:32:37  iter: 1950  loss: 0.7932 (1.0645)  loss_classifier: 0.2713 (0.3763)  loss_box_reg: 0.1262 (0.1533)  loss_mask: 0.2976 (0.3754)  loss_objectness: 0.0477 (0.0855)  loss_rpn_box_reg: 0.0497 (0.0739)  time: 0.6173 (0.7949)  data: 0.0003 (0.0292)  lr: 0.160000  max mem: 14541
INFO:maskrcnn_benchmark.trainer:eta: 3:32:37  iter: 1950  loss: 0.8585 (1.0658)  loss_classifier: 0.2752 (0.3770)  loss_box_reg: 0.1328 (0.1541)  loss_mask: 0.2991 (0.3750)  loss_objectness: 0.0560 (0.0858)  loss_rpn_box_reg: 0.0625 (0.0741)  time: 0.6172 (0.7948)  data: 0.0003 (0.0294)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634385860701, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 1.0657996262801, "loss_classifier": 0.3769755179301286, "loss_box_reg": 0.15405152182918616, "loss_mask": 0.3749614054346696, "loss_objectness": 0.08575806280168204, "loss_rpn_box_reg": 0.07405311850687632, "time": 0.7948406454233022, "data": 0.02940602021339612, "throughput": 161.03856884650384}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 1950}}
INFO:maskrcnn_benchmark.trainer:eta: 3:32:37  iter: 1950  loss: 0.8510 (1.0609)  loss_classifier: 0.2855 (0.3762)  loss_box_reg: 0.1358 (0.1533)  loss_mask: 0.2967 (0.3744)  loss_objectness: 0.0566 (0.0842)  loss_rpn_box_reg: 0.0600 (0.0728)  time: 0.6156 (0.7949)  data: 0.0003 (0.0293)  lr: 0.160000  max mem: 14752
:::MLLOG {"namespace": "", "time_ms": 1634385860701, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 161.03856884650384, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 3:32:37  iter: 1950  loss: 0.8476 (1.0633)  loss_classifier: 0.2697 (0.3758)  loss_box_reg: 0.1405 (0.1531)  loss_mask: 0.3071 (0.3750)  loss_objectness: 0.0482 (0.0857)  loss_rpn_box_reg: 0.0634 (0.0736)  time: 0.6156 (0.7949)  data: 0.0003 (0.0293)  lr: 0.160000  max mem: 14444
INFO:maskrcnn_benchmark.trainer:eta: 3:32:37  iter: 1950  loss: 0.8019 (1.0651)  loss_classifier: 0.2803 (0.3769)  loss_box_reg: 0.1303 (0.1540)  loss_mask: 0.2990 (0.3760)  loss_objectness: 0.0481 (0.0852)  loss_rpn_box_reg: 0.0549 (0.0731)  time: 0.6157 (0.7949)  data: 0.0003 (0.0292)  lr: 0.160000  max mem: 14467
INFO:maskrcnn_benchmark.trainer:eta: 3:32:36  iter: 1950  loss: 0.8936 (1.0663)  loss_classifier: 0.3080 (0.3769)  loss_box_reg: 0.1452 (0.1539)  loss_mask: 0.3147 (0.3753)  loss_objectness: 0.0603 (0.0866)  loss_rpn_box_reg: 0.0581 (0.0736)  time: 0.6157 (0.7948)  data: 0.0003 (0.0292)  lr: 0.160000  max mem: 14585
INFO:maskrcnn_benchmark.trainer:eta: 3:32:36  iter: 1950  loss: 0.8411 (1.0659)  loss_classifier: 0.2852 (0.3773)  loss_box_reg: 0.1352 (0.1544)  loss_mask: 0.3057 (0.3747)  loss_objectness: 0.0494 (0.0856)  loss_rpn_box_reg: 0.0575 (0.0740)  time: 0.6158 (0.7948)  data: 0.0003 (0.0292)  lr: 0.160000  max mem: 14503
INFO:maskrcnn_benchmark.trainer:eta: 3:30:48  iter: 2000  loss: 0.8137 (1.0572)  loss_classifier: 0.2628 (0.3734)  loss_box_reg: 0.1268 (0.1525)  loss_mask: 0.3060 (0.3733)  loss_objectness: 0.0469 (0.0849)  loss_rpn_box_reg: 0.0608 (0.0732)  time: 0.6205 (0.7905)  data: 0.0003 (0.0286)  lr: 0.160000  max mem: 14444
INFO:maskrcnn_benchmark.trainer:eta: 3:30:48  iter: 2000  loss: 0.8400 (1.0555)  loss_classifier: 0.2804 (0.3740)  loss_box_reg: 0.1230 (0.1528)  loss_mask: 0.3107 (0.3726)  loss_objectness: 0.0558 (0.0836)  loss_rpn_box_reg: 0.0612 (0.0725)  time: 0.6207 (0.7905)  data: 0.0004 (0.0286)  lr: 0.160000  max mem: 14752
INFO:maskrcnn_benchmark.trainer:eta: 3:30:48  iter: 2000  loss: 0.8591 (1.0593)  loss_classifier: 0.2698 (0.3741)  loss_box_reg: 0.1413 (0.1529)  loss_mask: 0.3049 (0.3737)  loss_objectness: 0.0536 (0.0848)  loss_rpn_box_reg: 0.0540 (0.0737)  time: 0.6191 (0.7905)  data: 0.0004 (0.0285)  lr: 0.160000  max mem: 14541
2021-10-16 12:04:51,726 maskrcnn_benchmark.trainer INFO: eta: 3:30:47  iter: 2000  loss: 0.7800 (1.0597)  loss_classifier: 0.2486 (0.3745)  loss_box_reg: 0.1254 (0.1535)  loss_mask: 0.3043 (0.3731)  loss_objectness: 0.0478 (0.0850)  loss_rpn_box_reg: 0.0608 (0.0737)  time: 0.6192 (0.7905)  data: 0.0003 (0.0287)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 3:30:47  iter: 2000  loss: 0.7800 (1.0597)  loss_classifier: 0.2486 (0.3745)  loss_box_reg: 0.1254 (0.1535)  loss_mask: 0.3043 (0.3731)  loss_objectness: 0.0478 (0.0850)  loss_rpn_box_reg: 0.0608 (0.0737)  time: 0.6192 (0.7905)  data: 0.0003 (0.0287)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 3:30:47  iter: 2000  loss: 0.8077 (1.0611)  loss_classifier: 0.2568 (0.3748)  loss_box_reg: 0.1171 (0.1533)  loss_mask: 0.3045 (0.3736)  loss_objectness: 0.0467 (0.0859)  loss_rpn_box_reg: 0.0651 (0.0734)  time: 0.6198 (0.7905)  data: 0.0003 (0.0285)  lr: 0.160000  max mem: 14585
INFO:maskrcnn_benchmark.trainer:eta: 3:30:47  iter: 2000  loss: 0.8840 (1.0555)  loss_classifier: 0.2909 (0.3727)  loss_box_reg: 0.1254 (0.1535)  loss_mask: 0.3016 (0.3734)  loss_objectness: 0.0516 (0.0838)  loss_rpn_box_reg: 0.0628 (0.0721)  time: 0.6193 (0.7905)  data: 0.0003 (0.0285)  lr: 0.160000  max mem: 14639
INFO:maskrcnn_benchmark.trainer:eta: 3:30:47  iter: 2000  loss: 0.7919 (1.0601)  loss_classifier: 0.2539 (0.3749)  loss_box_reg: 0.1188 (0.1538)  loss_mask: 0.3076 (0.3729)  loss_objectness: 0.0507 (0.0848)  loss_rpn_box_reg: 0.0618 (0.0737)  time: 0.6200 (0.7905)  data: 0.0003 (0.0285)  lr: 0.160000  max mem: 14503
:::MLLOG {"namespace": "", "time_ms": 1634385891726, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 1.059738126322627, "loss_classifier": 0.3744954975247383, "loss_box_reg": 0.15350224177527708, "loss_mask": 0.37310690965503457, "loss_objectness": 0.08497105524130165, "loss_rpn_box_reg": 0.07366242242790759, "time": 0.7904820868968964, "data": 0.02868190050125122, "throughput": 161.9265029805732}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 2000}}
INFO:maskrcnn_benchmark.trainer:eta: 3:30:47  iter: 2000  loss: 0.8347 (1.0597)  loss_classifier: 0.2751 (0.3746)  loss_box_reg: 0.1354 (0.1535)  loss_mask: 0.3034 (0.3743)  loss_objectness: 0.0538 (0.0845)  loss_rpn_box_reg: 0.0596 (0.0729)  time: 0.6201 (0.7905)  data: 0.0004 (0.0285)  lr: 0.160000  max mem: 14467
:::MLLOG {"namespace": "", "time_ms": 1634385891726, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 161.9265029805732, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 3:29:02  iter: 2050  loss: 0.8836 (1.0509)  loss_classifier: 0.2991 (0.3720)  loss_box_reg: 0.1496 (0.1525)  loss_mask: 0.3219 (0.3711)  loss_objectness: 0.0521 (0.0829)  loss_rpn_box_reg: 0.0636 (0.0724)  time: 0.6234 (0.7864)  data: 0.0003 (0.0279)  lr: 0.160000  max mem: 14752
INFO:maskrcnn_benchmark.trainer:eta: 3:29:02  iter: 2050  loss: 0.8488 (1.0549)  loss_classifier: 0.3021 (0.3726)  loss_box_reg: 0.1405 (0.1531)  loss_mask: 0.3039 (0.3727)  loss_objectness: 0.0525 (0.0838)  loss_rpn_box_reg: 0.0646 (0.0726)  time: 0.6242 (0.7863)  data: 0.0004 (0.0278)  lr: 0.160000  max mem: 14467
INFO:maskrcnn_benchmark.trainer:eta: 3:29:01  iter: 2050  loss: 0.8013 (1.0554)  loss_classifier: 0.2663 (0.3723)  loss_box_reg: 0.1176 (0.1527)  loss_mask: 0.3104 (0.3720)  loss_objectness: 0.0531 (0.0853)  loss_rpn_box_reg: 0.0611 (0.0731)  time: 0.6240 (0.7863)  data: 0.0003 (0.0278)  lr: 0.160000  max mem: 14585
INFO:maskrcnn_benchmark.trainer:eta: 3:29:01  iter: 2050  loss: 0.8671 (1.0548)  loss_classifier: 0.2786 (0.3726)  loss_box_reg: 0.1383 (0.1534)  loss_mask: 0.3089 (0.3714)  loss_objectness: 0.0575 (0.0840)  loss_rpn_box_reg: 0.0598 (0.0734)  time: 0.6241 (0.7863)  data: 0.0004 (0.0278)  lr: 0.160000  max mem: 14503
INFO:maskrcnn_benchmark.trainer:eta: 3:29:02  iter: 2050  loss: 0.8787 (1.0527)  loss_classifier: 0.3053 (0.3715)  loss_box_reg: 0.1415 (0.1522)  loss_mask: 0.3049 (0.3716)  loss_objectness: 0.0572 (0.0843)  loss_rpn_box_reg: 0.0567 (0.0731)  time: 0.6232 (0.7864)  data: 0.0003 (0.0279)  lr: 0.160000  max mem: 14444
INFO:maskrcnn_benchmark.trainer:eta: 3:29:02  iter: 2050  loss: 0.8684 (1.0511)  loss_classifier: 0.3182 (0.3709)  loss_box_reg: 0.1358 (0.1532)  loss_mask: 0.3029 (0.3718)  loss_objectness: 0.0601 (0.0832)  loss_rpn_box_reg: 0.0603 (0.0720)  time: 0.6229 (0.7863)  data: 0.0003 (0.0278)  lr: 0.160000  max mem: 14639
2021-10-16 12:05:22,745 maskrcnn_benchmark.trainer INFO: eta: 3:29:02  iter: 2050  loss: 0.9165 (1.0554)  loss_classifier: 0.2980 (0.3727)  loss_box_reg: 0.1407 (0.1532)  loss_mask: 0.3206 (0.3716)  loss_objectness: 0.0514 (0.0844)  loss_rpn_box_reg: 0.0554 (0.0735)  time: 0.6231 (0.7863)  data: 0.0003 (0.0280)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 3:29:02  iter: 2050  loss: 0.8905 (1.0544)  loss_classifier: 0.2923 (0.3721)  loss_box_reg: 0.1369 (0.1525)  loss_mask: 0.2975 (0.3721)  loss_objectness: 0.0518 (0.0841)  loss_rpn_box_reg: 0.0666 (0.0736)  time: 0.6221 (0.7864)  data: 0.0004 (0.0278)  lr: 0.160000  max mem: 14541
INFO:maskrcnn_benchmark.trainer:eta: 3:29:02  iter: 2050  loss: 0.9165 (1.0554)  loss_classifier: 0.2980 (0.3727)  loss_box_reg: 0.1407 (0.1532)  loss_mask: 0.3206 (0.3716)  loss_objectness: 0.0514 (0.0844)  loss_rpn_box_reg: 0.0554 (0.0735)  time: 0.6231 (0.7863)  data: 0.0003 (0.0280)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634385922745, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 1.0554439479694133, "loss_classifier": 0.372684725057788, "loss_box_reg": 0.1532082846396171, "loss_mask": 0.37163473439652744, "loss_objectness": 0.08439782386418523, "loss_rpn_box_reg": 0.07351838018654323, "time": 0.7863331905225428, "data": 0.027993632293329008, "throughput": 162.78086890232882}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 2050}}
:::MLLOG {"namespace": "", "time_ms": 1634385922745, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 162.78086890232882, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 3:27:19  iter: 2100  loss: 0.8143 (1.0502)  loss_classifier: 0.2751 (0.3705)  loss_box_reg: 0.1349 (0.1527)  loss_mask: 0.3022 (0.3713)  loss_objectness: 0.0586 (0.0833)  loss_rpn_box_reg: 0.0536 (0.0724)  time: 0.6206 (0.7824)  data: 0.0004 (0.0272)  lr: 0.160000  max mem: 14467
INFO:maskrcnn_benchmark.trainer:eta: 3:27:19  iter: 2100  loss: 0.8351 (1.0502)  loss_classifier: 0.2905 (0.3706)  loss_box_reg: 0.1266 (0.1529)  loss_mask: 0.3001 (0.3698)  loss_objectness: 0.0517 (0.0835)  loss_rpn_box_reg: 0.0580 (0.0733)  time: 0.6209 (0.7823)  data: 0.0004 (0.0271)  lr: 0.160000  max mem: 14503
INFO:maskrcnn_benchmark.trainer:eta: 3:27:19  iter: 2100  loss: 0.8150 (1.0510)  loss_classifier: 0.2719 (0.3706)  loss_box_reg: 0.1336 (0.1523)  loss_mask: 0.2975 (0.3704)  loss_objectness: 0.0472 (0.0847)  loss_rpn_box_reg: 0.0660 (0.0731)  time: 0.6207 (0.7824)  data: 0.0003 (0.0271)  lr: 0.160000  max mem: 14585
INFO:maskrcnn_benchmark.trainer:eta: 3:27:19  iter: 2100  loss: 0.8051 (1.0460)  loss_classifier: 0.2855 (0.3701)  loss_box_reg: 0.1234 (0.1520)  loss_mask: 0.2886 (0.3693)  loss_objectness: 0.0556 (0.0823)  loss_rpn_box_reg: 0.0512 (0.0723)  time: 0.6199 (0.7824)  data: 0.0003 (0.0272)  lr: 0.160000  max mem: 14752
INFO:maskrcnn_benchmark.trainer:eta: 3:27:20  iter: 2100  loss: 0.9231 (1.0477)  loss_classifier: 0.3195 (0.3696)  loss_box_reg: 0.1424 (0.1518)  loss_mask: 0.2975 (0.3699)  loss_objectness: 0.0556 (0.0836)  loss_rpn_box_reg: 0.0719 (0.0728)  time: 0.6192 (0.7824)  data: 0.0003 (0.0272)  lr: 0.160000  max mem: 14444
INFO:maskrcnn_benchmark.trainer:eta: 3:27:19  iter: 2100  loss: 0.8295 (1.0464)  loss_classifier: 0.2847 (0.3691)  loss_box_reg: 0.1315 (0.1527)  loss_mask: 0.3053 (0.3703)  loss_objectness: 0.0543 (0.0826)  loss_rpn_box_reg: 0.0606 (0.0717)  time: 0.6202 (0.7824)  data: 0.0003 (0.0272)  lr: 0.160000  max mem: 14639
2021-10-16 12:05:53,735 maskrcnn_benchmark.trainer INFO: eta: 3:27:19  iter: 2100  loss: 0.7555 (1.0502)  loss_classifier: 0.2802 (0.3707)  loss_box_reg: 0.1168 (0.1527)  loss_mask: 0.2882 (0.3698)  loss_objectness: 0.0502 (0.0838)  loss_rpn_box_reg: 0.0534 (0.0731)  time: 0.6203 (0.7824)  data: 0.0003 (0.0273)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 3:27:20  iter: 2100  loss: 0.7991 (1.0488)  loss_classifier: 0.2858 (0.3700)  loss_box_reg: 0.1327 (0.1519)  loss_mask: 0.2960 (0.3703)  loss_objectness: 0.0491 (0.0834)  loss_rpn_box_reg: 0.0487 (0.0732)  time: 0.6204 (0.7824)  data: 0.0003 (0.0272)  lr: 0.160000  max mem: 14541
INFO:maskrcnn_benchmark.trainer:eta: 3:27:19  iter: 2100  loss: 0.7555 (1.0502)  loss_classifier: 0.2802 (0.3707)  loss_box_reg: 0.1168 (0.1527)  loss_mask: 0.2882 (0.3698)  loss_objectness: 0.0502 (0.0838)  loss_rpn_box_reg: 0.0534 (0.0731)  time: 0.6203 (0.7824)  data: 0.0003 (0.0273)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634385953735, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 1.050150698749792, "loss_classifier": 0.37074652448296547, "loss_box_reg": 0.15265360262766037, "loss_mask": 0.36983091619043124, "loss_objectness": 0.08379630604936253, "loss_rpn_box_reg": 0.0731233495429513, "time": 0.7823682240077428, "data": 0.027337874571482342, "throughput": 163.60582660720797}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 2100}}
:::MLLOG {"namespace": "", "time_ms": 1634385953735, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 163.60582660720797, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 3:25:40  iter: 2150  loss: 0.8512 (1.0452)  loss_classifier: 0.3064 (0.3685)  loss_box_reg: 0.1301 (0.1522)  loss_mask: 0.3060 (0.3696)  loss_objectness: 0.0491 (0.0827)  loss_rpn_box_reg: 0.0618 (0.0723)  time: 0.6197 (0.7786)  data: 0.0003 (0.0265)  lr: 0.160000  max mem: 14467
INFO:maskrcnn_benchmark.trainer:eta: 3:25:40  iter: 2150  loss: 0.8621 (1.0465)  loss_classifier: 0.3073 (0.3687)  loss_box_reg: 0.1444 (0.1520)  loss_mask: 0.2864 (0.3688)  loss_objectness: 0.0579 (0.0841)  loss_rpn_box_reg: 0.0648 (0.0729)  time: 0.6197 (0.7786)  data: 0.0004 (0.0265)  lr: 0.160000  max mem: 14585
INFO:maskrcnn_benchmark.trainer:eta: 3:25:40  iter: 2150  loss: 0.8083 (1.0455)  loss_classifier: 0.2837 (0.3687)  loss_box_reg: 0.1281 (0.1525)  loss_mask: 0.3204 (0.3683)  loss_objectness: 0.0525 (0.0829)  loss_rpn_box_reg: 0.0580 (0.0731)  time: 0.6197 (0.7786)  data: 0.0003 (0.0265)  lr: 0.160000  max mem: 14518
INFO:maskrcnn_benchmark.trainer:eta: 3:25:40  iter: 2150  loss: 0.8239 (1.0417)  loss_classifier: 0.3047 (0.3682)  loss_box_reg: 0.1277 (0.1516)  loss_mask: 0.2956 (0.3679)  loss_objectness: 0.0560 (0.0818)  loss_rpn_box_reg: 0.0602 (0.0722)  time: 0.6198 (0.7786)  data: 0.0003 (0.0266)  lr: 0.160000  max mem: 14752
INFO:maskrcnn_benchmark.trainer:eta: 3:25:40  iter: 2150  loss: 0.8520 (1.0427)  loss_classifier: 0.2923 (0.3675)  loss_box_reg: 0.1385 (0.1513)  loss_mask: 0.2992 (0.3683)  loss_objectness: 0.0610 (0.0830)  loss_rpn_box_reg: 0.0628 (0.0725)  time: 0.6197 (0.7786)  data: 0.0003 (0.0266)  lr: 0.160000  max mem: 14444
INFO:maskrcnn_benchmark.trainer:eta: 3:25:40  iter: 2150  loss: 0.8323 (1.0414)  loss_classifier: 0.2876 (0.3669)  loss_box_reg: 0.1218 (0.1522)  loss_mask: 0.2990 (0.3688)  loss_objectness: 0.0475 (0.0820)  loss_rpn_box_reg: 0.0560 (0.0715)  time: 0.6207 (0.7786)  data: 0.0003 (0.0266)  lr: 0.160000  max mem: 14639
2021-10-16 12:06:24,702 maskrcnn_benchmark.trainer INFO: eta: 3:25:40  iter: 2150  loss: 0.8386 (1.0459)  loss_classifier: 0.2795 (0.3690)  loss_box_reg: 0.1263 (0.1523)  loss_mask: 0.2997 (0.3684)  loss_objectness: 0.0491 (0.0833)  loss_rpn_box_reg: 0.0548 (0.0729)  time: 0.6204 (0.7786)  data: 0.0003 (0.0267)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 3:25:40  iter: 2150  loss: 0.7974 (1.0444)  loss_classifier: 0.2679 (0.3681)  loss_box_reg: 0.1234 (0.1515)  loss_mask: 0.3077 (0.3688)  loss_objectness: 0.0507 (0.0828)  loss_rpn_box_reg: 0.0623 (0.0731)  time: 0.6207 (0.7786)  data: 0.0003 (0.0265)  lr: 0.160000  max mem: 14541
INFO:maskrcnn_benchmark.trainer:eta: 3:25:40  iter: 2150  loss: 0.8386 (1.0459)  loss_classifier: 0.2795 (0.3690)  loss_box_reg: 0.1263 (0.1523)  loss_mask: 0.2997 (0.3684)  loss_objectness: 0.0491 (0.0833)  loss_rpn_box_reg: 0.0548 (0.0729)  time: 0.6204 (0.7786)  data: 0.0003 (0.0267)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634385984702, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 1.0458831160706143, "loss_classifier": 0.3690063084142153, "loss_box_reg": 0.1522555920203368, "loss_mask": 0.36843959771616513, "loss_objectness": 0.08330085901326911, "loss_rpn_box_reg": 0.07288075905206591, "time": 0.7785766714672709, "data": 0.026712559655655263, "throughput": 164.40256263879175}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 2150}}
:::MLLOG {"namespace": "", "time_ms": 1634385984702, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 164.40256263879175, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 3:24:05  iter: 2200  loss: 0.8555 (1.0386)  loss_classifier: 0.2750 (0.3657)  loss_box_reg: 0.1350 (0.1510)  loss_mask: 0.3110 (0.3670)  loss_objectness: 0.0467 (0.0825)  loss_rpn_box_reg: 0.0611 (0.0724)  time: 0.6173 (0.7750)  data: 0.0003 (0.0260)  lr: 0.160000  max mem: 14444
INFO:maskrcnn_benchmark.trainer:eta: 3:24:04  iter: 2200  loss: 0.9019 (1.0374)  loss_classifier: 0.3370 (0.3663)  loss_box_reg: 0.1432 (0.1512)  loss_mask: 0.3191 (0.3664)  loss_objectness: 0.0591 (0.0813)  loss_rpn_box_reg: 0.0609 (0.0722)  time: 0.6172 (0.7750)  data: 0.0004 (0.0260)  lr: 0.160000  max mem: 14752
2021-10-16 12:06:55,715 maskrcnn_benchmark.trainer INFO: eta: 3:24:04  iter: 2200  loss: 0.8218 (1.0421)  loss_classifier: 0.2806 (0.3675)  loss_box_reg: 0.1271 (0.1519)  loss_mask: 0.2968 (0.3670)  loss_objectness: 0.0520 (0.0829)  loss_rpn_box_reg: 0.0631 (0.0728)  time: 0.6175 (0.7750)  data: 0.0004 (0.0261)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 3:24:04  iter: 2200  loss: 0.7873 (1.0367)  loss_classifier: 0.2422 (0.3651)  loss_box_reg: 0.1174 (0.1517)  loss_mask: 0.2985 (0.3672)  loss_objectness: 0.0510 (0.0815)  loss_rpn_box_reg: 0.0490 (0.0713)  time: 0.6177 (0.7750)  data: 0.0004 (0.0260)  lr: 0.160000  max mem: 14639
INFO:maskrcnn_benchmark.trainer:eta: 3:24:04  iter: 2200  loss: 0.7989 (1.0401)  loss_classifier: 0.2594 (0.3663)  loss_box_reg: 0.1317 (0.1517)  loss_mask: 0.2961 (0.3680)  loss_objectness: 0.0519 (0.0820)  loss_rpn_box_reg: 0.0548 (0.0720)  time: 0.6173 (0.7750)  data: 0.0004 (0.0260)  lr: 0.160000  max mem: 14467
INFO:maskrcnn_benchmark.trainer:eta: 3:24:04  iter: 2200  loss: 0.8218 (1.0421)  loss_classifier: 0.2806 (0.3675)  loss_box_reg: 0.1271 (0.1519)  loss_mask: 0.2968 (0.3670)  loss_objectness: 0.0520 (0.0829)  loss_rpn_box_reg: 0.0631 (0.0728)  time: 0.6175 (0.7750)  data: 0.0004 (0.0261)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 3:24:04  iter: 2200  loss: 0.8094 (1.0409)  loss_classifier: 0.2645 (0.3668)  loss_box_reg: 0.1198 (0.1521)  loss_mask: 0.3022 (0.3669)  loss_objectness: 0.0589 (0.0823)  loss_rpn_box_reg: 0.0494 (0.0728)  time: 0.6176 (0.7750)  data: 0.0004 (0.0259)  lr: 0.160000  max mem: 14518
INFO:maskrcnn_benchmark.trainer:eta: 3:24:04  iter: 2200  loss: 0.8599 (1.0424)  loss_classifier: 0.2854 (0.3668)  loss_box_reg: 0.1363 (0.1516)  loss_mask: 0.3042 (0.3674)  loss_objectness: 0.0578 (0.0836)  loss_rpn_box_reg: 0.0769 (0.0730)  time: 0.6175 (0.7750)  data: 0.0004 (0.0259)  lr: 0.160000  max mem: 14585
INFO:maskrcnn_benchmark.trainer:eta: 3:24:05  iter: 2200  loss: 0.8068 (1.0391)  loss_classifier: 0.2549 (0.3659)  loss_box_reg: 0.1211 (0.1509)  loss_mask: 0.2997 (0.3674)  loss_objectness: 0.0514 (0.0821)  loss_rpn_box_reg: 0.0597 (0.0727)  time: 0.6178 (0.7750)  data: 0.0004 (0.0259)  lr: 0.160000  max mem: 14541
:::MLLOG {"namespace": "", "time_ms": 1634386015716, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 1.0420521582121198, "loss_classifier": 0.36745258948003706, "loss_box_reg": 0.15194359680288472, "loss_mask": 0.3670143520493399, "loss_objectness": 0.08287109249186787, "loss_rpn_box_reg": 0.07277052745477042, "time": 0.7749788637594743, "data": 0.026116625829176468, "throughput": 165.1657948180205}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 2200}}
:::MLLOG {"namespace": "", "time_ms": 1634386015716, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 165.1657948180205, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 3:22:31  iter: 2250  loss: 0.8302 (1.0368)  loss_classifier: 0.2938 (0.3651)  loss_box_reg: 0.1357 (0.1517)  loss_mask: 0.2981 (0.3655)  loss_objectness: 0.0528 (0.0818)  loss_rpn_box_reg: 0.0603 (0.0727)  time: 0.6234 (0.7715)  data: 0.0004 (0.0254)  lr: 0.160000  max mem: 14650
INFO:maskrcnn_benchmark.trainer:eta: 3:22:32  iter: 2250  loss: 0.8410 (1.0348)  loss_classifier: 0.2677 (0.3642)  loss_box_reg: 0.1196 (0.1511)  loss_mask: 0.3065 (0.3665)  loss_objectness: 0.0471 (0.0813)  loss_rpn_box_reg: 0.0662 (0.0717)  time: 0.6231 (0.7716)  data: 0.0004 (0.0254)  lr: 0.160000  max mem: 14467
INFO:maskrcnn_benchmark.trainer:eta: 3:22:31  iter: 2250  loss: 0.8138 (1.0379)  loss_classifier: 0.2713 (0.3650)  loss_box_reg: 0.1486 (0.1512)  loss_mask: 0.3062 (0.3660)  loss_objectness: 0.0595 (0.0830)  loss_rpn_box_reg: 0.0509 (0.0726)  time: 0.6235 (0.7715)  data: 0.0004 (0.0254)  lr: 0.160000  max mem: 14585
INFO:maskrcnn_benchmark.trainer:eta: 3:22:32  iter: 2250  loss: 0.8466 (1.0328)  loss_classifier: 0.2989 (0.3644)  loss_box_reg: 0.1394 (0.1507)  loss_mask: 0.2995 (0.3650)  loss_objectness: 0.0481 (0.0807)  loss_rpn_box_reg: 0.0575 (0.0720)  time: 0.6239 (0.7716)  data: 0.0004 (0.0254)  lr: 0.160000  max mem: 14752
INFO:maskrcnn_benchmark.trainer:eta: 3:22:32  iter: 2250  loss: 0.9233 (1.0345)  loss_classifier: 0.3166 (0.3640)  loss_box_reg: 0.1520 (0.1506)  loss_mask: 0.3181 (0.3658)  loss_objectness: 0.0596 (0.0820)  loss_rpn_box_reg: 0.0628 (0.0722)  time: 0.6239 (0.7716)  data: 0.0004 (0.0255)  lr: 0.160000  max mem: 14444
INFO:maskrcnn_benchmark.trainer:eta: 3:22:32  iter: 2250  loss: 0.8193 (1.0323)  loss_classifier: 0.2686 (0.3633)  loss_box_reg: 0.1337 (0.1513)  loss_mask: 0.3026 (0.3659)  loss_objectness: 0.0542 (0.0809)  loss_rpn_box_reg: 0.0636 (0.0710)  time: 0.6239 (0.7716)  data: 0.0004 (0.0254)  lr: 0.160000  max mem: 14639
2021-10-16 12:07:26,775 maskrcnn_benchmark.trainer INFO: eta: 3:22:32  iter: 2250  loss: 0.8492 (1.0377)  loss_classifier: 0.2792 (0.3656)  loss_box_reg: 0.1362 (0.1515)  loss_mask: 0.3134 (0.3657)  loss_objectness: 0.0541 (0.0822)  loss_rpn_box_reg: 0.0579 (0.0726)  time: 0.6240 (0.7716)  data: 0.0003 (0.0255)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 3:22:32  iter: 2250  loss: 0.8492 (1.0377)  loss_classifier: 0.2792 (0.3656)  loss_box_reg: 0.1362 (0.1515)  loss_mask: 0.3134 (0.3657)  loss_objectness: 0.0541 (0.0822)  loss_rpn_box_reg: 0.0579 (0.0726)  time: 0.6240 (0.7716)  data: 0.0003 (0.0255)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 3:22:32  iter: 2250  loss: 0.8084 (1.0341)  loss_classifier: 0.2702 (0.3639)  loss_box_reg: 0.1231 (0.1503)  loss_mask: 0.2908 (0.3659)  loss_objectness: 0.0474 (0.0816)  loss_rpn_box_reg: 0.0474 (0.0724)  time: 0.6240 (0.7716)  data: 0.0003 (0.0254)  lr: 0.160000  max mem: 14541
:::MLLOG {"namespace": "", "time_ms": 1634386046776, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 1.0376793342298931, "loss_classifier": 0.365639545119471, "loss_box_reg": 0.1515428568040952, "loss_mask": 0.36568028485774995, "loss_objectness": 0.08224827838689089, "loss_rpn_box_reg": 0.07256836939768659, "time": 0.7715616026984321, "data": 0.025546241018507217, "throughput": 165.8973172749102}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 2250}}
:::MLLOG {"namespace": "", "time_ms": 1634386046776, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 165.8973172749102, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 3:21:43  iter: 2300  loss: 0.8571 (1.0300)  loss_classifier: 0.2788 (0.3621)  loss_box_reg: 0.1316 (0.1500)  loss_mask: 0.3114 (0.3645)  loss_objectness: 0.0556 (0.0811)  loss_rpn_box_reg: 0.0615 (0.0722)  time: 0.6238 (0.7709)  data: 0.0004 (0.0248)  lr: 0.160000  max mem: 14541
2021-10-16 12:08:03,859 maskrcnn_benchmark.trainer INFO: eta: 3:21:43  iter: 2300  loss: 0.7928 (1.0332)  loss_classifier: 0.2724 (0.3637)  loss_box_reg: 0.1220 (0.1510)  loss_mask: 0.2983 (0.3642)  loss_objectness: 0.0478 (0.0817)  loss_rpn_box_reg: 0.0649 (0.0725)  time: 0.6236 (0.7709)  data: 0.0003 (0.0250)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 3:21:43  iter: 2300  loss: 0.7928 (1.0332)  loss_classifier: 0.2724 (0.3637)  loss_box_reg: 0.1220 (0.1510)  loss_mask: 0.2983 (0.3642)  loss_objectness: 0.0478 (0.0817)  loss_rpn_box_reg: 0.0649 (0.0725)  time: 0.6236 (0.7709)  data: 0.0003 (0.0250)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 3:21:43  iter: 2300  loss: 0.8388 (1.0285)  loss_classifier: 0.2791 (0.3616)  loss_box_reg: 0.1298 (0.1509)  loss_mask: 0.2961 (0.3645)  loss_objectness: 0.0557 (0.0805)  loss_rpn_box_reg: 0.0573 (0.0709)  time: 0.6240 (0.7709)  data: 0.0004 (0.0249)  lr: 0.160000  max mem: 14639
:::MLLOG {"namespace": "", "time_ms": 1634386083859, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 1.033187969987807, "loss_classifier": 0.36373039596430634, "loss_box_reg": 0.15104608547904164, "loss_mask": 0.36420132255424625, "loss_objectness": 0.0817222251986032, "loss_rpn_box_reg": 0.07248794103608183, "time": 0.770911746647047, "data": 0.025000682602757993, "throughput": 166.03716386047407}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 2300}}
:::MLLOG {"namespace": "", "time_ms": 1634386083859, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 166.03716386047407, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 3:21:43  iter: 2300  loss: 0.8484 (1.0303)  loss_classifier: 0.3064 (0.3623)  loss_box_reg: 0.1436 (0.1503)  loss_mask: 0.3045 (0.3645)  loss_objectness: 0.0512 (0.0814)  loss_rpn_box_reg: 0.0553 (0.0719)  time: 0.6232 (0.7709)  data: 0.0003 (0.0249)  lr: 0.160000  max mem: 14444
INFO:maskrcnn_benchmark.trainer:eta: 3:21:43  iter: 2300  loss: 0.9242 (1.0289)  loss_classifier: 0.3165 (0.3627)  loss_box_reg: 0.1471 (0.1504)  loss_mask: 0.3054 (0.3637)  loss_objectness: 0.0567 (0.0802)  loss_rpn_box_reg: 0.0754 (0.0719)  time: 0.6227 (0.7709)  data: 0.0004 (0.0249)  lr: 0.160000  max mem: 14752
INFO:maskrcnn_benchmark.trainer:eta: 3:21:43  iter: 2300  loss: 0.8373 (1.0315)  loss_classifier: 0.2855 (0.3628)  loss_box_reg: 0.1310 (0.1509)  loss_mask: 0.3042 (0.3652)  loss_objectness: 0.0567 (0.0809)  loss_rpn_box_reg: 0.0685 (0.0716)  time: 0.6223 (0.7709)  data: 0.0004 (0.0249)  lr: 0.160000  max mem: 14467
INFO:maskrcnn_benchmark.trainer:eta: 3:21:43  iter: 2300  loss: 0.7678 (1.0322)  loss_classifier: 0.2515 (0.3633)  loss_box_reg: 0.1170 (0.1513)  loss_mask: 0.2966 (0.3640)  loss_objectness: 0.0493 (0.0812)  loss_rpn_box_reg: 0.0490 (0.0725)  time: 0.6225 (0.7709)  data: 0.0003 (0.0248)  lr: 0.160000  max mem: 14650
INFO:maskrcnn_benchmark.trainer:eta: 3:21:43  iter: 2300  loss: 0.8393 (1.0332)  loss_classifier: 0.2706 (0.3631)  loss_box_reg: 0.1245 (0.1507)  loss_mask: 0.3057 (0.3647)  loss_objectness: 0.0522 (0.0824)  loss_rpn_box_reg: 0.0677 (0.0724)  time: 0.6225 (0.7709)  data: 0.0004 (0.0248)  lr: 0.160000  max mem: 14585
INFO:maskrcnn_benchmark.trainer:eta: 3:20:14  iter: 2350  loss: 0.8576 (1.0244)  loss_classifier: 0.2870 (0.3599)  loss_box_reg: 0.1369 (0.1505)  loss_mask: 0.3087 (0.3632)  loss_objectness: 0.0482 (0.0800)  loss_rpn_box_reg: 0.0652 (0.0708)  time: 0.6194 (0.7677)  data: 0.0003 (0.0243)  lr: 0.160000  max mem: 14639
INFO:maskrcnn_benchmark.trainer:eta: 3:20:15  iter: 2350  loss: 0.7971 (1.0259)  loss_classifier: 0.2736 (0.3605)  loss_box_reg: 0.1166 (0.1496)  loss_mask: 0.2949 (0.3632)  loss_objectness: 0.0527 (0.0806)  loss_rpn_box_reg: 0.0542 (0.0720)  time: 0.6194 (0.7677)  data: 0.0004 (0.0243)  lr: 0.160000  max mem: 14541
2021-10-16 12:08:34,886 maskrcnn_benchmark.trainer INFO: eta: 3:20:14  iter: 2350  loss: 0.8002 (1.0284)  loss_classifier: 0.2750 (0.3618)  loss_box_reg: 0.1342 (0.1505)  loss_mask: 0.2928 (0.3627)  loss_objectness: 0.0508 (0.0811)  loss_rpn_box_reg: 0.0589 (0.0723)  time: 0.6195 (0.7677)  data: 0.0003 (0.0245)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 3:20:14  iter: 2350  loss: 0.8002 (1.0284)  loss_classifier: 0.2750 (0.3618)  loss_box_reg: 0.1342 (0.1505)  loss_mask: 0.2928 (0.3627)  loss_objectness: 0.0508 (0.0811)  loss_rpn_box_reg: 0.0589 (0.0723)  time: 0.6195 (0.7677)  data: 0.0003 (0.0245)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634386114886, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 1.0284279885317418, "loss_classifier": 0.3618171486353621, "loss_box_reg": 0.1504791478669033, "loss_mask": 0.3627307039182237, "loss_objectness": 0.08111420841847962, "loss_rpn_box_reg": 0.07228678003270575, "time": 0.7677121907092155, "data": 0.024478011232741334, "throughput": 166.72914869536345}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 2350}}
:::MLLOG {"namespace": "", "time_ms": 1634386114886, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 166.72914869536345, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 3:20:15  iter: 2350  loss: 0.7653 (1.0261)  loss_classifier: 0.2619 (0.3606)  loss_box_reg: 0.1219 (0.1498)  loss_mask: 0.3069 (0.3632)  loss_objectness: 0.0449 (0.0808)  loss_rpn_box_reg: 0.0486 (0.0717)  time: 0.6197 (0.7677)  data: 0.0003 (0.0244)  lr: 0.160000  max mem: 14444
INFO:maskrcnn_benchmark.trainer:eta: 3:20:14  iter: 2350  loss: 0.8239 (1.0249)  loss_classifier: 0.2802 (0.3611)  loss_box_reg: 0.1323 (0.1500)  loss_mask: 0.2995 (0.3624)  loss_objectness: 0.0622 (0.0797)  loss_rpn_box_reg: 0.0627 (0.0718)  time: 0.6201 (0.7677)  data: 0.0004 (0.0244)  lr: 0.160000  max mem: 14752
INFO:maskrcnn_benchmark.trainer:eta: 3:20:14  iter: 2350  loss: 0.8228 (1.0273)  loss_classifier: 0.2852 (0.3612)  loss_box_reg: 0.1324 (0.1505)  loss_mask: 0.3030 (0.3639)  loss_objectness: 0.0506 (0.0804)  loss_rpn_box_reg: 0.0514 (0.0714)  time: 0.6198 (0.7677)  data: 0.0003 (0.0243)  lr: 0.160000  max mem: 14467
INFO:maskrcnn_benchmark.trainer:eta: 3:20:14  iter: 2350  loss: 0.8127 (1.0286)  loss_classifier: 0.2842 (0.3613)  loss_box_reg: 0.1284 (0.1502)  loss_mask: 0.2921 (0.3634)  loss_objectness: 0.0435 (0.0817)  loss_rpn_box_reg: 0.0440 (0.0720)  time: 0.6197 (0.7677)  data: 0.0003 (0.0243)  lr: 0.160000  max mem: 14585
INFO:maskrcnn_benchmark.trainer:eta: 3:20:14  iter: 2350  loss: 0.8705 (1.0282)  loss_classifier: 0.2894 (0.3616)  loss_box_reg: 0.1360 (0.1508)  loss_mask: 0.3063 (0.3628)  loss_objectness: 0.0573 (0.0807)  loss_rpn_box_reg: 0.0507 (0.0723)  time: 0.6198 (0.7677)  data: 0.0003 (0.0243)  lr: 0.160000  max mem: 14650
INFO:maskrcnn_benchmark.trainer:eta: 3:18:48  iter: 2400  loss: 0.8424 (1.0211)  loss_classifier: 0.2819 (0.3594)  loss_box_reg: 0.1326 (0.1496)  loss_mask: 0.2958 (0.3611)  loss_objectness: 0.0567 (0.0793)  loss_rpn_box_reg: 0.0526 (0.0717)  time: 0.6218 (0.7647)  data: 0.0003 (0.0239)  lr: 0.160000  max mem: 14752
INFO:maskrcnn_benchmark.trainer:eta: 3:18:49  iter: 2400  loss: 0.8742 (1.0225)  loss_classifier: 0.2882 (0.3590)  loss_box_reg: 0.1369 (0.1495)  loss_mask: 0.3016 (0.3620)  loss_objectness: 0.0532 (0.0803)  loss_rpn_box_reg: 0.0670 (0.0716)  time: 0.6228 (0.7647)  data: 0.0004 (0.0239)  lr: 0.160000  max mem: 14444
INFO:maskrcnn_benchmark.trainer:eta: 3:18:48  iter: 2400  loss: 0.8166 (1.0226)  loss_classifier: 0.2828 (0.3593)  loss_box_reg: 0.1248 (0.1501)  loss_mask: 0.2962 (0.3625)  loss_objectness: 0.0413 (0.0797)  loss_rpn_box_reg: 0.0413 (0.0711)  time: 0.6241 (0.7647)  data: 0.0003 (0.0238)  lr: 0.160000  max mem: 14467
INFO:maskrcnn_benchmark.trainer:eta: 3:18:48  iter: 2400  loss: 0.8284 (1.0203)  loss_classifier: 0.2775 (0.3582)  loss_box_reg: 0.1343 (0.1501)  loss_mask: 0.3100 (0.3619)  loss_objectness: 0.0509 (0.0795)  loss_rpn_box_reg: 0.0553 (0.0706)  time: 0.6219 (0.7647)  data: 0.0004 (0.0238)  lr: 0.160000  max mem: 14639
2021-10-16 12:09:05,944 maskrcnn_benchmark.trainer INFO: eta: 3:18:48  iter: 2400  loss: 0.8531 (1.0246)  loss_classifier: 0.3062 (0.3603)  loss_box_reg: 0.1383 (0.1502)  loss_mask: 0.2921 (0.3615)  loss_objectness: 0.0540 (0.0805)  loss_rpn_box_reg: 0.0655 (0.0722)  time: 0.6218 (0.7647)  data: 0.0004 (0.0240)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 3:18:49  iter: 2400  loss: 0.8076 (1.0219)  loss_classifier: 0.2736 (0.3588)  loss_box_reg: 0.1265 (0.1492)  loss_mask: 0.3001 (0.3619)  loss_objectness: 0.0635 (0.0802)  loss_rpn_box_reg: 0.0513 (0.0719)  time: 0.6218 (0.7647)  data: 0.0003 (0.0238)  lr: 0.160000  max mem: 14541
INFO:maskrcnn_benchmark.trainer:eta: 3:18:48  iter: 2400  loss: 0.8531 (1.0246)  loss_classifier: 0.3062 (0.3603)  loss_box_reg: 0.1383 (0.1502)  loss_mask: 0.2921 (0.3615)  loss_objectness: 0.0540 (0.0805)  loss_rpn_box_reg: 0.0655 (0.0722)  time: 0.6218 (0.7647)  data: 0.0004 (0.0240)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 3:18:48  iter: 2400  loss: 0.8198 (1.0242)  loss_classifier: 0.3021 (0.3595)  loss_box_reg: 0.1355 (0.1498)  loss_mask: 0.2957 (0.3620)  loss_objectness: 0.0471 (0.0812)  loss_rpn_box_reg: 0.0509 (0.0718)  time: 0.6245 (0.7646)  data: 0.0003 (0.0238)  lr: 0.160000  max mem: 14585
INFO:maskrcnn_benchmark.trainer:eta: 3:18:48  iter: 2400  loss: 0.8173 (1.0243)  loss_classifier: 0.2869 (0.3600)  loss_box_reg: 0.1326 (0.1505)  loss_mask: 0.2976 (0.3614)  loss_objectness: 0.0522 (0.0803)  loss_rpn_box_reg: 0.0698 (0.0722)  time: 0.6243 (0.7646)  data: 0.0003 (0.0238)  lr: 0.160000  max mem: 14650
:::MLLOG {"namespace": "", "time_ms": 1634386145944, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 1.024625415491561, "loss_classifier": 0.36025172790822885, "loss_box_reg": 0.1501752630790967, "loss_mask": 0.3614688915138443, "loss_objectness": 0.08054810884719094, "loss_rpn_box_reg": 0.07218142438912764, "time": 0.7646592811743418, "data": 0.02397921820481618, "throughput": 167.39481642519434}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 2400}}
:::MLLOG {"namespace": "", "time_ms": 1634386145945, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 167.39481642519434, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 3:17:24  iter: 2450  loss: 0.8096 (1.0187)  loss_classifier: 0.2680 (0.3575)  loss_box_reg: 0.1199 (0.1496)  loss_mask: 0.2911 (0.3612)  loss_objectness: 0.0479 (0.0793)  loss_rpn_box_reg: 0.0541 (0.0710)  time: 0.6192 (0.7617)  data: 0.0003 (0.0234)  lr: 0.160000  max mem: 14467
INFO:maskrcnn_benchmark.trainer:eta: 3:17:24  iter: 2450  loss: 0.8241 (1.0205)  loss_classifier: 0.2656 (0.3578)  loss_box_reg: 0.1254 (0.1495)  loss_mask: 0.3045 (0.3607)  loss_objectness: 0.0563 (0.0807)  loss_rpn_box_reg: 0.0706 (0.0718)  time: 0.6190 (0.7617)  data: 0.0004 (0.0233)  lr: 0.160000  max mem: 14585
INFO:maskrcnn_benchmark.trainer:eta: 3:17:24  iter: 2450  loss: 0.7663 (1.0201)  loss_classifier: 0.2531 (0.3583)  loss_box_reg: 0.1264 (0.1500)  loss_mask: 0.2940 (0.3602)  loss_objectness: 0.0494 (0.0797)  loss_rpn_box_reg: 0.0478 (0.0718)  time: 0.6190 (0.7617)  data: 0.0003 (0.0233)  lr: 0.160000  max mem: 14650
INFO:maskrcnn_benchmark.trainer:eta: 3:17:25  iter: 2450  loss: 0.7876 (1.0184)  loss_classifier: 0.2558 (0.3573)  loss_box_reg: 0.1194 (0.1491)  loss_mask: 0.2892 (0.3609)  loss_objectness: 0.0458 (0.0798)  loss_rpn_box_reg: 0.0556 (0.0714)  time: 0.6184 (0.7617)  data: 0.0003 (0.0234)  lr: 0.160000  max mem: 14444
INFO:maskrcnn_benchmark.trainer:eta: 3:17:24  iter: 2450  loss: 0.7581 (1.0166)  loss_classifier: 0.2409 (0.3576)  loss_box_reg: 0.1299 (0.1491)  loss_mask: 0.3009 (0.3597)  loss_objectness: 0.0598 (0.0788)  loss_rpn_box_reg: 0.0457 (0.0714)  time: 0.6186 (0.7617)  data: 0.0003 (0.0234)  lr: 0.160000  max mem: 14752
INFO:maskrcnn_benchmark.trainer:eta: 3:17:24  iter: 2450  loss: 0.8566 (1.0170)  loss_classifier: 0.2888 (0.3568)  loss_box_reg: 0.1321 (0.1499)  loss_mask: 0.2967 (0.3608)  loss_objectness: 0.0646 (0.0791)  loss_rpn_box_reg: 0.0700 (0.0705)  time: 0.6194 (0.7617)  data: 0.0003 (0.0234)  lr: 0.160000  max mem: 14639
INFO:maskrcnn_benchmark.trainer:eta: 3:17:25  iter: 2450  loss: 0.8163 (1.0181)  loss_classifier: 0.2700 (0.3572)  loss_box_reg: 0.1216 (0.1488)  loss_mask: 0.3026 (0.3607)  loss_objectness: 0.0474 (0.0796)  loss_rpn_box_reg: 0.0577 (0.0718)  time: 0.6194 (0.7617)  data: 0.0003 (0.0233)  lr: 0.160000  max mem: 14541
2021-10-16 12:09:36,978 maskrcnn_benchmark.trainer INFO: eta: 3:17:24  iter: 2450  loss: 0.8745 (1.0215)  loss_classifier: 0.2996 (0.3588)  loss_box_reg: 0.1333 (0.1499)  loss_mask: 0.3068 (0.3605)  loss_objectness: 0.0523 (0.0802)  loss_rpn_box_reg: 0.0677 (0.0721)  time: 0.6195 (0.7617)  data: 0.0003 (0.0235)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 3:17:24  iter: 2450  loss: 0.8745 (1.0215)  loss_classifier: 0.2996 (0.3588)  loss_box_reg: 0.1333 (0.1499)  loss_mask: 0.3068 (0.3605)  loss_objectness: 0.0523 (0.0802)  loss_rpn_box_reg: 0.0677 (0.0721)  time: 0.6195 (0.7617)  data: 0.0003 (0.0235)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634386176978, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 1.0215215157611028, "loss_classifier": 0.3588167364347954, "loss_box_reg": 0.14993868387009646, "loss_mask": 0.3604508307941106, "loss_objectness": 0.08017967191581823, "loss_rpn_box_reg": 0.07213559299631386, "time": 0.761720711844308, "data": 0.02349885823775311, "throughput": 168.04059284416908}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 2450}}
:::MLLOG {"namespace": "", "time_ms": 1634386176978, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 168.04059284416908, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 3:16:03  iter: 2500  loss: 0.8531 (1.0150)  loss_classifier: 0.2924 (0.3560)  loss_box_reg: 0.1242 (0.1488)  loss_mask: 0.3010 (0.3597)  loss_objectness: 0.0552 (0.0793)  loss_rpn_box_reg: 0.0653 (0.0713)  time: 0.6188 (0.7589)  data: 0.0003 (0.0230)  lr: 0.160000  max mem: 14444
INFO:maskrcnn_benchmark.trainer:eta: 3:16:03  iter: 2500  loss: 0.8173 (1.0127)  loss_classifier: 0.2798 (0.3560)  loss_box_reg: 0.1203 (0.1486)  loss_mask: 0.3036 (0.3585)  loss_objectness: 0.0482 (0.0783)  loss_rpn_box_reg: 0.0570 (0.0712)  time: 0.6192 (0.7589)  data: 0.0003 (0.0229)  lr: 0.160000  max mem: 14752
INFO:maskrcnn_benchmark.trainer:eta: 3:16:03  iter: 2500  loss: 0.7913 (1.0135)  loss_classifier: 0.2754 (0.3553)  loss_box_reg: 0.1245 (0.1495)  loss_mask: 0.2941 (0.3597)  loss_objectness: 0.0537 (0.0787)  loss_rpn_box_reg: 0.0461 (0.0703)  time: 0.6166 (0.7589)  data: 0.0003 (0.0229)  lr: 0.160000  max mem: 14639
INFO:maskrcnn_benchmark.trainer:eta: 3:16:03  iter: 2500  loss: 0.8329 (1.0145)  loss_classifier: 0.2891 (0.3557)  loss_box_reg: 0.1271 (0.1485)  loss_mask: 0.3085 (0.3596)  loss_objectness: 0.0523 (0.0792)  loss_rpn_box_reg: 0.0580 (0.0716)  time: 0.6158 (0.7589)  data: 0.0003 (0.0229)  lr: 0.160000  max mem: 14541
2021-10-16 12:10:08,066 maskrcnn_benchmark.trainer INFO: eta: 3:16:03  iter: 2500  loss: 0.8586 (1.0181)  loss_classifier: 0.2968 (0.3574)  loss_box_reg: 0.1319 (0.1496)  loss_mask: 0.3212 (0.3594)  loss_objectness: 0.0544 (0.0798)  loss_rpn_box_reg: 0.0681 (0.0720)  time: 0.6166 (0.7589)  data: 0.0003 (0.0230)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 3:16:03  iter: 2500  loss: 0.8586 (1.0181)  loss_classifier: 0.2968 (0.3574)  loss_box_reg: 0.1319 (0.1496)  loss_mask: 0.3212 (0.3594)  loss_objectness: 0.0544 (0.0798)  loss_rpn_box_reg: 0.0681 (0.0720)  time: 0.6166 (0.7589)  data: 0.0003 (0.0230)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 3:16:03  iter: 2500  loss: 0.8015 (1.0148)  loss_classifier: 0.2809 (0.3560)  loss_box_reg: 0.1209 (0.1491)  loss_mask: 0.3011 (0.3599)  loss_objectness: 0.0422 (0.0789)  loss_rpn_box_reg: 0.0471 (0.0709)  time: 0.6203 (0.7589)  data: 0.0003 (0.0229)  lr: 0.160000  max mem: 14467
INFO:maskrcnn_benchmark.trainer:eta: 3:16:03  iter: 2500  loss: 0.8526 (1.0162)  loss_classifier: 0.2886 (0.3562)  loss_box_reg: 0.1285 (0.1490)  loss_mask: 0.2942 (0.3594)  loss_objectness: 0.0591 (0.0802)  loss_rpn_box_reg: 0.0662 (0.0716)  time: 0.6202 (0.7589)  data: 0.0004 (0.0229)  lr: 0.160000  max mem: 14585
INFO:maskrcnn_benchmark.trainer:eta: 3:16:03  iter: 2500  loss: 0.7877 (1.0164)  loss_classifier: 0.2712 (0.3568)  loss_box_reg: 0.1249 (0.1497)  loss_mask: 0.2920 (0.3589)  loss_objectness: 0.0473 (0.0792)  loss_rpn_box_reg: 0.0532 (0.0718)  time: 0.6202 (0.7589)  data: 0.0003 (0.0229)  lr: 0.160000  max mem: 14650
:::MLLOG {"namespace": "", "time_ms": 1634386208066, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 1.0181452614188193, "loss_classifier": 0.3574262587994337, "loss_box_reg": 0.14959306596061214, "loss_mask": 0.3593866631090641, "loss_objectness": 0.07976344381347299, "loss_rpn_box_reg": 0.07197582987844944, "time": 0.7589216341018676, "data": 0.023037731075286866, "throughput": 168.6603652450616}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 2500}}
:::MLLOG {"namespace": "", "time_ms": 1634386208066, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 168.6603652450616, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 3:14:43  iter: 2550  loss: 0.8306 (1.0112)  loss_classifier: 0.2815 (0.3546)  loss_box_reg: 0.1242 (0.1487)  loss_mask: 0.2912 (0.3587)  loss_objectness: 0.0572 (0.0785)  loss_rpn_box_reg: 0.0528 (0.0707)  time: 0.6189 (0.7562)  data: 0.0003 (0.0225)  lr: 0.160000  max mem: 14467
INFO:maskrcnn_benchmark.trainer:eta: 3:14:42  iter: 2550  loss: 0.8401 (1.0126)  loss_classifier: 0.2572 (0.3551)  loss_box_reg: 0.1199 (0.1493)  loss_mask: 0.3015 (0.3578)  loss_objectness: 0.0522 (0.0788)  loss_rpn_box_reg: 0.0566 (0.0716)  time: 0.6189 (0.7562)  data: 0.0003 (0.0224)  lr: 0.160000  max mem: 14650
INFO:maskrcnn_benchmark.trainer:eta: 3:14:43  iter: 2550  loss: 0.8322 (1.0131)  loss_classifier: 0.2821 (0.3549)  loss_box_reg: 0.1291 (0.1487)  loss_mask: 0.3012 (0.3583)  loss_objectness: 0.0529 (0.0798)  loss_rpn_box_reg: 0.0645 (0.0714)  time: 0.6189 (0.7562)  data: 0.0004 (0.0224)  lr: 0.160000  max mem: 14585
INFO:maskrcnn_benchmark.trainer:eta: 3:14:43  iter: 2550  loss: 0.7961 (1.0093)  loss_classifier: 0.2714 (0.3547)  loss_box_reg: 0.1244 (0.1483)  loss_mask: 0.2963 (0.3574)  loss_objectness: 0.0496 (0.0779)  loss_rpn_box_reg: 0.0556 (0.0710)  time: 0.6180 (0.7562)  data: 0.0003 (0.0225)  lr: 0.160000  max mem: 14752
INFO:maskrcnn_benchmark.trainer:eta: 3:14:43  iter: 2550  loss: 0.8383 (1.0113)  loss_classifier: 0.2770 (0.3545)  loss_box_reg: 0.1273 (0.1484)  loss_mask: 0.3023 (0.3585)  loss_objectness: 0.0518 (0.0789)  loss_rpn_box_reg: 0.0618 (0.0710)  time: 0.6182 (0.7562)  data: 0.0003 (0.0225)  lr: 0.160000  max mem: 14454
INFO:maskrcnn_benchmark.trainer:eta: 3:14:43  iter: 2550  loss: 0.7956 (1.0095)  loss_classifier: 0.2542 (0.3536)  loss_box_reg: 0.1104 (0.1490)  loss_mask: 0.3049 (0.3585)  loss_objectness: 0.0497 (0.0783)  loss_rpn_box_reg: 0.0476 (0.0702)  time: 0.6182 (0.7562)  data: 0.0004 (0.0225)  lr: 0.160000  max mem: 14639
INFO:maskrcnn_benchmark.trainer:eta: 3:14:43  iter: 2550  loss: 0.8110 (1.0108)  loss_classifier: 0.2726 (0.3543)  loss_box_reg: 0.1242 (0.1481)  loss_mask: 0.2915 (0.3583)  loss_objectness: 0.0479 (0.0788)  loss_rpn_box_reg: 0.0426 (0.0713)  time: 0.6184 (0.7562)  data: 0.0003 (0.0225)  lr: 0.160000  max mem: 14541
2021-10-16 12:10:39,056 maskrcnn_benchmark.trainer INFO: eta: 3:14:43  iter: 2550  loss: 0.7885 (1.0142)  loss_classifier: 0.2584 (0.3557)  loss_box_reg: 0.1158 (0.1492)  loss_mask: 0.2863 (0.3582)  loss_objectness: 0.0468 (0.0793)  loss_rpn_box_reg: 0.0522 (0.0718)  time: 0.6183 (0.7562)  data: 0.0004 (0.0226)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 3:14:43  iter: 2550  loss: 0.7885 (1.0142)  loss_classifier: 0.2584 (0.3557)  loss_box_reg: 0.1158 (0.1492)  loss_mask: 0.2863 (0.3582)  loss_objectness: 0.0468 (0.0793)  loss_rpn_box_reg: 0.0522 (0.0718)  time: 0.6183 (0.7562)  data: 0.0004 (0.0226)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634386239057, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 1.0141971100428526, "loss_classifier": 0.35574951168661023, "loss_box_reg": 0.14917120074077198, "loss_mask": 0.35818619682508357, "loss_objectness": 0.07930718832229282, "loss_rpn_box_reg": 0.07178301272073798, "time": 0.756193902165282, "data": 0.022595859695883357, "throughput": 169.2687545264322}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 2550}}
:::MLLOG {"namespace": "", "time_ms": 1634386239057, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 169.2687545264322, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 3:13:25  iter: 2600  loss: 0.8279 (1.0073)  loss_classifier: 0.2794 (0.3530)  loss_box_reg: 0.1243 (0.1482)  loss_mask: 0.3050 (0.3576)  loss_objectness: 0.0487 (0.0780)  loss_rpn_box_reg: 0.0613 (0.0705)  time: 0.6222 (0.7536)  data: 0.0003 (0.0220)  lr: 0.160000  max mem: 14467
INFO:maskrcnn_benchmark.trainer:eta: 3:13:25  iter: 2600  loss: 0.8855 (1.0090)  loss_classifier: 0.2923 (0.3537)  loss_box_reg: 0.1436 (0.1489)  loss_mask: 0.3034 (0.3567)  loss_objectness: 0.0571 (0.0783)  loss_rpn_box_reg: 0.0564 (0.0714)  time: 0.6223 (0.7536)  data: 0.0004 (0.0220)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 3:13:25  iter: 2600  loss: 0.8044 (1.0093)  loss_classifier: 0.2684 (0.3533)  loss_box_reg: 0.1250 (0.1484)  loss_mask: 0.2970 (0.3571)  loss_objectness: 0.0494 (0.0793)  loss_rpn_box_reg: 0.0570 (0.0712)  time: 0.6220 (0.7536)  data: 0.0003 (0.0220)  lr: 0.160000  max mem: 14585
INFO:maskrcnn_benchmark.trainer:eta: 3:13:25  iter: 2600  loss: 0.8991 (1.0061)  loss_classifier: 0.2946 (0.3535)  loss_box_reg: 0.1458 (0.1480)  loss_mask: 0.2932 (0.3562)  loss_objectness: 0.0636 (0.0776)  loss_rpn_box_reg: 0.0551 (0.0708)  time: 0.6223 (0.7536)  data: 0.0004 (0.0221)  lr: 0.160000  max mem: 14752
INFO:maskrcnn_benchmark.trainer:eta: 3:13:25  iter: 2600  loss: 0.7543 (1.0078)  loss_classifier: 0.2549 (0.3531)  loss_box_reg: 0.1171 (0.1480)  loss_mask: 0.2801 (0.3573)  loss_objectness: 0.0456 (0.0785)  loss_rpn_box_reg: 0.0545 (0.0709)  time: 0.6218 (0.7536)  data: 0.0003 (0.0221)  lr: 0.160000  max mem: 14454
INFO:maskrcnn_benchmark.trainer:eta: 3:13:25  iter: 2600  loss: 0.8397 (1.0058)  loss_classifier: 0.2725 (0.3519)  loss_box_reg: 0.1206 (0.1485)  loss_mask: 0.2951 (0.3574)  loss_objectness: 0.0540 (0.0779)  loss_rpn_box_reg: 0.0671 (0.0701)  time: 0.6216 (0.7536)  data: 0.0003 (0.0220)  lr: 0.160000  max mem: 14639
INFO:maskrcnn_benchmark.trainer:eta: 3:13:25  iter: 2600  loss: 0.8585 (1.0071)  loss_classifier: 0.2876 (0.3528)  loss_box_reg: 0.1294 (0.1477)  loss_mask: 0.2914 (0.3572)  loss_objectness: 0.0448 (0.0783)  loss_rpn_box_reg: 0.0566 (0.0711)  time: 0.6216 (0.7536)  data: 0.0003 (0.0220)  lr: 0.160000  max mem: 14541
2021-10-16 12:11:10,151 maskrcnn_benchmark.trainer INFO: eta: 3:13:25  iter: 2600  loss: 0.7907 (1.0102)  loss_classifier: 0.2550 (0.3540)  loss_box_reg: 0.1230 (0.1487)  loss_mask: 0.3050 (0.3570)  loss_objectness: 0.0503 (0.0789)  loss_rpn_box_reg: 0.0477 (0.0716)  time: 0.6216 (0.7536)  data: 0.0003 (0.0222)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 3:13:25  iter: 2600  loss: 0.7907 (1.0102)  loss_classifier: 0.2550 (0.3540)  loss_box_reg: 0.1230 (0.1487)  loss_mask: 0.3050 (0.3570)  loss_objectness: 0.0503 (0.0789)  loss_rpn_box_reg: 0.0477 (0.0716)  time: 0.6216 (0.7536)  data: 0.0003 (0.0222)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634386270152, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 1.0101780465818369, "loss_classifier": 0.354048547466787, "loss_box_reg": 0.14868866352928586, "loss_mask": 0.3570014196061171, "loss_objectness": 0.07887894253747968, "loss_rpn_box_reg": 0.07156047373580245, "time": 0.75361131301293, "data": 0.02217102151650649, "throughput": 169.84883027864504}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 2600}}
:::MLLOG {"namespace": "", "time_ms": 1634386270152, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 169.84883027864504, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 3:12:44  iter: 2650  loss: 0.8289 (1.0026)  loss_classifier: 0.2793 (0.3521)  loss_box_reg: 0.1240 (0.1476)  loss_mask: 0.2948 (0.3551)  loss_objectness: 0.0476 (0.0772)  loss_rpn_box_reg: 0.0497 (0.0706)  time: 0.6199 (0.7534)  data: 0.0003 (0.0217)  lr: 0.160000  max mem: 14752
INFO:maskrcnn_benchmark.trainer:eta: 3:12:44  iter: 2650  loss: 0.7963 (1.0041)  loss_classifier: 0.2735 (0.3518)  loss_box_reg: 0.1340 (0.1479)  loss_mask: 0.3044 (0.3565)  loss_objectness: 0.0476 (0.0776)  loss_rpn_box_reg: 0.0477 (0.0704)  time: 0.6198 (0.7534)  data: 0.0003 (0.0216)  lr: 0.160000  max mem: 14467
INFO:maskrcnn_benchmark.trainer:eta: 3:12:43  iter: 2650  loss: 0.8681 (1.0057)  loss_classifier: 0.2831 (0.3523)  loss_box_reg: 0.1288 (0.1485)  loss_mask: 0.2960 (0.3556)  loss_objectness: 0.0565 (0.0779)  loss_rpn_box_reg: 0.0569 (0.0714)  time: 0.6197 (0.7533)  data: 0.0004 (0.0216)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 3:12:43  iter: 2650  loss: 0.8204 (1.0056)  loss_classifier: 0.2886 (0.3518)  loss_box_reg: 0.1350 (0.1480)  loss_mask: 0.2986 (0.3560)  loss_objectness: 0.0557 (0.0788)  loss_rpn_box_reg: 0.0561 (0.0710)  time: 0.6197 (0.7533)  data: 0.0004 (0.0216)  lr: 0.160000  max mem: 14585
INFO:maskrcnn_benchmark.trainer:eta: 3:12:44  iter: 2650  loss: 0.8480 (1.0044)  loss_classifier: 0.2933 (0.3517)  loss_box_reg: 0.1324 (0.1477)  loss_mask: 0.3078 (0.3562)  loss_objectness: 0.0476 (0.0780)  loss_rpn_box_reg: 0.0563 (0.0707)  time: 0.6194 (0.7534)  data: 0.0004 (0.0217)  lr: 0.160000  max mem: 14454
INFO:maskrcnn_benchmark.trainer:eta: 3:12:44  iter: 2650  loss: 0.8008 (1.0025)  loss_classifier: 0.2808 (0.3506)  loss_box_reg: 0.1243 (0.1482)  loss_mask: 0.2917 (0.3562)  loss_objectness: 0.0472 (0.0776)  loss_rpn_box_reg: 0.0596 (0.0699)  time: 0.6192 (0.7534)  data: 0.0003 (0.0216)  lr: 0.160000  max mem: 14639
2021-10-16 12:11:47,144 maskrcnn_benchmark.trainer INFO: eta: 3:12:43  iter: 2650  loss: 0.7962 (1.0070)  loss_classifier: 0.2804 (0.3528)  loss_box_reg: 0.1221 (0.1483)  loss_mask: 0.2984 (0.3560)  loss_objectness: 0.0523 (0.0785)  loss_rpn_box_reg: 0.0519 (0.0714)  time: 0.6192 (0.7534)  data: 0.0003 (0.0218)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 3:12:43  iter: 2650  loss: 0.7962 (1.0070)  loss_classifier: 0.2804 (0.3528)  loss_box_reg: 0.1221 (0.1483)  loss_mask: 0.2984 (0.3560)  loss_objectness: 0.0523 (0.0785)  loss_rpn_box_reg: 0.0519 (0.0714)  time: 0.6192 (0.7534)  data: 0.0003 (0.0218)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634386307145, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 1.0070185800880755, "loss_classifier": 0.35279403193098197, "loss_box_reg": 0.1483082821303627, "loss_mask": 0.3559916333544929, "loss_objectness": 0.07849926133903692, "loss_rpn_box_reg": 0.07142537156998549, "time": 0.7533518443917329, "data": 0.02176059992808216, "throughput": 169.90732942765814}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 2650}}
INFO:maskrcnn_benchmark.trainer:eta: 3:12:44  iter: 2650  loss: 0.8402 (1.0033)  loss_classifier: 0.2977 (0.3513)  loss_box_reg: 0.1364 (0.1473)  loss_mask: 0.2961 (0.3561)  loss_objectness: 0.0533 (0.0778)  loss_rpn_box_reg: 0.0580 (0.0709)  time: 0.6193 (0.7534)  data: 0.0003 (0.0216)  lr: 0.160000  max mem: 14541
:::MLLOG {"namespace": "", "time_ms": 1634386307145, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 169.90732942765814, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 3:11:29  iter: 2700  loss: 0.8128 (1.0009)  loss_classifier: 0.2721 (0.3504)  loss_box_reg: 0.1293 (0.1475)  loss_mask: 0.2909 (0.3554)  loss_objectness: 0.0535 (0.0773)  loss_rpn_box_reg: 0.0720 (0.0703)  time: 0.6205 (0.7509)  data: 0.0004 (0.0212)  lr: 0.160000  max mem: 14467
INFO:maskrcnn_benchmark.trainer:eta: 3:11:28  iter: 2700  loss: 0.8104 (1.0025)  loss_classifier: 0.2701 (0.3510)  loss_box_reg: 0.1284 (0.1482)  loss_mask: 0.2909 (0.3546)  loss_objectness: 0.0486 (0.0775)  loss_rpn_box_reg: 0.0516 (0.0712)  time: 0.6205 (0.7509)  data: 0.0003 (0.0212)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 3:11:28  iter: 2700  loss: 0.8137 (1.0022)  loss_classifier: 0.2833 (0.3504)  loss_box_reg: 0.1294 (0.1476)  loss_mask: 0.2991 (0.3550)  loss_objectness: 0.0510 (0.0784)  loss_rpn_box_reg: 0.0592 (0.0708)  time: 0.6205 (0.7509)  data: 0.0004 (0.0212)  lr: 0.160000  max mem: 14585
INFO:maskrcnn_benchmark.trainer:eta: 3:11:29  iter: 2700  loss: 0.8333 (0.9996)  loss_classifier: 0.2650 (0.3507)  loss_box_reg: 0.1324 (0.1473)  loss_mask: 0.3066 (0.3542)  loss_objectness: 0.0464 (0.0768)  loss_rpn_box_reg: 0.0603 (0.0706)  time: 0.6217 (0.7509)  data: 0.0003 (0.0213)  lr: 0.160000  max mem: 14752
INFO:maskrcnn_benchmark.trainer:eta: 3:11:29  iter: 2700  loss: 0.8819 (1.0012)  loss_classifier: 0.2885 (0.3504)  loss_box_reg: 0.1492 (0.1474)  loss_mask: 0.3015 (0.3552)  loss_objectness: 0.0574 (0.0777)  loss_rpn_box_reg: 0.0685 (0.0705)  time: 0.6221 (0.7509)  data: 0.0004 (0.0213)  lr: 0.160000  max mem: 14454
INFO:maskrcnn_benchmark.trainer:eta: 3:11:29  iter: 2700  loss: 0.7982 (0.9992)  loss_classifier: 0.2787 (0.3494)  loss_box_reg: 0.1284 (0.1478)  loss_mask: 0.2972 (0.3552)  loss_objectness: 0.0506 (0.0771)  loss_rpn_box_reg: 0.0454 (0.0697)  time: 0.6221 (0.7509)  data: 0.0003 (0.0212)  lr: 0.160000  max mem: 14639
INFO:maskrcnn_benchmark.trainer:eta: 3:11:29  iter: 2700  loss: 0.8068 (1.0002)  loss_classifier: 0.2650 (0.3500)  loss_box_reg: 0.1272 (0.1469)  loss_mask: 0.2949 (0.3550)  loss_objectness: 0.0530 (0.0775)  loss_rpn_box_reg: 0.0609 (0.0707)  time: 0.6223 (0.7509)  data: 0.0003 (0.0212)  lr: 0.160000  max mem: 14541
2021-10-16 12:12:18,216 maskrcnn_benchmark.trainer INFO: eta: 3:11:28  iter: 2700  loss: 0.7620 (1.0035)  loss_classifier: 0.2558 (0.3514)  loss_box_reg: 0.1210 (0.1479)  loss_mask: 0.2967 (0.3549)  loss_objectness: 0.0469 (0.0780)  loss_rpn_box_reg: 0.0523 (0.0712)  time: 0.6221 (0.7509)  data: 0.0003 (0.0214)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 3:11:28  iter: 2700  loss: 0.7620 (1.0035)  loss_classifier: 0.2558 (0.3514)  loss_box_reg: 0.1210 (0.1479)  loss_mask: 0.2967 (0.3549)  loss_objectness: 0.0469 (0.0780)  loss_rpn_box_reg: 0.0523 (0.0712)  time: 0.6221 (0.7509)  data: 0.0003 (0.0214)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634386338216, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 1.0035148980992812, "loss_classifier": 0.35141947130086243, "loss_box_reg": 0.14792855543248287, "loss_mask": 0.3549186354875565, "loss_objectness": 0.07803927643914466, "loss_rpn_box_reg": 0.07120895972130475, "time": 0.750908967035788, "data": 0.02136678006913927, "throughput": 170.46007654600237}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 2700}}
:::MLLOG {"namespace": "", "time_ms": 1634386338217, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 170.46007654600237, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 3:11:53  iter: 2750  loss: 0.8048 (0.9976)  loss_classifier: 0.2542 (0.3489)  loss_box_reg: 0.1209 (0.1468)  loss_mask: 0.3082 (0.3542)  loss_objectness: 0.0563 (0.0772)  loss_rpn_box_reg: 0.0572 (0.0706)  time: 0.6217 (0.7550)  data: 0.0004 (0.0209)  lr: 0.160000  max mem: 14650
2021-10-16 12:13:06,940 maskrcnn_benchmark.trainer INFO: eta: 3:11:53  iter: 2750  loss: 0.7978 (1.0007)  loss_classifier: 0.2690 (0.3502)  loss_box_reg: 0.1293 (0.1477)  loss_mask: 0.2998 (0.3539)  loss_objectness: 0.0527 (0.0777)  loss_rpn_box_reg: 0.0582 (0.0712)  time: 0.6224 (0.7550)  data: 0.0003 (0.0210)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 3:11:53  iter: 2750  loss: 0.7978 (1.0007)  loss_classifier: 0.2690 (0.3502)  loss_box_reg: 0.1293 (0.1477)  loss_mask: 0.2998 (0.3539)  loss_objectness: 0.0527 (0.0777)  loss_rpn_box_reg: 0.0582 (0.0712)  time: 0.6224 (0.7550)  data: 0.0003 (0.0210)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 3:11:53  iter: 2750  loss: 0.8235 (0.9956)  loss_classifier: 0.2803 (0.3480)  loss_box_reg: 0.1091 (0.1474)  loss_mask: 0.2923 (0.3539)  loss_objectness: 0.0507 (0.0768)  loss_rpn_box_reg: 0.0535 (0.0696)  time: 0.6219 (0.7550)  data: 0.0003 (0.0209)  lr: 0.160000  max mem: 14639
:::MLLOG {"namespace": "", "time_ms": 1634386386940, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 1.000674638650634, "loss_classifier": 0.3501751953065395, "loss_box_reg": 0.14766788074230267, "loss_mask": 0.3539342439933257, "loss_objectness": 0.07772912778908556, "loss_rpn_box_reg": 0.07116819101165642, "time": 0.7549739264574918, "data": 0.02098535459691828, "throughput": 169.54227889776922}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 2750}}
:::MLLOG {"namespace": "", "time_ms": 1634386386941, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 169.54227889776922, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 3:11:53  iter: 2750  loss: 0.8326 (0.9980)  loss_classifier: 0.2839 (0.3492)  loss_box_reg: 0.1262 (0.1471)  loss_mask: 0.2927 (0.3542)  loss_objectness: 0.0500 (0.0773)  loss_rpn_box_reg: 0.0567 (0.0702)  time: 0.6238 (0.7550)  data: 0.0003 (0.0209)  lr: 0.160000  max mem: 14454
INFO:maskrcnn_benchmark.trainer:eta: 3:11:53  iter: 2750  loss: 0.8337 (0.9965)  loss_classifier: 0.2754 (0.3494)  loss_box_reg: 0.1262 (0.1470)  loss_mask: 0.2985 (0.3532)  loss_objectness: 0.0623 (0.0764)  loss_rpn_box_reg: 0.0675 (0.0705)  time: 0.6238 (0.7550)  data: 0.0003 (0.0209)  lr: 0.160000  max mem: 14752
INFO:maskrcnn_benchmark.trainer:eta: 3:11:53  iter: 2750  loss: 0.7477 (0.9973)  loss_classifier: 0.2423 (0.3489)  loss_box_reg: 0.1238 (0.1471)  loss_mask: 0.2908 (0.3544)  loss_objectness: 0.0501 (0.0769)  loss_rpn_box_reg: 0.0508 (0.0701)  time: 0.6237 (0.7550)  data: 0.0003 (0.0209)  lr: 0.160000  max mem: 14467
INFO:maskrcnn_benchmark.trainer:eta: 3:11:53  iter: 2750  loss: 0.8195 (0.9990)  loss_classifier: 0.2616 (0.3491)  loss_box_reg: 0.1283 (0.1473)  loss_mask: 0.2978 (0.3540)  loss_objectness: 0.0439 (0.0780)  loss_rpn_box_reg: 0.0506 (0.0706)  time: 0.6238 (0.7550)  data: 0.0003 (0.0208)  lr: 0.160000  max mem: 14585
INFO:maskrcnn_benchmark.trainer:eta: 3:11:53  iter: 2750  loss: 0.8058 (0.9995)  loss_classifier: 0.2771 (0.3498)  loss_box_reg: 0.1198 (0.1480)  loss_mask: 0.2940 (0.3536)  loss_objectness: 0.0568 (0.0771)  loss_rpn_box_reg: 0.0512 (0.0711)  time: 0.6237 (0.7550)  data: 0.0003 (0.0208)  lr: 0.160000  max mem: 14683
:::MLLOG {"namespace": "", "time_ms": 1634386393499, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 111, "epoch_num": 3}}
:::MLLOG {"namespace": "", "time_ms": 1634386393499, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 112, "first_epoch_num": 3}}
:::MLLOG {"namespace": "", "time_ms": 1634386393499, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 113, "epoch_num": 3}}
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
2021-10-16 12:13:13,847 maskrcnn_benchmark.data.build WARNING: When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
Done (t=0.55s)
creating index...
Done (t=0.55s)
creating index...
Done (t=0.55s)
creating index...
index created!
shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]index created!
shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]index created!
shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]Done (t=0.55s)
creating index...
Done (t=0.55s)
creating index...
Done (t=0.55s)
creating index...
Done (t=0.55s)
creating index...
index created!
shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]index created!
shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]Done (t=0.55s)
creating index...
index created!
index created!
shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]shapes=None
passthrough=True
creating index...
GT annotations already exist!
2021-10-16 12:13:14,426 maskrcnn_benchmark.inference INFO: Start evaluation on coco_2017_val dataset(5000 images).
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]index created!
shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]  2% 1/40 [00:00<00:11,  3.40it/s]  2% 1/40 [00:00<00:11,  3.46it/s]  2% 1/40 [00:00<00:11,  3.42it/s]  2% 1/40 [00:00<00:11,  3.39it/s]  2% 1/40 [00:00<00:11,  3.38it/s]  2% 1/40 [00:00<00:11,  3.46it/s]  2% 1/40 [00:00<00:11,  3.36it/s]  2% 1/40 [00:00<00:11,  3.32it/s]  5% 2/40 [00:00<00:11,  3.40it/s]  5% 2/40 [00:00<00:10,  3.47it/s]  5% 2/40 [00:00<00:11,  3.43it/s]  5% 2/40 [00:00<00:10,  3.47it/s]  5% 2/40 [00:00<00:11,  3.44it/s]  5% 2/40 [00:00<00:10,  3.52it/s]  5% 2/40 [00:00<00:11,  3.44it/s]  5% 2/40 [00:00<00:11,  3.36it/s]  8% 3/40 [00:00<00:10,  3.51it/s]  8% 3/40 [00:00<00:10,  3.40it/s]  8% 3/40 [00:00<00:10,  3.45it/s]  8% 3/40 [00:00<00:10,  3.55it/s]  8% 3/40 [00:00<00:10,  3.46it/s]  8% 3/40 [00:00<00:10,  3.44it/s]  8% 3/40 [00:00<00:10,  3.46it/s]  8% 3/40 [00:00<00:10,  3.38it/s] 10% 4/40 [00:01<00:10,  3.50it/s] 10% 4/40 [00:01<00:10,  3.41it/s] 10% 4/40 [00:01<00:10,  3.46it/s] 10% 4/40 [00:01<00:10,  3.50it/s] 10% 4/40 [00:01<00:10,  3.44it/s] 10% 4/40 [00:01<00:10,  3.44it/s] 10% 4/40 [00:01<00:10,  3.48it/s] 10% 4/40 [00:01<00:10,  3.37it/s] 12% 5/40 [00:01<00:10,  3.49it/s] 12% 5/40 [00:01<00:10,  3.46it/s] 12% 5/40 [00:01<00:10,  3.45it/s] 12% 5/40 [00:01<00:10,  3.48it/s] 12% 5/40 [00:01<00:10,  3.47it/s] 12% 5/40 [00:01<00:10,  3.48it/s] 12% 5/40 [00:01<00:10,  3.48it/s] 12% 5/40 [00:01<00:10,  3.44it/s] 15% 6/40 [00:01<00:09,  3.51it/s] 15% 6/40 [00:01<00:09,  3.43it/s] 15% 6/40 [00:01<00:09,  3.44it/s] 15% 6/40 [00:01<00:09,  3.50it/s] 15% 6/40 [00:01<00:09,  3.54it/s] 15% 6/40 [00:01<00:09,  3.49it/s] 15% 6/40 [00:01<00:09,  3.48it/s] 15% 6/40 [00:01<00:09,  3.46it/s] 18% 7/40 [00:02<00:09,  3.47it/s] 18% 7/40 [00:02<00:09,  3.46it/s] 18% 7/40 [00:02<00:09,  3.44it/s] 18% 7/40 [00:02<00:09,  3.50it/s] 18% 7/40 [00:02<00:09,  3.48it/s] 18% 7/40 [00:01<00:09,  3.50it/s] 18% 7/40 [00:01<00:09,  3.50it/s] 18% 7/40 [00:02<00:09,  3.53it/s] 20% 8/40 [00:02<00:09,  3.47it/s] 20% 8/40 [00:02<00:09,  3.41it/s] 20% 8/40 [00:02<00:08,  3.56it/s] 20% 8/40 [00:02<00:09,  3.44it/s] 20% 8/40 [00:02<00:09,  3.48it/s] 20% 8/40 [00:02<00:09,  3.51it/s] 20% 8/40 [00:02<00:09,  3.44it/s] 20% 8/40 [00:02<00:09,  3.51it/s] 22% 9/40 [00:02<00:08,  3.45it/s] 22% 9/40 [00:02<00:09,  3.43it/s] 22% 9/40 [00:02<00:08,  3.47it/s] 22% 9/40 [00:02<00:08,  3.53it/s] 22% 9/40 [00:02<00:08,  3.48it/s] 22% 9/40 [00:02<00:08,  3.50it/s] 22% 9/40 [00:02<00:08,  3.45it/s] 22% 9/40 [00:02<00:08,  3.55it/s] 25% 10/40 [00:02<00:08,  3.44it/s] 25% 10/40 [00:02<00:08,  3.50it/s] 25% 10/40 [00:02<00:08,  3.55it/s] 25% 10/40 [00:02<00:08,  3.56it/s] 25% 10/40 [00:02<00:08,  3.44it/s] 25% 10/40 [00:02<00:08,  3.47it/s] 25% 10/40 [00:02<00:08,  3.48it/s] 25% 10/40 [00:02<00:08,  3.53it/s] 28% 11/40 [00:03<00:08,  3.52it/s] 28% 11/40 [00:03<00:08,  3.44it/s] 28% 11/40 [00:03<00:08,  3.53it/s] 28% 11/40 [00:03<00:08,  3.54it/s] 28% 11/40 [00:03<00:08,  3.43it/s] 28% 11/40 [00:03<00:08,  3.46it/s] 28% 11/40 [00:03<00:08,  3.50it/s] 28% 11/40 [00:03<00:08,  3.51it/s] 30% 12/40 [00:03<00:07,  3.55it/s] 30% 12/40 [00:03<00:08,  3.48it/s] 30% 12/40 [00:03<00:07,  3.55it/s] 30% 12/40 [00:03<00:07,  3.52it/s] 30% 12/40 [00:03<00:08,  3.44it/s] 30% 12/40 [00:03<00:07,  3.50it/s] 30% 12/40 [00:03<00:08,  3.46it/s] 30% 12/40 [00:03<00:07,  3.52it/s] 32% 13/40 [00:03<00:07,  3.61it/s] 32% 13/40 [00:03<00:07,  3.51it/s] 32% 13/40 [00:03<00:07,  3.46it/s] 32% 13/40 [00:03<00:07,  3.48it/s] 32% 13/40 [00:03<00:07,  3.49it/s] 32% 13/40 [00:03<00:07,  3.48it/s] 32% 13/40 [00:03<00:07,  3.52it/s] 32% 13/40 [00:03<00:07,  3.51it/s] 35% 14/40 [00:03<00:07,  3.54it/s] 35% 14/40 [00:04<00:07,  3.48it/s] 35% 14/40 [00:04<00:07,  3.47it/s] 35% 14/40 [00:03<00:07,  3.55it/s] 35% 14/40 [00:04<00:07,  3.52it/s] 35% 14/40 [00:04<00:07,  3.54it/s] 35% 14/40 [00:03<00:07,  3.53it/s] 35% 14/40 [00:04<00:07,  3.47it/s] 38% 15/40 [00:04<00:07,  3.50it/s] 38% 15/40 [00:04<00:07,  3.49it/s] 38% 15/40 [00:04<00:06,  3.60it/s] 38% 15/40 [00:04<00:07,  3.51it/s] 38% 15/40 [00:04<00:07,  3.50it/s] 38% 15/40 [00:04<00:07,  3.56it/s] 38% 15/40 [00:04<00:07,  3.50it/s] 38% 15/40 [00:04<00:07,  3.43it/s] 40% 16/40 [00:04<00:06,  3.53it/s] 40% 16/40 [00:04<00:06,  3.52it/s] 40% 16/40 [00:04<00:06,  3.47it/s] 40% 16/40 [00:04<00:06,  3.53it/s] 40% 16/40 [00:04<00:06,  3.54it/s] 40% 16/40 [00:04<00:06,  3.45it/s] 40% 16/40 [00:04<00:06,  3.48it/s] 40% 16/40 [00:04<00:06,  3.45it/s] 42% 17/40 [00:04<00:06,  3.56it/s] 42% 17/40 [00:04<00:06,  3.60it/s] 42% 17/40 [00:04<00:06,  3.50it/s] 42% 17/40 [00:04<00:06,  3.45it/s] 42% 17/40 [00:04<00:06,  3.60it/s] 42% 17/40 [00:04<00:06,  3.55it/s] 42% 17/40 [00:04<00:06,  3.43it/s] 42% 17/40 [00:04<00:06,  3.48it/s] 45% 18/40 [00:05<00:06,  3.63it/s] 45% 18/40 [00:05<00:06,  3.51it/s] 45% 18/40 [00:05<00:06,  3.50it/s] 45% 18/40 [00:05<00:06,  3.44it/s] 45% 18/40 [00:05<00:06,  3.55it/s] 45% 18/40 [00:05<00:06,  3.51it/s] 45% 18/40 [00:05<00:06,  3.43it/s] 45% 18/40 [00:05<00:06,  3.48it/s] 48% 19/40 [00:05<00:05,  3.59it/s] 48% 19/40 [00:05<00:06,  3.48it/s] 48% 19/40 [00:05<00:06,  3.49it/s] 48% 19/40 [00:05<00:05,  3.58it/s] 48% 19/40 [00:05<00:06,  3.47it/s] 48% 19/40 [00:05<00:06,  3.49it/s] 48% 19/40 [00:05<00:06,  3.45it/s] 48% 19/40 [00:05<00:05,  3.51it/s] 50% 20/40 [00:05<00:05,  3.58it/s] 50% 20/40 [00:05<00:05,  3.51it/s] 50% 20/40 [00:05<00:05,  3.45it/s] 50% 20/40 [00:05<00:05,  3.56it/s] 50% 20/40 [00:05<00:05,  3.49it/s] 50% 20/40 [00:05<00:05,  3.48it/s] 50% 20/40 [00:05<00:05,  3.48it/s] 50% 20/40 [00:05<00:05,  3.51it/s] 52% 21/40 [00:05<00:05,  3.55it/s] 52% 21/40 [00:05<00:05,  3.58it/s] 52% 21/40 [00:06<00:05,  3.48it/s] 52% 21/40 [00:05<00:05,  3.49it/s] 52% 21/40 [00:06<00:05,  3.48it/s] 52% 21/40 [00:06<00:05,  3.52it/s] 52% 21/40 [00:06<00:05,  3.54it/s] 52% 21/40 [00:06<00:05,  3.53it/s] 55% 22/40 [00:06<00:04,  3.61it/s] 55% 22/40 [00:06<00:05,  3.53it/s] 55% 22/40 [00:06<00:05,  3.54it/s] 55% 22/40 [00:06<00:05,  3.44it/s] 55% 22/40 [00:06<00:05,  3.46it/s] 55% 22/40 [00:06<00:05,  3.50it/s] 55% 22/40 [00:06<00:05,  3.47it/s] 55% 22/40 [00:06<00:05,  3.57it/s] 57% 23/40 [00:06<00:04,  3.60it/s] 57% 23/40 [00:06<00:04,  3.57it/s] 57% 23/40 [00:06<00:04,  3.54it/s] 57% 23/40 [00:06<00:04,  3.49it/s] 57% 23/40 [00:06<00:04,  3.43it/s] 57% 23/40 [00:06<00:04,  3.48it/s] 57% 23/40 [00:06<00:04,  3.45it/s] 57% 23/40 [00:06<00:04,  3.54it/s] 60% 24/40 [00:06<00:04,  3.58it/s] 60% 24/40 [00:06<00:04,  3.61it/s] 60% 24/40 [00:06<00:04,  3.55it/s] 60% 24/40 [00:06<00:04,  3.49it/s] 60% 24/40 [00:06<00:04,  3.43it/s] 60% 24/40 [00:06<00:04,  3.50it/s] 60% 24/40 [00:06<00:04,  3.49it/s] 60% 24/40 [00:06<00:04,  3.57it/s] 62% 25/40 [00:07<00:04,  3.53it/s] 62% 25/40 [00:07<00:04,  3.61it/s] 62% 25/40 [00:07<00:04,  3.58it/s] 62% 25/40 [00:07<00:04,  3.45it/s] 62% 25/40 [00:07<00:04,  3.44it/s] 62% 25/40 [00:07<00:04,  3.46it/s] 62% 25/40 [00:07<00:04,  3.46it/s] 62% 25/40 [00:07<00:04,  3.55it/s] 65% 26/40 [00:07<00:04,  3.49it/s] 65% 26/40 [00:07<00:03,  3.58it/s] 65% 26/40 [00:07<00:03,  3.56it/s] 65% 26/40 [00:07<00:04,  3.49it/s] 65% 26/40 [00:07<00:04,  3.44it/s] 65% 26/40 [00:07<00:03,  3.51it/s] 65% 26/40 [00:07<00:03,  3.53it/s] 65% 26/40 [00:07<00:04,  3.45it/s] 68% 27/40 [00:07<00:03,  3.57it/s] 68% 27/40 [00:07<00:03,  3.58it/s] 68% 27/40 [00:07<00:03,  3.55it/s] 68% 27/40 [00:07<00:03,  3.48it/s] 68% 27/40 [00:07<00:03,  3.48it/s] 68% 27/40 [00:07<00:03,  3.51it/s] 68% 27/40 [00:07<00:03,  3.49it/s] 68% 27/40 [00:07<00:03,  3.49it/s] 70% 28/40 [00:07<00:03,  3.56it/s] 70% 28/40 [00:07<00:03,  3.63it/s] 70% 28/40 [00:07<00:03,  3.54it/s] 70% 28/40 [00:08<00:03,  3.48it/s] 70% 28/40 [00:08<00:03,  3.45it/s] 70% 28/40 [00:08<00:03,  3.50it/s] 70% 28/40 [00:08<00:03,  3.46it/s] 70% 28/40 [00:07<00:03,  3.52it/s] 72% 29/40 [00:08<00:03,  3.56it/s] 72% 29/40 [00:08<00:03,  3.58it/s] 72% 29/40 [00:08<00:03,  3.55it/s] 72% 29/40 [00:08<00:03,  3.49it/s] 72% 29/40 [00:08<00:03,  3.53it/s] 72% 29/40 [00:08<00:03,  3.42it/s] 72% 29/40 [00:08<00:03,  3.51it/s] 72% 29/40 [00:08<00:03,  3.47it/s] 75% 30/40 [00:08<00:02,  3.61it/s] 75% 30/40 [00:08<00:02,  3.51it/s] 75% 30/40 [00:08<00:02,  3.54it/s] 75% 30/40 [00:08<00:02,  3.47it/s] 75% 30/40 [00:08<00:02,  3.50it/s] 75% 30/40 [00:08<00:02,  3.49it/s] 75% 30/40 [00:08<00:02,  3.40it/s] 75% 30/40 [00:08<00:02,  3.51it/s] 78% 31/40 [00:08<00:02,  3.60it/s] 78% 31/40 [00:08<00:02,  3.49it/s] 78% 31/40 [00:08<00:02,  3.50it/s] 78% 31/40 [00:08<00:02,  3.46it/s] 78% 31/40 [00:08<00:02,  3.51it/s] 78% 31/40 [00:08<00:02,  3.49it/s] 78% 31/40 [00:08<00:02,  3.45it/s] 78% 31/40 [00:08<00:02,  3.53it/s] 80% 32/40 [00:08<00:02,  3.59it/s] 80% 32/40 [00:09<00:02,  3.52it/s] 80% 32/40 [00:09<00:02,  3.47it/s] 80% 32/40 [00:09<00:02,  3.46it/s] 80% 32/40 [00:09<00:02,  3.48it/s] 80% 32/40 [00:09<00:02,  3.50it/s] 80% 32/40 [00:09<00:02,  3.47it/s] 80% 32/40 [00:09<00:02,  3.47it/s] 82% 33/40 [00:09<00:01,  3.55it/s] 82% 33/40 [00:09<00:01,  3.58it/s] 82% 33/40 [00:09<00:02,  3.45it/s] 82% 33/40 [00:09<00:01,  3.52it/s] 82% 33/40 [00:09<00:01,  3.50it/s] 82% 33/40 [00:09<00:01,  3.54it/s] 82% 33/40 [00:09<00:02,  3.41it/s] 82% 33/40 [00:09<00:02,  3.45it/s] 85% 34/40 [00:09<00:01,  3.56it/s] 85% 34/40 [00:09<00:01,  3.52it/s] 85% 34/40 [00:09<00:01,  3.47it/s] 85% 34/40 [00:09<00:01,  3.58it/s] 85% 34/40 [00:09<00:01,  3.54it/s] 85% 34/40 [00:09<00:01,  3.46it/s] 85% 34/40 [00:09<00:01,  3.50it/s] 85% 34/40 [00:09<00:01,  3.44it/s] 88% 35/40 [00:09<00:01,  3.54it/s] 88% 35/40 [00:09<00:01,  3.56it/s] 88% 35/40 [00:09<00:01,  3.47it/s] 88% 35/40 [00:10<00:01,  3.53it/s] 88% 35/40 [00:10<00:01,  3.49it/s] 88% 35/40 [00:09<00:01,  3.48it/s] 88% 35/40 [00:10<00:01,  3.41it/s] 88% 35/40 [00:10<00:01,  3.44it/s] 90% 36/40 [00:10<00:01,  3.51it/s] 90% 36/40 [00:10<00:01,  3.59it/s] 90% 36/40 [00:10<00:01,  3.48it/s] 90% 36/40 [00:10<00:01,  3.53it/s] 90% 36/40 [00:10<00:01,  3.45it/s] 90% 36/40 [00:10<00:01,  3.47it/s] 90% 36/40 [00:10<00:01,  3.42it/s] 90% 36/40 [00:10<00:01,  3.42it/s] 92% 37/40 [00:10<00:00,  3.51it/s] 92% 37/40 [00:10<00:00,  3.57it/s] 92% 37/40 [00:10<00:00,  3.44it/s] 92% 37/40 [00:10<00:00,  3.56it/s] 92% 37/40 [00:10<00:00,  3.52it/s] 92% 37/40 [00:10<00:00,  3.43it/s] 92% 37/40 [00:10<00:00,  3.46it/s] 92% 37/40 [00:10<00:00,  3.42it/s] 95% 38/40 [00:10<00:00,  3.54it/s] 95% 38/40 [00:10<00:00,  3.54it/s] 95% 38/40 [00:10<00:00,  3.85it/s] 95% 38/40 [00:10<00:00,  3.45it/s] 98% 39/40 [00:10<00:00,  4.37it/s] 95% 38/40 [00:10<00:00,  3.59it/s] 95% 38/40 [00:10<00:00,  3.60it/s] 95% 38/40 [00:10<00:00,  3.47it/s] 95% 38/40 [00:10<00:00,  3.48it/s] 98% 39/40 [00:10<00:00,  4.26it/s] 98% 39/40 [00:10<00:00,  3.80it/s] 98% 39/40 [00:11<00:00,  4.20it/s]100% 40/40 [00:10<00:00,  4.62it/s]100% 40/40 [00:10<00:00,  3.64it/s]
100% 40/40 [00:11<00:00,  3.63it/s]
 98% 39/40 [00:11<00:00,  3.72it/s]100% 40/40 [00:11<00:00,  4.45it/s]100% 40/40 [00:11<00:00,  3.59it/s]
100% 40/40 [00:11<00:00,  4.70it/s]100% 40/40 [00:11<00:00,  3.58it/s]
 98% 39/40 [00:11<00:00,  3.58it/s] 98% 39/40 [00:11<00:00,  3.53it/s] 98% 39/40 [00:11<00:00,  3.50it/s]100% 40/40 [00:11<00:00,  3.59it/s]
100% 40/40 [00:11<00:00,  3.57it/s]
100% 40/40 [00:11<00:00,  3.54it/s]
100% 40/40 [00:11<00:00,  4.39it/s]100% 40/40 [00:11<00:00,  3.54it/s]
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.241553 (0.01798648452758789 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.310599 (0.018096958923339845 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.198226 (0.017917161560058594 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.285895 (0.018057432556152345 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.233591 (0.01797374496459961 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.221476 (0.017954362106323243 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.295916 (0.018073465728759765 s / img per device, on 8 devices)
2021-10-16 12:13:25,644 maskrcnn_benchmark.inference INFO: Total inference time: 0:00:11.217458 (0.017947932815551758 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.217458 (0.017947932815551758 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.026s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.027s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.027s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.027s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.027s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.027s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.028s
2021-10-16 12:13:25,880 maskrcnn_benchmark.timed_section INFO: EXPOSED: Launching evaluation preparation tasks took 0.033s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.033s
:::MLLOG {"namespace": "", "time_ms": 1634386405884, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 168, "first_epoch_num": 4, "epoch_count": 1}}
:::MLLOG {"namespace": "", "time_ms": 1634386405884, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 169, "epoch_num": 4}}
INFO:maskrcnn_benchmark.timed_section:Prepping took 10.393 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 10.488 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 10.549 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 10.491 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 10.746 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 10.936 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 11.156 seconds total
2021-10-16 12:13:38,072 maskrcnn_benchmark.timed_section INFO: Prepping took 11.135 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 11.135 seconds total
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.242s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.243s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.243s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.244s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.245s
2021-10-16 12:13:50,168 maskrcnn_benchmark.timed_section INFO: EXPOSED: Launching evaluation task took 0.246s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.246s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.246s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.247s
Evaluating predictions
Loading and preparing results...
resFile is ./inference/coco_2017_val/segm.json
Loading and preparing results...
resFile is ./inference/coco_2017_val/bbox.json
DONE (t=0.99s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=2.57s)
Running per image evaluation...
Evaluate annotation type *segm*
DONE (t=1.96s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.24310
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.43715
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.24552
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.12254
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.27377
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.31618
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.23766
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.38126
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.40218
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.21455
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.43768
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.52901
DONE (t=3.07s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.23766
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.41180
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.24335
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.09097
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.25929
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.35398
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.23698
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.36729
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.38562
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.19027
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.42439
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.52729
2021-10-16 12:14:02,702 maskrcnn_benchmark.trainer INFO: bbox mAP: 0.24309885106031306, segm mAP: 0.23765553434540457
INFO:maskrcnn_benchmark.trainer:bbox mAP: 0.24309885106031306, segm mAP: 0.23765553434540457
:::MLLOG {"namespace": "", "time_ms": 1634386442702, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": {"BBOX": 0.24309885106031306, "SEGM": 0.23765553434540457}, "metadata": {"file": "tools/train_mlperf.py", "lineno": 133, "epoch_num": 3}}
:::MLLOG {"namespace": "", "time_ms": 1634386442702, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 134, "epoch_num": 3}}
INFO:maskrcnn_benchmark.trainer:eta: 3:13:27  iter: 2800  loss: 0.7393 (0.9936)  loss_classifier: 0.2362 (0.3473)  loss_box_reg: 0.1112 (0.1466)  loss_mask: 0.2972 (0.3533)  loss_objectness: 0.0459 (0.0764)  loss_rpn_box_reg: 0.0599 (0.0699)  time: 0.6173 (0.7636)  data: 0.0003 (0.0250)  lr: 0.160000  max mem: 14467
INFO:maskrcnn_benchmark.trainer:eta: 3:13:26  iter: 2800  loss: 0.7800 (0.9956)  loss_classifier: 0.2416 (0.3482)  loss_box_reg: 0.1193 (0.1475)  loss_mask: 0.3030 (0.3525)  loss_objectness: 0.0435 (0.0766)  loss_rpn_box_reg: 0.0526 (0.0708)  time: 0.6177 (0.7636)  data: 0.0004 (0.0249)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 3:13:26  iter: 2800  loss: 0.7417 (0.9955)  loss_classifier: 0.2598 (0.3477)  loss_box_reg: 0.1112 (0.1469)  loss_mask: 0.2843 (0.3529)  loss_objectness: 0.0458 (0.0775)  loss_rpn_box_reg: 0.0435 (0.0704)  time: 0.6176 (0.7636)  data: 0.0003 (0.0249)  lr: 0.160000  max mem: 14585
INFO:maskrcnn_benchmark.trainer:eta: 3:13:27  iter: 2800  loss: 0.8144 (0.9929)  loss_classifier: 0.2588 (0.3478)  loss_box_reg: 0.1243 (0.1466)  loss_mask: 0.3135 (0.3522)  loss_objectness: 0.0458 (0.0759)  loss_rpn_box_reg: 0.0594 (0.0703)  time: 0.6171 (0.7636)  data: 0.0003 (0.0250)  lr: 0.160000  max mem: 14752
INFO:maskrcnn_benchmark.trainer:eta: 3:13:27  iter: 2800  loss: 0.8200 (0.9947)  loss_classifier: 0.2887 (0.3479)  loss_box_reg: 0.1228 (0.1468)  loss_mask: 0.2950 (0.3532)  loss_objectness: 0.0516 (0.0768)  loss_rpn_box_reg: 0.0586 (0.0701)  time: 0.6171 (0.7636)  data: 0.0004 (0.0250)  lr: 0.160000  max mem: 14501
INFO:maskrcnn_benchmark.trainer:eta: 3:13:27  iter: 2800  loss: 0.7936 (0.9922)  loss_classifier: 0.2635 (0.3465)  loss_box_reg: 0.1252 (0.1470)  loss_mask: 0.2946 (0.3529)  loss_objectness: 0.0486 (0.0763)  loss_rpn_box_reg: 0.0718 (0.0694)  time: 0.6163 (0.7636)  data: 0.0003 (0.0250)  lr: 0.160000  max mem: 14639
2021-10-16 12:14:08,869 maskrcnn_benchmark.trainer INFO: eta: 3:13:26  iter: 2800  loss: 0.7519 (0.9969)  loss_classifier: 0.2494 (0.3486)  loss_box_reg: 0.1201 (0.1473)  loss_mask: 0.2866 (0.3529)  loss_objectness: 0.0394 (0.0772)  loss_rpn_box_reg: 0.0486 (0.0709)  time: 0.6164 (0.7636)  data: 0.0003 (0.0252)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 3:13:27  iter: 2800  loss: 0.7925 (0.9944)  loss_classifier: 0.2703 (0.3476)  loss_box_reg: 0.1234 (0.1464)  loss_mask: 0.2892 (0.3532)  loss_objectness: 0.0513 (0.0768)  loss_rpn_box_reg: 0.0631 (0.0704)  time: 0.6163 (0.7636)  data: 0.0003 (0.0250)  lr: 0.160000  max mem: 14650
INFO:maskrcnn_benchmark.trainer:eta: 3:13:26  iter: 2800  loss: 0.7519 (0.9969)  loss_classifier: 0.2494 (0.3486)  loss_box_reg: 0.1201 (0.1473)  loss_mask: 0.2866 (0.3529)  loss_objectness: 0.0394 (0.0772)  loss_rpn_box_reg: 0.0486 (0.0709)  time: 0.6164 (0.7636)  data: 0.0003 (0.0252)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634386448869, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.9968545150437526, "loss_classifier": 0.34860848081165124, "loss_box_reg": 0.14725195945232242, "loss_mask": 0.35285235781754765, "loss_objectness": 0.07721580811377082, "loss_rpn_box_reg": 0.07092590920959732, "time": 0.7636096554994584, "data": 0.02517206473009927, "throughput": 167.62491029042624}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 2800}}
:::MLLOG {"namespace": "", "time_ms": 1634386448869, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 167.62491029042624, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 3:12:11  iter: 2850  loss: 0.7989 (0.9898)  loss_classifier: 0.2631 (0.3458)  loss_box_reg: 0.1349 (0.1462)  loss_mask: 0.2961 (0.3522)  loss_objectness: 0.0435 (0.0759)  loss_rpn_box_reg: 0.0465 (0.0696)  time: 0.6225 (0.7611)  data: 0.0003 (0.0245)  lr: 0.160000  max mem: 14467
INFO:maskrcnn_benchmark.trainer:eta: 3:12:10  iter: 2850  loss: 0.8333 (0.9924)  loss_classifier: 0.2976 (0.3469)  loss_box_reg: 0.1231 (0.1472)  loss_mask: 0.2998 (0.3516)  loss_objectness: 0.0509 (0.0762)  loss_rpn_box_reg: 0.0582 (0.0706)  time: 0.6230 (0.7611)  data: 0.0003 (0.0245)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 3:12:10  iter: 2850  loss: 0.8210 (0.9924)  loss_classifier: 0.2770 (0.3465)  loss_box_reg: 0.1368 (0.1466)  loss_mask: 0.3004 (0.3519)  loss_objectness: 0.0408 (0.0771)  loss_rpn_box_reg: 0.0687 (0.0703)  time: 0.6231 (0.7611)  data: 0.0003 (0.0245)  lr: 0.160000  max mem: 14585
INFO:maskrcnn_benchmark.trainer:eta: 3:12:11  iter: 2850  loss: 0.7895 (0.9915)  loss_classifier: 0.2523 (0.3465)  loss_box_reg: 0.1249 (0.1464)  loss_mask: 0.2869 (0.3522)  loss_objectness: 0.0460 (0.0764)  loss_rpn_box_reg: 0.0537 (0.0700)  time: 0.6230 (0.7611)  data: 0.0004 (0.0246)  lr: 0.160000  max mem: 14501
INFO:maskrcnn_benchmark.trainer:eta: 3:12:11  iter: 2850  loss: 0.7968 (0.9892)  loss_classifier: 0.2704 (0.3463)  loss_box_reg: 0.1287 (0.1462)  loss_mask: 0.2946 (0.3511)  loss_objectness: 0.0455 (0.0755)  loss_rpn_box_reg: 0.0569 (0.0702)  time: 0.6237 (0.7611)  data: 0.0004 (0.0246)  lr: 0.160000  max mem: 14752
INFO:maskrcnn_benchmark.trainer:eta: 3:12:11  iter: 2850  loss: 0.8150 (0.9891)  loss_classifier: 0.2831 (0.3452)  loss_box_reg: 0.1396 (0.1467)  loss_mask: 0.2986 (0.3520)  loss_objectness: 0.0476 (0.0759)  loss_rpn_box_reg: 0.0589 (0.0694)  time: 0.6236 (0.7611)  data: 0.0004 (0.0245)  lr: 0.160000  max mem: 14639
INFO:maskrcnn_benchmark.trainer:eta: 3:12:11  iter: 2850  loss: 0.8122 (0.9915)  loss_classifier: 0.2851 (0.3464)  loss_box_reg: 0.1483 (0.1462)  loss_mask: 0.2940 (0.3522)  loss_objectness: 0.0444 (0.0763)  loss_rpn_box_reg: 0.0654 (0.0703)  time: 0.6235 (0.7611)  data: 0.0004 (0.0245)  lr: 0.160000  max mem: 14650
2021-10-16 12:14:39,949 maskrcnn_benchmark.trainer INFO: eta: 3:12:10  iter: 2850  loss: 0.8083 (0.9934)  loss_classifier: 0.2567 (0.3472)  loss_box_reg: 0.1292 (0.1469)  loss_mask: 0.2889 (0.3518)  loss_objectness: 0.0518 (0.0767)  loss_rpn_box_reg: 0.0607 (0.0708)  time: 0.6235 (0.7611)  data: 0.0003 (0.0247)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 3:12:10  iter: 2850  loss: 0.8083 (0.9934)  loss_classifier: 0.2567 (0.3472)  loss_box_reg: 0.1292 (0.1469)  loss_mask: 0.2889 (0.3518)  loss_objectness: 0.0518 (0.0767)  loss_rpn_box_reg: 0.0607 (0.0708)  time: 0.6235 (0.7611)  data: 0.0003 (0.0247)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634386479949, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.9933779838733505, "loss_classifier": 0.3472344500479991, "loss_box_reg": 0.14688100874807947, "loss_mask": 0.35175456660881377, "loss_objectness": 0.0767408256337308, "loss_rpn_box_reg": 0.07076713322743512, "time": 0.7611182908844529, "data": 0.024738134584928812, "throughput": 168.17359605332618}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 2850}}
:::MLLOG {"namespace": "", "time_ms": 1634386479950, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 168.17359605332618, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 3:10:56  iter: 2900  loss: 0.8161 (0.9857)  loss_classifier: 0.2684 (0.3438)  loss_box_reg: 0.1229 (0.1463)  loss_mask: 0.3019 (0.3510)  loss_objectness: 0.0470 (0.0755)  loss_rpn_box_reg: 0.0589 (0.0692)  time: 0.6185 (0.7587)  data: 0.0003 (0.0241)  lr: 0.160000  max mem: 14639
2021-10-16 12:15:10,937 maskrcnn_benchmark.trainer INFO: eta: 3:10:56  iter: 2900  loss: 0.7372 (0.9898)  loss_classifier: 0.2590 (0.3459)  loss_box_reg: 0.1233 (0.1465)  loss_mask: 0.2860 (0.3506)  loss_objectness: 0.0490 (0.0763)  loss_rpn_box_reg: 0.0478 (0.0705)  time: 0.6186 (0.7587)  data: 0.0003 (0.0243)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 3:10:56  iter: 2900  loss: 0.8323 (0.9883)  loss_classifier: 0.2727 (0.3451)  loss_box_reg: 0.1246 (0.1459)  loss_mask: 0.2930 (0.3512)  loss_objectness: 0.0510 (0.0759)  loss_rpn_box_reg: 0.0554 (0.0703)  time: 0.6185 (0.7587)  data: 0.0003 (0.0241)  lr: 0.160000  max mem: 14650
INFO:maskrcnn_benchmark.trainer:eta: 3:10:56  iter: 2900  loss: 0.7372 (0.9898)  loss_classifier: 0.2590 (0.3459)  loss_box_reg: 0.1233 (0.1465)  loss_mask: 0.2860 (0.3506)  loss_objectness: 0.0490 (0.0763)  loss_rpn_box_reg: 0.0478 (0.0705)  time: 0.6186 (0.7587)  data: 0.0003 (0.0243)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634386510937, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.9897831971172629, "loss_classifier": 0.345860337550784, "loss_box_reg": 0.14651589731067613, "loss_mask": 0.35061743897096864, "loss_objectness": 0.07625949716901985, "loss_rpn_box_reg": 0.07053002642917222, "time": 0.758680970175513, "data": 0.024319824843571102, "throughput": 168.71386660771066}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 2900}}
:::MLLOG {"namespace": "", "time_ms": 1634386510937, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 168.71386660771066, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 3:10:56  iter: 2900  loss: 0.8145 (0.9883)  loss_classifier: 0.2724 (0.3452)  loss_box_reg: 0.1225 (0.1461)  loss_mask: 0.2949 (0.3512)  loss_objectness: 0.0547 (0.0760)  loss_rpn_box_reg: 0.0662 (0.0699)  time: 0.6175 (0.7587)  data: 0.0003 (0.0242)  lr: 0.160000  max mem: 14501
INFO:maskrcnn_benchmark.trainer:eta: 3:10:56  iter: 2900  loss: 0.7816 (0.9856)  loss_classifier: 0.2684 (0.3448)  loss_box_reg: 0.1279 (0.1457)  loss_mask: 0.2982 (0.3500)  loss_objectness: 0.0497 (0.0750)  loss_rpn_box_reg: 0.0543 (0.0700)  time: 0.6181 (0.7587)  data: 0.0003 (0.0242)  lr: 0.160000  max mem: 14752
INFO:maskrcnn_benchmark.trainer:eta: 3:10:56  iter: 2900  loss: 0.8088 (0.9866)  loss_classifier: 0.2850 (0.3445)  loss_box_reg: 0.1229 (0.1459)  loss_mask: 0.2928 (0.3513)  loss_objectness: 0.0506 (0.0755)  loss_rpn_box_reg: 0.0563 (0.0694)  time: 0.6180 (0.7587)  data: 0.0003 (0.0241)  lr: 0.160000  max mem: 14467
INFO:maskrcnn_benchmark.trainer:eta: 3:10:55  iter: 2900  loss: 0.8140 (0.9891)  loss_classifier: 0.2788 (0.3452)  loss_box_reg: 0.1219 (0.1463)  loss_mask: 0.2897 (0.3509)  loss_objectness: 0.0564 (0.0766)  loss_rpn_box_reg: 0.0567 (0.0701)  time: 0.6180 (0.7587)  data: 0.0003 (0.0241)  lr: 0.160000  max mem: 14585
INFO:maskrcnn_benchmark.trainer:eta: 3:10:55  iter: 2900  loss: 0.8436 (0.9892)  loss_classifier: 0.2756 (0.3455)  loss_box_reg: 0.1264 (0.1468)  loss_mask: 0.2943 (0.3506)  loss_objectness: 0.0526 (0.0758)  loss_rpn_box_reg: 0.0651 (0.0704)  time: 0.6180 (0.7587)  data: 0.0003 (0.0241)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 3:09:43  iter: 2950  loss: 0.8162 (0.9830)  loss_classifier: 0.2906 (0.3438)  loss_box_reg: 0.1268 (0.1455)  loss_mask: 0.2958 (0.3492)  loss_objectness: 0.0492 (0.0747)  loss_rpn_box_reg: 0.0516 (0.0699)  time: 0.6226 (0.7564)  data: 0.0003 (0.0238)  lr: 0.160000  max mem: 14752
INFO:maskrcnn_benchmark.trainer:eta: 3:09:43  iter: 2950  loss: 0.7501 (0.9851)  loss_classifier: 0.2487 (0.3438)  loss_box_reg: 0.1192 (0.1458)  loss_mask: 0.2899 (0.3502)  loss_objectness: 0.0439 (0.0755)  loss_rpn_box_reg: 0.0475 (0.0698)  time: 0.6234 (0.7564)  data: 0.0003 (0.0238)  lr: 0.160000  max mem: 14501
INFO:maskrcnn_benchmark.trainer:eta: 3:09:43  iter: 2950  loss: 0.7977 (0.9837)  loss_classifier: 0.2720 (0.3435)  loss_box_reg: 0.1281 (0.1456)  loss_mask: 0.2894 (0.3503)  loss_objectness: 0.0494 (0.0751)  loss_rpn_box_reg: 0.0641 (0.0692)  time: 0.6227 (0.7564)  data: 0.0004 (0.0237)  lr: 0.160000  max mem: 14467
INFO:maskrcnn_benchmark.trainer:eta: 3:09:43  iter: 2950  loss: 0.7957 (0.9861)  loss_classifier: 0.2909 (0.3439)  loss_box_reg: 0.1248 (0.1460)  loss_mask: 0.2955 (0.3500)  loss_objectness: 0.0480 (0.0763)  loss_rpn_box_reg: 0.0509 (0.0699)  time: 0.6228 (0.7563)  data: 0.0004 (0.0237)  lr: 0.160000  max mem: 14585
INFO:maskrcnn_benchmark.trainer:eta: 3:09:42  iter: 2950  loss: 0.8080 (0.9863)  loss_classifier: 0.2850 (0.3443)  loss_box_reg: 0.1330 (0.1465)  loss_mask: 0.2829 (0.3497)  loss_objectness: 0.0568 (0.0755)  loss_rpn_box_reg: 0.0579 (0.0703)  time: 0.6228 (0.7563)  data: 0.0004 (0.0237)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 3:09:43  iter: 2950  loss: 0.8293 (0.9827)  loss_classifier: 0.2673 (0.3426)  loss_box_reg: 0.1316 (0.1461)  loss_mask: 0.2866 (0.3500)  loss_objectness: 0.0559 (0.0750)  loss_rpn_box_reg: 0.0571 (0.0690)  time: 0.6234 (0.7564)  data: 0.0003 (0.0237)  lr: 0.160000  max mem: 14639
INFO:maskrcnn_benchmark.trainer:eta: 3:09:43  iter: 2950  loss: 0.8598 (0.9858)  loss_classifier: 0.2915 (0.3441)  loss_box_reg: 0.1453 (0.1457)  loss_mask: 0.3020 (0.3503)  loss_objectness: 0.0556 (0.0756)  loss_rpn_box_reg: 0.0666 (0.0702)  time: 0.6234 (0.7564)  data: 0.0004 (0.0237)  lr: 0.160000  max mem: 14650
2021-10-16 12:15:42,019 maskrcnn_benchmark.trainer INFO: eta: 3:09:43  iter: 2950  loss: 0.8330 (0.9870)  loss_classifier: 0.2789 (0.3447)  loss_box_reg: 0.1342 (0.1463)  loss_mask: 0.2937 (0.3497)  loss_objectness: 0.0470 (0.0759)  loss_rpn_box_reg: 0.0657 (0.0705)  time: 0.6236 (0.7564)  data: 0.0003 (0.0239)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 3:09:43  iter: 2950  loss: 0.8330 (0.9870)  loss_classifier: 0.2789 (0.3447)  loss_box_reg: 0.1342 (0.1463)  loss_mask: 0.2937 (0.3497)  loss_objectness: 0.0470 (0.0759)  loss_rpn_box_reg: 0.0657 (0.0705)  time: 0.6236 (0.7564)  data: 0.0003 (0.0239)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634386542019, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.9870187573614767, "loss_classifier": 0.34473040077393335, "loss_box_reg": 0.146269925722805, "loss_mask": 0.34969054305957536, "loss_objectness": 0.07587537039260743, "loss_rpn_box_reg": 0.0704525177427015, "time": 0.7563581777831255, "data": 0.02391543752056057, "throughput": 169.23199055659856}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 2950}}
:::MLLOG {"namespace": "", "time_ms": 1634386542019, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 169.23199055659856, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 3:08:32  iter: 3000  loss: 0.8374 (0.9828)  loss_classifier: 0.2785 (0.3428)  loss_box_reg: 0.1398 (0.1454)  loss_mask: 0.2966 (0.3494)  loss_objectness: 0.0516 (0.0752)  loss_rpn_box_reg: 0.0586 (0.0700)  time: 0.6210 (0.7541)  data: 0.0004 (0.0233)  lr: 0.160000  max mem: 14650
2021-10-16 12:16:13,117 maskrcnn_benchmark.trainer INFO: eta: 3:08:31  iter: 3000  loss: 0.7608 (0.9840)  loss_classifier: 0.2440 (0.3435)  loss_box_reg: 0.1241 (0.1459)  loss_mask: 0.2859 (0.3488)  loss_objectness: 0.0522 (0.0755)  loss_rpn_box_reg: 0.0510 (0.0703)  time: 0.6210 (0.7541)  data: 0.0003 (0.0235)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 3:08:31  iter: 3000  loss: 0.7608 (0.9840)  loss_classifier: 0.2440 (0.3435)  loss_box_reg: 0.1241 (0.1459)  loss_mask: 0.2859 (0.3488)  loss_objectness: 0.0522 (0.0755)  loss_rpn_box_reg: 0.0510 (0.0703)  time: 0.6210 (0.7541)  data: 0.0003 (0.0235)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634386573117, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.9840231421093146, "loss_classifier": 0.3435169773623347, "loss_box_reg": 0.1459462696350335, "loss_mask": 0.3487678450495005, "loss_objectness": 0.07548812022432685, "loss_rpn_box_reg": 0.07030393011650692, "time": 0.7541182700792949, "data": 0.02352404324213664, "throughput": 169.7346491639049}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 3000}}
INFO:maskrcnn_benchmark.trainer:eta: 3:08:31  iter: 3000  loss: 0.8058 (0.9796)  loss_classifier: 0.2659 (0.3413)  loss_box_reg: 0.1290 (0.1457)  loss_mask: 0.3042 (0.3491)  loss_objectness: 0.0475 (0.0747)  loss_rpn_box_reg: 0.0598 (0.0688)  time: 0.6212 (0.7541)  data: 0.0004 (0.0233)  lr: 0.160000  max mem: 14639
:::MLLOG {"namespace": "", "time_ms": 1634386573117, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 169.7346491639049, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 3:08:31  iter: 3000  loss: 0.8224 (0.9800)  loss_classifier: 0.2739 (0.3424)  loss_box_reg: 0.1342 (0.1452)  loss_mask: 0.3016 (0.3483)  loss_objectness: 0.0528 (0.0743)  loss_rpn_box_reg: 0.0692 (0.0698)  time: 0.6211 (0.7541)  data: 0.0004 (0.0234)  lr: 0.160000  max mem: 14752
INFO:maskrcnn_benchmark.trainer:eta: 3:08:32  iter: 3000  loss: 0.8388 (0.9826)  loss_classifier: 0.2722 (0.3427)  loss_box_reg: 0.1318 (0.1455)  loss_mask: 0.2970 (0.3493)  loss_objectness: 0.0574 (0.0753)  loss_rpn_box_reg: 0.0623 (0.0697)  time: 0.6209 (0.7541)  data: 0.0004 (0.0234)  lr: 0.160000  max mem: 14501
INFO:maskrcnn_benchmark.trainer:eta: 3:08:31  iter: 3000  loss: 0.8176 (0.9812)  loss_classifier: 0.2677 (0.3425)  loss_box_reg: 0.1293 (0.1454)  loss_mask: 0.3011 (0.3495)  loss_objectness: 0.0457 (0.0747)  loss_rpn_box_reg: 0.0574 (0.0691)  time: 0.6205 (0.7541)  data: 0.0004 (0.0233)  lr: 0.160000  max mem: 14467
INFO:maskrcnn_benchmark.trainer:eta: 3:08:31  iter: 3000  loss: 0.7777 (0.9834)  loss_classifier: 0.2501 (0.3427)  loss_box_reg: 0.1247 (0.1457)  loss_mask: 0.2917 (0.3492)  loss_objectness: 0.0532 (0.0759)  loss_rpn_box_reg: 0.0522 (0.0699)  time: 0.6204 (0.7541)  data: 0.0003 (0.0233)  lr: 0.160000  max mem: 14585
INFO:maskrcnn_benchmark.trainer:eta: 3:08:31  iter: 3000  loss: 0.7852 (0.9835)  loss_classifier: 0.2827 (0.3431)  loss_box_reg: 0.1299 (0.1462)  loss_mask: 0.2913 (0.3488)  loss_objectness: 0.0507 (0.0751)  loss_rpn_box_reg: 0.0617 (0.0703)  time: 0.6206 (0.7541)  data: 0.0004 (0.0233)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 3:07:21  iter: 3050  loss: 0.7942 (0.9766)  loss_classifier: 0.2573 (0.3400)  loss_box_reg: 0.1190 (0.1453)  loss_mask: 0.2896 (0.3482)  loss_objectness: 0.0557 (0.0743)  loss_rpn_box_reg: 0.0599 (0.0688)  time: 0.6185 (0.7520)  data: 0.0003 (0.0230)  lr: 0.160000  max mem: 14639
2021-10-16 12:16:44,202 maskrcnn_benchmark.trainer INFO: eta: 3:07:21  iter: 3050  loss: 0.7658 (0.9811)  loss_classifier: 0.2503 (0.3425)  loss_box_reg: 0.1121 (0.1457)  loss_mask: 0.2721 (0.3478)  loss_objectness: 0.0466 (0.0751)  loss_rpn_box_reg: 0.0508 (0.0701)  time: 0.6183 (0.7519)  data: 0.0003 (0.0231)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 3:07:21  iter: 3050  loss: 0.8214 (0.9802)  loss_classifier: 0.2715 (0.3418)  loss_box_reg: 0.1294 (0.1452)  loss_mask: 0.2855 (0.3485)  loss_objectness: 0.0485 (0.0748)  loss_rpn_box_reg: 0.0599 (0.0699)  time: 0.6187 (0.7520)  data: 0.0003 (0.0229)  lr: 0.160000  max mem: 14650
INFO:maskrcnn_benchmark.trainer:eta: 3:07:21  iter: 3050  loss: 0.7658 (0.9811)  loss_classifier: 0.2503 (0.3425)  loss_box_reg: 0.1121 (0.1457)  loss_mask: 0.2721 (0.3478)  loss_objectness: 0.0466 (0.0751)  loss_rpn_box_reg: 0.0508 (0.0701)  time: 0.6183 (0.7519)  data: 0.0003 (0.0231)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634386604202, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.9811240365661559, "loss_classifier": 0.3424652670323849, "loss_box_reg": 0.14567158060965174, "loss_mask": 0.3477893987982, "loss_objectness": 0.07510870371991005, "loss_rpn_box_reg": 0.07008908670548289, "time": 0.7519473540196653, "data": 0.02314617790159632, "throughput": 170.22468303898373}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 3050}}
:::MLLOG {"namespace": "", "time_ms": 1634386604202, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 170.22468303898373, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 3:07:21  iter: 3050  loss: 0.7478 (0.9795)  loss_classifier: 0.2394 (0.3415)  loss_box_reg: 0.1142 (0.1452)  loss_mask: 0.2864 (0.3483)  loss_objectness: 0.0381 (0.0749)  loss_rpn_box_reg: 0.0539 (0.0696)  time: 0.6181 (0.7520)  data: 0.0003 (0.0230)  lr: 0.160000  max mem: 14573
INFO:maskrcnn_benchmark.trainer:eta: 3:07:21  iter: 3050  loss: 0.7517 (0.9768)  loss_classifier: 0.2474 (0.3410)  loss_box_reg: 0.1212 (0.1448)  loss_mask: 0.2891 (0.3474)  loss_objectness: 0.0466 (0.0739)  loss_rpn_box_reg: 0.0606 (0.0696)  time: 0.6179 (0.7520)  data: 0.0003 (0.0230)  lr: 0.160000  max mem: 14752
INFO:maskrcnn_benchmark.trainer:eta: 3:07:21  iter: 3050  loss: 0.7722 (0.9784)  loss_classifier: 0.2574 (0.3414)  loss_box_reg: 0.1251 (0.1451)  loss_mask: 0.2957 (0.3486)  loss_objectness: 0.0450 (0.0743)  loss_rpn_box_reg: 0.0463 (0.0689)  time: 0.6182 (0.7520)  data: 0.0003 (0.0230)  lr: 0.160000  max mem: 14558
INFO:maskrcnn_benchmark.trainer:eta: 3:07:21  iter: 3050  loss: 0.7482 (0.9803)  loss_classifier: 0.2596 (0.3419)  loss_box_reg: 0.1187 (0.1459)  loss_mask: 0.2929 (0.3478)  loss_objectness: 0.0452 (0.0747)  loss_rpn_box_reg: 0.0490 (0.0700)  time: 0.6183 (0.7519)  data: 0.0003 (0.0229)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 3:07:21  iter: 3050  loss: 0.8440 (0.9807)  loss_classifier: 0.2702 (0.3417)  loss_box_reg: 0.1299 (0.1455)  loss_mask: 0.2944 (0.3482)  loss_objectness: 0.0538 (0.0755)  loss_rpn_box_reg: 0.0633 (0.0697)  time: 0.6182 (0.7519)  data: 0.0003 (0.0229)  lr: 0.160000  max mem: 14585
INFO:maskrcnn_benchmark.trainer:eta: 3:06:12  iter: 3100  loss: 0.7528 (0.9751)  loss_classifier: 0.2463 (0.3400)  loss_box_reg: 0.1086 (0.1447)  loss_mask: 0.2879 (0.3476)  loss_objectness: 0.0496 (0.0739)  loss_rpn_box_reg: 0.0558 (0.0688)  time: 0.6196 (0.7499)  data: 0.0003 (0.0226)  lr: 0.160000  max mem: 14558
INFO:maskrcnn_benchmark.trainer:eta: 3:06:12  iter: 3100  loss: 0.8170 (0.9779)  loss_classifier: 0.2849 (0.3406)  loss_box_reg: 0.1276 (0.1452)  loss_mask: 0.3024 (0.3474)  loss_objectness: 0.0436 (0.0752)  loss_rpn_box_reg: 0.0494 (0.0696)  time: 0.6200 (0.7498)  data: 0.0003 (0.0226)  lr: 0.160000  max mem: 14585
INFO:maskrcnn_benchmark.trainer:eta: 3:06:12  iter: 3100  loss: 0.7881 (0.9772)  loss_classifier: 0.2444 (0.3406)  loss_box_reg: 0.1197 (0.1455)  loss_mask: 0.2946 (0.3469)  loss_objectness: 0.0498 (0.0743)  loss_rpn_box_reg: 0.0536 (0.0699)  time: 0.6197 (0.7498)  data: 0.0003 (0.0226)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 3:06:12  iter: 3100  loss: 0.8580 (0.9738)  loss_classifier: 0.2824 (0.3397)  loss_box_reg: 0.1248 (0.1445)  loss_mask: 0.2919 (0.3465)  loss_objectness: 0.0487 (0.0735)  loss_rpn_box_reg: 0.0570 (0.0695)  time: 0.6198 (0.7499)  data: 0.0003 (0.0226)  lr: 0.160000  max mem: 14752
INFO:maskrcnn_benchmark.trainer:eta: 3:06:13  iter: 3100  loss: 0.8173 (0.9766)  loss_classifier: 0.2670 (0.3403)  loss_box_reg: 0.1228 (0.1449)  loss_mask: 0.2925 (0.3474)  loss_objectness: 0.0487 (0.0745)  loss_rpn_box_reg: 0.0606 (0.0695)  time: 0.6199 (0.7499)  data: 0.0003 (0.0226)  lr: 0.160000  max mem: 14573
INFO:maskrcnn_benchmark.trainer:eta: 3:06:12  iter: 3100  loss: 0.7150 (0.9732)  loss_classifier: 0.2472 (0.3386)  loss_box_reg: 0.1108 (0.1448)  loss_mask: 0.2823 (0.3472)  loss_objectness: 0.0421 (0.0739)  loss_rpn_box_reg: 0.0513 (0.0686)  time: 0.6196 (0.7499)  data: 0.0003 (0.0226)  lr: 0.160000  max mem: 14639
2021-10-16 12:17:15,297 maskrcnn_benchmark.trainer INFO: eta: 3:06:12  iter: 3100  loss: 0.7392 (0.9781)  loss_classifier: 0.2501 (0.3413)  loss_box_reg: 0.1159 (0.1453)  loss_mask: 0.2967 (0.3468)  loss_objectness: 0.0450 (0.0747)  loss_rpn_box_reg: 0.0518 (0.0699)  time: 0.6197 (0.7498)  data: 0.0003 (0.0228)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 3:06:13  iter: 3100  loss: 0.8248 (0.9775)  loss_classifier: 0.2790 (0.3406)  loss_box_reg: 0.1334 (0.1449)  loss_mask: 0.2940 (0.3477)  loss_objectness: 0.0496 (0.0745)  loss_rpn_box_reg: 0.0491 (0.0698)  time: 0.6197 (0.7499)  data: 0.0003 (0.0226)  lr: 0.160000  max mem: 14650
INFO:maskrcnn_benchmark.trainer:eta: 3:06:12  iter: 3100  loss: 0.7392 (0.9781)  loss_classifier: 0.2501 (0.3413)  loss_box_reg: 0.1159 (0.1453)  loss_mask: 0.2967 (0.3468)  loss_objectness: 0.0450 (0.0747)  loss_rpn_box_reg: 0.0518 (0.0699)  time: 0.6197 (0.7498)  data: 0.0003 (0.0228)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634386635297, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.978105484650981, "loss_classifier": 0.34129394447851563, "loss_box_reg": 0.14533209725245533, "loss_mask": 0.3468355565734448, "loss_objectness": 0.07469858826348377, "loss_rpn_box_reg": 0.06994529848948361, "time": 0.7498499924905838, "data": 0.022779701294437533, "throughput": 170.7008085375254}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 3100}}
:::MLLOG {"namespace": "", "time_ms": 1634386635297, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 170.7008085375254, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 3:05:05  iter: 3150  loss: 0.7831 (0.9705)  loss_classifier: 0.2600 (0.3375)  loss_box_reg: 0.1223 (0.1446)  loss_mask: 0.2964 (0.3464)  loss_objectness: 0.0525 (0.0736)  loss_rpn_box_reg: 0.0579 (0.0685)  time: 0.6208 (0.7478)  data: 0.0004 (0.0222)  lr: 0.160000  max mem: 14639
INFO:maskrcnn_benchmark.trainer:eta: 3:05:05  iter: 3150  loss: 0.7390 (0.9746)  loss_classifier: 0.2284 (0.3393)  loss_box_reg: 0.1111 (0.1445)  loss_mask: 0.2910 (0.3469)  loss_objectness: 0.0382 (0.0741)  loss_rpn_box_reg: 0.0432 (0.0698)  time: 0.6207 (0.7479)  data: 0.0003 (0.0222)  lr: 0.160000  max mem: 14650
2021-10-16 12:17:46,435 maskrcnn_benchmark.trainer INFO: eta: 3:05:05  iter: 3150  loss: 0.7673 (0.9750)  loss_classifier: 0.2379 (0.3400)  loss_box_reg: 0.1095 (0.1449)  loss_mask: 0.2983 (0.3460)  loss_objectness: 0.0459 (0.0744)  loss_rpn_box_reg: 0.0545 (0.0697)  time: 0.6207 (0.7478)  data: 0.0003 (0.0224)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 3:05:05  iter: 3150  loss: 0.7673 (0.9750)  loss_classifier: 0.2379 (0.3400)  loss_box_reg: 0.1095 (0.1449)  loss_mask: 0.2983 (0.3460)  loss_objectness: 0.0459 (0.0744)  loss_rpn_box_reg: 0.0545 (0.0697)  time: 0.6207 (0.7478)  data: 0.0003 (0.0224)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634386666435, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.974980525629861, "loss_classifier": 0.34002514969498393, "loss_box_reg": 0.1449416142642232, "loss_mask": 0.3459550031641173, "loss_objectness": 0.07435866274294399, "loss_rpn_box_reg": 0.06970009610411666, "time": 0.7478325219381423, "data": 0.022425391636197528, "throughput": 171.16131786869207}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 3150}}
:::MLLOG {"namespace": "", "time_ms": 1634386666435, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 171.16131786869207, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 3:05:05  iter: 3150  loss: 0.8030 (0.9710)  loss_classifier: 0.2538 (0.3385)  loss_box_reg: 0.1128 (0.1441)  loss_mask: 0.3036 (0.3457)  loss_objectness: 0.0557 (0.0732)  loss_rpn_box_reg: 0.0513 (0.0693)  time: 0.6211 (0.7478)  data: 0.0003 (0.0223)  lr: 0.160000  max mem: 14752
INFO:maskrcnn_benchmark.trainer:eta: 3:05:05  iter: 3150  loss: 0.7302 (0.9735)  loss_classifier: 0.2479 (0.3391)  loss_box_reg: 0.1108 (0.1445)  loss_mask: 0.2977 (0.3465)  loss_objectness: 0.0456 (0.0741)  loss_rpn_box_reg: 0.0466 (0.0693)  time: 0.6210 (0.7479)  data: 0.0003 (0.0223)  lr: 0.160000  max mem: 14573
INFO:maskrcnn_benchmark.trainer:eta: 3:05:05  iter: 3150  loss: 0.7524 (0.9722)  loss_classifier: 0.2380 (0.3389)  loss_box_reg: 0.1143 (0.1444)  loss_mask: 0.2903 (0.3467)  loss_objectness: 0.0471 (0.0735)  loss_rpn_box_reg: 0.0499 (0.0686)  time: 0.6200 (0.7478)  data: 0.0003 (0.0222)  lr: 0.160000  max mem: 14558
INFO:maskrcnn_benchmark.trainer:eta: 3:05:05  iter: 3150  loss: 0.7507 (0.9749)  loss_classifier: 0.2356 (0.3394)  loss_box_reg: 0.1239 (0.1449)  loss_mask: 0.2779 (0.3465)  loss_objectness: 0.0538 (0.0748)  loss_rpn_box_reg: 0.0574 (0.0694)  time: 0.6201 (0.7478)  data: 0.0003 (0.0222)  lr: 0.160000  max mem: 14585
INFO:maskrcnn_benchmark.trainer:eta: 3:05:05  iter: 3150  loss: 0.7727 (0.9743)  loss_classifier: 0.2376 (0.3394)  loss_box_reg: 0.1200 (0.1452)  loss_mask: 0.2855 (0.3461)  loss_objectness: 0.0438 (0.0740)  loss_rpn_box_reg: 0.0543 (0.0697)  time: 0.6200 (0.7478)  data: 0.0004 (0.0222)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 3:03:59  iter: 3200  loss: 0.7847 (0.9693)  loss_classifier: 0.2690 (0.3377)  loss_box_reg: 0.1230 (0.1441)  loss_mask: 0.2893 (0.3458)  loss_objectness: 0.0416 (0.0732)  loss_rpn_box_reg: 0.0594 (0.0686)  time: 0.6236 (0.7459)  data: 0.0003 (0.0219)  lr: 0.160000  max mem: 14558
INFO:maskrcnn_benchmark.trainer:eta: 3:03:58  iter: 3200  loss: 0.7957 (0.9723)  loss_classifier: 0.2726 (0.3385)  loss_box_reg: 0.1323 (0.1447)  loss_mask: 0.2900 (0.3456)  loss_objectness: 0.0416 (0.0743)  loss_rpn_box_reg: 0.0502 (0.0692)  time: 0.6238 (0.7459)  data: 0.0003 (0.0219)  lr: 0.160000  max mem: 14585
INFO:maskrcnn_benchmark.trainer:eta: 3:03:58  iter: 3200  loss: 0.8321 (0.9719)  loss_classifier: 0.2860 (0.3385)  loss_box_reg: 0.1344 (0.1450)  loss_mask: 0.2954 (0.3452)  loss_objectness: 0.0492 (0.0737)  loss_rpn_box_reg: 0.0532 (0.0695)  time: 0.6237 (0.7459)  data: 0.0004 (0.0219)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 3:03:59  iter: 3200  loss: 0.8519 (0.9712)  loss_classifier: 0.2923 (0.3383)  loss_box_reg: 0.1443 (0.1443)  loss_mask: 0.2906 (0.3456)  loss_objectness: 0.0594 (0.0738)  loss_rpn_box_reg: 0.0612 (0.0692)  time: 0.6240 (0.7459)  data: 0.0004 (0.0219)  lr: 0.160000  max mem: 14573
INFO:maskrcnn_benchmark.trainer:eta: 3:03:59  iter: 3200  loss: 0.8263 (0.9691)  loss_classifier: 0.2800 (0.3378)  loss_box_reg: 0.1303 (0.1440)  loss_mask: 0.2979 (0.3450)  loss_objectness: 0.0476 (0.0730)  loss_rpn_box_reg: 0.0622 (0.0693)  time: 0.6241 (0.7459)  data: 0.0004 (0.0219)  lr: 0.160000  max mem: 14752
INFO:maskrcnn_benchmark.trainer:eta: 3:03:59  iter: 3200  loss: 0.8749 (0.9685)  loss_classifier: 0.2980 (0.3367)  loss_box_reg: 0.1442 (0.1444)  loss_mask: 0.3148 (0.3457)  loss_objectness: 0.0503 (0.0733)  loss_rpn_box_reg: 0.0614 (0.0684)  time: 0.6249 (0.7459)  data: 0.0004 (0.0219)  lr: 0.160000  max mem: 14639
INFO:maskrcnn_benchmark.trainer:eta: 3:03:59  iter: 3200  loss: 0.8156 (0.9720)  loss_classifier: 0.2869 (0.3383)  loss_box_reg: 0.1378 (0.1443)  loss_mask: 0.2869 (0.3460)  loss_objectness: 0.0447 (0.0737)  loss_rpn_box_reg: 0.0596 (0.0696)  time: 0.6252 (0.7459)  data: 0.0004 (0.0219)  lr: 0.160000  max mem: 14650
2021-10-16 12:18:17,575 maskrcnn_benchmark.trainer INFO: eta: 3:03:59  iter: 3200  loss: 0.8211 (0.9722)  loss_classifier: 0.2792 (0.3390)  loss_box_reg: 0.1281 (0.1446)  loss_mask: 0.2891 (0.3451)  loss_objectness: 0.0467 (0.0740)  loss_rpn_box_reg: 0.0576 (0.0695)  time: 0.6252 (0.7459)  data: 0.0003 (0.0221)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 3:03:59  iter: 3200  loss: 0.8211 (0.9722)  loss_classifier: 0.2792 (0.3390)  loss_box_reg: 0.1281 (0.1446)  loss_mask: 0.2891 (0.3451)  loss_objectness: 0.0467 (0.0740)  loss_rpn_box_reg: 0.0576 (0.0695)  time: 0.6252 (0.7459)  data: 0.0003 (0.0221)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634386697575, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.972224552873522, "loss_classifier": 0.33895237603923306, "loss_box_reg": 0.1446171684224828, "loss_mask": 0.3451196490880102, "loss_objectness": 0.07399889490392525, "loss_rpn_box_reg": 0.06953646467067301, "time": 0.7458790148049593, "data": 0.02208201967179775, "throughput": 171.60960083247664}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 3200}}
:::MLLOG {"namespace": "", "time_ms": 1634386697575, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 171.60960083247664, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 3:02:53  iter: 3250  loss: 0.7858 (0.9665)  loss_classifier: 0.2657 (0.3367)  loss_box_reg: 0.1215 (0.1438)  loss_mask: 0.3020 (0.3442)  loss_objectness: 0.0468 (0.0727)  loss_rpn_box_reg: 0.0479 (0.0691)  time: 0.6197 (0.7440)  data: 0.0003 (0.0216)  lr: 0.160000  max mem: 14752
INFO:maskrcnn_benchmark.trainer:eta: 3:02:53  iter: 3250  loss: 0.8281 (0.9682)  loss_classifier: 0.2805 (0.3370)  loss_box_reg: 0.1320 (0.1439)  loss_mask: 0.2878 (0.3448)  loss_objectness: 0.0547 (0.0735)  loss_rpn_box_reg: 0.0528 (0.0690)  time: 0.6197 (0.7440)  data: 0.0004 (0.0216)  lr: 0.160000  max mem: 14573
INFO:maskrcnn_benchmark.trainer:eta: 3:02:53  iter: 3250  loss: 0.7152 (0.9657)  loss_classifier: 0.2459 (0.3356)  loss_box_reg: 0.1121 (0.1441)  loss_mask: 0.2755 (0.3448)  loss_objectness: 0.0472 (0.0729)  loss_rpn_box_reg: 0.0484 (0.0683)  time: 0.6206 (0.7440)  data: 0.0003 (0.0216)  lr: 0.160000  max mem: 14639
INFO:maskrcnn_benchmark.trainer:eta: 3:02:53  iter: 3250  loss: 0.8273 (0.9696)  loss_classifier: 0.2710 (0.3373)  loss_box_reg: 0.1316 (0.1441)  loss_mask: 0.2918 (0.3453)  loss_objectness: 0.0583 (0.0734)  loss_rpn_box_reg: 0.0629 (0.0695)  time: 0.6206 (0.7440)  data: 0.0003 (0.0216)  lr: 0.160000  max mem: 14650
INFO:maskrcnn_benchmark.trainer:eta: 3:02:53  iter: 3250  loss: 0.8582 (0.9669)  loss_classifier: 0.2997 (0.3366)  loss_box_reg: 0.1298 (0.1438)  loss_mask: 0.2979 (0.3451)  loss_objectness: 0.0506 (0.0729)  loss_rpn_box_reg: 0.0686 (0.0685)  time: 0.6189 (0.7440)  data: 0.0003 (0.0216)  lr: 0.160000  max mem: 14558
INFO:maskrcnn_benchmark.trainer:eta: 3:02:53  iter: 3250  loss: 0.7884 (0.9701)  loss_classifier: 0.2746 (0.3376)  loss_box_reg: 0.1199 (0.1445)  loss_mask: 0.2926 (0.3449)  loss_objectness: 0.0490 (0.0741)  loss_rpn_box_reg: 0.0627 (0.0691)  time: 0.6194 (0.7440)  data: 0.0004 (0.0215)  lr: 0.160000  max mem: 14585
2021-10-16 12:18:48,638 maskrcnn_benchmark.trainer INFO: eta: 3:02:53  iter: 3250  loss: 0.8663 (0.9699)  loss_classifier: 0.2842 (0.3380)  loss_box_reg: 0.1364 (0.1444)  loss_mask: 0.2992 (0.3443)  loss_objectness: 0.0515 (0.0737)  loss_rpn_box_reg: 0.0600 (0.0695)  time: 0.6205 (0.7440)  data: 0.0003 (0.0217)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 3:02:53  iter: 3250  loss: 0.8187 (0.9692)  loss_classifier: 0.2786 (0.3374)  loss_box_reg: 0.1272 (0.1447)  loss_mask: 0.2978 (0.3444)  loss_objectness: 0.0450 (0.0733)  loss_rpn_box_reg: 0.0577 (0.0693)  time: 0.6193 (0.7439)  data: 0.0003 (0.0215)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 3:02:53  iter: 3250  loss: 0.8663 (0.9699)  loss_classifier: 0.2842 (0.3380)  loss_box_reg: 0.1364 (0.1444)  loss_mask: 0.2992 (0.3443)  loss_objectness: 0.0515 (0.0737)  loss_rpn_box_reg: 0.0600 (0.0695)  time: 0.6205 (0.7440)  data: 0.0003 (0.0217)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634386728639, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.9699026267161737, "loss_classifier": 0.3379679831381028, "loss_box_reg": 0.1444137897525126, "loss_mask": 0.3443451339143973, "loss_objectness": 0.07366872396377416, "loss_rpn_box_reg": 0.0695069962648245, "time": 0.7439619442866399, "data": 0.021748387556809644, "throughput": 172.05181122904733}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 3250}}
:::MLLOG {"namespace": "", "time_ms": 1634386728639, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 172.05181122904733, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
2021-10-16 12:19:19,702 maskrcnn_benchmark.trainer INFO: eta: 3:01:48  iter: 3300  loss: 0.7494 (0.9675)  loss_classifier: 0.2568 (0.3370)  loss_box_reg: 0.1256 (0.1442)  loss_mask: 0.2936 (0.3436)  loss_objectness: 0.0431 (0.0733)  loss_rpn_box_reg: 0.0551 (0.0694)  time: 0.6189 (0.7421)  data: 0.0003 (0.0214)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 3:01:49  iter: 3300  loss: 0.7751 (0.9671)  loss_classifier: 0.2750 (0.3362)  loss_box_reg: 0.1240 (0.1438)  loss_mask: 0.2830 (0.3445)  loss_objectness: 0.0468 (0.0731)  loss_rpn_box_reg: 0.0489 (0.0694)  time: 0.6189 (0.7421)  data: 0.0003 (0.0212)  lr: 0.160000  max mem: 14650
INFO:maskrcnn_benchmark.trainer:eta: 3:01:48  iter: 3300  loss: 0.7494 (0.9675)  loss_classifier: 0.2568 (0.3370)  loss_box_reg: 0.1256 (0.1442)  loss_mask: 0.2936 (0.3436)  loss_objectness: 0.0431 (0.0733)  loss_rpn_box_reg: 0.0551 (0.0694)  time: 0.6189 (0.7421)  data: 0.0003 (0.0214)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 3:01:49  iter: 3300  loss: 0.7772 (0.9631)  loss_classifier: 0.2557 (0.3346)  loss_box_reg: 0.1181 (0.1438)  loss_mask: 0.2918 (0.3441)  loss_objectness: 0.0462 (0.0726)  loss_rpn_box_reg: 0.0523 (0.0681)  time: 0.6190 (0.7421)  data: 0.0004 (0.0212)  lr: 0.160000  max mem: 14639
:::MLLOG {"namespace": "", "time_ms": 1634386759703, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.9674511502367077, "loss_classifier": 0.3369713239620129, "loss_box_reg": 0.14417077449115107, "loss_mask": 0.34357099694284526, "loss_objectness": 0.07332953255002697, "loss_rpn_box_reg": 0.06940852260668622, "time": 0.742103121136174, "data": 0.021425400430505927, "throughput": 172.48276735991834}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 3300}}
:::MLLOG {"namespace": "", "time_ms": 1634386759703, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 172.48276735991834, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 3:01:49  iter: 3300  loss: 0.8813 (0.9641)  loss_classifier: 0.2992 (0.3357)  loss_box_reg: 0.1387 (0.1435)  loss_mask: 0.2928 (0.3435)  loss_objectness: 0.0555 (0.0724)  loss_rpn_box_reg: 0.0603 (0.0690)  time: 0.6194 (0.7421)  data: 0.0004 (0.0213)  lr: 0.160000  max mem: 14752
INFO:maskrcnn_benchmark.trainer:eta: 3:01:49  iter: 3300  loss: 0.7830 (0.9658)  loss_classifier: 0.2503 (0.3360)  loss_box_reg: 0.1254 (0.1437)  loss_mask: 0.2817 (0.3440)  loss_objectness: 0.0471 (0.0732)  loss_rpn_box_reg: 0.0671 (0.0690)  time: 0.6190 (0.7421)  data: 0.0004 (0.0213)  lr: 0.160000  max mem: 14573
INFO:maskrcnn_benchmark.trainer:eta: 3:01:49  iter: 3300  loss: 0.8378 (0.9644)  loss_classifier: 0.2883 (0.3357)  loss_box_reg: 0.1293 (0.1435)  loss_mask: 0.2965 (0.3443)  loss_objectness: 0.0490 (0.0725)  loss_rpn_box_reg: 0.0505 (0.0684)  time: 0.6187 (0.7421)  data: 0.0003 (0.0213)  lr: 0.160000  max mem: 14558
INFO:maskrcnn_benchmark.trainer:eta: 3:01:48  iter: 3300  loss: 0.8174 (0.9666)  loss_classifier: 0.2691 (0.3364)  loss_box_reg: 0.1394 (0.1445)  loss_mask: 0.2961 (0.3437)  loss_objectness: 0.0560 (0.0730)  loss_rpn_box_reg: 0.0574 (0.0691)  time: 0.6188 (0.7421)  data: 0.0004 (0.0212)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 3:01:48  iter: 3300  loss: 0.7881 (0.9679)  loss_classifier: 0.2687 (0.3367)  loss_box_reg: 0.1228 (0.1443)  loss_mask: 0.2984 (0.3442)  loss_objectness: 0.0468 (0.0738)  loss_rpn_box_reg: 0.0538 (0.0690)  time: 0.6189 (0.7421)  data: 0.0004 (0.0212)  lr: 0.160000  max mem: 14585
INFO:maskrcnn_benchmark.trainer:eta: 3:00:45  iter: 3350  loss: 0.8070 (0.9612)  loss_classifier: 0.2741 (0.3338)  loss_box_reg: 0.1282 (0.1436)  loss_mask: 0.3034 (0.3433)  loss_objectness: 0.0510 (0.0723)  loss_rpn_box_reg: 0.0578 (0.0681)  time: 0.6199 (0.7403)  data: 0.0004 (0.0209)  lr: 0.160000  max mem: 14639
INFO:maskrcnn_benchmark.trainer:eta: 3:00:45  iter: 3350  loss: 0.7678 (0.9643)  loss_classifier: 0.2478 (0.3351)  loss_box_reg: 0.1191 (0.1434)  loss_mask: 0.2837 (0.3438)  loss_objectness: 0.0476 (0.0728)  loss_rpn_box_reg: 0.0613 (0.0692)  time: 0.6201 (0.7403)  data: 0.0003 (0.0209)  lr: 0.160000  max mem: 14650
2021-10-16 12:19:50,826 maskrcnn_benchmark.trainer INFO: eta: 3:00:45  iter: 3350  loss: 0.7165 (0.9645)  loss_classifier: 0.2338 (0.3357)  loss_box_reg: 0.1049 (0.1437)  loss_mask: 0.2935 (0.3428)  loss_objectness: 0.0490 (0.0730)  loss_rpn_box_reg: 0.0496 (0.0693)  time: 0.6200 (0.7403)  data: 0.0003 (0.0211)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 3:00:45  iter: 3350  loss: 0.7165 (0.9645)  loss_classifier: 0.2338 (0.3357)  loss_box_reg: 0.1049 (0.1437)  loss_mask: 0.2935 (0.3428)  loss_objectness: 0.0490 (0.0730)  loss_rpn_box_reg: 0.0496 (0.0693)  time: 0.6200 (0.7403)  data: 0.0003 (0.0211)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634386790826, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.9645336131729296, "loss_classifier": 0.33571942212643907, "loss_box_reg": 0.1437438003106543, "loss_mask": 0.34279318354467847, "loss_objectness": 0.07298533013229494, "loss_rpn_box_reg": 0.06929187735681658, "time": 0.7403175024488079, "data": 0.02111351838752405, "throughput": 172.89878947425134}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 3350}}
:::MLLOG {"namespace": "", "time_ms": 1634386790826, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 172.89878947425134, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 3:00:45  iter: 3350  loss: 0.7747 (0.9630)  loss_classifier: 0.2481 (0.3348)  loss_box_reg: 0.1219 (0.1433)  loss_mask: 0.2854 (0.3432)  loss_objectness: 0.0460 (0.0728)  loss_rpn_box_reg: 0.0587 (0.0689)  time: 0.6188 (0.7403)  data: 0.0003 (0.0210)  lr: 0.160000  max mem: 14573
INFO:maskrcnn_benchmark.trainer:eta: 3:00:45  iter: 3350  loss: 0.7697 (0.9615)  loss_classifier: 0.2572 (0.3347)  loss_box_reg: 0.1213 (0.1432)  loss_mask: 0.2944 (0.3427)  loss_objectness: 0.0480 (0.0721)  loss_rpn_box_reg: 0.0484 (0.0688)  time: 0.6184 (0.7403)  data: 0.0004 (0.0210)  lr: 0.160000  max mem: 14752
INFO:maskrcnn_benchmark.trainer:eta: 3:00:45  iter: 3350  loss: 0.8088 (0.9641)  loss_classifier: 0.2489 (0.3353)  loss_box_reg: 0.1223 (0.1442)  loss_mask: 0.2969 (0.3430)  loss_objectness: 0.0510 (0.0727)  loss_rpn_box_reg: 0.0589 (0.0690)  time: 0.6184 (0.7403)  data: 0.0003 (0.0209)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 3:00:45  iter: 3350  loss: 0.7900 (0.9618)  loss_classifier: 0.2469 (0.3346)  loss_box_reg: 0.1250 (0.1432)  loss_mask: 0.2880 (0.3434)  loss_objectness: 0.0455 (0.0723)  loss_rpn_box_reg: 0.0576 (0.0683)  time: 0.6181 (0.7403)  data: 0.0003 (0.0209)  lr: 0.160000  max mem: 14558
INFO:maskrcnn_benchmark.trainer:eta: 3:00:45  iter: 3350  loss: 0.7943 (0.9657)  loss_classifier: 0.2514 (0.3357)  loss_box_reg: 0.1243 (0.1440)  loss_mask: 0.2950 (0.3434)  loss_objectness: 0.0463 (0.0736)  loss_rpn_box_reg: 0.0559 (0.0690)  time: 0.6185 (0.7403)  data: 0.0003 (0.0209)  lr: 0.160000  max mem: 14585
INFO:maskrcnn_benchmark.trainer:eta: 2:59:43  iter: 3400  loss: 0.7531 (0.9591)  loss_classifier: 0.2498 (0.3336)  loss_box_reg: 0.1276 (0.1429)  loss_mask: 0.2925 (0.3420)  loss_objectness: 0.0559 (0.0719)  loss_rpn_box_reg: 0.0574 (0.0686)  time: 0.6188 (0.7386)  data: 0.0003 (0.0207)  lr: 0.160000  max mem: 14752
INFO:maskrcnn_benchmark.trainer:eta: 2:59:43  iter: 3400  loss: 0.7566 (0.9605)  loss_classifier: 0.2529 (0.3337)  loss_box_reg: 0.1154 (0.1431)  loss_mask: 0.2864 (0.3424)  loss_objectness: 0.0516 (0.0726)  loss_rpn_box_reg: 0.0503 (0.0688)  time: 0.6188 (0.7386)  data: 0.0003 (0.0207)  lr: 0.160000  max mem: 14573
INFO:maskrcnn_benchmark.trainer:eta: 2:59:43  iter: 3400  loss: 0.7605 (0.9591)  loss_classifier: 0.2571 (0.3328)  loss_box_reg: 0.1169 (0.1434)  loss_mask: 0.2982 (0.3427)  loss_objectness: 0.0525 (0.0721)  loss_rpn_box_reg: 0.0481 (0.0681)  time: 0.6181 (0.7386)  data: 0.0003 (0.0206)  lr: 0.160000  max mem: 14639
2021-10-16 12:20:21,877 maskrcnn_benchmark.trainer INFO: eta: 2:59:43  iter: 3400  loss: 0.7889 (0.9621)  loss_classifier: 0.2595 (0.3347)  loss_box_reg: 0.1235 (0.1434)  loss_mask: 0.2898 (0.3421)  loss_objectness: 0.0487 (0.0727)  loss_rpn_box_reg: 0.0612 (0.0692)  time: 0.6181 (0.7386)  data: 0.0003 (0.0208)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:59:43  iter: 3400  loss: 0.7989 (0.9621)  loss_classifier: 0.2561 (0.3341)  loss_box_reg: 0.1231 (0.1432)  loss_mask: 0.2958 (0.3430)  loss_objectness: 0.0431 (0.0725)  loss_rpn_box_reg: 0.0533 (0.0692)  time: 0.6181 (0.7386)  data: 0.0004 (0.0206)  lr: 0.160000  max mem: 14650
INFO:maskrcnn_benchmark.trainer:eta: 2:59:43  iter: 3400  loss: 0.7889 (0.9621)  loss_classifier: 0.2595 (0.3347)  loss_box_reg: 0.1235 (0.1434)  loss_mask: 0.2898 (0.3421)  loss_objectness: 0.0487 (0.0727)  loss_rpn_box_reg: 0.0612 (0.0692)  time: 0.6181 (0.7386)  data: 0.0003 (0.0208)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:59:43  iter: 3400  loss: 0.8000 (0.9592)  loss_classifier: 0.2643 (0.3335)  loss_box_reg: 0.1218 (0.1429)  loss_mask: 0.2948 (0.3427)  loss_objectness: 0.0437 (0.0719)  loss_rpn_box_reg: 0.0559 (0.0681)  time: 0.6203 (0.7386)  data: 0.0004 (0.0206)  lr: 0.160000  max mem: 14558
:::MLLOG {"namespace": "", "time_ms": 1634386821877, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.9621177092194557, "loss_classifier": 0.33467951622298536, "loss_box_reg": 0.14344097688020316, "loss_mask": 0.34207742789650664, "loss_objectness": 0.0727070427417536, "loss_rpn_box_reg": 0.0692127457463785, "time": 0.7385630747851204, "data": 0.02080942055758308, "throughput": 173.30950377832073}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 3400}}
:::MLLOG {"namespace": "", "time_ms": 1634386821877, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 173.30950377832073, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:59:42  iter: 3400  loss: 0.7484 (0.9630)  loss_classifier: 0.2415 (0.3346)  loss_box_reg: 0.1062 (0.1437)  loss_mask: 0.2950 (0.3426)  loss_objectness: 0.0563 (0.0733)  loss_rpn_box_reg: 0.0497 (0.0688)  time: 0.6204 (0.7386)  data: 0.0003 (0.0206)  lr: 0.160000  max mem: 14585
INFO:maskrcnn_benchmark.trainer:eta: 2:59:42  iter: 3400  loss: 0.7583 (0.9617)  loss_classifier: 0.2556 (0.3343)  loss_box_reg: 0.1172 (0.1439)  loss_mask: 0.3047 (0.3423)  loss_objectness: 0.0467 (0.0723)  loss_rpn_box_reg: 0.0567 (0.0688)  time: 0.6203 (0.7386)  data: 0.0003 (0.0206)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 2:58:41  iter: 3450  loss: 0.8399 (0.9595)  loss_classifier: 0.2708 (0.3333)  loss_box_reg: 0.1210 (0.1436)  loss_mask: 0.2981 (0.3416)  loss_objectness: 0.0568 (0.0721)  loss_rpn_box_reg: 0.0659 (0.0688)  time: 0.6192 (0.7369)  data: 0.0004 (0.0203)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 2:58:41  iter: 3450  loss: 0.7521 (0.9564)  loss_classifier: 0.2296 (0.3323)  loss_box_reg: 0.1043 (0.1425)  loss_mask: 0.2809 (0.3419)  loss_objectness: 0.0426 (0.0716)  loss_rpn_box_reg: 0.0629 (0.0680)  time: 0.6193 (0.7369)  data: 0.0003 (0.0204)  lr: 0.160000  max mem: 14558
INFO:maskrcnn_benchmark.trainer:eta: 2:58:41  iter: 3450  loss: 0.8197 (0.9609)  loss_classifier: 0.2759 (0.3337)  loss_box_reg: 0.1304 (0.1434)  loss_mask: 0.2964 (0.3420)  loss_objectness: 0.0514 (0.0731)  loss_rpn_box_reg: 0.0673 (0.0688)  time: 0.6192 (0.7369)  data: 0.0004 (0.0203)  lr: 0.160000  max mem: 14585
INFO:maskrcnn_benchmark.trainer:eta: 2:58:41  iter: 3450  loss: 0.7265 (0.9562)  loss_classifier: 0.2447 (0.3324)  loss_box_reg: 0.1212 (0.1426)  loss_mask: 0.2948 (0.3412)  loss_objectness: 0.0438 (0.0715)  loss_rpn_box_reg: 0.0483 (0.0685)  time: 0.6197 (0.7369)  data: 0.0003 (0.0204)  lr: 0.160000  max mem: 14752
INFO:maskrcnn_benchmark.trainer:eta: 2:58:41  iter: 3450  loss: 0.7093 (0.9578)  loss_classifier: 0.2325 (0.3325)  loss_box_reg: 0.1093 (0.1427)  loss_mask: 0.2761 (0.3416)  loss_objectness: 0.0457 (0.0723)  loss_rpn_box_reg: 0.0565 (0.0687)  time: 0.6202 (0.7369)  data: 0.0003 (0.0204)  lr: 0.160000  max mem: 14573
INFO:maskrcnn_benchmark.trainer:eta: 2:58:41  iter: 3450  loss: 0.8237 (0.9563)  loss_classifier: 0.2555 (0.3317)  loss_box_reg: 0.1234 (0.1431)  loss_mask: 0.2864 (0.3419)  loss_objectness: 0.0423 (0.0717)  loss_rpn_box_reg: 0.0533 (0.0680)  time: 0.6203 (0.7369)  data: 0.0003 (0.0203)  lr: 0.160000  max mem: 14639
INFO:maskrcnn_benchmark.trainer:eta: 2:58:41  iter: 3450  loss: 0.8133 (0.9596)  loss_classifier: 0.2531 (0.3331)  loss_box_reg: 0.1158 (0.1429)  loss_mask: 0.2926 (0.3423)  loss_objectness: 0.0540 (0.0723)  loss_rpn_box_reg: 0.0546 (0.0691)  time: 0.6203 (0.7369)  data: 0.0003 (0.0203)  lr: 0.160000  max mem: 14650
2021-10-16 12:20:52,993 maskrcnn_benchmark.trainer INFO: eta: 2:58:41  iter: 3450  loss: 0.7806 (0.9595)  loss_classifier: 0.2516 (0.3335)  loss_box_reg: 0.1157 (0.1431)  loss_mask: 0.2981 (0.3414)  loss_objectness: 0.0506 (0.0724)  loss_rpn_box_reg: 0.0539 (0.0691)  time: 0.6202 (0.7369)  data: 0.0003 (0.0205)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:58:41  iter: 3450  loss: 0.7806 (0.9595)  loss_classifier: 0.2516 (0.3335)  loss_box_reg: 0.1157 (0.1431)  loss_mask: 0.2981 (0.3414)  loss_objectness: 0.0506 (0.0724)  loss_rpn_box_reg: 0.0539 (0.0691)  time: 0.6202 (0.7369)  data: 0.0003 (0.0205)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634386852993, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.9595469920963481, "loss_classifier": 0.33351733695985614, "loss_box_reg": 0.14311590574243094, "loss_mask": 0.3414014056800068, "loss_objectness": 0.0724146738556632, "loss_rpn_box_reg": 0.06909767018550116, "time": 0.7368784107678178, "data": 0.02051341754802759, "throughput": 173.7057269280364}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 3450}}
:::MLLOG {"namespace": "", "time_ms": 1634386852993, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 173.7057269280364, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:57:41  iter: 3500  loss: 0.7535 (0.9574)  loss_classifier: 0.2561 (0.3322)  loss_box_reg: 0.1138 (0.1426)  loss_mask: 0.2874 (0.3415)  loss_objectness: 0.0533 (0.0721)  loss_rpn_box_reg: 0.0587 (0.0690)  time: 0.6230 (0.7353)  data: 0.0004 (0.0201)  lr: 0.160000  max mem: 14650
2021-10-16 12:21:24,179 maskrcnn_benchmark.trainer INFO: eta: 2:57:41  iter: 3500  loss: 0.7504 (0.9572)  loss_classifier: 0.2444 (0.3326)  loss_box_reg: 0.1216 (0.1428)  loss_mask: 0.2901 (0.3407)  loss_objectness: 0.0483 (0.0722)  loss_rpn_box_reg: 0.0563 (0.0690)  time: 0.6230 (0.7353)  data: 0.0003 (0.0202)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:57:41  iter: 3500  loss: 0.8356 (0.9545)  loss_classifier: 0.2787 (0.3310)  loss_box_reg: 0.1384 (0.1430)  loss_mask: 0.2980 (0.3412)  loss_objectness: 0.0430 (0.0714)  loss_rpn_box_reg: 0.0541 (0.0679)  time: 0.6229 (0.7353)  data: 0.0004 (0.0201)  lr: 0.160000  max mem: 14639
INFO:maskrcnn_benchmark.trainer:eta: 2:57:41  iter: 3500  loss: 0.7504 (0.9572)  loss_classifier: 0.2444 (0.3326)  loss_box_reg: 0.1216 (0.1428)  loss_mask: 0.2901 (0.3407)  loss_objectness: 0.0483 (0.0722)  loss_rpn_box_reg: 0.0563 (0.0690)  time: 0.6230 (0.7353)  data: 0.0003 (0.0202)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634386884179, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.9572259380221367, "loss_classifier": 0.33255318006660256, "loss_box_reg": 0.14284195788623766, "loss_mask": 0.3406987140859876, "loss_objectness": 0.07216018551800932, "loss_rpn_box_reg": 0.06897190081274936, "time": 0.7352619825771877, "data": 0.02022727755137852, "throughput": 174.0876082717395}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 3500}}
:::MLLOG {"namespace": "", "time_ms": 1634386884180, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 174.0876082717395, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:57:41  iter: 3500  loss: 0.7519 (0.9533)  loss_classifier: 0.2457 (0.3313)  loss_box_reg: 0.1127 (0.1422)  loss_mask: 0.2842 (0.3403)  loss_objectness: 0.0441 (0.0712)  loss_rpn_box_reg: 0.0492 (0.0683)  time: 0.6249 (0.7353)  data: 0.0003 (0.0201)  lr: 0.160000  max mem: 14752
INFO:maskrcnn_benchmark.trainer:eta: 2:57:41  iter: 3500  loss: 0.8047 (0.9553)  loss_classifier: 0.2624 (0.3315)  loss_box_reg: 0.1240 (0.1424)  loss_mask: 0.2901 (0.3408)  loss_objectness: 0.0530 (0.0720)  loss_rpn_box_reg: 0.0712 (0.0686)  time: 0.6243 (0.7353)  data: 0.0003 (0.0201)  lr: 0.160000  max mem: 14573
INFO:maskrcnn_benchmark.trainer:eta: 2:57:41  iter: 3500  loss: 0.7975 (0.9541)  loss_classifier: 0.2722 (0.3315)  loss_box_reg: 0.1254 (0.1423)  loss_mask: 0.2856 (0.3411)  loss_objectness: 0.0438 (0.0713)  loss_rpn_box_reg: 0.0500 (0.0679)  time: 0.6259 (0.7353)  data: 0.0004 (0.0201)  lr: 0.160000  max mem: 14558
INFO:maskrcnn_benchmark.trainer:eta: 2:57:41  iter: 3500  loss: 0.8389 (0.9591)  loss_classifier: 0.2756 (0.3330)  loss_box_reg: 0.1322 (0.1432)  loss_mask: 0.2934 (0.3413)  loss_objectness: 0.0506 (0.0728)  loss_rpn_box_reg: 0.0562 (0.0687)  time: 0.6257 (0.7353)  data: 0.0004 (0.0200)  lr: 0.160000  max mem: 14585
INFO:maskrcnn_benchmark.trainer:eta: 2:57:41  iter: 3500  loss: 0.7935 (0.9572)  loss_classifier: 0.2693 (0.3324)  loss_box_reg: 0.1231 (0.1434)  loss_mask: 0.3058 (0.3410)  loss_objectness: 0.0431 (0.0718)  loss_rpn_box_reg: 0.0541 (0.0687)  time: 0.6257 (0.7352)  data: 0.0003 (0.0200)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 2:56:42  iter: 3550  loss: 0.7852 (0.9530)  loss_classifier: 0.2734 (0.3306)  loss_box_reg: 0.1255 (0.1421)  loss_mask: 0.2824 (0.3401)  loss_objectness: 0.0449 (0.0718)  loss_rpn_box_reg: 0.0505 (0.0685)  time: 0.6247 (0.7337)  data: 0.0003 (0.0198)  lr: 0.160000  max mem: 14573
INFO:maskrcnn_benchmark.trainer:eta: 2:56:42  iter: 3550  loss: 0.7962 (0.9510)  loss_classifier: 0.2418 (0.3304)  loss_box_reg: 0.1191 (0.1420)  loss_mask: 0.2924 (0.3396)  loss_objectness: 0.0433 (0.0709)  loss_rpn_box_reg: 0.0512 (0.0682)  time: 0.6248 (0.7337)  data: 0.0003 (0.0198)  lr: 0.160000  max mem: 14752
INFO:maskrcnn_benchmark.trainer:eta: 2:56:42  iter: 3550  loss: 0.8210 (0.9528)  loss_classifier: 0.2876 (0.3303)  loss_box_reg: 0.1257 (0.1428)  loss_mask: 0.2901 (0.3406)  loss_objectness: 0.0502 (0.0712)  loss_rpn_box_reg: 0.0613 (0.0679)  time: 0.6247 (0.7337)  data: 0.0003 (0.0198)  lr: 0.160000  max mem: 14639
2021-10-16 12:21:55,385 maskrcnn_benchmark.trainer INFO: eta: 2:56:41  iter: 3550  loss: 0.8857 (0.9551)  loss_classifier: 0.3062 (0.3317)  loss_box_reg: 0.1467 (0.1426)  loss_mask: 0.2977 (0.3400)  loss_objectness: 0.0549 (0.0719)  loss_rpn_box_reg: 0.0659 (0.0689)  time: 0.6247 (0.7337)  data: 0.0004 (0.0199)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:56:41  iter: 3550  loss: 0.8857 (0.9551)  loss_classifier: 0.3062 (0.3317)  loss_box_reg: 0.1467 (0.1426)  loss_mask: 0.2977 (0.3400)  loss_objectness: 0.0549 (0.0719)  loss_rpn_box_reg: 0.0659 (0.0689)  time: 0.6247 (0.7337)  data: 0.0004 (0.0199)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:56:42  iter: 3550  loss: 0.7665 (0.9517)  loss_classifier: 0.2597 (0.3304)  loss_box_reg: 0.1197 (0.1420)  loss_mask: 0.2910 (0.3404)  loss_objectness: 0.0404 (0.0710)  loss_rpn_box_reg: 0.0594 (0.0679)  time: 0.6241 (0.7337)  data: 0.0003 (0.0198)  lr: 0.160000  max mem: 14558
INFO:maskrcnn_benchmark.trainer:eta: 2:56:41  iter: 3550  loss: 0.7961 (0.9566)  loss_classifier: 0.2650 (0.3320)  loss_box_reg: 0.1277 (0.1430)  loss_mask: 0.2862 (0.3406)  loss_objectness: 0.0525 (0.0725)  loss_rpn_box_reg: 0.0557 (0.0685)  time: 0.6244 (0.7337)  data: 0.0003 (0.0198)  lr: 0.160000  max mem: 14585
INFO:maskrcnn_benchmark.trainer:eta: 2:56:42  iter: 3550  loss: 0.7816 (0.9550)  loss_classifier: 0.2770 (0.3313)  loss_box_reg: 0.1251 (0.1424)  loss_mask: 0.2809 (0.3408)  loss_objectness: 0.0519 (0.0718)  loss_rpn_box_reg: 0.0569 (0.0688)  time: 0.6247 (0.7337)  data: 0.0004 (0.0198)  lr: 0.160000  max mem: 14650
INFO:maskrcnn_benchmark.trainer:eta: 2:56:41  iter: 3550  loss: 0.7673 (0.9549)  loss_classifier: 0.2469 (0.3315)  loss_box_reg: 0.1087 (0.1431)  loss_mask: 0.2782 (0.3403)  loss_objectness: 0.0466 (0.0715)  loss_rpn_box_reg: 0.0501 (0.0686)  time: 0.6242 (0.7337)  data: 0.0003 (0.0198)  lr: 0.160000  max mem: 14683
:::MLLOG {"namespace": "", "time_ms": 1634386915385, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.9551250381956637, "loss_classifier": 0.3316953164444003, "loss_box_reg": 0.14263441668423285, "loss_mask": 0.3400430007677683, "loss_objectness": 0.07188764423341819, "loss_rpn_box_reg": 0.06886466038216588, "time": 0.7336964422548321, "data": 0.019948843902265524, "throughput": 174.45907139282846}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 3550}}
:::MLLOG {"namespace": "", "time_ms": 1634386915385, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 174.45907139282846, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:55:43  iter: 3600  loss: 0.7221 (0.9525)  loss_classifier: 0.2367 (0.3303)  loss_box_reg: 0.1131 (0.1421)  loss_mask: 0.2818 (0.3400)  loss_objectness: 0.0371 (0.0715)  loss_rpn_box_reg: 0.0514 (0.0687)  time: 0.6258 (0.7322)  data: 0.0003 (0.0195)  lr: 0.160000  max mem: 14650
2021-10-16 12:22:26,539 maskrcnn_benchmark.trainer INFO: eta: 2:55:43  iter: 3600  loss: 0.7317 (0.9531)  loss_classifier: 0.2215 (0.3308)  loss_box_reg: 0.1057 (0.1424)  loss_mask: 0.2786 (0.3394)  loss_objectness: 0.0493 (0.0717)  loss_rpn_box_reg: 0.0482 (0.0688)  time: 0.6255 (0.7322)  data: 0.0003 (0.0197)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:55:43  iter: 3600  loss: 0.8411 (0.9510)  loss_classifier: 0.2884 (0.3296)  loss_box_reg: 0.1270 (0.1426)  loss_mask: 0.2884 (0.3400)  loss_objectness: 0.0585 (0.0711)  loss_rpn_box_reg: 0.0609 (0.0678)  time: 0.6260 (0.7322)  data: 0.0004 (0.0195)  lr: 0.160000  max mem: 14639
INFO:maskrcnn_benchmark.trainer:eta: 2:55:43  iter: 3600  loss: 0.7317 (0.9531)  loss_classifier: 0.2215 (0.3308)  loss_box_reg: 0.1057 (0.1424)  loss_mask: 0.2786 (0.3394)  loss_objectness: 0.0493 (0.0717)  loss_rpn_box_reg: 0.0482 (0.0688)  time: 0.6255 (0.7322)  data: 0.0003 (0.0197)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634386946539, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.9530826614879899, "loss_classifier": 0.3308079577465024, "loss_box_reg": 0.14239693234564685, "loss_mask": 0.3394116835296154, "loss_objectness": 0.0716758172126073, "loss_rpn_box_reg": 0.06879027093243267, "time": 0.7321602841880587, "data": 0.019678183529112075, "throughput": 174.82510696677264}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 3600}}
:::MLLOG {"namespace": "", "time_ms": 1634386946540, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 174.82510696677264, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:55:43  iter: 3600  loss: 0.8007 (0.9490)  loss_classifier: 0.2699 (0.3295)  loss_box_reg: 0.1260 (0.1418)  loss_mask: 0.2903 (0.3389)  loss_objectness: 0.0528 (0.0707)  loss_rpn_box_reg: 0.0540 (0.0681)  time: 0.6262 (0.7322)  data: 0.0003 (0.0196)  lr: 0.160000  max mem: 14752
INFO:maskrcnn_benchmark.trainer:eta: 2:55:43  iter: 3600  loss: 0.7768 (0.9505)  loss_classifier: 0.2518 (0.3296)  loss_box_reg: 0.1159 (0.1417)  loss_mask: 0.2882 (0.3394)  loss_objectness: 0.0545 (0.0715)  loss_rpn_box_reg: 0.0547 (0.0683)  time: 0.6262 (0.7322)  data: 0.0003 (0.0196)  lr: 0.160000  max mem: 14573
INFO:maskrcnn_benchmark.trainer:eta: 2:55:43  iter: 3600  loss: 0.8107 (0.9495)  loss_classifier: 0.2795 (0.3296)  loss_box_reg: 0.1146 (0.1417)  loss_mask: 0.2967 (0.3397)  loss_objectness: 0.0481 (0.0707)  loss_rpn_box_reg: 0.0567 (0.0678)  time: 0.6263 (0.7322)  data: 0.0003 (0.0195)  lr: 0.160000  max mem: 14558
INFO:maskrcnn_benchmark.trainer:eta: 2:55:43  iter: 3600  loss: 0.8329 (0.9545)  loss_classifier: 0.2769 (0.3311)  loss_box_reg: 0.1341 (0.1427)  loss_mask: 0.2959 (0.3400)  loss_objectness: 0.0533 (0.0723)  loss_rpn_box_reg: 0.0642 (0.0684)  time: 0.6262 (0.7322)  data: 0.0004 (0.0195)  lr: 0.160000  max mem: 14585
INFO:maskrcnn_benchmark.trainer:eta: 2:55:42  iter: 3600  loss: 0.8230 (0.9529)  loss_classifier: 0.2785 (0.3307)  loss_box_reg: 0.1227 (0.1429)  loss_mask: 0.2913 (0.3396)  loss_objectness: 0.0479 (0.0713)  loss_rpn_box_reg: 0.0559 (0.0685)  time: 0.6263 (0.7321)  data: 0.0003 (0.0195)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 2:54:44  iter: 3650  loss: 0.7360 (0.9489)  loss_classifier: 0.2423 (0.3287)  loss_box_reg: 0.1192 (0.1424)  loss_mask: 0.2860 (0.3393)  loss_objectness: 0.0456 (0.0708)  loss_rpn_box_reg: 0.0460 (0.0677)  time: 0.6188 (0.7307)  data: 0.0003 (0.0193)  lr: 0.160000  max mem: 14639
2021-10-16 12:22:57,615 maskrcnn_benchmark.trainer INFO: eta: 2:54:44  iter: 3650  loss: 0.8274 (0.9508)  loss_classifier: 0.2880 (0.3300)  loss_box_reg: 0.1281 (0.1421)  loss_mask: 0.2963 (0.3387)  loss_objectness: 0.0522 (0.0714)  loss_rpn_box_reg: 0.0604 (0.0687)  time: 0.6185 (0.7306)  data: 0.0003 (0.0194)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:54:44  iter: 3650  loss: 0.7404 (0.9504)  loss_classifier: 0.2461 (0.3294)  loss_box_reg: 0.1226 (0.1418)  loss_mask: 0.2933 (0.3395)  loss_objectness: 0.0393 (0.0712)  loss_rpn_box_reg: 0.0471 (0.0685)  time: 0.6186 (0.7307)  data: 0.0003 (0.0192)  lr: 0.160000  max mem: 14650
INFO:maskrcnn_benchmark.trainer:eta: 2:54:44  iter: 3650  loss: 0.8274 (0.9508)  loss_classifier: 0.2880 (0.3300)  loss_box_reg: 0.1281 (0.1421)  loss_mask: 0.2963 (0.3387)  loss_objectness: 0.0522 (0.0714)  loss_rpn_box_reg: 0.0604 (0.0687)  time: 0.6185 (0.7306)  data: 0.0003 (0.0194)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:54:44  iter: 3650  loss: 0.8187 (0.9490)  loss_classifier: 0.2841 (0.3289)  loss_box_reg: 0.1306 (0.1416)  loss_mask: 0.2999 (0.3388)  loss_objectness: 0.0601 (0.0713)  loss_rpn_box_reg: 0.0557 (0.0683)  time: 0.6189 (0.7307)  data: 0.0004 (0.0193)  lr: 0.160000  max mem: 14573
:::MLLOG {"namespace": "", "time_ms": 1634386977615, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.9508474912627103, "loss_classifier": 0.3299664715851006, "loss_box_reg": 0.14213880885130892, "loss_mask": 0.3387098631956806, "loss_objectness": 0.0713517448989904, "loss_rpn_box_reg": 0.06868060310766713, "time": 0.7306446471279615, "data": 0.01941503015283036, "throughput": 175.18776125048748}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 3650}}
:::MLLOG {"namespace": "", "time_ms": 1634386977616, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 175.18776125048748, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:54:44  iter: 3650  loss: 0.7811 (0.9470)  loss_classifier: 0.2602 (0.3287)  loss_box_reg: 0.1316 (0.1415)  loss_mask: 0.2970 (0.3383)  loss_objectness: 0.0420 (0.0705)  loss_rpn_box_reg: 0.0447 (0.0680)  time: 0.6182 (0.7307)  data: 0.0003 (0.0193)  lr: 0.160000  max mem: 14752
INFO:maskrcnn_benchmark.trainer:eta: 2:54:44  iter: 3650  loss: 0.7458 (0.9475)  loss_classifier: 0.2627 (0.3288)  loss_box_reg: 0.1195 (0.1414)  loss_mask: 0.2881 (0.3390)  loss_objectness: 0.0566 (0.0706)  loss_rpn_box_reg: 0.0535 (0.0677)  time: 0.6175 (0.7307)  data: 0.0004 (0.0193)  lr: 0.160000  max mem: 14558
INFO:maskrcnn_benchmark.trainer:eta: 2:54:44  iter: 3650  loss: 0.8039 (0.9524)  loss_classifier: 0.2673 (0.3303)  loss_box_reg: 0.1213 (0.1425)  loss_mask: 0.2873 (0.3393)  loss_objectness: 0.0617 (0.0721)  loss_rpn_box_reg: 0.0566 (0.0682)  time: 0.6179 (0.7306)  data: 0.0003 (0.0192)  lr: 0.160000  max mem: 14585
INFO:maskrcnn_benchmark.trainer:eta: 2:54:44  iter: 3650  loss: 0.8262 (0.9510)  loss_classifier: 0.2924 (0.3299)  loss_box_reg: 0.1318 (0.1427)  loss_mask: 0.2932 (0.3390)  loss_objectness: 0.0482 (0.0710)  loss_rpn_box_reg: 0.0571 (0.0684)  time: 0.6177 (0.7306)  data: 0.0004 (0.0192)  lr: 0.160000  max mem: 14683
:::MLLOG {"namespace": "", "time_ms": 1634387006632, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 111, "epoch_num": 4}}
:::MLLOG {"namespace": "", "time_ms": 1634387006632, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 112, "first_epoch_num": 4}}
:::MLLOG {"namespace": "", "time_ms": 1634387006632, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 113, "epoch_num": 4}}
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
2021-10-16 12:23:27,053 maskrcnn_benchmark.data.build WARNING: When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
Done (t=0.55s)
creating index...
index created!
shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]Done (t=0.55s)
creating index...
Done (t=0.56s)
creating index...
Done (t=0.55s)
creating index...
Done (t=0.55s)
creating index...
Done (t=0.55s)
creating index...
Done (t=0.55s)
creating index...
index created!
index created!
shapes=None
passthrough=True
shapes=None
passthrough=True
creating index...
GT annotations already exist!
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]  0% 0/40 [00:00<?, ?it/s]index created!
index created!
Done (t=0.55s)
creating index...
shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
shapes=None
passthrough=True
  0% 0/40 [00:00<?, ?it/s]creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]index created!
index created!
shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]index created!
shapes=None
passthrough=True
creating index...
GT annotations already exist!
2021-10-16 12:23:27,633 maskrcnn_benchmark.inference INFO: Start evaluation on coco_2017_val dataset(5000 images).
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]  2% 1/40 [00:00<00:11,  3.42it/s]  2% 1/40 [00:00<00:11,  3.37it/s]  2% 1/40 [00:00<00:11,  3.37it/s]  2% 1/40 [00:00<00:11,  3.47it/s]  2% 1/40 [00:00<00:11,  3.38it/s]  2% 1/40 [00:00<00:11,  3.35it/s]  2% 1/40 [00:00<00:11,  3.35it/s]  2% 1/40 [00:00<00:12,  3.21it/s]  5% 2/40 [00:00<00:11,  3.41it/s]  5% 2/40 [00:00<00:10,  3.53it/s]  5% 2/40 [00:00<00:10,  3.47it/s]  5% 2/40 [00:00<00:11,  3.39it/s]  5% 2/40 [00:00<00:11,  3.37it/s]  5% 2/40 [00:00<00:11,  3.40it/s]  5% 2/40 [00:00<00:11,  3.38it/s]  5% 2/40 [00:00<00:11,  3.33it/s]  8% 3/40 [00:00<00:10,  3.43it/s]  8% 3/40 [00:00<00:10,  3.56it/s]  8% 3/40 [00:00<00:10,  3.46it/s]  8% 3/40 [00:00<00:10,  3.45it/s]  8% 3/40 [00:00<00:10,  3.37it/s]  8% 3/40 [00:00<00:10,  3.41it/s]  8% 3/40 [00:00<00:10,  3.38it/s]  8% 3/40 [00:00<00:10,  3.38it/s] 10% 4/40 [00:01<00:10,  3.44it/s] 10% 4/40 [00:01<00:10,  3.49it/s] 10% 4/40 [00:01<00:10,  3.45it/s] 10% 4/40 [00:01<00:10,  3.43it/s] 10% 4/40 [00:01<00:10,  3.38it/s] 10% 4/40 [00:01<00:10,  3.42it/s] 10% 4/40 [00:01<00:10,  3.42it/s] 10% 4/40 [00:01<00:10,  3.37it/s] 12% 5/40 [00:01<00:10,  3.43it/s] 12% 5/40 [00:01<00:10,  3.47it/s] 12% 5/40 [00:01<00:10,  3.45it/s] 12% 5/40 [00:01<00:10,  3.46it/s] 12% 5/40 [00:01<00:10,  3.44it/s] 12% 5/40 [00:01<00:10,  3.46it/s] 12% 5/40 [00:01<00:10,  3.44it/s] 12% 5/40 [00:01<00:10,  3.44it/s] 15% 6/40 [00:01<00:09,  3.42it/s] 15% 6/40 [00:01<00:09,  3.47it/s] 15% 6/40 [00:01<00:09,  3.46it/s] 15% 6/40 [00:01<00:09,  3.49it/s] 15% 6/40 [00:01<00:09,  3.50it/s] 15% 6/40 [00:01<00:09,  3.47it/s] 15% 6/40 [00:01<00:09,  3.41it/s] 15% 6/40 [00:01<00:09,  3.44it/s] 18% 7/40 [00:02<00:09,  3.42it/s] 18% 7/40 [00:01<00:09,  3.49it/s] 18% 7/40 [00:02<00:09,  3.49it/s] 18% 7/40 [00:02<00:09,  3.44it/s] 18% 7/40 [00:02<00:09,  3.51it/s] 18% 7/40 [00:02<00:09,  3.47it/s] 18% 7/40 [00:02<00:09,  3.44it/s] 18% 7/40 [00:02<00:09,  3.46it/s] 20% 8/40 [00:02<00:09,  3.42it/s] 20% 8/40 [00:02<00:09,  3.55it/s] 20% 8/40 [00:02<00:09,  3.43it/s] 20% 8/40 [00:02<00:09,  3.44it/s] 20% 8/40 [00:02<00:09,  3.50it/s] 20% 8/40 [00:02<00:09,  3.48it/s] 20% 8/40 [00:02<00:09,  3.47it/s] 20% 8/40 [00:02<00:09,  3.38it/s] 22% 9/40 [00:02<00:08,  3.45it/s] 22% 9/40 [00:02<00:08,  3.51it/s] 22% 9/40 [00:02<00:08,  3.44it/s] 22% 9/40 [00:02<00:08,  3.54it/s] 22% 9/40 [00:02<00:09,  3.43it/s] 22% 9/40 [00:02<00:08,  3.48it/s] 22% 9/40 [00:02<00:08,  3.46it/s] 22% 9/40 [00:02<00:09,  3.40it/s] 25% 10/40 [00:02<00:08,  3.53it/s] 25% 10/40 [00:02<00:08,  3.43it/s] 25% 10/40 [00:02<00:08,  3.47it/s] 25% 10/40 [00:02<00:08,  3.55it/s] 25% 10/40 [00:02<00:08,  3.52it/s] 25% 10/40 [00:02<00:08,  3.41it/s] 25% 10/40 [00:02<00:08,  3.46it/s] 25% 10/40 [00:02<00:08,  3.47it/s] 28% 11/40 [00:03<00:08,  3.50it/s] 28% 11/40 [00:03<00:08,  3.42it/s] 28% 11/40 [00:03<00:08,  3.48it/s] 28% 11/40 [00:03<00:08,  3.52it/s] 28% 11/40 [00:03<00:08,  3.51it/s] 28% 11/40 [00:03<00:08,  3.50it/s] 28% 11/40 [00:03<00:08,  3.42it/s] 28% 11/40 [00:03<00:08,  3.44it/s] 30% 12/40 [00:03<00:07,  3.53it/s] 30% 12/40 [00:03<00:08,  3.43it/s] 30% 12/40 [00:03<00:07,  3.52it/s] 30% 12/40 [00:03<00:07,  3.50it/s] 30% 12/40 [00:03<00:08,  3.44it/s] 30% 12/40 [00:03<00:07,  3.53it/s] 30% 12/40 [00:03<00:08,  3.46it/s] 30% 12/40 [00:03<00:08,  3.48it/s] 32% 13/40 [00:03<00:07,  3.60it/s] 32% 13/40 [00:03<00:07,  3.48it/s] 32% 13/40 [00:03<00:07,  3.50it/s] 32% 13/40 [00:03<00:07,  3.50it/s] 32% 13/40 [00:03<00:07,  3.48it/s] 32% 13/40 [00:03<00:07,  3.49it/s] 32% 13/40 [00:03<00:07,  3.44it/s] 32% 13/40 [00:03<00:07,  3.46it/s] 35% 14/40 [00:03<00:07,  3.54it/s] 35% 14/40 [00:04<00:07,  3.51it/s] 35% 14/40 [00:04<00:07,  3.51it/s] 35% 14/40 [00:03<00:07,  3.55it/s] 35% 14/40 [00:04<00:07,  3.46it/s] 35% 14/40 [00:04<00:07,  3.52it/s] 35% 14/40 [00:04<00:07,  3.45it/s] 35% 14/40 [00:04<00:07,  3.46it/s] 38% 15/40 [00:04<00:07,  3.50it/s] 38% 15/40 [00:04<00:07,  3.49it/s] 38% 15/40 [00:04<00:06,  3.59it/s] 38% 15/40 [00:04<00:07,  3.54it/s] 38% 15/40 [00:04<00:07,  3.48it/s] 38% 15/40 [00:04<00:07,  3.49it/s] 38% 15/40 [00:04<00:07,  3.48it/s] 38% 15/40 [00:04<00:07,  3.42it/s] 40% 16/40 [00:04<00:06,  3.51it/s] 40% 16/40 [00:04<00:06,  3.52it/s] 40% 16/40 [00:04<00:06,  3.53it/s] 40% 16/40 [00:04<00:06,  3.43it/s] 40% 16/40 [00:04<00:06,  3.52it/s] 40% 16/40 [00:04<00:06,  3.43it/s] 40% 16/40 [00:04<00:06,  3.46it/s] 40% 16/40 [00:04<00:06,  3.46it/s] 42% 17/40 [00:04<00:06,  3.48it/s] 42% 17/40 [00:04<00:06,  3.60it/s] 42% 17/40 [00:04<00:06,  3.57it/s] 42% 17/40 [00:04<00:06,  3.41it/s] 42% 17/40 [00:04<00:06,  3.54it/s] 42% 17/40 [00:04<00:06,  3.54it/s] 42% 17/40 [00:04<00:06,  3.47it/s] 42% 17/40 [00:04<00:06,  3.45it/s] 45% 18/40 [00:05<00:06,  3.62it/s] 45% 18/40 [00:05<00:06,  3.48it/s] 45% 18/40 [00:05<00:06,  3.54it/s] 45% 18/40 [00:05<00:06,  3.41it/s] 45% 18/40 [00:05<00:06,  3.49it/s] 45% 18/40 [00:05<00:06,  3.50it/s] 45% 18/40 [00:05<00:06,  3.46it/s] 45% 18/40 [00:05<00:06,  3.42it/s] 48% 19/40 [00:05<00:05,  3.59it/s] 48% 19/40 [00:05<00:05,  3.56it/s] 48% 19/40 [00:05<00:06,  3.48it/s] 48% 19/40 [00:05<00:06,  3.43it/s] 48% 19/40 [00:05<00:06,  3.49it/s] 48% 19/40 [00:05<00:06,  3.45it/s] 48% 19/40 [00:05<00:06,  3.48it/s] 48% 19/40 [00:05<00:06,  3.45it/s] 50% 20/40 [00:05<00:05,  3.58it/s] 50% 20/40 [00:05<00:05,  3.54it/s] 50% 20/40 [00:05<00:05,  3.49it/s] 50% 20/40 [00:05<00:05,  3.46it/s] 50% 20/40 [00:05<00:05,  3.47it/s] 50% 20/40 [00:05<00:05,  3.48it/s] 50% 20/40 [00:05<00:05,  3.42it/s] 50% 20/40 [00:05<00:05,  3.48it/s] 52% 21/40 [00:05<00:05,  3.54it/s] 52% 21/40 [00:05<00:05,  3.57it/s] 52% 21/40 [00:05<00:05,  3.47it/s] 52% 21/40 [00:06<00:05,  3.53it/s] 52% 21/40 [00:06<00:05,  3.51it/s] 52% 21/40 [00:06<00:05,  3.50it/s] 52% 21/40 [00:06<00:05,  3.45it/s] 52% 21/40 [00:06<00:05,  3.47it/s] 55% 22/40 [00:06<00:05,  3.60it/s] 55% 22/40 [00:06<00:05,  3.53it/s] 55% 22/40 [00:06<00:05,  3.50it/s] 55% 22/40 [00:06<00:05,  3.48it/s] 55% 22/40 [00:06<00:05,  3.54it/s] 55% 22/40 [00:06<00:05,  3.46it/s] 55% 22/40 [00:06<00:05,  3.41it/s] 55% 22/40 [00:06<00:05,  3.44it/s] 57% 23/40 [00:06<00:04,  3.59it/s] 57% 23/40 [00:06<00:04,  3.57it/s] 57% 23/40 [00:06<00:04,  3.52it/s] 57% 23/40 [00:06<00:04,  3.47it/s] 57% 23/40 [00:06<00:04,  3.51it/s] 57% 23/40 [00:06<00:04,  3.42it/s] 57% 23/40 [00:06<00:04,  3.47it/s] 57% 23/40 [00:06<00:04,  3.40it/s] 60% 24/40 [00:06<00:04,  3.56it/s] 60% 24/40 [00:06<00:04,  3.60it/s] 60% 24/40 [00:06<00:04,  3.52it/s] 60% 24/40 [00:06<00:04,  3.49it/s] 60% 24/40 [00:06<00:04,  3.55it/s] 60% 24/40 [00:06<00:04,  3.47it/s] 60% 24/40 [00:06<00:04,  3.47it/s] 60% 24/40 [00:06<00:04,  3.41it/s] 62% 25/40 [00:07<00:04,  3.59it/s] 62% 25/40 [00:07<00:04,  3.51it/s] 62% 25/40 [00:07<00:04,  3.56it/s] 62% 25/40 [00:07<00:04,  3.53it/s] 62% 25/40 [00:07<00:04,  3.45it/s] 62% 25/40 [00:07<00:04,  3.45it/s] 62% 25/40 [00:07<00:04,  3.43it/s] 62% 25/40 [00:07<00:04,  3.42it/s] 65% 26/40 [00:07<00:03,  3.54it/s] 65% 26/40 [00:07<00:03,  3.56it/s] 65% 26/40 [00:07<00:04,  3.47it/s] 65% 26/40 [00:07<00:04,  3.50it/s] 65% 26/40 [00:07<00:03,  3.51it/s] 65% 26/40 [00:07<00:04,  3.44it/s] 65% 26/40 [00:07<00:04,  3.48it/s] 65% 26/40 [00:07<00:04,  3.42it/s] 68% 27/40 [00:07<00:03,  3.56it/s] 68% 27/40 [00:07<00:03,  3.56it/s] 68% 27/40 [00:07<00:03,  3.53it/s] 68% 27/40 [00:07<00:03,  3.48it/s] 68% 27/40 [00:07<00:03,  3.48it/s] 68% 27/40 [00:07<00:03,  3.49it/s] 68% 27/40 [00:07<00:03,  3.47it/s] 68% 27/40 [00:07<00:03,  3.46it/s] 70% 28/40 [00:07<00:03,  3.61it/s] 70% 28/40 [00:07<00:03,  3.55it/s] 70% 28/40 [00:07<00:03,  3.52it/s] 70% 28/40 [00:08<00:03,  3.50it/s] 70% 28/40 [00:08<00:03,  3.46it/s] 70% 28/40 [00:08<00:03,  3.48it/s] 70% 28/40 [00:08<00:03,  3.47it/s] 70% 28/40 [00:08<00:03,  3.43it/s] 72% 29/40 [00:08<00:03,  3.57it/s] 72% 29/40 [00:08<00:03,  3.53it/s] 72% 29/40 [00:08<00:03,  3.53it/s] 72% 29/40 [00:08<00:03,  3.52it/s] 72% 29/40 [00:08<00:03,  3.46it/s] 72% 29/40 [00:08<00:03,  3.50it/s] 72% 29/40 [00:08<00:03,  3.49it/s] 72% 29/40 [00:08<00:03,  3.42it/s] 75% 30/40 [00:08<00:02,  3.59it/s] 75% 30/40 [00:08<00:02,  3.49it/s] 75% 30/40 [00:08<00:02,  3.52it/s] 75% 30/40 [00:08<00:02,  3.47it/s] 75% 30/40 [00:08<00:02,  3.49it/s] 75% 30/40 [00:08<00:02,  3.49it/s] 75% 30/40 [00:08<00:02,  3.48it/s] 75% 30/40 [00:08<00:02,  3.39it/s] 78% 31/40 [00:08<00:02,  3.56it/s] 78% 31/40 [00:08<00:02,  3.47it/s] 78% 31/40 [00:08<00:02,  3.47it/s] 78% 31/40 [00:08<00:02,  3.51it/s] 78% 31/40 [00:08<00:02,  3.47it/s] 78% 31/40 [00:08<00:02,  3.50it/s] 78% 31/40 [00:08<00:02,  3.47it/s] 78% 31/40 [00:08<00:02,  3.44it/s] 80% 32/40 [00:09<00:02,  3.55it/s] 80% 32/40 [00:09<00:02,  3.50it/s] 80% 32/40 [00:09<00:02,  3.45it/s] 80% 32/40 [00:09<00:02,  3.48it/s] 80% 32/40 [00:09<00:02,  3.46it/s] 80% 32/40 [00:09<00:02,  3.46it/s] 80% 32/40 [00:09<00:02,  3.47it/s] 80% 32/40 [00:09<00:02,  3.48it/s] 82% 33/40 [00:09<00:01,  3.56it/s] 82% 33/40 [00:09<00:01,  3.52it/s] 82% 33/40 [00:09<00:02,  3.44it/s] 82% 33/40 [00:09<00:01,  3.53it/s] 82% 33/40 [00:09<00:02,  3.48it/s] 82% 33/40 [00:09<00:01,  3.51it/s] 82% 33/40 [00:09<00:02,  3.42it/s] 82% 33/40 [00:09<00:02,  3.44it/s] 85% 34/40 [00:09<00:01,  3.54it/s] 85% 34/40 [00:09<00:01,  3.49it/s] 85% 34/40 [00:09<00:01,  3.46it/s] 85% 34/40 [00:09<00:01,  3.52it/s] 85% 34/40 [00:09<00:01,  3.48it/s] 85% 34/40 [00:09<00:01,  3.57it/s] 85% 34/40 [00:09<00:01,  3.45it/s] 85% 34/40 [00:09<00:01,  3.42it/s] 88% 35/40 [00:09<00:01,  3.51it/s] 88% 35/40 [00:09<00:01,  3.53it/s] 88% 35/40 [00:10<00:01,  3.45it/s] 88% 35/40 [00:10<00:01,  3.51it/s] 88% 35/40 [00:10<00:01,  3.46it/s] 88% 35/40 [00:10<00:01,  3.48it/s] 88% 35/40 [00:10<00:01,  3.40it/s] 88% 35/40 [00:10<00:01,  3.41it/s] 90% 36/40 [00:10<00:01,  3.58it/s] 90% 36/40 [00:10<00:01,  3.49it/s] 90% 36/40 [00:10<00:01,  3.47it/s] 90% 36/40 [00:10<00:01,  3.52it/s] 90% 36/40 [00:10<00:01,  3.44it/s] 90% 36/40 [00:10<00:01,  3.44it/s] 90% 36/40 [00:10<00:01,  3.41it/s] 90% 36/40 [00:10<00:01,  3.40it/s] 92% 37/40 [00:10<00:00,  3.56it/s] 92% 37/40 [00:10<00:00,  3.50it/s] 92% 37/40 [00:10<00:00,  3.42it/s] 92% 37/40 [00:10<00:00,  3.55it/s] 92% 37/40 [00:10<00:00,  3.49it/s] 92% 37/40 [00:10<00:00,  3.42it/s] 92% 37/40 [00:10<00:00,  3.45it/s] 92% 37/40 [00:10<00:00,  3.40it/s] 95% 38/40 [00:10<00:00,  3.53it/s] 95% 38/40 [00:10<00:00,  3.52it/s] 95% 38/40 [00:10<00:00,  3.58it/s] 95% 38/40 [00:10<00:00,  3.44it/s] 98% 39/40 [00:10<00:00,  4.35it/s] 95% 38/40 [00:10<00:00,  3.57it/s] 95% 38/40 [00:10<00:00,  3.83it/s] 95% 38/40 [00:10<00:00,  3.46it/s] 98% 39/40 [00:10<00:00,  4.23it/s] 98% 39/40 [00:10<00:00,  3.79it/s] 95% 38/40 [00:11<00:00,  3.46it/s] 98% 39/40 [00:11<00:00,  4.20it/s]100% 40/40 [00:11<00:00,  3.61it/s]
100% 40/40 [00:11<00:00,  4.60it/s]100% 40/40 [00:11<00:00,  3.62it/s]
100% 40/40 [00:11<00:00,  4.69it/s]100% 40/40 [00:11<00:00,  3.56it/s]
 98% 39/40 [00:11<00:00,  3.56it/s]100% 40/40 [00:11<00:00,  4.41it/s]100% 40/40 [00:11<00:00,  3.58it/s]
100% 40/40 [00:11<00:00,  3.57it/s]
 98% 39/40 [00:11<00:00,  3.70it/s] 98% 39/40 [00:11<00:00,  3.51it/s]100% 40/40 [00:11<00:00,  3.55it/s]
 98% 39/40 [00:11<00:00,  3.49it/s]100% 40/40 [00:11<00:00,  3.53it/s]
100% 40/40 [00:11<00:00,  4.38it/s]100% 40/40 [00:11<00:00,  3.52it/s]
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.366304 (0.018186087036132812 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.419907 (0.0182718505859375 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.366366 (0.018186185455322267 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.356785 (0.01817085647583008 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.344909 (0.018151853942871093 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.355239 (0.018168382263183593 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.341629 (0.018146606063842774 s / img per device, on 8 devices)
2021-10-16 12:23:38,962 maskrcnn_benchmark.inference INFO: Total inference time: 0:00:11.328457 (0.018125531387329103 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.328457 (0.018125531387329103 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.026s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.027s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.027s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.027s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.027s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.027s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.028s
2021-10-16 12:23:39,226 maskrcnn_benchmark.timed_section INFO: EXPOSED: Launching evaluation preparation tasks took 0.033s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.033s
:::MLLOG {"namespace": "", "time_ms": 1634387019231, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 168, "first_epoch_num": 5, "epoch_count": 1}}
:::MLLOG {"namespace": "", "time_ms": 1634387019233, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 169, "epoch_num": 5}}
INFO:maskrcnn_benchmark.timed_section:Prepping took 10.462 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 10.503 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 10.628 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 10.723 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 10.764 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 10.858 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 11.151 seconds total
2021-10-16 12:23:51,691 maskrcnn_benchmark.timed_section INFO: Prepping took 11.402 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 11.402 seconds total
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.232s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.233s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.234s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.235s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.236s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.237s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.240s
2021-10-16 12:24:01,074 maskrcnn_benchmark.timed_section INFO: EXPOSED: Launching evaluation task took 0.240s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.240s
Evaluating predictions
Loading and preparing results...
resFile is ./inference/coco_2017_val/segm.json
Loading and preparing results...
resFile is ./inference/coco_2017_val/bbox.json
DONE (t=1.08s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=2.53s)
Running per image evaluation...
Evaluate annotation type *segm*
INFO:maskrcnn_benchmark.trainer:eta: 2:56:17  iter: 3700  loss: 0.7324 (0.9453)  loss_classifier: 0.2527 (0.3280)  loss_box_reg: 0.1117 (0.1412)  loss_mask: 0.2748 (0.3384)  loss_objectness: 0.0425 (0.0703)  loss_rpn_box_reg: 0.0486 (0.0675)  time: 0.6212 (0.7397)  data: 0.0003 (0.0224)  lr: 0.160000  max mem: 14558
INFO:maskrcnn_benchmark.trainer:eta: 2:56:16  iter: 3700  loss: 0.7831 (0.9489)  loss_classifier: 0.2528 (0.3290)  loss_box_reg: 0.1159 (0.1425)  loss_mask: 0.2969 (0.3384)  loss_objectness: 0.0457 (0.0708)  loss_rpn_box_reg: 0.0566 (0.0683)  time: 0.6214 (0.7396)  data: 0.0004 (0.0224)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 2:56:16  iter: 3700  loss: 0.7100 (0.9501)  loss_classifier: 0.2333 (0.3292)  loss_box_reg: 0.1102 (0.1422)  loss_mask: 0.2858 (0.3388)  loss_objectness: 0.0398 (0.0718)  loss_rpn_box_reg: 0.0448 (0.0681)  time: 0.6214 (0.7396)  data: 0.0004 (0.0224)  lr: 0.160000  max mem: 14585
INFO:maskrcnn_benchmark.trainer:eta: 2:56:17  iter: 3700  loss: 0.7416 (0.9448)  loss_classifier: 0.2491 (0.3279)  loss_box_reg: 0.1227 (0.1413)  loss_mask: 0.2899 (0.3376)  loss_objectness: 0.0377 (0.0702)  loss_rpn_box_reg: 0.0494 (0.0678)  time: 0.6210 (0.7397)  data: 0.0004 (0.0225)  lr: 0.160000  max mem: 14752
INFO:maskrcnn_benchmark.trainer:eta: 2:56:17  iter: 3700  loss: 0.7730 (0.9470)  loss_classifier: 0.2495 (0.3281)  loss_box_reg: 0.1166 (0.1414)  loss_mask: 0.2909 (0.3382)  loss_objectness: 0.0505 (0.0710)  loss_rpn_box_reg: 0.0622 (0.0683)  time: 0.6205 (0.7397)  data: 0.0004 (0.0225)  lr: 0.160000  max mem: 14573
INFO:maskrcnn_benchmark.trainer:eta: 2:56:17  iter: 3700  loss: 0.7832 (0.9467)  loss_classifier: 0.2565 (0.3277)  loss_box_reg: 0.1170 (0.1420)  loss_mask: 0.2918 (0.3387)  loss_objectness: 0.0531 (0.0705)  loss_rpn_box_reg: 0.0704 (0.0676)  time: 0.6200 (0.7397)  data: 0.0003 (0.0224)  lr: 0.160000  max mem: 14639
INFO:maskrcnn_benchmark.trainer:eta: 2:56:17  iter: 3700  loss: 0.8081 (0.9481)  loss_classifier: 0.2700 (0.3285)  loss_box_reg: 0.1196 (0.1416)  loss_mask: 0.2899 (0.3388)  loss_objectness: 0.0491 (0.0709)  loss_rpn_box_reg: 0.0477 (0.0683)  time: 0.6200 (0.7397)  data: 0.0004 (0.0224)  lr: 0.160000  max mem: 14650
2021-10-16 12:24:07,492 maskrcnn_benchmark.trainer INFO: eta: 2:56:17  iter: 3700  loss: 0.8133 (0.9488)  loss_classifier: 0.2634 (0.3290)  loss_box_reg: 0.1167 (0.1419)  loss_mask: 0.2902 (0.3380)  loss_objectness: 0.0502 (0.0711)  loss_rpn_box_reg: 0.0584 (0.0687)  time: 0.6201 (0.7397)  data: 0.0004 (0.0227)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:56:17  iter: 3700  loss: 0.8133 (0.9488)  loss_classifier: 0.2634 (0.3290)  loss_box_reg: 0.1167 (0.1419)  loss_mask: 0.2902 (0.3380)  loss_objectness: 0.0502 (0.0711)  loss_rpn_box_reg: 0.0584 (0.0687)  time: 0.6201 (0.7397)  data: 0.0004 (0.0227)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634387047492, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.9487657848322714, "loss_classifier": 0.3290403896469522, "loss_box_reg": 0.1419014899955584, "loss_mask": 0.3380481854685255, "loss_objectness": 0.07108886017942348, "loss_rpn_box_reg": 0.06868685988759672, "time": 0.7396566134530145, "data": 0.022667713487470473, "throughput": 173.05327590115706}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 3700}}
:::MLLOG {"namespace": "", "time_ms": 1634387047492, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 173.05327590115706, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
DONE (t=2.09s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.25919
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.46022
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.26645
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.14618
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.28695
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.32416
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.24656
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.40375
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.42577
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.24670
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.47023
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.52419
DONE (t=3.16s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.25028
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.43404
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.25833
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.10520
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.27603
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.35832
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.24382
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.38575
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.40522
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.21862
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.45378
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.51153
2021-10-16 12:24:19,589 maskrcnn_benchmark.trainer INFO: bbox mAP: 0.25918583980600574, segm mAP: 0.2502809032785239
INFO:maskrcnn_benchmark.trainer:bbox mAP: 0.25918583980600574, segm mAP: 0.2502809032785239
:::MLLOG {"namespace": "", "time_ms": 1634387059590, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": {"BBOX": 0.25918583980600574, "SEGM": 0.2502809032785239}, "metadata": {"file": "tools/train_mlperf.py", "lineno": 133, "epoch_num": 4}}
:::MLLOG {"namespace": "", "time_ms": 1634387059590, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 134, "epoch_num": 4}}
INFO:maskrcnn_benchmark.trainer:eta: 2:55:40  iter: 3750  loss: 0.7672 (0.9447)  loss_classifier: 0.2841 (0.3273)  loss_box_reg: 0.1192 (0.1412)  loss_mask: 0.2792 (0.3374)  loss_objectness: 0.0480 (0.0707)  loss_rpn_box_reg: 0.0446 (0.0681)  time: 0.6214 (0.7397)  data: 0.0003 (0.0222)  lr: 0.160000  max mem: 14573
INFO:maskrcnn_benchmark.trainer:eta: 2:55:40  iter: 3750  loss: 0.8002 (0.9446)  loss_classifier: 0.2565 (0.3269)  loss_box_reg: 0.1206 (0.1418)  loss_mask: 0.2847 (0.3381)  loss_objectness: 0.0552 (0.0703)  loss_rpn_box_reg: 0.0491 (0.0675)  time: 0.6211 (0.7397)  data: 0.0003 (0.0221)  lr: 0.160000  max mem: 14639
2021-10-16 12:24:44,422 maskrcnn_benchmark.trainer INFO: eta: 2:55:39  iter: 3750  loss: 0.7463 (0.9464)  loss_classifier: 0.2526 (0.3281)  loss_box_reg: 0.1203 (0.1416)  loss_mask: 0.2809 (0.3373)  loss_objectness: 0.0469 (0.0708)  loss_rpn_box_reg: 0.0470 (0.0685)  time: 0.6212 (0.7396)  data: 0.0003 (0.0224)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:55:40  iter: 3750  loss: 0.7539 (0.9455)  loss_classifier: 0.2587 (0.3275)  loss_box_reg: 0.1160 (0.1413)  loss_mask: 0.2839 (0.3381)  loss_objectness: 0.0408 (0.0705)  loss_rpn_box_reg: 0.0487 (0.0681)  time: 0.6211 (0.7397)  data: 0.0004 (0.0221)  lr: 0.160000  max mem: 14650
INFO:maskrcnn_benchmark.trainer:eta: 2:55:40  iter: 3750  loss: 0.8049 (0.9428)  loss_classifier: 0.2783 (0.3271)  loss_box_reg: 0.1283 (0.1411)  loss_mask: 0.2915 (0.3369)  loss_objectness: 0.0433 (0.0699)  loss_rpn_box_reg: 0.0584 (0.0677)  time: 0.6211 (0.7397)  data: 0.0004 (0.0222)  lr: 0.160000  max mem: 14752
INFO:maskrcnn_benchmark.trainer:eta: 2:55:39  iter: 3750  loss: 0.7463 (0.9464)  loss_classifier: 0.2526 (0.3281)  loss_box_reg: 0.1203 (0.1416)  loss_mask: 0.2809 (0.3373)  loss_objectness: 0.0469 (0.0708)  loss_rpn_box_reg: 0.0470 (0.0685)  time: 0.6212 (0.7396)  data: 0.0003 (0.0224)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634387084422, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.9464088520606359, "loss_classifier": 0.3281423697769642, "loss_box_reg": 0.1416451527873054, "loss_mask": 0.3373487182776133, "loss_objectness": 0.07076727213958899, "loss_rpn_box_reg": 0.06850533945709467, "time": 0.7396425724665324, "data": 0.02237207279205322, "throughput": 173.0565610537403}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 3750}}
:::MLLOG {"namespace": "", "time_ms": 1634387084422, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 173.0565610537403, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:55:39  iter: 3750  loss: 0.8002 (0.9478)  loss_classifier: 0.2567 (0.3283)  loss_box_reg: 0.1238 (0.1419)  loss_mask: 0.2990 (0.3382)  loss_objectness: 0.0427 (0.0715)  loss_rpn_box_reg: 0.0535 (0.0680)  time: 0.6214 (0.7396)  data: 0.0003 (0.0221)  lr: 0.160000  max mem: 14585
INFO:maskrcnn_benchmark.trainer:eta: 2:55:40  iter: 3750  loss: 0.8129 (0.9433)  loss_classifier: 0.2788 (0.3272)  loss_box_reg: 0.1370 (0.1410)  loss_mask: 0.2847 (0.3377)  loss_objectness: 0.0525 (0.0700)  loss_rpn_box_reg: 0.0603 (0.0674)  time: 0.6212 (0.7397)  data: 0.0004 (0.0221)  lr: 0.160000  max mem: 14558
INFO:maskrcnn_benchmark.trainer:eta: 2:55:39  iter: 3750  loss: 0.7215 (0.9465)  loss_classifier: 0.2408 (0.3280)  loss_box_reg: 0.1142 (0.1422)  loss_mask: 0.2680 (0.3377)  loss_objectness: 0.0381 (0.0704)  loss_rpn_box_reg: 0.0495 (0.0681)  time: 0.6214 (0.7396)  data: 0.0003 (0.0221)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 2:54:41  iter: 3800  loss: 0.7868 (0.9425)  loss_classifier: 0.2588 (0.3264)  loss_box_reg: 0.1238 (0.1409)  loss_mask: 0.2864 (0.3368)  loss_objectness: 0.0433 (0.0704)  loss_rpn_box_reg: 0.0544 (0.0680)  time: 0.6195 (0.7381)  data: 0.0004 (0.0219)  lr: 0.160000  max mem: 14573
INFO:maskrcnn_benchmark.trainer:eta: 2:54:41  iter: 3800  loss: 0.8077 (0.9426)  loss_classifier: 0.2662 (0.3262)  loss_box_reg: 0.1389 (0.1416)  loss_mask: 0.2935 (0.3374)  loss_objectness: 0.0463 (0.0700)  loss_rpn_box_reg: 0.0610 (0.0674)  time: 0.6214 (0.7381)  data: 0.0004 (0.0219)  lr: 0.160000  max mem: 14639
INFO:maskrcnn_benchmark.trainer:eta: 2:54:41  iter: 3800  loss: 0.7691 (0.9436)  loss_classifier: 0.2675 (0.3268)  loss_box_reg: 0.1212 (0.1411)  loss_mask: 0.2804 (0.3374)  loss_objectness: 0.0474 (0.0702)  loss_rpn_box_reg: 0.0626 (0.0681)  time: 0.6217 (0.7381)  data: 0.0003 (0.0218)  lr: 0.160000  max mem: 14650
2021-10-16 12:25:15,570 maskrcnn_benchmark.trainer INFO: eta: 2:54:41  iter: 3800  loss: 0.7615 (0.9443)  loss_classifier: 0.2666 (0.3274)  loss_box_reg: 0.1184 (0.1415)  loss_mask: 0.2851 (0.3367)  loss_objectness: 0.0418 (0.0704)  loss_rpn_box_reg: 0.0563 (0.0684)  time: 0.6211 (0.7381)  data: 0.0003 (0.0221)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:54:41  iter: 3800  loss: 0.7615 (0.9443)  loss_classifier: 0.2666 (0.3274)  loss_box_reg: 0.1184 (0.1415)  loss_mask: 0.2851 (0.3367)  loss_objectness: 0.0418 (0.0704)  loss_rpn_box_reg: 0.0563 (0.0684)  time: 0.6211 (0.7381)  data: 0.0003 (0.0221)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:54:41  iter: 3800  loss: 0.8296 (0.9410)  loss_classifier: 0.2771 (0.3264)  loss_box_reg: 0.1369 (0.1410)  loss_mask: 0.2860 (0.3363)  loss_objectness: 0.0453 (0.0697)  loss_rpn_box_reg: 0.0558 (0.0676)  time: 0.6207 (0.7381)  data: 0.0004 (0.0219)  lr: 0.160000  max mem: 14752
:::MLLOG {"namespace": "", "time_ms": 1634387115571, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.9443273623130823, "loss_classifier": 0.3273708536338649, "loss_box_reg": 0.14146733301636566, "loss_mask": 0.33668466089195326, "loss_objectness": 0.07043820168283817, "loss_rpn_box_reg": 0.06836631340758972, "time": 0.7381073659344723, "data": 0.02208346028076975, "throughput": 173.4165053859706}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 3800}}
:::MLLOG {"namespace": "", "time_ms": 1634387115571, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 173.4165053859706, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:54:41  iter: 3800  loss: 0.7508 (0.9407)  loss_classifier: 0.2561 (0.3261)  loss_box_reg: 0.1157 (0.1407)  loss_mask: 0.2733 (0.3369)  loss_objectness: 0.0386 (0.0697)  loss_rpn_box_reg: 0.0513 (0.0673)  time: 0.6204 (0.7381)  data: 0.0003 (0.0219)  lr: 0.160000  max mem: 14558
INFO:maskrcnn_benchmark.trainer:eta: 2:54:41  iter: 3800  loss: 0.8072 (0.9459)  loss_classifier: 0.2674 (0.3276)  loss_box_reg: 0.1229 (0.1417)  loss_mask: 0.2938 (0.3375)  loss_objectness: 0.0538 (0.0712)  loss_rpn_box_reg: 0.0529 (0.0680)  time: 0.6205 (0.7381)  data: 0.0004 (0.0218)  lr: 0.160000  max mem: 14585
INFO:maskrcnn_benchmark.trainer:eta: 2:54:40  iter: 3800  loss: 0.7787 (0.9443)  loss_classifier: 0.2801 (0.3272)  loss_box_reg: 0.1271 (0.1420)  loss_mask: 0.2773 (0.3370)  loss_objectness: 0.0434 (0.0701)  loss_rpn_box_reg: 0.0519 (0.0680)  time: 0.6205 (0.7381)  data: 0.0004 (0.0218)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 2:53:43  iter: 3850  loss: 0.8233 (0.9440)  loss_classifier: 0.2743 (0.3268)  loss_box_reg: 0.1329 (0.1415)  loss_mask: 0.3012 (0.3369)  loss_objectness: 0.0531 (0.0709)  loss_rpn_box_reg: 0.0627 (0.0679)  time: 0.6232 (0.7366)  data: 0.0004 (0.0216)  lr: 0.160000  max mem: 14585
INFO:maskrcnn_benchmark.trainer:eta: 2:53:42  iter: 3850  loss: 0.7818 (0.9423)  loss_classifier: 0.2498 (0.3264)  loss_box_reg: 0.1189 (0.1418)  loss_mask: 0.2889 (0.3365)  loss_objectness: 0.0418 (0.0698)  loss_rpn_box_reg: 0.0581 (0.0679)  time: 0.6233 (0.7366)  data: 0.0003 (0.0216)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 2:53:43  iter: 3850  loss: 0.8237 (0.9405)  loss_classifier: 0.2746 (0.3257)  loss_box_reg: 0.1322 (0.1407)  loss_mask: 0.2897 (0.3361)  loss_objectness: 0.0504 (0.0701)  loss_rpn_box_reg: 0.0626 (0.0679)  time: 0.6246 (0.7366)  data: 0.0004 (0.0216)  lr: 0.160000  max mem: 14573
INFO:maskrcnn_benchmark.trainer:eta: 2:53:43  iter: 3850  loss: 0.8028 (0.9383)  loss_classifier: 0.2490 (0.3251)  loss_box_reg: 0.1173 (0.1404)  loss_mask: 0.2833 (0.3362)  loss_objectness: 0.0423 (0.0694)  loss_rpn_box_reg: 0.0613 (0.0672)  time: 0.6235 (0.7366)  data: 0.0003 (0.0216)  lr: 0.160000  max mem: 14558
INFO:maskrcnn_benchmark.trainer:eta: 2:53:43  iter: 3850  loss: 0.8914 (0.9393)  loss_classifier: 0.2869 (0.3257)  loss_box_reg: 0.1415 (0.1408)  loss_mask: 0.3062 (0.3357)  loss_objectness: 0.0599 (0.0695)  loss_rpn_box_reg: 0.0660 (0.0676)  time: 0.6244 (0.7366)  data: 0.0004 (0.0216)  lr: 0.160000  max mem: 14752
INFO:maskrcnn_benchmark.trainer:eta: 2:53:43  iter: 3850  loss: 0.7602 (0.9405)  loss_classifier: 0.2398 (0.3253)  loss_box_reg: 0.1208 (0.1414)  loss_mask: 0.2818 (0.3368)  loss_objectness: 0.0459 (0.0697)  loss_rpn_box_reg: 0.0573 (0.0673)  time: 0.6235 (0.7366)  data: 0.0003 (0.0216)  lr: 0.160000  max mem: 14740
2021-10-16 12:25:46,741 maskrcnn_benchmark.trainer INFO: eta: 2:53:43  iter: 3850  loss: 0.8053 (0.9423)  loss_classifier: 0.2469 (0.3265)  loss_box_reg: 0.1228 (0.1413)  loss_mask: 0.2825 (0.3361)  loss_objectness: 0.0499 (0.0702)  loss_rpn_box_reg: 0.0604 (0.0683)  time: 0.6233 (0.7366)  data: 0.0003 (0.0218)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:53:43  iter: 3850  loss: 0.8053 (0.9423)  loss_classifier: 0.2469 (0.3265)  loss_box_reg: 0.1228 (0.1413)  loss_mask: 0.2825 (0.3361)  loss_objectness: 0.0499 (0.0702)  loss_rpn_box_reg: 0.0604 (0.0683)  time: 0.6233 (0.7366)  data: 0.0003 (0.0218)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:53:43  iter: 3850  loss: 0.7802 (0.9416)  loss_classifier: 0.2594 (0.3260)  loss_box_reg: 0.1243 (0.1409)  loss_mask: 0.2863 (0.3368)  loss_objectness: 0.0462 (0.0700)  loss_rpn_box_reg: 0.0551 (0.0680)  time: 0.6232 (0.7366)  data: 0.0003 (0.0216)  lr: 0.160000  max mem: 14650
:::MLLOG {"namespace": "", "time_ms": 1634387146741, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.9423161197714991, "loss_classifier": 0.32653123155623287, "loss_box_reg": 0.1412569863513088, "loss_mask": 0.3360852815772032, "loss_objectness": 0.07017998647041522, "loss_rpn_box_reg": 0.06826263428121418, "time": 0.7366178898997121, "data": 0.021802262888326273, "throughput": 173.76716171993425}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 3850}}
:::MLLOG {"namespace": "", "time_ms": 1634387146742, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 173.76716171993425, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:52:45  iter: 3900  loss: 0.7352 (0.9371)  loss_classifier: 0.2550 (0.3249)  loss_box_reg: 0.1148 (0.1406)  loss_mask: 0.2723 (0.3350)  loss_objectness: 0.0448 (0.0692)  loss_rpn_box_reg: 0.0566 (0.0675)  time: 0.6219 (0.7352)  data: 0.0003 (0.0213)  lr: 0.160000  max mem: 14752
INFO:maskrcnn_benchmark.trainer:eta: 2:52:45  iter: 3900  loss: 0.7376 (0.9384)  loss_classifier: 0.2489 (0.3245)  loss_box_reg: 0.1241 (0.1411)  loss_mask: 0.2836 (0.3362)  loss_objectness: 0.0439 (0.0694)  loss_rpn_box_reg: 0.0497 (0.0672)  time: 0.6210 (0.7352)  data: 0.0003 (0.0213)  lr: 0.160000  max mem: 14740
2021-10-16 12:26:17,821 maskrcnn_benchmark.trainer INFO: eta: 2:52:45  iter: 3900  loss: 0.7278 (0.9402)  loss_classifier: 0.2347 (0.3256)  loss_box_reg: 0.1042 (0.1410)  loss_mask: 0.2816 (0.3354)  loss_objectness: 0.0468 (0.0699)  loss_rpn_box_reg: 0.0479 (0.0682)  time: 0.6211 (0.7351)  data: 0.0003 (0.0215)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:52:45  iter: 3900  loss: 0.7466 (0.9398)  loss_classifier: 0.2511 (0.3253)  loss_box_reg: 0.1147 (0.1407)  loss_mask: 0.2924 (0.3362)  loss_objectness: 0.0495 (0.0697)  loss_rpn_box_reg: 0.0536 (0.0680)  time: 0.6219 (0.7352)  data: 0.0004 (0.0213)  lr: 0.160000  max mem: 14650
INFO:maskrcnn_benchmark.trainer:eta: 2:52:45  iter: 3900  loss: 0.7278 (0.9402)  loss_classifier: 0.2347 (0.3256)  loss_box_reg: 0.1042 (0.1410)  loss_mask: 0.2816 (0.3354)  loss_objectness: 0.0468 (0.0699)  loss_rpn_box_reg: 0.0479 (0.0682)  time: 0.6211 (0.7351)  data: 0.0003 (0.0215)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634387177821, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.9402290183152908, "loss_classifier": 0.3256211449721685, "loss_box_reg": 0.14101324614418, "loss_mask": 0.33544971801149537, "loss_objectness": 0.06994250838095561, "loss_rpn_box_reg": 0.06820240137334435, "time": 0.7351432448778397, "data": 0.02152858324539967, "throughput": 174.11572627763184}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 3900}}
:::MLLOG {"namespace": "", "time_ms": 1634387177821, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 174.11572627763184, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:52:45  iter: 3900  loss: 0.8138 (0.9387)  loss_classifier: 0.2767 (0.3249)  loss_box_reg: 0.1264 (0.1405)  loss_mask: 0.2834 (0.3356)  loss_objectness: 0.0556 (0.0699)  loss_rpn_box_reg: 0.0599 (0.0678)  time: 0.6217 (0.7352)  data: 0.0004 (0.0213)  lr: 0.160000  max mem: 14573
INFO:maskrcnn_benchmark.trainer:eta: 2:52:45  iter: 3900  loss: 0.7641 (0.9364)  loss_classifier: 0.2600 (0.3244)  loss_box_reg: 0.1193 (0.1402)  loss_mask: 0.2946 (0.3357)  loss_objectness: 0.0477 (0.0692)  loss_rpn_box_reg: 0.0466 (0.0670)  time: 0.6222 (0.7352)  data: 0.0003 (0.0213)  lr: 0.160000  max mem: 14558
INFO:maskrcnn_benchmark.trainer:eta: 2:52:45  iter: 3900  loss: 0.7678 (0.9404)  loss_classifier: 0.2578 (0.3257)  loss_box_reg: 0.1284 (0.1416)  loss_mask: 0.2800 (0.3358)  loss_objectness: 0.0481 (0.0695)  loss_rpn_box_reg: 0.0521 (0.0678)  time: 0.6223 (0.7351)  data: 0.0004 (0.0213)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 2:52:45  iter: 3900  loss: 0.7492 (0.9418)  loss_classifier: 0.2505 (0.3259)  loss_box_reg: 0.1142 (0.1412)  loss_mask: 0.2843 (0.3363)  loss_objectness: 0.0488 (0.0706)  loss_rpn_box_reg: 0.0487 (0.0678)  time: 0.6224 (0.7351)  data: 0.0003 (0.0213)  lr: 0.160000  max mem: 14585
INFO:maskrcnn_benchmark.trainer:eta: 2:51:48  iter: 3950  loss: 0.7768 (0.9366)  loss_classifier: 0.2617 (0.3240)  loss_box_reg: 0.1269 (0.1403)  loss_mask: 0.2928 (0.3350)  loss_objectness: 0.0473 (0.0696)  loss_rpn_box_reg: 0.0577 (0.0677)  time: 0.6213 (0.7337)  data: 0.0003 (0.0211)  lr: 0.160000  max mem: 14573
INFO:maskrcnn_benchmark.trainer:eta: 2:51:48  iter: 3950  loss: 0.7712 (0.9349)  loss_classifier: 0.2484 (0.3240)  loss_box_reg: 0.1227 (0.1403)  loss_mask: 0.2918 (0.3343)  loss_objectness: 0.0523 (0.0689)  loss_rpn_box_reg: 0.0580 (0.0674)  time: 0.6219 (0.7337)  data: 0.0004 (0.0211)  lr: 0.160000  max mem: 14752
INFO:maskrcnn_benchmark.trainer:eta: 2:51:48  iter: 3950  loss: 0.7490 (0.9362)  loss_classifier: 0.2439 (0.3236)  loss_box_reg: 0.1115 (0.1408)  loss_mask: 0.2817 (0.3355)  loss_objectness: 0.0462 (0.0691)  loss_rpn_box_reg: 0.0531 (0.0671)  time: 0.6202 (0.7337)  data: 0.0003 (0.0211)  lr: 0.160000  max mem: 14740
2021-10-16 12:26:48,946 maskrcnn_benchmark.trainer INFO: eta: 2:51:48  iter: 3950  loss: 0.7826 (0.9384)  loss_classifier: 0.2703 (0.3249)  loss_box_reg: 0.1252 (0.1408)  loss_mask: 0.2852 (0.3349)  loss_objectness: 0.0464 (0.0697)  loss_rpn_box_reg: 0.0608 (0.0682)  time: 0.6200 (0.7337)  data: 0.0004 (0.0213)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:51:48  iter: 3950  loss: 0.8045 (0.9380)  loss_classifier: 0.2620 (0.3246)  loss_box_reg: 0.1287 (0.1405)  loss_mask: 0.2877 (0.3357)  loss_objectness: 0.0457 (0.0695)  loss_rpn_box_reg: 0.0501 (0.0678)  time: 0.6201 (0.7337)  data: 0.0004 (0.0210)  lr: 0.160000  max mem: 14650
INFO:maskrcnn_benchmark.trainer:eta: 2:51:48  iter: 3950  loss: 0.7826 (0.9384)  loss_classifier: 0.2703 (0.3249)  loss_box_reg: 0.1252 (0.1408)  loss_mask: 0.2852 (0.3349)  loss_objectness: 0.0464 (0.0697)  loss_rpn_box_reg: 0.0608 (0.0682)  time: 0.6200 (0.7337)  data: 0.0004 (0.0213)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634387208947, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.9384283903203433, "loss_classifier": 0.324873064456484, "loss_box_reg": 0.14081728603732124, "loss_mask": 0.33486894549071033, "loss_objectness": 0.06971223532634822, "loss_rpn_box_reg": 0.06815685960735324, "time": 0.733717483085922, "data": 0.02126233939883075, "throughput": 174.45406842651255}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 3950}}
:::MLLOG {"namespace": "", "time_ms": 1634387208947, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 174.45406842651255, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:51:48  iter: 3950  loss: 0.7585 (0.9343)  loss_classifier: 0.2623 (0.3236)  loss_box_reg: 0.1234 (0.1399)  loss_mask: 0.2844 (0.3351)  loss_objectness: 0.0481 (0.0689)  loss_rpn_box_reg: 0.0488 (0.0668)  time: 0.6214 (0.7337)  data: 0.0003 (0.0210)  lr: 0.160000  max mem: 14558
INFO:maskrcnn_benchmark.trainer:eta: 2:51:48  iter: 3950  loss: 0.7365 (0.9385)  loss_classifier: 0.2463 (0.3250)  loss_box_reg: 0.1117 (0.1414)  loss_mask: 0.2928 (0.3352)  loss_objectness: 0.0410 (0.0692)  loss_rpn_box_reg: 0.0543 (0.0676)  time: 0.6214 (0.7337)  data: 0.0003 (0.0210)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 2:51:48  iter: 3950  loss: 0.7860 (0.9398)  loss_classifier: 0.2649 (0.3251)  loss_box_reg: 0.1219 (0.1409)  loss_mask: 0.2793 (0.3356)  loss_objectness: 0.0514 (0.0704)  loss_rpn_box_reg: 0.0560 (0.0677)  time: 0.6214 (0.7337)  data: 0.0003 (0.0210)  lr: 0.160000  max mem: 14585
INFO:maskrcnn_benchmark.trainer:eta: 2:50:53  iter: 4000  loss: 0.7652 (0.9349)  loss_classifier: 0.2552 (0.3233)  loss_box_reg: 0.1147 (0.1401)  loss_mask: 0.2821 (0.3344)  loss_objectness: 0.0458 (0.0694)  loss_rpn_box_reg: 0.0536 (0.0677)  time: 0.6235 (0.7324)  data: 0.0003 (0.0208)  lr: 0.160000  max mem: 14573
INFO:maskrcnn_benchmark.trainer:eta: 2:50:52  iter: 4000  loss: 0.8050 (0.9332)  loss_classifier: 0.2649 (0.3233)  loss_box_reg: 0.1188 (0.1401)  loss_mask: 0.2809 (0.3338)  loss_objectness: 0.0523 (0.0687)  loss_rpn_box_reg: 0.0568 (0.0673)  time: 0.6237 (0.7324)  data: 0.0004 (0.0208)  lr: 0.160000  max mem: 14752
INFO:maskrcnn_benchmark.trainer:eta: 2:50:52  iter: 4000  loss: 0.7306 (0.9322)  loss_classifier: 0.2327 (0.3228)  loss_box_reg: 0.1181 (0.1397)  loss_mask: 0.2702 (0.3344)  loss_objectness: 0.0427 (0.0686)  loss_rpn_box_reg: 0.0597 (0.0667)  time: 0.6239 (0.7324)  data: 0.0003 (0.0208)  lr: 0.160000  max mem: 14558
INFO:maskrcnn_benchmark.trainer:eta: 2:50:52  iter: 4000  loss: 0.7694 (0.9378)  loss_classifier: 0.2627 (0.3244)  loss_box_reg: 0.1184 (0.1406)  loss_mask: 0.2928 (0.3351)  loss_objectness: 0.0443 (0.0702)  loss_rpn_box_reg: 0.0603 (0.0676)  time: 0.6243 (0.7323)  data: 0.0004 (0.0208)  lr: 0.160000  max mem: 14585
INFO:maskrcnn_benchmark.trainer:eta: 2:50:52  iter: 4000  loss: 0.7808 (0.9366)  loss_classifier: 0.2417 (0.3242)  loss_box_reg: 0.1166 (0.1411)  loss_mask: 0.2871 (0.3347)  loss_objectness: 0.0484 (0.0690)  loss_rpn_box_reg: 0.0572 (0.0676)  time: 0.6242 (0.7323)  data: 0.0003 (0.0208)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 2:50:52  iter: 4000  loss: 0.7852 (0.9344)  loss_classifier: 0.2749 (0.3229)  loss_box_reg: 0.1227 (0.1406)  loss_mask: 0.2847 (0.3349)  loss_objectness: 0.0483 (0.0689)  loss_rpn_box_reg: 0.0603 (0.0671)  time: 0.6237 (0.7324)  data: 0.0004 (0.0208)  lr: 0.160000  max mem: 14740
INFO:maskrcnn_benchmark.trainer:eta: 2:50:53  iter: 4000  loss: 0.7992 (0.9360)  loss_classifier: 0.2709 (0.3237)  loss_box_reg: 0.1239 (0.1403)  loss_mask: 0.2903 (0.3351)  loss_objectness: 0.0478 (0.0692)  loss_rpn_box_reg: 0.0590 (0.0677)  time: 0.6236 (0.7324)  data: 0.0004 (0.0208)  lr: 0.160000  max mem: 14650
2021-10-16 12:27:20,140 maskrcnn_benchmark.trainer INFO: eta: 2:50:52  iter: 4000  loss: 0.7859 (0.9362)  loss_classifier: 0.2725 (0.3240)  loss_box_reg: 0.1213 (0.1405)  loss_mask: 0.2921 (0.3343)  loss_objectness: 0.0481 (0.0694)  loss_rpn_box_reg: 0.0452 (0.0679)  time: 0.6237 (0.7323)  data: 0.0003 (0.0210)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:50:52  iter: 4000  loss: 0.7859 (0.9362)  loss_classifier: 0.2725 (0.3240)  loss_box_reg: 0.1213 (0.1405)  loss_mask: 0.2921 (0.3343)  loss_objectness: 0.0481 (0.0694)  loss_rpn_box_reg: 0.0452 (0.0679)  time: 0.6237 (0.7323)  data: 0.0003 (0.0210)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634387240140, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.9361654736325145, "loss_classifier": 0.32396772808767854, "loss_box_reg": 0.14053565658343722, "loss_mask": 0.33428046547994017, "loss_objectness": 0.06943681076075882, "loss_rpn_box_reg": 0.0679448132950347, "time": 0.7323442934751511, "data": 0.02100243431329727, "throughput": 174.7811803006056}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 4000}}
:::MLLOG {"namespace": "", "time_ms": 1634387240140, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 174.7811803006056, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:49:57  iter: 4050  loss: 0.7246 (0.9346)  loss_classifier: 0.2382 (0.3234)  loss_box_reg: 0.1099 (0.1409)  loss_mask: 0.2830 (0.3342)  loss_objectness: 0.0437 (0.0688)  loss_rpn_box_reg: 0.0461 (0.0675)  time: 0.6212 (0.7310)  data: 0.0003 (0.0205)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 2:49:57  iter: 4050  loss: 0.7562 (0.9305)  loss_classifier: 0.2505 (0.3220)  loss_box_reg: 0.1170 (0.1395)  loss_mask: 0.2906 (0.3340)  loss_objectness: 0.0477 (0.0684)  loss_rpn_box_reg: 0.0455 (0.0667)  time: 0.6206 (0.7310)  data: 0.0003 (0.0205)  lr: 0.160000  max mem: 14558
INFO:maskrcnn_benchmark.trainer:eta: 2:49:57  iter: 4050  loss: 0.7817 (0.9360)  loss_classifier: 0.2634 (0.3237)  loss_box_reg: 0.1270 (0.1405)  loss_mask: 0.2840 (0.3345)  loss_objectness: 0.0455 (0.0699)  loss_rpn_box_reg: 0.0549 (0.0675)  time: 0.6203 (0.7310)  data: 0.0004 (0.0205)  lr: 0.160000  max mem: 14585
INFO:maskrcnn_benchmark.trainer:eta: 2:49:57  iter: 4050  loss: 0.7549 (0.9312)  loss_classifier: 0.2520 (0.3224)  loss_box_reg: 0.1132 (0.1398)  loss_mask: 0.2899 (0.3333)  loss_objectness: 0.0397 (0.0685)  loss_rpn_box_reg: 0.0463 (0.0672)  time: 0.6207 (0.7310)  data: 0.0003 (0.0206)  lr: 0.160000  max mem: 14752
INFO:maskrcnn_benchmark.trainer:eta: 2:49:57  iter: 4050  loss: 0.8015 (0.9331)  loss_classifier: 0.2518 (0.3225)  loss_box_reg: 0.1283 (0.1399)  loss_mask: 0.2950 (0.3338)  loss_objectness: 0.0504 (0.0692)  loss_rpn_box_reg: 0.0557 (0.0677)  time: 0.6205 (0.7310)  data: 0.0004 (0.0206)  lr: 0.160000  max mem: 14573
INFO:maskrcnn_benchmark.trainer:eta: 2:49:57  iter: 4050  loss: 0.7653 (0.9326)  loss_classifier: 0.2713 (0.3222)  loss_box_reg: 0.1192 (0.1404)  loss_mask: 0.2808 (0.3344)  loss_objectness: 0.0475 (0.0687)  loss_rpn_box_reg: 0.0566 (0.0670)  time: 0.6209 (0.7310)  data: 0.0003 (0.0205)  lr: 0.160000  max mem: 14740
INFO:maskrcnn_benchmark.trainer:eta: 2:49:57  iter: 4050  loss: 0.7672 (0.9345)  loss_classifier: 0.2401 (0.3230)  loss_box_reg: 0.1171 (0.1401)  loss_mask: 0.2810 (0.3346)  loss_objectness: 0.0578 (0.0691)  loss_rpn_box_reg: 0.0655 (0.0677)  time: 0.6212 (0.7310)  data: 0.0003 (0.0205)  lr: 0.160000  max mem: 14650
2021-10-16 12:27:51,297 maskrcnn_benchmark.trainer INFO: eta: 2:49:57  iter: 4050  loss: 0.7893 (0.9341)  loss_classifier: 0.2468 (0.3231)  loss_box_reg: 0.1081 (0.1403)  loss_mask: 0.2917 (0.3338)  loss_objectness: 0.0424 (0.0692)  loss_rpn_box_reg: 0.0562 (0.0678)  time: 0.6211 (0.7310)  data: 0.0003 (0.0207)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:49:57  iter: 4050  loss: 0.7893 (0.9341)  loss_classifier: 0.2468 (0.3231)  loss_box_reg: 0.1081 (0.1403)  loss_mask: 0.2917 (0.3338)  loss_objectness: 0.0424 (0.0692)  loss_rpn_box_reg: 0.0562 (0.0678)  time: 0.6211 (0.7310)  data: 0.0003 (0.0207)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634387271297, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.9341233383652605, "loss_classifier": 0.32309966125054124, "loss_box_reg": 0.1402618673801951, "loss_mask": 0.3337805866643235, "loss_objectness": 0.06915308759766228, "loss_rpn_box_reg": 0.06782813601770703, "time": 0.7309962021863019, "data": 0.02074812318071907, "throughput": 175.1035089062992}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 4050}}
:::MLLOG {"namespace": "", "time_ms": 1634387271297, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 175.1035089062992, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:49:02  iter: 4100  loss: 0.7209 (0.9284)  loss_classifier: 0.2477 (0.3211)  loss_box_reg: 0.1099 (0.1392)  loss_mask: 0.2744 (0.3334)  loss_objectness: 0.0431 (0.0681)  loss_rpn_box_reg: 0.0542 (0.0666)  time: 0.6197 (0.7297)  data: 0.0003 (0.0203)  lr: 0.160000  max mem: 14558
INFO:maskrcnn_benchmark.trainer:eta: 2:49:02  iter: 4100  loss: 0.7544 (0.9327)  loss_classifier: 0.2713 (0.3226)  loss_box_reg: 0.1204 (0.1406)  loss_mask: 0.2752 (0.3336)  loss_objectness: 0.0471 (0.0685)  loss_rpn_box_reg: 0.0449 (0.0674)  time: 0.6195 (0.7296)  data: 0.0003 (0.0203)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 2:49:02  iter: 4100  loss: 0.7482 (0.9338)  loss_classifier: 0.2572 (0.3228)  loss_box_reg: 0.1178 (0.1401)  loss_mask: 0.2812 (0.3338)  loss_objectness: 0.0455 (0.0696)  loss_rpn_box_reg: 0.0568 (0.0674)  time: 0.6194 (0.7297)  data: 0.0004 (0.0203)  lr: 0.160000  max mem: 14585
INFO:maskrcnn_benchmark.trainer:eta: 2:49:02  iter: 4100  loss: 0.7512 (0.9292)  loss_classifier: 0.2490 (0.3216)  loss_box_reg: 0.1130 (0.1396)  loss_mask: 0.2943 (0.3327)  loss_objectness: 0.0484 (0.0683)  loss_rpn_box_reg: 0.0506 (0.0671)  time: 0.6198 (0.7297)  data: 0.0004 (0.0203)  lr: 0.160000  max mem: 14752
INFO:maskrcnn_benchmark.trainer:eta: 2:49:02  iter: 4100  loss: 0.7572 (0.9312)  loss_classifier: 0.2512 (0.3217)  loss_box_reg: 0.1174 (0.1397)  loss_mask: 0.2891 (0.3333)  loss_objectness: 0.0434 (0.0689)  loss_rpn_box_reg: 0.0528 (0.0676)  time: 0.6190 (0.7297)  data: 0.0003 (0.0203)  lr: 0.160000  max mem: 14573
INFO:maskrcnn_benchmark.trainer:eta: 2:49:02  iter: 4100  loss: 0.7861 (0.9305)  loss_classifier: 0.2595 (0.3213)  loss_box_reg: 0.1216 (0.1401)  loss_mask: 0.2888 (0.3338)  loss_objectness: 0.0487 (0.0684)  loss_rpn_box_reg: 0.0673 (0.0669)  time: 0.6192 (0.7297)  data: 0.0003 (0.0203)  lr: 0.160000  max mem: 14740
2021-10-16 12:28:22,356 maskrcnn_benchmark.trainer INFO: eta: 2:49:02  iter: 4100  loss: 0.7398 (0.9321)  loss_classifier: 0.2455 (0.3223)  loss_box_reg: 0.1111 (0.1400)  loss_mask: 0.2770 (0.3332)  loss_objectness: 0.0518 (0.0689)  loss_rpn_box_reg: 0.0557 (0.0677)  time: 0.6195 (0.7297)  data: 0.0003 (0.0205)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:49:02  iter: 4100  loss: 0.7398 (0.9321)  loss_classifier: 0.2455 (0.3223)  loss_box_reg: 0.1111 (0.1400)  loss_mask: 0.2770 (0.3332)  loss_objectness: 0.0518 (0.0689)  loss_rpn_box_reg: 0.0557 (0.0677)  time: 0.6195 (0.7297)  data: 0.0003 (0.0205)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634387302357, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.9321092145544727, "loss_classifier": 0.3223056246104037, "loss_box_reg": 0.13999091417227713, "loss_mask": 0.33320977627867604, "loss_objectness": 0.06892342305583198, "loss_rpn_box_reg": 0.0676794769058413, "time": 0.7296570847092605, "data": 0.02050052794014535, "throughput": 175.4248710557}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 4100}}
INFO:maskrcnn_benchmark.trainer:eta: 2:49:02  iter: 4100  loss: 0.7615 (0.9327)  loss_classifier: 0.2610 (0.3222)  loss_box_reg: 0.1164 (0.1399)  loss_mask: 0.2884 (0.3340)  loss_objectness: 0.0436 (0.0688)  loss_rpn_box_reg: 0.0523 (0.0677)  time: 0.6195 (0.7297)  data: 0.0004 (0.0203)  lr: 0.160000  max mem: 14650
:::MLLOG {"namespace": "", "time_ms": 1634387302357, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 175.4248710557, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:48:07  iter: 4150  loss: 0.7290 (0.9305)  loss_classifier: 0.2256 (0.3213)  loss_box_reg: 0.1065 (0.1396)  loss_mask: 0.2797 (0.3334)  loss_objectness: 0.0418 (0.0686)  loss_rpn_box_reg: 0.0444 (0.0675)  time: 0.6187 (0.7284)  data: 0.0003 (0.0200)  lr: 0.160000  max mem: 14650
INFO:maskrcnn_benchmark.trainer:eta: 2:48:07  iter: 4150  loss: 0.7092 (0.9282)  loss_classifier: 0.2359 (0.3204)  loss_box_reg: 0.1108 (0.1398)  loss_mask: 0.2732 (0.3331)  loss_objectness: 0.0405 (0.0682)  loss_rpn_box_reg: 0.0519 (0.0668)  time: 0.6188 (0.7284)  data: 0.0003 (0.0201)  lr: 0.160000  max mem: 14740
2021-10-16 12:28:53,433 maskrcnn_benchmark.trainer INFO: eta: 2:48:07  iter: 4150  loss: 0.7498 (0.9302)  loss_classifier: 0.2320 (0.3215)  loss_box_reg: 0.1012 (0.1397)  loss_mask: 0.2845 (0.3326)  loss_objectness: 0.0442 (0.0687)  loss_rpn_box_reg: 0.0481 (0.0676)  time: 0.6187 (0.7284)  data: 0.0003 (0.0203)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:48:07  iter: 4150  loss: 0.7498 (0.9302)  loss_classifier: 0.2320 (0.3215)  loss_box_reg: 0.1012 (0.1397)  loss_mask: 0.2845 (0.3326)  loss_objectness: 0.0442 (0.0687)  loss_rpn_box_reg: 0.0481 (0.0676)  time: 0.6187 (0.7284)  data: 0.0003 (0.0203)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634387333433, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.9302232155383351, "loss_classifier": 0.321516522196043, "loss_box_reg": 0.13974174111627088, "loss_mask": 0.3325999513986599, "loss_objectness": 0.06873513399567231, "loss_rpn_box_reg": 0.06762986726812031, "time": 0.7283543252944946, "data": 0.020258303952504355, "throughput": 175.73864196968407}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 4150}}
:::MLLOG {"namespace": "", "time_ms": 1634387333433, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 175.73864196968407, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:48:07  iter: 4150  loss: 0.7681 (0.9273)  loss_classifier: 0.2745 (0.3208)  loss_box_reg: 0.1189 (0.1394)  loss_mask: 0.2784 (0.3321)  loss_objectness: 0.0451 (0.0680)  loss_rpn_box_reg: 0.0553 (0.0670)  time: 0.6194 (0.7284)  data: 0.0004 (0.0201)  lr: 0.160000  max mem: 14752
INFO:maskrcnn_benchmark.trainer:eta: 2:48:07  iter: 4150  loss: 0.8035 (0.9293)  loss_classifier: 0.2872 (0.3210)  loss_box_reg: 0.1267 (0.1395)  loss_mask: 0.2901 (0.3327)  loss_objectness: 0.0502 (0.0687)  loss_rpn_box_reg: 0.0584 (0.0675)  time: 0.6190 (0.7284)  data: 0.0004 (0.0201)  lr: 0.160000  max mem: 14573
INFO:maskrcnn_benchmark.trainer:eta: 2:48:07  iter: 4150  loss: 0.6987 (0.9260)  loss_classifier: 0.2123 (0.3201)  loss_box_reg: 0.0902 (0.1389)  loss_mask: 0.2776 (0.3327)  loss_objectness: 0.0417 (0.0678)  loss_rpn_box_reg: 0.0475 (0.0664)  time: 0.6198 (0.7284)  data: 0.0003 (0.0201)  lr: 0.160000  max mem: 14558
INFO:maskrcnn_benchmark.trainer:eta: 2:48:07  iter: 4150  loss: 0.7216 (0.9318)  loss_classifier: 0.2319 (0.3220)  loss_box_reg: 0.1073 (0.1399)  loss_mask: 0.2870 (0.3333)  loss_objectness: 0.0442 (0.0694)  loss_rpn_box_reg: 0.0535 (0.0672)  time: 0.6200 (0.7283)  data: 0.0003 (0.0200)  lr: 0.160000  max mem: 14591
INFO:maskrcnn_benchmark.trainer:eta: 2:48:07  iter: 4150  loss: 0.7536 (0.9307)  loss_classifier: 0.2493 (0.3218)  loss_box_reg: 0.1149 (0.1404)  loss_mask: 0.2824 (0.3329)  loss_objectness: 0.0476 (0.0683)  loss_rpn_box_reg: 0.0581 (0.0672)  time: 0.6201 (0.7283)  data: 0.0004 (0.0200)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 2:47:14  iter: 4200  loss: 0.7369 (0.9263)  loss_classifier: 0.2530 (0.3195)  loss_box_reg: 0.1189 (0.1396)  loss_mask: 0.2901 (0.3326)  loss_objectness: 0.0372 (0.0679)  loss_rpn_box_reg: 0.0567 (0.0667)  time: 0.6222 (0.7271)  data: 0.0003 (0.0198)  lr: 0.160000  max mem: 14740
2021-10-16 12:29:24,640 maskrcnn_benchmark.trainer INFO: eta: 2:47:14  iter: 4200  loss: 0.7680 (0.9284)  loss_classifier: 0.2596 (0.3207)  loss_box_reg: 0.1164 (0.1395)  loss_mask: 0.2888 (0.3321)  loss_objectness: 0.0451 (0.0685)  loss_rpn_box_reg: 0.0629 (0.0675)  time: 0.6221 (0.7271)  data: 0.0003 (0.0200)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:47:14  iter: 4200  loss: 0.7588 (0.9286)  loss_classifier: 0.2687 (0.3205)  loss_box_reg: 0.1270 (0.1394)  loss_mask: 0.2964 (0.3329)  loss_objectness: 0.0498 (0.0684)  loss_rpn_box_reg: 0.0504 (0.0674)  time: 0.6221 (0.7271)  data: 0.0004 (0.0198)  lr: 0.160000  max mem: 14650
INFO:maskrcnn_benchmark.trainer:eta: 2:47:14  iter: 4200  loss: 0.7680 (0.9284)  loss_classifier: 0.2596 (0.3207)  loss_box_reg: 0.1164 (0.1395)  loss_mask: 0.2888 (0.3321)  loss_objectness: 0.0451 (0.0685)  loss_rpn_box_reg: 0.0629 (0.0675)  time: 0.6221 (0.7271)  data: 0.0003 (0.0200)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634387364641, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.9283685233266581, "loss_classifier": 0.32068257058482796, "loss_box_reg": 0.139520337312826, "loss_mask": 0.33208953579621653, "loss_objectness": 0.068535022979957, "loss_rpn_box_reg": 0.06754105702419544, "time": 0.7271137888090952, "data": 0.02002364720617022, "throughput": 176.03847151577892}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 4200}}
:::MLLOG {"namespace": "", "time_ms": 1634387364641, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 176.03847151577892, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:47:14  iter: 4200  loss: 0.7975 (0.9274)  loss_classifier: 0.2768 (0.3202)  loss_box_reg: 0.1301 (0.1392)  loss_mask: 0.2935 (0.3321)  loss_objectness: 0.0465 (0.0685)  loss_rpn_box_reg: 0.0517 (0.0674)  time: 0.6230 (0.7271)  data: 0.0004 (0.0199)  lr: 0.160000  max mem: 14573
INFO:maskrcnn_benchmark.trainer:eta: 2:47:14  iter: 4200  loss: 0.7566 (0.9254)  loss_classifier: 0.2623 (0.3199)  loss_box_reg: 0.1230 (0.1391)  loss_mask: 0.2752 (0.3316)  loss_objectness: 0.0446 (0.0679)  loss_rpn_box_reg: 0.0479 (0.0669)  time: 0.6232 (0.7271)  data: 0.0004 (0.0199)  lr: 0.160000  max mem: 14752
INFO:maskrcnn_benchmark.trainer:eta: 2:47:14  iter: 4200  loss: 0.8134 (0.9300)  loss_classifier: 0.2866 (0.3211)  loss_box_reg: 0.1256 (0.1397)  loss_mask: 0.2878 (0.3328)  loss_objectness: 0.0510 (0.0691)  loss_rpn_box_reg: 0.0651 (0.0672)  time: 0.6235 (0.7271)  data: 0.0004 (0.0198)  lr: 0.160000  max mem: 14591
INFO:maskrcnn_benchmark.trainer:eta: 2:47:14  iter: 4200  loss: 0.7989 (0.9288)  loss_classifier: 0.2929 (0.3211)  loss_box_reg: 0.1222 (0.1401)  loss_mask: 0.2830 (0.3324)  loss_objectness: 0.0423 (0.0681)  loss_rpn_box_reg: 0.0455 (0.0672)  time: 0.6236 (0.7271)  data: 0.0003 (0.0198)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 2:47:14  iter: 4200  loss: 0.7824 (0.9240)  loss_classifier: 0.2738 (0.3193)  loss_box_reg: 0.1233 (0.1386)  loss_mask: 0.2753 (0.3322)  loss_objectness: 0.0549 (0.0676)  loss_rpn_box_reg: 0.0565 (0.0663)  time: 0.6235 (0.7271)  data: 0.0003 (0.0198)  lr: 0.160000  max mem: 14558
INFO:maskrcnn_benchmark.trainer:eta: 2:46:20  iter: 4250  loss: 0.8125 (0.9238)  loss_classifier: 0.2766 (0.3193)  loss_box_reg: 0.1205 (0.1389)  loss_mask: 0.2874 (0.3311)  loss_objectness: 0.0508 (0.0677)  loss_rpn_box_reg: 0.0597 (0.0668)  time: 0.6187 (0.7259)  data: 0.0004 (0.0196)  lr: 0.160000  max mem: 14752
INFO:maskrcnn_benchmark.trainer:eta: 2:46:21  iter: 4250  loss: 0.8244 (0.9255)  loss_classifier: 0.2576 (0.3194)  loss_box_reg: 0.1281 (0.1390)  loss_mask: 0.2943 (0.3316)  loss_objectness: 0.0521 (0.0682)  loss_rpn_box_reg: 0.0526 (0.0673)  time: 0.6180 (0.7259)  data: 0.0003 (0.0196)  lr: 0.160000  max mem: 14573
INFO:maskrcnn_benchmark.trainer:eta: 2:46:20  iter: 4250  loss: 0.7446 (0.9245)  loss_classifier: 0.2343 (0.3188)  loss_box_reg: 0.1197 (0.1394)  loss_mask: 0.2838 (0.3321)  loss_objectness: 0.0525 (0.0677)  loss_rpn_box_reg: 0.0565 (0.0666)  time: 0.6180 (0.7259)  data: 0.0003 (0.0196)  lr: 0.160000  max mem: 14740
2021-10-16 12:29:55,760 maskrcnn_benchmark.trainer INFO: eta: 2:46:20  iter: 4250  loss: 0.7569 (0.9265)  loss_classifier: 0.2349 (0.3199)  loss_box_reg: 0.1223 (0.1393)  loss_mask: 0.2935 (0.3316)  loss_objectness: 0.0497 (0.0683)  loss_rpn_box_reg: 0.0544 (0.0675)  time: 0.6178 (0.7259)  data: 0.0003 (0.0198)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:46:20  iter: 4250  loss: 0.7729 (0.9223)  loss_classifier: 0.2525 (0.3185)  loss_box_reg: 0.1161 (0.1384)  loss_mask: 0.2967 (0.3316)  loss_objectness: 0.0556 (0.0674)  loss_rpn_box_reg: 0.0525 (0.0663)  time: 0.6189 (0.7259)  data: 0.0004 (0.0196)  lr: 0.160000  max mem: 14558
INFO:maskrcnn_benchmark.trainer:eta: 2:46:20  iter: 4250  loss: 0.7569 (0.9265)  loss_classifier: 0.2349 (0.3199)  loss_box_reg: 0.1223 (0.1393)  loss_mask: 0.2935 (0.3316)  loss_objectness: 0.0497 (0.0683)  loss_rpn_box_reg: 0.0544 (0.0675)  time: 0.6178 (0.7259)  data: 0.0003 (0.0198)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:46:21  iter: 4250  loss: 0.7526 (0.9268)  loss_classifier: 0.2499 (0.3198)  loss_box_reg: 0.1174 (0.1391)  loss_mask: 0.2853 (0.3324)  loss_objectness: 0.0435 (0.0682)  loss_rpn_box_reg: 0.0517 (0.0673)  time: 0.6179 (0.7259)  data: 0.0004 (0.0196)  lr: 0.160000  max mem: 14650
:::MLLOG {"namespace": "", "time_ms": 1634387395760, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.9265396728305255, "loss_classifier": 0.3198994775887798, "loss_box_reg": 0.13928680223133416, "loss_mask": 0.33157087565169613, "loss_objectness": 0.06832380450604593, "loss_rpn_box_reg": 0.0674587132989922, "time": 0.7258817223380594, "data": 0.01979339532291188, "throughput": 176.33726826419186}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 4250}}
INFO:maskrcnn_benchmark.trainer:eta: 2:46:20  iter: 4250  loss: 0.7626 (0.9271)  loss_classifier: 0.2345 (0.3204)  loss_box_reg: 0.1146 (0.1398)  loss_mask: 0.2885 (0.3318)  loss_objectness: 0.0442 (0.0679)  loss_rpn_box_reg: 0.0569 (0.0671)  time: 0.6189 (0.7259)  data: 0.0003 (0.0196)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 2:46:20  iter: 4250  loss: 0.7760 (0.9281)  loss_classifier: 0.2567 (0.3204)  loss_box_reg: 0.1207 (0.1395)  loss_mask: 0.2884 (0.3323)  loss_objectness: 0.0430 (0.0689)  loss_rpn_box_reg: 0.0568 (0.0671)  time: 0.6188 (0.7259)  data: 0.0004 (0.0196)  lr: 0.160000  max mem: 14591
:::MLLOG {"namespace": "", "time_ms": 1634387395760, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 176.33726826419186, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:45:28  iter: 4300  loss: 0.7812 (0.9236)  loss_classifier: 0.2520 (0.3187)  loss_box_reg: 0.1201 (0.1388)  loss_mask: 0.2782 (0.3311)  loss_objectness: 0.0443 (0.0680)  loss_rpn_box_reg: 0.0499 (0.0671)  time: 0.6249 (0.7247)  data: 0.0003 (0.0194)  lr: 0.160000  max mem: 14573
INFO:maskrcnn_benchmark.trainer:eta: 2:45:28  iter: 4300  loss: 0.7500 (0.9223)  loss_classifier: 0.2417 (0.3187)  loss_box_reg: 0.1196 (0.1388)  loss_mask: 0.2788 (0.3305)  loss_objectness: 0.0450 (0.0675)  loss_rpn_box_reg: 0.0624 (0.0668)  time: 0.6245 (0.7247)  data: 0.0004 (0.0194)  lr: 0.160000  max mem: 14752
INFO:maskrcnn_benchmark.trainer:eta: 2:45:28  iter: 4300  loss: 0.7788 (0.9265)  loss_classifier: 0.2833 (0.3198)  loss_box_reg: 0.1261 (0.1393)  loss_mask: 0.2753 (0.3317)  loss_objectness: 0.0525 (0.0687)  loss_rpn_box_reg: 0.0438 (0.0670)  time: 0.6245 (0.7247)  data: 0.0004 (0.0193)  lr: 0.160000  max mem: 14591
INFO:maskrcnn_benchmark.trainer:eta: 2:45:28  iter: 4300  loss: 0.7546 (0.9209)  loss_classifier: 0.2311 (0.3179)  loss_box_reg: 0.1182 (0.1383)  loss_mask: 0.2888 (0.3312)  loss_objectness: 0.0415 (0.0672)  loss_rpn_box_reg: 0.0536 (0.0662)  time: 0.6247 (0.7247)  data: 0.0004 (0.0194)  lr: 0.160000  max mem: 14558
INFO:maskrcnn_benchmark.trainer:eta: 2:45:28  iter: 4300  loss: 0.8063 (0.9230)  loss_classifier: 0.2769 (0.3182)  loss_box_reg: 0.1295 (0.1392)  loss_mask: 0.2877 (0.3315)  loss_objectness: 0.0486 (0.0676)  loss_rpn_box_reg: 0.0649 (0.0665)  time: 0.6244 (0.7247)  data: 0.0004 (0.0194)  lr: 0.160000  max mem: 14740
INFO:maskrcnn_benchmark.trainer:eta: 2:45:28  iter: 4300  loss: 0.7816 (0.9256)  loss_classifier: 0.2569 (0.3197)  loss_box_reg: 0.1204 (0.1396)  loss_mask: 0.2972 (0.3313)  loss_objectness: 0.0469 (0.0678)  loss_rpn_box_reg: 0.0694 (0.0671)  time: 0.6245 (0.7247)  data: 0.0003 (0.0193)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 2:45:28  iter: 4300  loss: 0.7500 (0.9253)  loss_classifier: 0.2529 (0.3192)  loss_box_reg: 0.1233 (0.1390)  loss_mask: 0.2795 (0.3319)  loss_objectness: 0.0465 (0.0680)  loss_rpn_box_reg: 0.0441 (0.0672)  time: 0.6242 (0.7247)  data: 0.0003 (0.0194)  lr: 0.160000  max mem: 14650
2021-10-16 12:30:27,015 maskrcnn_benchmark.trainer INFO: eta: 2:45:28  iter: 4300  loss: 0.7492 (0.9249)  loss_classifier: 0.2552 (0.3192)  loss_box_reg: 0.1127 (0.1391)  loss_mask: 0.2802 (0.3311)  loss_objectness: 0.0452 (0.0681)  loss_rpn_box_reg: 0.0582 (0.0674)  time: 0.6242 (0.7247)  data: 0.0003 (0.0196)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:45:28  iter: 4300  loss: 0.7492 (0.9249)  loss_classifier: 0.2552 (0.3192)  loss_box_reg: 0.1127 (0.1391)  loss_mask: 0.2802 (0.3311)  loss_objectness: 0.0452 (0.0681)  loss_rpn_box_reg: 0.0582 (0.0674)  time: 0.6242 (0.7247)  data: 0.0003 (0.0196)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634387427016, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.9249348921207494, "loss_classifier": 0.3192016194708819, "loss_box_reg": 0.13909304703991904, "loss_mask": 0.3310924281387828, "loss_objectness": 0.06814490386696402, "loss_rpn_box_reg": 0.06740289410424613, "time": 0.7247099921869677, "data": 0.019568369388580323, "throughput": 176.62237499131558}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 4300}}
:::MLLOG {"namespace": "", "time_ms": 1634387427016, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 176.62237499131558, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:44:39  iter: 4350  loss: 0.7039 (0.9217)  loss_classifier: 0.2247 (0.3178)  loss_box_reg: 0.1056 (0.1385)  loss_mask: 0.2809 (0.3306)  loss_objectness: 0.0435 (0.0678)  loss_rpn_box_reg: 0.0437 (0.0670)  time: 0.6248 (0.7238)  data: 0.0003 (0.0192)  lr: 0.160000  max mem: 14573
INFO:maskrcnn_benchmark.trainer:eta: 2:44:39  iter: 4350  loss: 0.7182 (0.9202)  loss_classifier: 0.2423 (0.3178)  loss_box_reg: 0.1050 (0.1385)  loss_mask: 0.2752 (0.3300)  loss_objectness: 0.0450 (0.0673)  loss_rpn_box_reg: 0.0473 (0.0667)  time: 0.6245 (0.7238)  data: 0.0004 (0.0192)  lr: 0.160000  max mem: 14752
INFO:maskrcnn_benchmark.trainer:eta: 2:44:39  iter: 4350  loss: 0.6645 (0.9190)  loss_classifier: 0.2224 (0.3171)  loss_box_reg: 0.0953 (0.1380)  loss_mask: 0.2852 (0.3307)  loss_objectness: 0.0409 (0.0670)  loss_rpn_box_reg: 0.0454 (0.0661)  time: 0.6231 (0.7238)  data: 0.0003 (0.0192)  lr: 0.160000  max mem: 14558
INFO:maskrcnn_benchmark.trainer:eta: 2:44:39  iter: 4350  loss: 0.7051 (0.9235)  loss_classifier: 0.2394 (0.3189)  loss_box_reg: 0.1134 (0.1394)  loss_mask: 0.2805 (0.3308)  loss_objectness: 0.0423 (0.0675)  loss_rpn_box_reg: 0.0519 (0.0669)  time: 0.6231 (0.7237)  data: 0.0003 (0.0191)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 2:44:39  iter: 4350  loss: 0.7328 (0.9247)  loss_classifier: 0.2409 (0.3190)  loss_box_reg: 0.1067 (0.1391)  loss_mask: 0.2900 (0.3312)  loss_objectness: 0.0478 (0.0685)  loss_rpn_box_reg: 0.0501 (0.0669)  time: 0.6232 (0.7237)  data: 0.0003 (0.0191)  lr: 0.160000  max mem: 14591
2021-10-16 12:30:59,077 maskrcnn_benchmark.trainer INFO: eta: 2:44:39  iter: 4350  loss: 0.7903 (0.9232)  loss_classifier: 0.2578 (0.3184)  loss_box_reg: 0.1286 (0.1389)  loss_mask: 0.2917 (0.3307)  loss_objectness: 0.0547 (0.0680)  loss_rpn_box_reg: 0.0608 (0.0673)  time: 0.6246 (0.7238)  data: 0.0004 (0.0193)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:44:39  iter: 4350  loss: 0.7497 (0.9239)  loss_classifier: 0.2479 (0.3186)  loss_box_reg: 0.1239 (0.1388)  loss_mask: 0.2868 (0.3314)  loss_objectness: 0.0423 (0.0679)  loss_rpn_box_reg: 0.0528 (0.0672)  time: 0.6240 (0.7238)  data: 0.0003 (0.0191)  lr: 0.160000  max mem: 14650
INFO:maskrcnn_benchmark.trainer:eta: 2:44:39  iter: 4350  loss: 0.7903 (0.9232)  loss_classifier: 0.2578 (0.3184)  loss_box_reg: 0.1286 (0.1389)  loss_mask: 0.2917 (0.3307)  loss_objectness: 0.0547 (0.0680)  loss_rpn_box_reg: 0.0608 (0.0673)  time: 0.6246 (0.7238)  data: 0.0004 (0.0193)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:44:39  iter: 4350  loss: 0.7540 (0.9211)  loss_classifier: 0.2558 (0.3174)  loss_box_reg: 0.1161 (0.1389)  loss_mask: 0.2818 (0.3310)  loss_objectness: 0.0486 (0.0674)  loss_rpn_box_reg: 0.0514 (0.0665)  time: 0.6247 (0.7238)  data: 0.0003 (0.0192)  lr: 0.160000  max mem: 14740
:::MLLOG {"namespace": "", "time_ms": 1634387459077, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.9231928993984201, "loss_classifier": 0.3183758959876395, "loss_box_reg": 0.13886568566329308, "loss_mask": 0.3306527588216738, "loss_objectness": 0.06795745350163558, "loss_rpn_box_reg": 0.06734110587394272, "time": 0.723750467738886, "data": 0.01934853060492154, "throughput": 176.8565350981987}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 4350}}
:::MLLOG {"namespace": "", "time_ms": 1634387459077, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 176.8565350981987, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:44:04  iter: 4400  loss: 0.7644 (0.9174)  loss_classifier: 0.2667 (0.3166)  loss_box_reg: 0.1240 (0.1378)  loss_mask: 0.2839 (0.3302)  loss_objectness: 0.0408 (0.0668)  loss_rpn_box_reg: 0.0418 (0.0660)  time: 0.6211 (0.7238)  data: 0.0004 (0.0189)  lr: 0.160000  max mem: 14558
INFO:maskrcnn_benchmark.trainer:eta: 2:44:04  iter: 4400  loss: 0.7625 (0.9216)  loss_classifier: 0.2453 (0.3181)  loss_box_reg: 0.1147 (0.1391)  loss_mask: 0.2753 (0.3302)  loss_objectness: 0.0544 (0.0674)  loss_rpn_box_reg: 0.0577 (0.0669)  time: 0.6208 (0.7238)  data: 0.0003 (0.0189)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 2:44:04  iter: 4400  loss: 0.8312 (0.9232)  loss_classifier: 0.2712 (0.3184)  loss_box_reg: 0.1272 (0.1389)  loss_mask: 0.2895 (0.3307)  loss_objectness: 0.0530 (0.0684)  loss_rpn_box_reg: 0.0654 (0.0669)  time: 0.6209 (0.7238)  data: 0.0004 (0.0189)  lr: 0.160000  max mem: 14591
INFO:maskrcnn_benchmark.trainer:eta: 2:44:04  iter: 4400  loss: 0.7434 (0.9187)  loss_classifier: 0.2548 (0.3171)  loss_box_reg: 0.1093 (0.1383)  loss_mask: 0.2900 (0.3295)  loss_objectness: 0.0376 (0.0671)  loss_rpn_box_reg: 0.0563 (0.0667)  time: 0.6201 (0.7238)  data: 0.0004 (0.0190)  lr: 0.160000  max mem: 14752
INFO:maskrcnn_benchmark.trainer:eta: 2:44:04  iter: 4400  loss: 0.7444 (0.9197)  loss_classifier: 0.2489 (0.3170)  loss_box_reg: 0.1109 (0.1382)  loss_mask: 0.2795 (0.3301)  loss_objectness: 0.0466 (0.0675)  loss_rpn_box_reg: 0.0494 (0.0669)  time: 0.6206 (0.7238)  data: 0.0003 (0.0190)  lr: 0.160000  max mem: 14573
INFO:maskrcnn_benchmark.trainer:eta: 2:44:04  iter: 4400  loss: 0.7618 (0.9192)  loss_classifier: 0.2371 (0.3166)  loss_box_reg: 0.1175 (0.1386)  loss_mask: 0.2901 (0.3305)  loss_objectness: 0.0468 (0.0671)  loss_rpn_box_reg: 0.0629 (0.0664)  time: 0.6194 (0.7238)  data: 0.0003 (0.0189)  lr: 0.160000  max mem: 14740
2021-10-16 12:31:35,643 maskrcnn_benchmark.trainer INFO: eta: 2:44:04  iter: 4400  loss: 0.8544 (0.9216)  loss_classifier: 0.2812 (0.3178)  loss_box_reg: 0.1321 (0.1387)  loss_mask: 0.2942 (0.3301)  loss_objectness: 0.0504 (0.0678)  loss_rpn_box_reg: 0.0667 (0.0672)  time: 0.6195 (0.7238)  data: 0.0004 (0.0191)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:44:04  iter: 4400  loss: 0.8544 (0.9216)  loss_classifier: 0.2812 (0.3178)  loss_box_reg: 0.1321 (0.1387)  loss_mask: 0.2942 (0.3301)  loss_objectness: 0.0504 (0.0678)  loss_rpn_box_reg: 0.0667 (0.0672)  time: 0.6195 (0.7238)  data: 0.0004 (0.0191)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634387495643, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.9215903539616953, "loss_classifier": 0.3177575715309517, "loss_box_reg": 0.13869076654140372, "loss_mask": 0.33013117602603004, "loss_objectness": 0.06777863289017907, "loss_rpn_box_reg": 0.06723220738518813, "time": 0.7238364416360855, "data": 0.01913341435519132, "throughput": 176.83552890855006}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 4400}}
INFO:maskrcnn_benchmark.trainer:eta: 2:44:04  iter: 4400  loss: 0.7513 (0.9220)  loss_classifier: 0.2681 (0.3178)  loss_box_reg: 0.1153 (0.1385)  loss_mask: 0.2739 (0.3309)  loss_objectness: 0.0476 (0.0677)  loss_rpn_box_reg: 0.0519 (0.0671)  time: 0.6195 (0.7238)  data: 0.0003 (0.0189)  lr: 0.160000  max mem: 14650
:::MLLOG {"namespace": "", "time_ms": 1634387495643, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 176.83552890855006, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:43:12  iter: 4450  loss: 0.8147 (0.9161)  loss_classifier: 0.2870 (0.3160)  loss_box_reg: 0.1225 (0.1377)  loss_mask: 0.3016 (0.3298)  loss_objectness: 0.0460 (0.0666)  loss_rpn_box_reg: 0.0676 (0.0660)  time: 0.6213 (0.7227)  data: 0.0004 (0.0187)  lr: 0.160000  max mem: 14558
INFO:maskrcnn_benchmark.trainer:eta: 2:43:12  iter: 4450  loss: 0.7932 (0.9172)  loss_classifier: 0.2644 (0.3165)  loss_box_reg: 0.1204 (0.1381)  loss_mask: 0.2945 (0.3291)  loss_objectness: 0.0446 (0.0670)  loss_rpn_box_reg: 0.0623 (0.0667)  time: 0.6211 (0.7227)  data: 0.0003 (0.0188)  lr: 0.160000  max mem: 14752
INFO:maskrcnn_benchmark.trainer:eta: 2:43:12  iter: 4450  loss: 0.7087 (0.9201)  loss_classifier: 0.2507 (0.3175)  loss_box_reg: 0.1154 (0.1389)  loss_mask: 0.2833 (0.3297)  loss_objectness: 0.0403 (0.0672)  loss_rpn_box_reg: 0.0382 (0.0668)  time: 0.6214 (0.7227)  data: 0.0003 (0.0187)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 2:43:12  iter: 4450  loss: 0.7341 (0.9216)  loss_classifier: 0.2455 (0.3177)  loss_box_reg: 0.1131 (0.1387)  loss_mask: 0.2869 (0.3302)  loss_objectness: 0.0497 (0.0681)  loss_rpn_box_reg: 0.0540 (0.0668)  time: 0.6214 (0.7227)  data: 0.0004 (0.0187)  lr: 0.160000  max mem: 14591
INFO:maskrcnn_benchmark.trainer:eta: 2:43:12  iter: 4450  loss: 0.8029 (0.9184)  loss_classifier: 0.2681 (0.3165)  loss_box_reg: 0.1287 (0.1380)  loss_mask: 0.2990 (0.3296)  loss_objectness: 0.0518 (0.0674)  loss_rpn_box_reg: 0.0656 (0.0668)  time: 0.6214 (0.7227)  data: 0.0003 (0.0188)  lr: 0.160000  max mem: 14573
INFO:maskrcnn_benchmark.trainer:eta: 2:43:12  iter: 4450  loss: 0.7916 (0.9177)  loss_classifier: 0.2570 (0.3160)  loss_box_reg: 0.1298 (0.1384)  loss_mask: 0.2945 (0.3300)  loss_objectness: 0.0529 (0.0669)  loss_rpn_box_reg: 0.0563 (0.0664)  time: 0.6203 (0.7227)  data: 0.0003 (0.0187)  lr: 0.160000  max mem: 14740
2021-10-16 12:32:06,698 maskrcnn_benchmark.trainer INFO: eta: 2:43:12  iter: 4450  loss: 0.7369 (0.9197)  loss_classifier: 0.2375 (0.3170)  loss_box_reg: 0.1123 (0.1385)  loss_mask: 0.2837 (0.3296)  loss_objectness: 0.0439 (0.0675)  loss_rpn_box_reg: 0.0439 (0.0671)  time: 0.6204 (0.7227)  data: 0.0003 (0.0189)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:43:12  iter: 4450  loss: 0.7807 (0.9205)  loss_classifier: 0.2584 (0.3173)  loss_box_reg: 0.1131 (0.1384)  loss_mask: 0.2983 (0.3304)  loss_objectness: 0.0482 (0.0675)  loss_rpn_box_reg: 0.0526 (0.0670)  time: 0.6201 (0.7227)  data: 0.0003 (0.0187)  lr: 0.160000  max mem: 14654
INFO:maskrcnn_benchmark.trainer:eta: 2:43:12  iter: 4450  loss: 0.7369 (0.9197)  loss_classifier: 0.2375 (0.3170)  loss_box_reg: 0.1123 (0.1385)  loss_mask: 0.2837 (0.3296)  loss_objectness: 0.0439 (0.0675)  loss_rpn_box_reg: 0.0439 (0.0671)  time: 0.6204 (0.7227)  data: 0.0003 (0.0189)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634387526698, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.9197166657983588, "loss_classifier": 0.3170195354069217, "loss_box_reg": 0.13846551660066367, "loss_mask": 0.329627174745115, "loss_objectness": 0.06750699351510304, "loss_rpn_box_reg": 0.06709744588147556, "time": 0.7226820427112365, "data": 0.01892270784699515, "throughput": 177.11800271083422}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 4450}}
:::MLLOG {"namespace": "", "time_ms": 1634387526698, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 177.11800271083422, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:42:21  iter: 4500  loss: 0.7878 (0.9158)  loss_classifier: 0.2626 (0.3158)  loss_box_reg: 0.1302 (0.1379)  loss_mask: 0.2891 (0.3287)  loss_objectness: 0.0473 (0.0668)  loss_rpn_box_reg: 0.0512 (0.0666)  time: 0.6182 (0.7216)  data: 0.0004 (0.0186)  lr: 0.160000  max mem: 14752
INFO:maskrcnn_benchmark.trainer:eta: 2:42:21  iter: 4500  loss: 0.8000 (0.9143)  loss_classifier: 0.2672 (0.3152)  loss_box_reg: 0.1246 (0.1374)  loss_mask: 0.2844 (0.3293)  loss_objectness: 0.0604 (0.0665)  loss_rpn_box_reg: 0.0622 (0.0659)  time: 0.6187 (0.7216)  data: 0.0004 (0.0185)  lr: 0.160000  max mem: 14558
INFO:maskrcnn_benchmark.trainer:eta: 2:42:20  iter: 4500  loss: 0.7743 (0.9200)  loss_classifier: 0.2591 (0.3171)  loss_box_reg: 0.1179 (0.1385)  loss_mask: 0.2824 (0.3297)  loss_objectness: 0.0491 (0.0680)  loss_rpn_box_reg: 0.0571 (0.0667)  time: 0.6187 (0.7215)  data: 0.0004 (0.0185)  lr: 0.160000  max mem: 14591
INFO:maskrcnn_benchmark.trainer:eta: 2:42:20  iter: 4500  loss: 0.7827 (0.9185)  loss_classifier: 0.2691 (0.3168)  loss_box_reg: 0.1223 (0.1387)  loss_mask: 0.2828 (0.3292)  loss_objectness: 0.0465 (0.0670)  loss_rpn_box_reg: 0.0689 (0.0668)  time: 0.6187 (0.7215)  data: 0.0003 (0.0185)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 2:42:21  iter: 4500  loss: 0.8021 (0.9169)  loss_classifier: 0.2628 (0.3159)  loss_box_reg: 0.1263 (0.1379)  loss_mask: 0.2981 (0.3292)  loss_objectness: 0.0494 (0.0672)  loss_rpn_box_reg: 0.0405 (0.0667)  time: 0.6182 (0.7216)  data: 0.0003 (0.0186)  lr: 0.160000  max mem: 14573
INFO:maskrcnn_benchmark.trainer:eta: 2:42:21  iter: 4500  loss: 0.7098 (0.9159)  loss_classifier: 0.2438 (0.3153)  loss_box_reg: 0.1037 (0.1382)  loss_mask: 0.2679 (0.3295)  loss_objectness: 0.0474 (0.0668)  loss_rpn_box_reg: 0.0537 (0.0662)  time: 0.6183 (0.7216)  data: 0.0003 (0.0185)  lr: 0.160000  max mem: 14740
2021-10-16 12:32:37,750 maskrcnn_benchmark.trainer INFO: eta: 2:42:20  iter: 4500  loss: 0.8072 (0.9182)  loss_classifier: 0.2799 (0.3164)  loss_box_reg: 0.1217 (0.1383)  loss_mask: 0.2848 (0.3292)  loss_objectness: 0.0511 (0.0673)  loss_rpn_box_reg: 0.0489 (0.0670)  time: 0.6181 (0.7216)  data: 0.0003 (0.0187)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:42:21  iter: 4500  loss: 0.7280 (0.9188)  loss_classifier: 0.2317 (0.3166)  loss_box_reg: 0.1174 (0.1382)  loss_mask: 0.2749 (0.3299)  loss_objectness: 0.0458 (0.0673)  loss_rpn_box_reg: 0.0478 (0.0669)  time: 0.6185 (0.7216)  data: 0.0003 (0.0185)  lr: 0.160000  max mem: 14654
INFO:maskrcnn_benchmark.trainer:eta: 2:42:20  iter: 4500  loss: 0.8072 (0.9182)  loss_classifier: 0.2799 (0.3164)  loss_box_reg: 0.1217 (0.1383)  loss_mask: 0.2848 (0.3292)  loss_objectness: 0.0511 (0.0673)  loss_rpn_box_reg: 0.0489 (0.0670)  time: 0.6181 (0.7216)  data: 0.0003 (0.0187)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634387557750, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.9181958304246267, "loss_classifier": 0.31643012600806025, "loss_box_reg": 0.13828991166331495, "loss_mask": 0.3291679476963149, "loss_objectness": 0.06732325957591336, "loss_rpn_box_reg": 0.0669845859406309, "time": 0.7215527163611518, "data": 0.018716980404324002, "throughput": 177.3952160356547}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 4500}}
:::MLLOG {"namespace": "", "time_ms": 1634387557750, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 177.3952160356547, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:41:47  iter: 4550  loss: 0.7693 (0.9144)  loss_classifier: 0.2684 (0.3152)  loss_box_reg: 0.1251 (0.1377)  loss_mask: 0.2920 (0.3282)  loss_objectness: 0.0445 (0.0667)  loss_rpn_box_reg: 0.0542 (0.0666)  time: 0.6218 (0.7218)  data: 0.0003 (0.0184)  lr: 0.160000  max mem: 14752
INFO:maskrcnn_benchmark.trainer:eta: 2:41:47  iter: 4550  loss: 0.7674 (0.9153)  loss_classifier: 0.2564 (0.3153)  loss_box_reg: 0.1154 (0.1377)  loss_mask: 0.2842 (0.3287)  loss_objectness: 0.0511 (0.0670)  loss_rpn_box_reg: 0.0562 (0.0666)  time: 0.6219 (0.7218)  data: 0.0003 (0.0184)  lr: 0.160000  max mem: 14573
INFO:maskrcnn_benchmark.trainer:eta: 2:41:47  iter: 4550  loss: 0.7958 (0.9189)  loss_classifier: 0.2698 (0.3166)  loss_box_reg: 0.1108 (0.1384)  loss_mask: 0.2907 (0.3293)  loss_objectness: 0.0528 (0.0678)  loss_rpn_box_reg: 0.0609 (0.0667)  time: 0.6219 (0.7217)  data: 0.0003 (0.0183)  lr: 0.160000  max mem: 14591
INFO:maskrcnn_benchmark.trainer:eta: 2:41:47  iter: 4550  loss: 0.7945 (0.9169)  loss_classifier: 0.2537 (0.3162)  loss_box_reg: 0.1216 (0.1385)  loss_mask: 0.2780 (0.3288)  loss_objectness: 0.0459 (0.0668)  loss_rpn_box_reg: 0.0555 (0.0667)  time: 0.6219 (0.7217)  data: 0.0003 (0.0183)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 2:41:47  iter: 4550  loss: 0.7801 (0.9143)  loss_classifier: 0.2612 (0.3146)  loss_box_reg: 0.1326 (0.1380)  loss_mask: 0.2889 (0.3290)  loss_objectness: 0.0500 (0.0666)  loss_rpn_box_reg: 0.0507 (0.0661)  time: 0.6224 (0.7218)  data: 0.0003 (0.0183)  lr: 0.160000  max mem: 14740
INFO:maskrcnn_benchmark.trainer:eta: 2:41:47  iter: 4550  loss: 0.7958 (0.9130)  loss_classifier: 0.2763 (0.3147)  loss_box_reg: 0.1229 (0.1373)  loss_mask: 0.2999 (0.3288)  loss_objectness: 0.0468 (0.0663)  loss_rpn_box_reg: 0.0543 (0.0658)  time: 0.6218 (0.7218)  data: 0.0004 (0.0183)  lr: 0.160000  max mem: 14558
2021-10-16 12:33:14,715 maskrcnn_benchmark.trainer INFO: eta: 2:41:47  iter: 4550  loss: 0.7235 (0.9167)  loss_classifier: 0.2433 (0.3158)  loss_box_reg: 0.1148 (0.1381)  loss_mask: 0.2776 (0.3287)  loss_objectness: 0.0456 (0.0672)  loss_rpn_box_reg: 0.0450 (0.0669)  time: 0.6224 (0.7217)  data: 0.0003 (0.0185)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:41:47  iter: 4550  loss: 0.7897 (0.9175)  loss_classifier: 0.2546 (0.3160)  loss_box_reg: 0.1267 (0.1381)  loss_mask: 0.2805 (0.3294)  loss_objectness: 0.0461 (0.0671)  loss_rpn_box_reg: 0.0560 (0.0668)  time: 0.6224 (0.7218)  data: 0.0004 (0.0183)  lr: 0.160000  max mem: 14654
INFO:maskrcnn_benchmark.trainer:eta: 2:41:47  iter: 4550  loss: 0.7235 (0.9167)  loss_classifier: 0.2433 (0.3158)  loss_box_reg: 0.1148 (0.1381)  loss_mask: 0.2776 (0.3287)  loss_objectness: 0.0456 (0.0672)  loss_rpn_box_reg: 0.0450 (0.0669)  time: 0.6224 (0.7217)  data: 0.0003 (0.0185)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634387594715, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.916721043586731, "loss_classifier": 0.31584370621285596, "loss_box_reg": 0.13814048815472563, "loss_mask": 0.32866312645293855, "loss_objectness": 0.0671667384151574, "loss_rpn_box_reg": 0.06690698483017284, "time": 0.7217477583623194, "data": 0.018515935730148148, "throughput": 177.34727751761667}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 4550}}
:::MLLOG {"namespace": "", "time_ms": 1634387594715, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 177.34727751761667, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
:::MLLOG {"namespace": "", "time_ms": 1634387633606, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 111, "epoch_num": 5}}
:::MLLOG {"namespace": "", "time_ms": 1634387633607, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 112, "first_epoch_num": 5}}
:::MLLOG {"namespace": "", "time_ms": 1634387633607, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 113, "epoch_num": 5}}
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
2021-10-16 12:33:53,945 maskrcnn_benchmark.data.build WARNING: When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
Done (t=0.56s)
creating index...
Done (t=0.56s)
creating index...
index created!
shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]Done (t=0.56s)
creating index...
Done (t=0.55s)
creating index...
index created!
shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]index created!
index created!
shapes=None
passthrough=True
Done (t=0.55s)
creating index...
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]shapes=None
passthrough=True
Done (t=0.55s)
creating index...
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]Done (t=0.55s)
creating index...
index created!
index created!
shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
Done (t=0.55s)
creating index...
  0% 0/40 [00:00<?, ?it/s]index created!
shapes=None
passthrough=True
creating index...
GT annotations already exist!
2021-10-16 12:33:54,531 maskrcnn_benchmark.inference INFO: Start evaluation on coco_2017_val dataset(5000 images).
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]index created!
shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]  2% 1/40 [00:00<00:11,  3.43it/s]  2% 1/40 [00:00<00:11,  3.48it/s]  2% 1/40 [00:00<00:11,  3.47it/s]  2% 1/40 [00:00<00:11,  3.42it/s]  2% 1/40 [00:00<00:11,  3.32it/s]  2% 1/40 [00:00<00:12,  3.25it/s]  2% 1/40 [00:00<00:12,  3.17it/s]  2% 1/40 [00:00<00:11,  3.29it/s]  5% 2/40 [00:00<00:11,  3.43it/s]  5% 2/40 [00:00<00:10,  3.54it/s]  5% 2/40 [00:00<00:10,  3.47it/s]  5% 2/40 [00:00<00:11,  3.41it/s]  5% 2/40 [00:00<00:11,  3.44it/s]  5% 2/40 [00:00<00:11,  3.33it/s]  5% 2/40 [00:00<00:11,  3.30it/s]  5% 2/40 [00:00<00:11,  3.35it/s]  8% 3/40 [00:00<00:10,  3.46it/s]  8% 3/40 [00:00<00:10,  3.58it/s]  8% 3/40 [00:00<00:10,  3.53it/s]  8% 3/40 [00:00<00:10,  3.41it/s]  8% 3/40 [00:00<00:10,  3.44it/s]  8% 3/40 [00:00<00:10,  3.38it/s]  8% 3/40 [00:00<00:10,  3.38it/s]  8% 3/40 [00:00<00:10,  3.38it/s] 10% 4/40 [00:01<00:10,  3.48it/s] 10% 4/40 [00:01<00:10,  3.51it/s] 10% 4/40 [00:01<00:10,  3.52it/s] 10% 4/40 [00:01<00:10,  3.42it/s] 10% 4/40 [00:01<00:10,  3.44it/s] 10% 4/40 [00:01<00:10,  3.40it/s] 10% 4/40 [00:01<00:10,  3.44it/s] 10% 4/40 [00:01<00:10,  3.39it/s] 12% 5/40 [00:01<00:10,  3.47it/s] 12% 5/40 [00:01<00:09,  3.50it/s] 12% 5/40 [00:01<00:09,  3.51it/s] 12% 5/40 [00:01<00:10,  3.46it/s] 12% 5/40 [00:01<00:10,  3.47it/s] 12% 5/40 [00:01<00:10,  3.47it/s] 12% 5/40 [00:01<00:10,  3.46it/s] 12% 5/40 [00:01<00:10,  3.46it/s] 15% 6/40 [00:01<00:09,  3.52it/s] 15% 6/40 [00:01<00:09,  3.46it/s] 15% 6/40 [00:01<00:09,  3.50it/s] 15% 6/40 [00:01<00:09,  3.50it/s] 15% 6/40 [00:01<00:09,  3.44it/s] 15% 6/40 [00:01<00:09,  3.53it/s] 15% 6/40 [00:01<00:09,  3.50it/s] 15% 6/40 [00:01<00:09,  3.47it/s] 18% 7/40 [00:01<00:09,  3.53it/s] 18% 7/40 [00:02<00:09,  3.46it/s] 18% 7/40 [00:02<00:09,  3.48it/s] 18% 7/40 [00:01<00:09,  3.51it/s] 18% 7/40 [00:02<00:09,  3.47it/s] 18% 7/40 [00:02<00:09,  3.49it/s] 18% 7/40 [00:01<00:09,  3.50it/s] 18% 7/40 [00:02<00:09,  3.53it/s] 20% 8/40 [00:02<00:09,  3.48it/s] 20% 8/40 [00:02<00:09,  3.45it/s] 20% 8/40 [00:02<00:09,  3.47it/s] 20% 8/40 [00:02<00:08,  3.56it/s] 20% 8/40 [00:02<00:09,  3.51it/s] 20% 8/40 [00:02<00:09,  3.50it/s] 20% 8/40 [00:02<00:09,  3.41it/s] 20% 8/40 [00:02<00:09,  3.53it/s] 22% 9/40 [00:02<00:08,  3.49it/s] 22% 9/40 [00:02<00:08,  3.48it/s] 22% 9/40 [00:02<00:08,  3.47it/s] 22% 9/40 [00:02<00:08,  3.53it/s] 22% 9/40 [00:02<00:08,  3.51it/s] 22% 9/40 [00:02<00:08,  3.50it/s] 22% 9/40 [00:02<00:09,  3.43it/s] 22% 9/40 [00:02<00:08,  3.58it/s] 25% 10/40 [00:02<00:08,  3.52it/s] 25% 10/40 [00:02<00:08,  3.46it/s] 25% 10/40 [00:02<00:08,  3.44it/s] 25% 10/40 [00:02<00:08,  3.54it/s] 25% 10/40 [00:02<00:08,  3.58it/s] 25% 10/40 [00:02<00:08,  3.50it/s] 25% 10/40 [00:02<00:08,  3.49it/s] 25% 10/40 [00:02<00:08,  3.56it/s] 28% 11/40 [00:03<00:08,  3.54it/s] 28% 11/40 [00:03<00:08,  3.45it/s] 28% 11/40 [00:03<00:08,  3.45it/s] 28% 11/40 [00:03<00:08,  3.52it/s] 28% 11/40 [00:03<00:08,  3.56it/s] 28% 11/40 [00:03<00:08,  3.54it/s] 28% 11/40 [00:03<00:08,  3.48it/s] 28% 11/40 [00:03<00:08,  3.54it/s] 30% 12/40 [00:03<00:08,  3.48it/s] 30% 12/40 [00:03<00:07,  3.50it/s] 30% 12/40 [00:03<00:08,  3.46it/s] 30% 12/40 [00:03<00:07,  3.56it/s] 30% 12/40 [00:03<00:07,  3.57it/s] 30% 12/40 [00:03<00:07,  3.55it/s] 30% 12/40 [00:03<00:07,  3.51it/s] 30% 12/40 [00:03<00:07,  3.56it/s] 32% 13/40 [00:03<00:07,  3.55it/s] 32% 13/40 [00:03<00:07,  3.63it/s] 32% 13/40 [00:03<00:07,  3.51it/s] 32% 13/40 [00:03<00:07,  3.48it/s] 32% 13/40 [00:03<00:07,  3.52it/s] 32% 13/40 [00:03<00:07,  3.52it/s] 32% 13/40 [00:03<00:07,  3.54it/s] 32% 13/40 [00:03<00:07,  3.49it/s] 35% 14/40 [00:03<00:07,  3.56it/s] 35% 14/40 [00:04<00:07,  3.55it/s] 35% 14/40 [00:03<00:07,  3.58it/s] 35% 14/40 [00:03<00:07,  3.59it/s] 35% 14/40 [00:04<00:07,  3.49it/s] 35% 14/40 [00:03<00:07,  3.55it/s] 35% 14/40 [00:04<00:07,  3.49it/s] 35% 14/40 [00:03<00:07,  3.50it/s] 38% 15/40 [00:04<00:06,  3.59it/s] 38% 15/40 [00:04<00:07,  3.54it/s] 38% 15/40 [00:04<00:06,  3.64it/s] 38% 15/40 [00:04<00:07,  3.54it/s] 38% 15/40 [00:04<00:07,  3.52it/s] 38% 15/40 [00:04<00:07,  3.51it/s] 38% 15/40 [00:04<00:07,  3.52it/s] 38% 15/40 [00:04<00:07,  3.46it/s] 40% 16/40 [00:04<00:06,  3.57it/s] 40% 16/40 [00:04<00:06,  3.55it/s] 40% 16/40 [00:04<00:06,  3.58it/s] 40% 16/40 [00:04<00:06,  3.54it/s] 40% 16/40 [00:04<00:06,  3.48it/s] 40% 16/40 [00:04<00:06,  3.49it/s] 40% 16/40 [00:04<00:06,  3.49it/s] 40% 16/40 [00:04<00:06,  3.49it/s] 42% 17/40 [00:04<00:06,  3.63it/s] 42% 17/40 [00:04<00:06,  3.64it/s] 42% 17/40 [00:04<00:06,  3.58it/s] 42% 17/40 [00:04<00:06,  3.52it/s] 42% 17/40 [00:04<00:06,  3.47it/s] 42% 17/40 [00:04<00:06,  3.56it/s] 42% 17/40 [00:04<00:06,  3.48it/s] 42% 17/40 [00:04<00:06,  3.52it/s] 45% 18/40 [00:05<00:06,  3.59it/s] 45% 18/40 [00:05<00:06,  3.66it/s] 45% 18/40 [00:05<00:06,  3.53it/s] 45% 18/40 [00:05<00:06,  3.52it/s] 45% 18/40 [00:05<00:06,  3.48it/s] 45% 18/40 [00:05<00:06,  3.52it/s] 45% 18/40 [00:05<00:06,  3.45it/s] 45% 18/40 [00:05<00:06,  3.51it/s] 48% 19/40 [00:05<00:05,  3.61it/s] 48% 19/40 [00:05<00:05,  3.62it/s] 48% 19/40 [00:05<00:05,  3.52it/s] 48% 19/40 [00:05<00:06,  3.49it/s] 48% 19/40 [00:05<00:06,  3.49it/s] 48% 19/40 [00:05<00:05,  3.52it/s] 48% 19/40 [00:05<00:06,  3.49it/s] 48% 19/40 [00:05<00:05,  3.53it/s] 50% 20/40 [00:05<00:05,  3.59it/s] 50% 20/40 [00:05<00:05,  3.60it/s] 50% 20/40 [00:05<00:05,  3.53it/s] 50% 20/40 [00:05<00:05,  3.52it/s] 50% 20/40 [00:05<00:05,  3.46it/s] 50% 20/40 [00:05<00:05,  3.50it/s] 50% 20/40 [00:05<00:05,  3.50it/s] 50% 20/40 [00:05<00:05,  3.53it/s] 52% 21/40 [00:05<00:05,  3.61it/s] 52% 21/40 [00:05<00:05,  3.57it/s] 52% 21/40 [00:06<00:05,  3.57it/s] 52% 21/40 [00:05<00:05,  3.50it/s] 52% 21/40 [00:06<00:05,  3.49it/s] 52% 21/40 [00:05<00:05,  3.53it/s] 52% 21/40 [00:05<00:05,  3.54it/s] 52% 21/40 [00:06<00:05,  3.49it/s] 55% 22/40 [00:06<00:05,  3.56it/s] 55% 22/40 [00:06<00:04,  3.64it/s] 55% 22/40 [00:06<00:05,  3.53it/s] 55% 22/40 [00:06<00:05,  3.52it/s] 55% 22/40 [00:06<00:05,  3.45it/s] 55% 22/40 [00:06<00:05,  3.59it/s] 55% 22/40 [00:06<00:05,  3.48it/s] 55% 22/40 [00:06<00:05,  3.46it/s] 57% 23/40 [00:06<00:04,  3.60it/s] 57% 23/40 [00:06<00:04,  3.63it/s] 57% 23/40 [00:06<00:04,  3.55it/s] 57% 23/40 [00:06<00:04,  3.50it/s] 57% 23/40 [00:06<00:04,  3.44it/s] 57% 23/40 [00:06<00:04,  3.55it/s] 57% 23/40 [00:06<00:04,  3.50it/s] 57% 23/40 [00:06<00:04,  3.46it/s] 60% 24/40 [00:06<00:04,  3.64it/s] 60% 24/40 [00:06<00:04,  3.60it/s] 60% 24/40 [00:06<00:04,  3.55it/s] 60% 24/40 [00:06<00:04,  3.52it/s] 60% 24/40 [00:06<00:04,  3.58it/s] 60% 24/40 [00:06<00:04,  3.46it/s] 60% 24/40 [00:06<00:04,  3.49it/s] 60% 24/40 [00:06<00:04,  3.51it/s] 62% 25/40 [00:07<00:04,  3.63it/s] 62% 25/40 [00:07<00:04,  3.56it/s] 62% 25/40 [00:07<00:04,  3.60it/s] 62% 25/40 [00:07<00:04,  3.49it/s] 62% 25/40 [00:07<00:04,  3.58it/s] 62% 25/40 [00:07<00:04,  3.47it/s] 62% 25/40 [00:07<00:04,  3.47it/s] 62% 25/40 [00:07<00:04,  3.47it/s] 65% 26/40 [00:07<00:03,  3.58it/s] 65% 26/40 [00:07<00:03,  3.53it/s] 65% 26/40 [00:07<00:03,  3.60it/s] 65% 26/40 [00:07<00:03,  3.55it/s] 65% 26/40 [00:07<00:03,  3.56it/s] 65% 26/40 [00:07<00:04,  3.45it/s] 65% 26/40 [00:07<00:03,  3.52it/s] 65% 26/40 [00:07<00:04,  3.47it/s] 68% 27/40 [00:07<00:03,  3.60it/s] 68% 27/40 [00:07<00:03,  3.61it/s] 68% 27/40 [00:07<00:03,  3.57it/s] 68% 27/40 [00:07<00:03,  3.52it/s] 68% 27/40 [00:07<00:03,  3.51it/s] 68% 27/40 [00:07<00:03,  3.49it/s] 68% 27/40 [00:07<00:03,  3.53it/s] 68% 27/40 [00:07<00:03,  3.51it/s] 70% 28/40 [00:07<00:03,  3.65it/s] 70% 28/40 [00:07<00:03,  3.61it/s] 70% 28/40 [00:07<00:03,  3.56it/s] 70% 28/40 [00:08<00:03,  3.49it/s] 70% 28/40 [00:07<00:03,  3.54it/s] 70% 28/40 [00:08<00:03,  3.46it/s] 70% 28/40 [00:07<00:03,  3.52it/s] 70% 28/40 [00:08<00:03,  3.51it/s] 72% 29/40 [00:08<00:03,  3.60it/s] 72% 29/40 [00:08<00:03,  3.59it/s] 72% 29/40 [00:08<00:03,  3.57it/s] 72% 29/40 [00:08<00:03,  3.55it/s] 72% 29/40 [00:08<00:03,  3.50it/s] 72% 29/40 [00:08<00:03,  3.53it/s] 72% 29/40 [00:08<00:03,  3.45it/s] 72% 29/40 [00:08<00:03,  3.52it/s] 75% 30/40 [00:08<00:02,  3.53it/s] 75% 30/40 [00:08<00:02,  3.65it/s] 75% 30/40 [00:08<00:02,  3.56it/s] 75% 30/40 [00:08<00:02,  3.51it/s] 75% 30/40 [00:08<00:02,  3.52it/s] 75% 30/40 [00:08<00:02,  3.52it/s] 75% 30/40 [00:08<00:02,  3.51it/s] 75% 30/40 [00:08<00:02,  3.43it/s] 78% 31/40 [00:08<00:02,  3.63it/s] 78% 31/40 [00:08<00:02,  3.51it/s] 78% 31/40 [00:08<00:02,  3.52it/s] 78% 31/40 [00:08<00:02,  3.50it/s] 78% 31/40 [00:08<00:02,  3.54it/s] 78% 31/40 [00:08<00:02,  3.53it/s] 78% 31/40 [00:08<00:02,  3.47it/s] 78% 31/40 [00:08<00:02,  3.49it/s] 80% 32/40 [00:08<00:02,  3.62it/s] 80% 32/40 [00:08<00:02,  3.54it/s] 80% 32/40 [00:09<00:02,  3.49it/s] 80% 32/40 [00:09<00:02,  3.51it/s] 80% 32/40 [00:09<00:02,  3.49it/s] 80% 32/40 [00:09<00:02,  3.50it/s] 80% 32/40 [00:09<00:02,  3.49it/s] 80% 32/40 [00:09<00:02,  3.50it/s] 82% 33/40 [00:09<00:01,  3.61it/s] 82% 33/40 [00:09<00:01,  3.57it/s] 82% 33/40 [00:09<00:02,  3.47it/s] 82% 33/40 [00:09<00:01,  3.52it/s] 82% 33/40 [00:09<00:01,  3.56it/s] 82% 33/40 [00:09<00:01,  3.54it/s] 82% 33/40 [00:09<00:02,  3.46it/s] 82% 33/40 [00:09<00:02,  3.44it/s] 85% 34/40 [00:09<00:01,  3.59it/s] 85% 34/40 [00:09<00:01,  3.53it/s] 85% 34/40 [00:09<00:01,  3.49it/s] 85% 34/40 [00:09<00:01,  3.55it/s] 85% 34/40 [00:09<00:01,  3.61it/s] 85% 34/40 [00:09<00:01,  3.51it/s] 85% 34/40 [00:09<00:01,  3.46it/s] 85% 34/40 [00:09<00:01,  3.48it/s] 88% 35/40 [00:09<00:01,  3.58it/s] 88% 35/40 [00:09<00:01,  3.56it/s] 88% 35/40 [00:09<00:01,  3.48it/s] 88% 35/40 [00:09<00:01,  3.55it/s] 88% 35/40 [00:09<00:01,  3.50it/s] 88% 35/40 [00:09<00:01,  3.51it/s] 88% 35/40 [00:10<00:01,  3.45it/s] 88% 35/40 [00:10<00:01,  3.43it/s] 90% 36/40 [00:10<00:01,  3.62it/s] 90% 36/40 [00:10<00:01,  3.55it/s] 90% 36/40 [00:10<00:01,  3.50it/s] 90% 36/40 [00:10<00:01,  3.55it/s] 90% 36/40 [00:10<00:01,  3.48it/s] 90% 36/40 [00:10<00:01,  3.47it/s] 90% 36/40 [00:10<00:01,  3.44it/s] 90% 36/40 [00:10<00:01,  3.44it/s] 92% 37/40 [00:10<00:00,  3.60it/s] 92% 37/40 [00:10<00:00,  3.54it/s] 92% 37/40 [00:10<00:00,  3.59it/s] 92% 37/40 [00:10<00:00,  3.45it/s] 92% 37/40 [00:10<00:00,  3.53it/s] 92% 37/40 [00:10<00:00,  3.45it/s] 92% 37/40 [00:10<00:00,  3.48it/s] 92% 37/40 [00:10<00:00,  3.44it/s] 95% 38/40 [00:10<00:00,  3.58it/s] 95% 38/40 [00:10<00:00,  3.57it/s] 95% 38/40 [00:10<00:00,  3.63it/s] 98% 39/40 [00:10<00:00,  4.41it/s] 95% 38/40 [00:10<00:00,  3.47it/s] 95% 38/40 [00:10<00:00,  3.87it/s] 95% 38/40 [00:10<00:00,  3.60it/s] 98% 39/40 [00:10<00:00,  3.85it/s] 95% 38/40 [00:10<00:00,  3.49it/s] 95% 38/40 [00:10<00:00,  3.50it/s] 98% 39/40 [00:10<00:00,  4.28it/s] 98% 39/40 [00:10<00:00,  4.25it/s]100% 40/40 [00:10<00:00,  3.66it/s]
100% 40/40 [00:10<00:00,  4.66it/s]100% 40/40 [00:10<00:00,  3.67it/s]
100% 40/40 [00:11<00:00,  4.74it/s]100% 40/40 [00:11<00:00,  3.60it/s]
 98% 39/40 [00:11<00:00,  3.74it/s] 98% 39/40 [00:11<00:00,  3.59it/s]100% 40/40 [00:11<00:00,  4.47it/s]100% 40/40 [00:11<00:00,  3.61it/s]
100% 40/40 [00:11<00:00,  3.61it/s]
 98% 39/40 [00:11<00:00,  3.54it/s] 98% 39/40 [00:11<00:00,  3.53it/s]100% 40/40 [00:11<00:00,  3.58it/s]
100% 40/40 [00:11<00:00,  4.41it/s]100% 40/40 [00:11<00:00,  3.56it/s]
100% 40/40 [00:11<00:00,  3.56it/s]
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.249728 (0.017999564361572264 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.202770 (0.017924432373046875 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.170698 (0.017873117446899414 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.273168 (0.018037068557739257 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.205730 (0.017929167556762694 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.234584 (0.017975333786010742 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.237331 (0.017979729843139648 s / img per device, on 8 devices)
2021-10-16 12:34:05,719 maskrcnn_benchmark.inference INFO: Total inference time: 0:00:11.187478 (0.01789996452331543 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.187478 (0.01789996452331543 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.026s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.026s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.027s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.027s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.027s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.027s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.027s
2021-10-16 12:34:05,936 maskrcnn_benchmark.timed_section INFO: EXPOSED: Launching evaluation preparation tasks took 0.033s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.033s
:::MLLOG {"namespace": "", "time_ms": 1634387645939, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 168, "first_epoch_num": 6, "epoch_count": 1}}
:::MLLOG {"namespace": "", "time_ms": 1634387645940, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 169, "epoch_num": 6}}
INFO:maskrcnn_benchmark.timed_section:Prepping took 8.769 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 8.913 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 9.011 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 9.116 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 9.132 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 9.172 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 9.388 seconds total
2021-10-16 12:34:16,415 maskrcnn_benchmark.timed_section INFO: Prepping took 9.414 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 9.414 seconds total
INFO:maskrcnn_benchmark.trainer:eta: 2:42:50  iter: 4600  loss: 0.7933 (0.9128)  loss_classifier: 0.2658 (0.3140)  loss_box_reg: 0.1145 (0.1377)  loss_mask: 0.2920 (0.3285)  loss_objectness: 0.0460 (0.0664)  loss_rpn_box_reg: 0.0503 (0.0661)  time: 0.6185 (0.7292)  data: 0.0003 (0.0208)  lr: 0.160000  max mem: 14740
2021-10-16 12:34:24,881 maskrcnn_benchmark.trainer INFO: eta: 2:42:50  iter: 4600  loss: 0.7641 (0.9153)  loss_classifier: 0.2539 (0.3153)  loss_box_reg: 0.1169 (0.1380)  loss_mask: 0.2870 (0.3282)  loss_objectness: 0.0508 (0.0670)  loss_rpn_box_reg: 0.0634 (0.0668)  time: 0.6150 (0.7292)  data: 0.0004 (0.0210)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:42:50  iter: 4600  loss: 0.7980 (0.9159)  loss_classifier: 0.2743 (0.3154)  loss_box_reg: 0.1235 (0.1379)  loss_mask: 0.2880 (0.3290)  loss_objectness: 0.0475 (0.0669)  loss_rpn_box_reg: 0.0482 (0.0667)  time: 0.6184 (0.7292)  data: 0.0004 (0.0208)  lr: 0.160000  max mem: 14654
INFO:maskrcnn_benchmark.trainer:eta: 2:42:50  iter: 4600  loss: 0.7641 (0.9153)  loss_classifier: 0.2539 (0.3153)  loss_box_reg: 0.1169 (0.1380)  loss_mask: 0.2870 (0.3282)  loss_objectness: 0.0508 (0.0670)  loss_rpn_box_reg: 0.0634 (0.0668)  time: 0.6150 (0.7292)  data: 0.0004 (0.0210)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634387664881, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.9152880318657212, "loss_classifier": 0.31525387112537157, "loss_box_reg": 0.1379785020171118, "loss_mask": 0.3282278561948434, "loss_objectness": 0.06699134720934798, "loss_rpn_box_reg": 0.06683645574922632, "time": 0.7291561003353285, "data": 0.021000918823739757, "throughput": 175.54540096576662}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 4600}}
:::MLLOG {"namespace": "", "time_ms": 1634387664881, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 175.54540096576662, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:42:50  iter: 4600  loss: 0.7804 (0.9127)  loss_classifier: 0.2585 (0.3145)  loss_box_reg: 0.1160 (0.1375)  loss_mask: 0.2854 (0.3277)  loss_objectness: 0.0549 (0.0665)  loss_rpn_box_reg: 0.0573 (0.0665)  time: 0.6174 (0.7292)  data: 0.0004 (0.0208)  lr: 0.160000  max mem: 14752
INFO:maskrcnn_benchmark.trainer:eta: 2:42:50  iter: 4600  loss: 0.7434 (0.9139)  loss_classifier: 0.2489 (0.3148)  loss_box_reg: 0.1161 (0.1375)  loss_mask: 0.2795 (0.3282)  loss_objectness: 0.0479 (0.0668)  loss_rpn_box_reg: 0.0569 (0.0666)  time: 0.6170 (0.7292)  data: 0.0004 (0.0208)  lr: 0.160000  max mem: 14573
INFO:maskrcnn_benchmark.trainer:eta: 2:42:50  iter: 4600  loss: 0.8033 (0.9114)  loss_classifier: 0.2624 (0.3140)  loss_box_reg: 0.1189 (0.1371)  loss_mask: 0.2874 (0.3283)  loss_objectness: 0.0503 (0.0661)  loss_rpn_box_reg: 0.0543 (0.0658)  time: 0.6195 (0.7292)  data: 0.0004 (0.0208)  lr: 0.160000  max mem: 14558
INFO:maskrcnn_benchmark.trainer:eta: 2:42:50  iter: 4600  loss: 0.7982 (0.9173)  loss_classifier: 0.2737 (0.3161)  loss_box_reg: 0.1140 (0.1382)  loss_mask: 0.2786 (0.3288)  loss_objectness: 0.0558 (0.0677)  loss_rpn_box_reg: 0.0548 (0.0666)  time: 0.6191 (0.7292)  data: 0.0004 (0.0208)  lr: 0.160000  max mem: 14591
INFO:maskrcnn_benchmark.trainer:eta: 2:42:50  iter: 4600  loss: 0.7744 (0.9152)  loss_classifier: 0.2562 (0.3155)  loss_box_reg: 0.1164 (0.1383)  loss_mask: 0.2805 (0.3282)  loss_objectness: 0.0471 (0.0666)  loss_rpn_box_reg: 0.0515 (0.0666)  time: 0.6191 (0.7291)  data: 0.0003 (0.0208)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.187s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.188s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.189s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.191s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.191s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.191s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.193s
2021-10-16 12:34:25,076 maskrcnn_benchmark.timed_section INFO: EXPOSED: Launching evaluation task took 0.193s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.193s
Evaluating predictions
Loading and preparing results...
resFile is ./inference/coco_2017_val/segm.json
Loading and preparing results...
resFile is ./inference/coco_2017_val/bbox.json
DONE (t=0.94s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=2.06s)
Running per image evaluation...
Evaluate annotation type *segm*
DONE (t=1.92s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.27569
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.47913
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.28642
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.15402
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.30151
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.35696
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.25531
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.40780
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.42908
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.25098
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.46581
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.53588
DONE (t=2.82s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.26359
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.45329
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.27304
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.10583
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.28218
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.39153
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.24940
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.38685
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.40504
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.21252
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.44357
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.53394
2021-10-16 12:34:37,622 maskrcnn_benchmark.trainer INFO: bbox mAP: 0.2756887096754367, segm mAP: 0.2635894638803391
INFO:maskrcnn_benchmark.trainer:bbox mAP: 0.2756887096754367, segm mAP: 0.2635894638803391
:::MLLOG {"namespace": "", "time_ms": 1634387677622, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": {"BBOX": 0.2756887096754367, "SEGM": 0.2635894638803391}, "metadata": {"file": "tools/train_mlperf.py", "lineno": 133, "epoch_num": 5}}
:::MLLOG {"namespace": "", "time_ms": 1634387677622, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 134, "epoch_num": 5}}
INFO:maskrcnn_benchmark.trainer:eta: 2:41:59  iter: 4650  loss: 0.8056 (0.9114)  loss_classifier: 0.2605 (0.3135)  loss_box_reg: 0.1212 (0.1376)  loss_mask: 0.2877 (0.3281)  loss_objectness: 0.0508 (0.0663)  loss_rpn_box_reg: 0.0598 (0.0660)  time: 0.6177 (0.7281)  data: 0.0003 (0.0206)  lr: 0.160000  max mem: 14740
2021-10-16 12:34:56,236 maskrcnn_benchmark.trainer INFO: eta: 2:41:59  iter: 4650  loss: 0.7951 (0.9137)  loss_classifier: 0.2510 (0.3147)  loss_box_reg: 0.1178 (0.1378)  loss_mask: 0.2858 (0.3278)  loss_objectness: 0.0429 (0.0668)  loss_rpn_box_reg: 0.0526 (0.0668)  time: 0.6177 (0.7281)  data: 0.0003 (0.0208)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:41:59  iter: 4650  loss: 0.7630 (0.9140)  loss_classifier: 0.2441 (0.3147)  loss_box_reg: 0.1132 (0.1376)  loss_mask: 0.2817 (0.3285)  loss_objectness: 0.0467 (0.0667)  loss_rpn_box_reg: 0.0467 (0.0665)  time: 0.6178 (0.7281)  data: 0.0003 (0.0206)  lr: 0.160000  max mem: 14654
INFO:maskrcnn_benchmark.trainer:eta: 2:41:59  iter: 4650  loss: 0.7951 (0.9137)  loss_classifier: 0.2510 (0.3147)  loss_box_reg: 0.1178 (0.1378)  loss_mask: 0.2858 (0.3278)  loss_objectness: 0.0429 (0.0668)  loss_rpn_box_reg: 0.0526 (0.0668)  time: 0.6177 (0.7281)  data: 0.0003 (0.0208)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634387696236, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.9137148718936469, "loss_classifier": 0.3146508348949494, "loss_box_reg": 0.1377813944067826, "loss_mask": 0.32775533575845023, "loss_objectness": 0.06676794207664907, "loss_rpn_box_reg": 0.0667593651611398, "time": 0.7280588620708834, "data": 0.02084438431647516, "throughput": 175.80996079893603}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 4650}}
:::MLLOG {"namespace": "", "time_ms": 1634387696237, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 175.80996079893603, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:41:59  iter: 4650  loss: 0.7507 (0.9112)  loss_classifier: 0.2497 (0.3139)  loss_box_reg: 0.1204 (0.1373)  loss_mask: 0.2794 (0.3272)  loss_objectness: 0.0430 (0.0663)  loss_rpn_box_reg: 0.0513 (0.0664)  time: 0.6168 (0.7281)  data: 0.0003 (0.0207)  lr: 0.160000  max mem: 14752
INFO:maskrcnn_benchmark.trainer:eta: 2:41:59  iter: 4650  loss: 0.7652 (0.9122)  loss_classifier: 0.2508 (0.3141)  loss_box_reg: 0.1183 (0.1373)  loss_mask: 0.2865 (0.3277)  loss_objectness: 0.0503 (0.0666)  loss_rpn_box_reg: 0.0577 (0.0665)  time: 0.6171 (0.7281)  data: 0.0004 (0.0207)  lr: 0.160000  max mem: 14573
INFO:maskrcnn_benchmark.trainer:eta: 2:41:59  iter: 4650  loss: 0.7634 (0.9096)  loss_classifier: 0.2393 (0.3133)  loss_box_reg: 0.1284 (0.1369)  loss_mask: 0.2792 (0.3278)  loss_objectness: 0.0506 (0.0659)  loss_rpn_box_reg: 0.0602 (0.0657)  time: 0.6166 (0.7281)  data: 0.0004 (0.0206)  lr: 0.160000  max mem: 14558
INFO:maskrcnn_benchmark.trainer:eta: 2:41:59  iter: 4650  loss: 0.7198 (0.9157)  loss_classifier: 0.2291 (0.3154)  loss_box_reg: 0.1083 (0.1380)  loss_mask: 0.2724 (0.3283)  loss_objectness: 0.0477 (0.0675)  loss_rpn_box_reg: 0.0527 (0.0665)  time: 0.6164 (0.7281)  data: 0.0003 (0.0206)  lr: 0.160000  max mem: 14591
INFO:maskrcnn_benchmark.trainer:eta: 2:41:59  iter: 4650  loss: 0.7538 (0.9134)  loss_classifier: 0.2296 (0.3148)  loss_box_reg: 0.1096 (0.1380)  loss_mask: 0.2855 (0.3277)  loss_objectness: 0.0370 (0.0664)  loss_rpn_box_reg: 0.0577 (0.0665)  time: 0.6163 (0.7280)  data: 0.0004 (0.0206)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 2:41:08  iter: 4700  loss: 0.7471 (0.9140)  loss_classifier: 0.2431 (0.3147)  loss_box_reg: 0.1209 (0.1378)  loss_mask: 0.2832 (0.3278)  loss_objectness: 0.0436 (0.0673)  loss_rpn_box_reg: 0.0436 (0.0664)  time: 0.6232 (0.7269)  data: 0.0004 (0.0204)  lr: 0.160000  max mem: 14591
INFO:maskrcnn_benchmark.trainer:eta: 2:41:08  iter: 4700  loss: 0.6850 (0.9117)  loss_classifier: 0.2170 (0.3140)  loss_box_reg: 0.1126 (0.1378)  loss_mask: 0.2783 (0.3272)  loss_objectness: 0.0399 (0.0662)  loss_rpn_box_reg: 0.0547 (0.0665)  time: 0.6231 (0.7269)  data: 0.0003 (0.0204)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 2:41:08  iter: 4700  loss: 0.6930 (0.9077)  loss_classifier: 0.2489 (0.3126)  loss_box_reg: 0.1108 (0.1367)  loss_mask: 0.2700 (0.3272)  loss_objectness: 0.0423 (0.0657)  loss_rpn_box_reg: 0.0497 (0.0656)  time: 0.6232 (0.7270)  data: 0.0003 (0.0204)  lr: 0.160000  max mem: 14558
INFO:maskrcnn_benchmark.trainer:eta: 2:41:08  iter: 4700  loss: 0.7211 (0.9105)  loss_classifier: 0.2505 (0.3135)  loss_box_reg: 0.1205 (0.1371)  loss_mask: 0.2882 (0.3273)  loss_objectness: 0.0393 (0.0664)  loss_rpn_box_reg: 0.0474 (0.0663)  time: 0.6234 (0.7270)  data: 0.0003 (0.0204)  lr: 0.160000  max mem: 14573
INFO:maskrcnn_benchmark.trainer:eta: 2:41:08  iter: 4700  loss: 0.7871 (0.9099)  loss_classifier: 0.2653 (0.3134)  loss_box_reg: 0.1213 (0.1372)  loss_mask: 0.2895 (0.3268)  loss_objectness: 0.0499 (0.0661)  loss_rpn_box_reg: 0.0673 (0.0664)  time: 0.6232 (0.7270)  data: 0.0004 (0.0204)  lr: 0.160000  max mem: 14752
INFO:maskrcnn_benchmark.trainer:eta: 2:41:08  iter: 4700  loss: 0.7532 (0.9097)  loss_classifier: 0.2326 (0.3128)  loss_box_reg: 0.1186 (0.1374)  loss_mask: 0.2842 (0.3276)  loss_objectness: 0.0424 (0.0660)  loss_rpn_box_reg: 0.0518 (0.0659)  time: 0.6230 (0.7270)  data: 0.0004 (0.0204)  lr: 0.160000  max mem: 14740
INFO:maskrcnn_benchmark.trainer:eta: 2:41:08  iter: 4700  loss: 0.7376 (0.9123)  loss_classifier: 0.2307 (0.3140)  loss_box_reg: 0.1189 (0.1374)  loss_mask: 0.2715 (0.3280)  loss_objectness: 0.0453 (0.0665)  loss_rpn_box_reg: 0.0462 (0.0664)  time: 0.6230 (0.7270)  data: 0.0003 (0.0204)  lr: 0.160000  max mem: 14654
2021-10-16 12:35:27,405 maskrcnn_benchmark.trainer INFO: eta: 2:41:08  iter: 4700  loss: 0.7236 (0.9120)  loss_classifier: 0.2433 (0.3140)  loss_box_reg: 0.1120 (0.1376)  loss_mask: 0.2729 (0.3272)  loss_objectness: 0.0416 (0.0665)  loss_rpn_box_reg: 0.0571 (0.0667)  time: 0.6231 (0.7269)  data: 0.0003 (0.0206)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:41:08  iter: 4700  loss: 0.7236 (0.9120)  loss_classifier: 0.2433 (0.3140)  loss_box_reg: 0.1120 (0.1376)  loss_mask: 0.2729 (0.3272)  loss_objectness: 0.0416 (0.0665)  loss_rpn_box_reg: 0.0571 (0.0667)  time: 0.6231 (0.7269)  data: 0.0003 (0.0206)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634387727405, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.9120391228604824, "loss_classifier": 0.3140006457903284, "loss_box_reg": 0.1375939591458325, "loss_mask": 0.32722592590020055, "loss_objectness": 0.06654838280791932, "loss_rpn_box_reg": 0.06667020959284235, "time": 0.7269452641365376, "data": 0.020627288463267873, "throughput": 176.07928177651428}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 4700}}
:::MLLOG {"namespace": "", "time_ms": 1634387727406, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 176.07928177651428, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:40:17  iter: 4750  loss: 0.7182 (0.9058)  loss_classifier: 0.2152 (0.3118)  loss_box_reg: 0.0981 (0.1364)  loss_mask: 0.2765 (0.3267)  loss_objectness: 0.0378 (0.0654)  loss_rpn_box_reg: 0.0557 (0.0655)  time: 0.6233 (0.7259)  data: 0.0003 (0.0202)  lr: 0.160000  max mem: 14558
INFO:maskrcnn_benchmark.trainer:eta: 2:40:17  iter: 4750  loss: 0.7942 (0.9098)  loss_classifier: 0.2514 (0.3132)  loss_box_reg: 0.1215 (0.1376)  loss_mask: 0.2875 (0.3267)  loss_objectness: 0.0508 (0.0660)  loss_rpn_box_reg: 0.0572 (0.0664)  time: 0.6234 (0.7258)  data: 0.0004 (0.0202)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 2:40:17  iter: 4750  loss: 0.7507 (0.9125)  loss_classifier: 0.2412 (0.3140)  loss_box_reg: 0.1185 (0.1376)  loss_mask: 0.2813 (0.3274)  loss_objectness: 0.0413 (0.0671)  loss_rpn_box_reg: 0.0581 (0.0664)  time: 0.6233 (0.7258)  data: 0.0004 (0.0202)  lr: 0.160000  max mem: 14591
INFO:maskrcnn_benchmark.trainer:eta: 2:40:17  iter: 4750  loss: 0.7310 (0.9089)  loss_classifier: 0.2269 (0.3127)  loss_box_reg: 0.1133 (0.1369)  loss_mask: 0.2731 (0.3268)  loss_objectness: 0.0460 (0.0662)  loss_rpn_box_reg: 0.0642 (0.0663)  time: 0.6229 (0.7259)  data: 0.0003 (0.0202)  lr: 0.160000  max mem: 14573
INFO:maskrcnn_benchmark.trainer:eta: 2:40:17  iter: 4750  loss: 0.7438 (0.9080)  loss_classifier: 0.2476 (0.3126)  loss_box_reg: 0.1129 (0.1369)  loss_mask: 0.2739 (0.3263)  loss_objectness: 0.0382 (0.0659)  loss_rpn_box_reg: 0.0506 (0.0663)  time: 0.6232 (0.7259)  data: 0.0003 (0.0202)  lr: 0.160000  max mem: 14752
INFO:maskrcnn_benchmark.trainer:eta: 2:40:17  iter: 4750  loss: 0.7438 (0.9080)  loss_classifier: 0.2299 (0.3121)  loss_box_reg: 0.1149 (0.1372)  loss_mask: 0.2819 (0.3271)  loss_objectness: 0.0481 (0.0658)  loss_rpn_box_reg: 0.0662 (0.0658)  time: 0.6229 (0.7259)  data: 0.0003 (0.0202)  lr: 0.160000  max mem: 14740
INFO:maskrcnn_benchmark.trainer:eta: 2:40:17  iter: 4750  loss: 0.7302 (0.9106)  loss_classifier: 0.2437 (0.3133)  loss_box_reg: 0.1166 (0.1373)  loss_mask: 0.2824 (0.3275)  loss_objectness: 0.0396 (0.0662)  loss_rpn_box_reg: 0.0566 (0.0663)  time: 0.6229 (0.7259)  data: 0.0003 (0.0202)  lr: 0.160000  max mem: 14654
2021-10-16 12:35:58,551 maskrcnn_benchmark.trainer INFO: eta: 2:40:17  iter: 4750  loss: 0.7750 (0.9102)  loss_classifier: 0.2639 (0.3133)  loss_box_reg: 0.1115 (0.1373)  loss_mask: 0.2808 (0.3267)  loss_objectness: 0.0426 (0.0663)  loss_rpn_box_reg: 0.0611 (0.0666)  time: 0.6229 (0.7259)  data: 0.0004 (0.0204)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:40:17  iter: 4750  loss: 0.7750 (0.9102)  loss_classifier: 0.2639 (0.3133)  loss_box_reg: 0.1115 (0.1373)  loss_mask: 0.2808 (0.3267)  loss_objectness: 0.0426 (0.0663)  loss_rpn_box_reg: 0.0611 (0.0666)  time: 0.6229 (0.7259)  data: 0.0004 (0.0204)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634387758552, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.9101732602872347, "loss_classifier": 0.31325379444423473, "loss_box_reg": 0.13734818538312654, "loss_mask": 0.326681494546564, "loss_objectness": 0.06628927394120317, "loss_rpn_box_reg": 0.0666005123765453, "time": 0.7258503010900397, "data": 0.02041418597572728, "throughput": 176.34490170738658}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 4750}}
:::MLLOG {"namespace": "", "time_ms": 1634387758552, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 176.34490170738658, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:39:27  iter: 4800  loss: 0.6928 (0.9063)  loss_classifier: 0.2295 (0.3119)  loss_box_reg: 0.1055 (0.1367)  loss_mask: 0.2749 (0.3258)  loss_objectness: 0.0401 (0.0657)  loss_rpn_box_reg: 0.0462 (0.0662)  time: 0.6212 (0.7248)  data: 0.0004 (0.0200)  lr: 0.160000  max mem: 14752
INFO:maskrcnn_benchmark.trainer:eta: 2:39:27  iter: 4800  loss: 0.7642 (0.9075)  loss_classifier: 0.2435 (0.3121)  loss_box_reg: 0.1222 (0.1368)  loss_mask: 0.2838 (0.3263)  loss_objectness: 0.0398 (0.0660)  loss_rpn_box_reg: 0.0680 (0.0664)  time: 0.6217 (0.7248)  data: 0.0003 (0.0200)  lr: 0.160000  max mem: 14573
INFO:maskrcnn_benchmark.trainer:eta: 2:39:27  iter: 4800  loss: 0.7406 (0.9064)  loss_classifier: 0.2686 (0.3114)  loss_box_reg: 0.1010 (0.1369)  loss_mask: 0.2799 (0.3266)  loss_objectness: 0.0444 (0.0656)  loss_rpn_box_reg: 0.0453 (0.0658)  time: 0.6215 (0.7248)  data: 0.0003 (0.0200)  lr: 0.160000  max mem: 14740
2021-10-16 12:36:29,783 maskrcnn_benchmark.trainer INFO: eta: 2:39:27  iter: 4800  loss: 0.8098 (0.9088)  loss_classifier: 0.2673 (0.3127)  loss_box_reg: 0.1293 (0.1372)  loss_mask: 0.2861 (0.3262)  loss_objectness: 0.0354 (0.0661)  loss_rpn_box_reg: 0.0584 (0.0665)  time: 0.6216 (0.7248)  data: 0.0004 (0.0202)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:39:27  iter: 4800  loss: 0.7654 (0.9092)  loss_classifier: 0.2578 (0.3127)  loss_box_reg: 0.1203 (0.1371)  loss_mask: 0.2743 (0.3270)  loss_objectness: 0.0458 (0.0661)  loss_rpn_box_reg: 0.0612 (0.0662)  time: 0.6215 (0.7248)  data: 0.0004 (0.0200)  lr: 0.160000  max mem: 14654
INFO:maskrcnn_benchmark.trainer:eta: 2:39:27  iter: 4800  loss: 0.8098 (0.9088)  loss_classifier: 0.2673 (0.3127)  loss_box_reg: 0.1293 (0.1372)  loss_mask: 0.2861 (0.3262)  loss_objectness: 0.0354 (0.0661)  loss_rpn_box_reg: 0.0584 (0.0665)  time: 0.6216 (0.7248)  data: 0.0004 (0.0202)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634387789784, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.9087914972255627, "loss_classifier": 0.31269603113954264, "loss_box_reg": 0.13722028609127543, "loss_mask": 0.3262375464414557, "loss_objectness": 0.06610565244220197, "loss_rpn_box_reg": 0.06653198149074645, "time": 0.7247960208356381, "data": 0.02020588532090187, "throughput": 176.60141104586245}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 4800}}
:::MLLOG {"namespace": "", "time_ms": 1634387789784, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 176.60141104586245, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:39:27  iter: 4800  loss: 0.7867 (0.9045)  loss_classifier: 0.2620 (0.3112)  loss_box_reg: 0.1265 (0.1363)  loss_mask: 0.2835 (0.3264)  loss_objectness: 0.0454 (0.0652)  loss_rpn_box_reg: 0.0561 (0.0655)  time: 0.6212 (0.7248)  data: 0.0004 (0.0200)  lr: 0.160000  max mem: 14558
INFO:maskrcnn_benchmark.trainer:eta: 2:39:27  iter: 4800  loss: 0.7411 (0.9108)  loss_classifier: 0.2418 (0.3133)  loss_box_reg: 0.1084 (0.1374)  loss_mask: 0.2775 (0.3269)  loss_objectness: 0.0485 (0.0669)  loss_rpn_box_reg: 0.0594 (0.0663)  time: 0.6213 (0.7248)  data: 0.0004 (0.0200)  lr: 0.160000  max mem: 14591
INFO:maskrcnn_benchmark.trainer:eta: 2:39:27  iter: 4800  loss: 0.6978 (0.9082)  loss_classifier: 0.2440 (0.3125)  loss_box_reg: 0.1100 (0.1374)  loss_mask: 0.2790 (0.3262)  loss_objectness: 0.0458 (0.0657)  loss_rpn_box_reg: 0.0463 (0.0663)  time: 0.6210 (0.7248)  data: 0.0003 (0.0200)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 2:38:37  iter: 4850  loss: 0.7395 (0.9049)  loss_classifier: 0.2481 (0.3108)  loss_box_reg: 0.1185 (0.1367)  loss_mask: 0.2863 (0.3262)  loss_objectness: 0.0404 (0.0654)  loss_rpn_box_reg: 0.0500 (0.0658)  time: 0.6186 (0.7238)  data: 0.0003 (0.0198)  lr: 0.160000  max mem: 14740
2021-10-16 12:37:00,974 maskrcnn_benchmark.trainer INFO: eta: 2:38:37  iter: 4850  loss: 0.7249 (0.9072)  loss_classifier: 0.2451 (0.3121)  loss_box_reg: 0.1182 (0.1370)  loss_mask: 0.2775 (0.3258)  loss_objectness: 0.0378 (0.0659)  loss_rpn_box_reg: 0.0485 (0.0664)  time: 0.6189 (0.7238)  data: 0.0003 (0.0200)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:38:37  iter: 4850  loss: 0.7543 (0.9078)  loss_classifier: 0.2571 (0.3122)  loss_box_reg: 0.1205 (0.1370)  loss_mask: 0.2856 (0.3266)  loss_objectness: 0.0401 (0.0659)  loss_rpn_box_reg: 0.0484 (0.0662)  time: 0.6190 (0.7238)  data: 0.0003 (0.0198)  lr: 0.160000  max mem: 14654
INFO:maskrcnn_benchmark.trainer:eta: 2:38:37  iter: 4850  loss: 0.7249 (0.9072)  loss_classifier: 0.2451 (0.3121)  loss_box_reg: 0.1182 (0.1370)  loss_mask: 0.2775 (0.3258)  loss_objectness: 0.0378 (0.0659)  loss_rpn_box_reg: 0.0485 (0.0664)  time: 0.6189 (0.7238)  data: 0.0003 (0.0200)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634387820974, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.9071967048374648, "loss_classifier": 0.3120625150388049, "loss_box_reg": 0.1370408274808937, "loss_mask": 0.3257716167956283, "loss_objectness": 0.06588509327511198, "loss_rpn_box_reg": 0.06643665264677448, "time": 0.7237548261819426, "data": 0.020001582067037366, "throughput": 176.855470070223}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 4850}}
:::MLLOG {"namespace": "", "time_ms": 1634387820974, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 176.855470070223, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:38:37  iter: 4850  loss: 0.7362 (0.9049)  loss_classifier: 0.2439 (0.3113)  loss_box_reg: 0.1141 (0.1366)  loss_mask: 0.2874 (0.3254)  loss_objectness: 0.0427 (0.0655)  loss_rpn_box_reg: 0.0456 (0.0661)  time: 0.6184 (0.7238)  data: 0.0004 (0.0198)  lr: 0.160000  max mem: 14752
INFO:maskrcnn_benchmark.trainer:eta: 2:38:37  iter: 4850  loss: 0.7440 (0.9063)  loss_classifier: 0.2382 (0.3116)  loss_box_reg: 0.1175 (0.1367)  loss_mask: 0.2762 (0.3259)  loss_objectness: 0.0435 (0.0658)  loss_rpn_box_reg: 0.0618 (0.0664)  time: 0.6185 (0.7238)  data: 0.0004 (0.0198)  lr: 0.160000  max mem: 14573
INFO:maskrcnn_benchmark.trainer:eta: 2:38:37  iter: 4850  loss: 0.7659 (0.9028)  loss_classifier: 0.2466 (0.3105)  loss_box_reg: 0.1190 (0.1361)  loss_mask: 0.2776 (0.3259)  loss_objectness: 0.0385 (0.0650)  loss_rpn_box_reg: 0.0495 (0.0654)  time: 0.6187 (0.7238)  data: 0.0003 (0.0198)  lr: 0.160000  max mem: 14558
INFO:maskrcnn_benchmark.trainer:eta: 2:38:37  iter: 4850  loss: 0.7786 (0.9093)  loss_classifier: 0.2647 (0.3127)  loss_box_reg: 0.1192 (0.1372)  loss_mask: 0.2907 (0.3265)  loss_objectness: 0.0413 (0.0667)  loss_rpn_box_reg: 0.0587 (0.0663)  time: 0.6188 (0.7237)  data: 0.0004 (0.0198)  lr: 0.160000  max mem: 14591
INFO:maskrcnn_benchmark.trainer:eta: 2:38:37  iter: 4850  loss: 0.7713 (0.9065)  loss_classifier: 0.2536 (0.3118)  loss_box_reg: 0.1211 (0.1372)  loss_mask: 0.2740 (0.3258)  loss_objectness: 0.0404 (0.0655)  loss_rpn_box_reg: 0.0496 (0.0662)  time: 0.6188 (0.7237)  data: 0.0004 (0.0198)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 2:37:47  iter: 4900  loss: 0.7558 (0.9049)  loss_classifier: 0.2626 (0.3112)  loss_box_reg: 0.1162 (0.1369)  loss_mask: 0.2867 (0.3254)  loss_objectness: 0.0394 (0.0653)  loss_rpn_box_reg: 0.0496 (0.0661)  time: 0.6192 (0.7227)  data: 0.0003 (0.0196)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 2:37:47  iter: 4900  loss: 0.7440 (0.9010)  loss_classifier: 0.2321 (0.3098)  loss_box_reg: 0.1199 (0.1358)  loss_mask: 0.2841 (0.3254)  loss_objectness: 0.0460 (0.0648)  loss_rpn_box_reg: 0.0516 (0.0653)  time: 0.6193 (0.7227)  data: 0.0003 (0.0196)  lr: 0.160000  max mem: 14558
INFO:maskrcnn_benchmark.trainer:eta: 2:37:47  iter: 4900  loss: 0.7379 (0.9079)  loss_classifier: 0.2354 (0.3121)  loss_box_reg: 0.1121 (0.1371)  loss_mask: 0.2785 (0.3261)  loss_objectness: 0.0394 (0.0665)  loss_rpn_box_reg: 0.0489 (0.0662)  time: 0.6192 (0.7227)  data: 0.0003 (0.0196)  lr: 0.160000  max mem: 14591
INFO:maskrcnn_benchmark.trainer:eta: 2:37:47  iter: 4900  loss: 0.7483 (0.9050)  loss_classifier: 0.2519 (0.3111)  loss_box_reg: 0.1119 (0.1365)  loss_mask: 0.2824 (0.3255)  loss_objectness: 0.0407 (0.0656)  loss_rpn_box_reg: 0.0678 (0.0663)  time: 0.6186 (0.7227)  data: 0.0003 (0.0196)  lr: 0.160000  max mem: 14573
INFO:maskrcnn_benchmark.trainer:eta: 2:37:47  iter: 4900  loss: 0.7498 (0.9035)  loss_classifier: 0.2624 (0.3107)  loss_box_reg: 0.1234 (0.1364)  loss_mask: 0.2722 (0.3249)  loss_objectness: 0.0466 (0.0654)  loss_rpn_box_reg: 0.0551 (0.0661)  time: 0.6185 (0.7227)  data: 0.0003 (0.0196)  lr: 0.160000  max mem: 14752
INFO:maskrcnn_benchmark.trainer:eta: 2:37:47  iter: 4900  loss: 0.7460 (0.9036)  loss_classifier: 0.2423 (0.3103)  loss_box_reg: 0.1170 (0.1366)  loss_mask: 0.2843 (0.3258)  loss_objectness: 0.0405 (0.0653)  loss_rpn_box_reg: 0.0571 (0.0657)  time: 0.6190 (0.7227)  data: 0.0003 (0.0196)  lr: 0.160000  max mem: 14740
INFO:maskrcnn_benchmark.trainer:eta: 2:37:47  iter: 4900  loss: 0.7225 (0.9063)  loss_classifier: 0.2235 (0.3116)  loss_box_reg: 0.1083 (0.1368)  loss_mask: 0.2721 (0.3261)  loss_objectness: 0.0425 (0.0657)  loss_rpn_box_reg: 0.0494 (0.0661)  time: 0.6189 (0.7227)  data: 0.0003 (0.0196)  lr: 0.160000  max mem: 14654
2021-10-16 12:37:32,107 maskrcnn_benchmark.trainer INFO: eta: 2:37:47  iter: 4900  loss: 0.7796 (0.9057)  loss_classifier: 0.2703 (0.3114)  loss_box_reg: 0.1235 (0.1368)  loss_mask: 0.2855 (0.3253)  loss_objectness: 0.0435 (0.0657)  loss_rpn_box_reg: 0.0503 (0.0664)  time: 0.6190 (0.7227)  data: 0.0003 (0.0198)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:37:47  iter: 4900  loss: 0.7796 (0.9057)  loss_classifier: 0.2703 (0.3114)  loss_box_reg: 0.1235 (0.1368)  loss_mask: 0.2855 (0.3253)  loss_objectness: 0.0435 (0.0657)  loss_rpn_box_reg: 0.0503 (0.0664)  time: 0.6190 (0.7227)  data: 0.0003 (0.0198)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634387852107, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.9056793790265005, "loss_classifier": 0.31144300871965835, "loss_box_reg": 0.13683244974100583, "loss_mask": 0.32534126140937514, "loss_objectness": 0.06568857197364678, "loss_rpn_box_reg": 0.06637408770715855, "time": 0.7227234084265572, "data": 0.019801691940852573, "throughput": 177.10786520484936}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 4900}}
:::MLLOG {"namespace": "", "time_ms": 1634387852108, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 177.10786520484936, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:36:58  iter: 4950  loss: 0.7355 (0.9020)  loss_classifier: 0.2511 (0.3101)  loss_box_reg: 0.1082 (0.1363)  loss_mask: 0.2793 (0.3245)  loss_objectness: 0.0390 (0.0651)  loss_rpn_box_reg: 0.0485 (0.0659)  time: 0.6226 (0.7217)  data: 0.0003 (0.0194)  lr: 0.160000  max mem: 14752
INFO:maskrcnn_benchmark.trainer:eta: 2:36:58  iter: 4950  loss: 0.7427 (0.9033)  loss_classifier: 0.2384 (0.3104)  loss_box_reg: 0.1117 (0.1363)  loss_mask: 0.2857 (0.3250)  loss_objectness: 0.0473 (0.0654)  loss_rpn_box_reg: 0.0454 (0.0662)  time: 0.6226 (0.7217)  data: 0.0003 (0.0194)  lr: 0.160000  max mem: 14632
INFO:maskrcnn_benchmark.trainer:eta: 2:36:58  iter: 4950  loss: 0.7764 (0.8996)  loss_classifier: 0.2527 (0.3092)  loss_box_reg: 0.1291 (0.1356)  loss_mask: 0.2833 (0.3249)  loss_objectness: 0.0452 (0.0647)  loss_rpn_box_reg: 0.0519 (0.0652)  time: 0.6234 (0.7217)  data: 0.0003 (0.0194)  lr: 0.160000  max mem: 14558
INFO:maskrcnn_benchmark.trainer:eta: 2:36:58  iter: 4950  loss: 0.7505 (0.9067)  loss_classifier: 0.2587 (0.3117)  loss_box_reg: 0.1206 (0.1370)  loss_mask: 0.2772 (0.3256)  loss_objectness: 0.0409 (0.0663)  loss_rpn_box_reg: 0.0685 (0.0661)  time: 0.6234 (0.7217)  data: 0.0004 (0.0194)  lr: 0.160000  max mem: 14591
INFO:maskrcnn_benchmark.trainer:eta: 2:36:58  iter: 4950  loss: 0.7982 (0.9036)  loss_classifier: 0.2488 (0.3107)  loss_box_reg: 0.1164 (0.1368)  loss_mask: 0.2887 (0.3249)  loss_objectness: 0.0470 (0.0652)  loss_rpn_box_reg: 0.0523 (0.0661)  time: 0.6234 (0.7217)  data: 0.0003 (0.0194)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 2:36:58  iter: 4950  loss: 0.7927 (0.9024)  loss_classifier: 0.2501 (0.3098)  loss_box_reg: 0.1196 (0.1365)  loss_mask: 0.2812 (0.3254)  loss_objectness: 0.0475 (0.0651)  loss_rpn_box_reg: 0.0584 (0.0657)  time: 0.6225 (0.7217)  data: 0.0003 (0.0194)  lr: 0.160000  max mem: 14740
2021-10-16 12:38:03,257 maskrcnn_benchmark.trainer INFO: eta: 2:36:58  iter: 4950  loss: 0.7805 (0.9040)  loss_classifier: 0.2705 (0.3108)  loss_box_reg: 0.1272 (0.1366)  loss_mask: 0.2776 (0.3248)  loss_objectness: 0.0470 (0.0655)  loss_rpn_box_reg: 0.0441 (0.0662)  time: 0.6226 (0.7217)  data: 0.0003 (0.0196)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:36:58  iter: 4950  loss: 0.7540 (0.9047)  loss_classifier: 0.2487 (0.3110)  loss_box_reg: 0.1132 (0.1366)  loss_mask: 0.2826 (0.3257)  loss_objectness: 0.0430 (0.0655)  loss_rpn_box_reg: 0.0398 (0.0660)  time: 0.6222 (0.7217)  data: 0.0003 (0.0194)  lr: 0.160000  max mem: 14654
INFO:maskrcnn_benchmark.trainer:eta: 2:36:58  iter: 4950  loss: 0.7805 (0.9040)  loss_classifier: 0.2705 (0.3108)  loss_box_reg: 0.1272 (0.1366)  loss_mask: 0.2776 (0.3248)  loss_objectness: 0.0470 (0.0655)  loss_rpn_box_reg: 0.0441 (0.0662)  time: 0.6226 (0.7217)  data: 0.0003 (0.0196)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634387883257, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.903966937841791, "loss_classifier": 0.31082537184459996, "loss_box_reg": 0.1366143815452233, "loss_mask": 0.32481014499459604, "loss_objectness": 0.06547328422843206, "loss_rpn_box_reg": 0.06624375577583307, "time": 0.7217159808765758, "data": 0.01960595073121967, "throughput": 177.35508619960834}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 4950}}
:::MLLOG {"namespace": "", "time_ms": 1634387883257, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 177.35508619960834, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:36:09  iter: 5000  loss: 0.7721 (0.9034)  loss_classifier: 0.2655 (0.3105)  loss_box_reg: 0.1241 (0.1365)  loss_mask: 0.2842 (0.3253)  loss_objectness: 0.0428 (0.0653)  loss_rpn_box_reg: 0.0507 (0.0659)  time: 0.6205 (0.7207)  data: 0.0003 (0.0192)  lr: 0.160000  max mem: 14654
2021-10-16 12:38:34,438 maskrcnn_benchmark.trainer INFO: eta: 2:36:09  iter: 5000  loss: 0.7882 (0.9025)  loss_classifier: 0.2437 (0.3103)  loss_box_reg: 0.1266 (0.1364)  loss_mask: 0.2840 (0.3244)  loss_objectness: 0.0502 (0.0653)  loss_rpn_box_reg: 0.0611 (0.0662)  time: 0.6205 (0.7207)  data: 0.0003 (0.0194)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:36:09  iter: 5000  loss: 0.7358 (0.9009)  loss_classifier: 0.2357 (0.3092)  loss_box_reg: 0.1119 (0.1363)  loss_mask: 0.2729 (0.3249)  loss_objectness: 0.0406 (0.0649)  loss_rpn_box_reg: 0.0563 (0.0656)  time: 0.6205 (0.7207)  data: 0.0003 (0.0192)  lr: 0.160000  max mem: 14740
INFO:maskrcnn_benchmark.trainer:eta: 2:36:09  iter: 5000  loss: 0.7882 (0.9025)  loss_classifier: 0.2437 (0.3103)  loss_box_reg: 0.1266 (0.1364)  loss_mask: 0.2840 (0.3244)  loss_objectness: 0.0502 (0.0653)  loss_rpn_box_reg: 0.0611 (0.0662)  time: 0.6205 (0.7207)  data: 0.0003 (0.0194)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634387914438, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.9025463741719723, "loss_classifier": 0.3102667250365019, "loss_box_reg": 0.13641610180656424, "loss_mask": 0.324401679494977, "loss_objectness": 0.06530829540081322, "loss_rpn_box_reg": 0.06615357298571617, "time": 0.7207351286411285, "data": 0.01941501750946045, "throughput": 177.5964496712277}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 5000}}
:::MLLOG {"namespace": "", "time_ms": 1634387914439, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 177.5964496712277, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:36:09  iter: 5000  loss: 0.7654 (0.9019)  loss_classifier: 0.2378 (0.3099)  loss_box_reg: 0.1166 (0.1361)  loss_mask: 0.2862 (0.3246)  loss_objectness: 0.0428 (0.0652)  loss_rpn_box_reg: 0.0536 (0.0661)  time: 0.6207 (0.7207)  data: 0.0003 (0.0192)  lr: 0.160000  max mem: 14632
INFO:maskrcnn_benchmark.trainer:eta: 2:36:09  iter: 5000  loss: 0.7574 (0.9007)  loss_classifier: 0.2523 (0.3096)  loss_box_reg: 0.1214 (0.1361)  loss_mask: 0.2865 (0.3241)  loss_objectness: 0.0413 (0.0650)  loss_rpn_box_reg: 0.0506 (0.0659)  time: 0.6210 (0.7207)  data: 0.0003 (0.0192)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 2:36:09  iter: 5000  loss: 0.7686 (0.8982)  loss_classifier: 0.2382 (0.3087)  loss_box_reg: 0.1244 (0.1355)  loss_mask: 0.2711 (0.3244)  loss_objectness: 0.0411 (0.0645)  loss_rpn_box_reg: 0.0534 (0.0652)  time: 0.6226 (0.7207)  data: 0.0004 (0.0192)  lr: 0.160000  max mem: 14558
INFO:maskrcnn_benchmark.trainer:eta: 2:36:09  iter: 5000  loss: 0.7685 (0.9055)  loss_classifier: 0.2564 (0.3112)  loss_box_reg: 0.1219 (0.1369)  loss_mask: 0.2833 (0.3252)  loss_objectness: 0.0506 (0.0661)  loss_rpn_box_reg: 0.0627 (0.0661)  time: 0.6224 (0.7207)  data: 0.0004 (0.0192)  lr: 0.160000  max mem: 14591
INFO:maskrcnn_benchmark.trainer:eta: 2:36:09  iter: 5000  loss: 0.7958 (0.9024)  loss_classifier: 0.2914 (0.3103)  loss_box_reg: 0.1202 (0.1366)  loss_mask: 0.2879 (0.3245)  loss_objectness: 0.0533 (0.0650)  loss_rpn_box_reg: 0.0554 (0.0660)  time: 0.6225 (0.7207)  data: 0.0004 (0.0192)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 2:35:20  iter: 5050  loss: 0.7420 (0.9009)  loss_classifier: 0.2567 (0.3097)  loss_box_reg: 0.1277 (0.1365)  loss_mask: 0.2780 (0.3241)  loss_objectness: 0.0443 (0.0648)  loss_rpn_box_reg: 0.0585 (0.0659)  time: 0.6233 (0.7197)  data: 0.0004 (0.0190)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 2:35:20  iter: 5050  loss: 0.7728 (0.8971)  loss_classifier: 0.2757 (0.3082)  loss_box_reg: 0.1254 (0.1354)  loss_mask: 0.2873 (0.3241)  loss_objectness: 0.0455 (0.0644)  loss_rpn_box_reg: 0.0521 (0.0651)  time: 0.6236 (0.7198)  data: 0.0003 (0.0190)  lr: 0.160000  max mem: 14558
INFO:maskrcnn_benchmark.trainer:eta: 2:35:20  iter: 5050  loss: 0.6731 (0.9038)  loss_classifier: 0.2249 (0.3105)  loss_box_reg: 0.1075 (0.1367)  loss_mask: 0.2690 (0.3248)  loss_objectness: 0.0341 (0.0659)  loss_rpn_box_reg: 0.0435 (0.0660)  time: 0.6233 (0.7198)  data: 0.0003 (0.0190)  lr: 0.160000  max mem: 14591
INFO:maskrcnn_benchmark.trainer:eta: 2:35:20  iter: 5050  loss: 0.7103 (0.8990)  loss_classifier: 0.2285 (0.3089)  loss_box_reg: 0.1071 (0.1359)  loss_mask: 0.2791 (0.3237)  loss_objectness: 0.0430 (0.0648)  loss_rpn_box_reg: 0.0507 (0.0658)  time: 0.6225 (0.7198)  data: 0.0003 (0.0191)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 2:35:20  iter: 5050  loss: 0.7427 (0.9004)  loss_classifier: 0.2348 (0.3093)  loss_box_reg: 0.1157 (0.1359)  loss_mask: 0.2831 (0.3242)  loss_objectness: 0.0451 (0.0650)  loss_rpn_box_reg: 0.0590 (0.0660)  time: 0.6213 (0.7198)  data: 0.0004 (0.0191)  lr: 0.160000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 2:35:20  iter: 5050  loss: 0.7283 (0.8994)  loss_classifier: 0.2334 (0.3086)  loss_box_reg: 0.1061 (0.1361)  loss_mask: 0.2716 (0.3245)  loss_objectness: 0.0456 (0.0648)  loss_rpn_box_reg: 0.0417 (0.0655)  time: 0.6218 (0.7198)  data: 0.0003 (0.0190)  lr: 0.160000  max mem: 14740
2021-10-16 12:39:05,533 maskrcnn_benchmark.trainer INFO: eta: 2:35:20  iter: 5050  loss: 0.7936 (0.9014)  loss_classifier: 0.2569 (0.3098)  loss_box_reg: 0.1212 (0.1363)  loss_mask: 0.2824 (0.3240)  loss_objectness: 0.0529 (0.0652)  loss_rpn_box_reg: 0.0525 (0.0661)  time: 0.6222 (0.7198)  data: 0.0003 (0.0192)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:35:20  iter: 5050  loss: 0.7936 (0.9014)  loss_classifier: 0.2569 (0.3098)  loss_box_reg: 0.1212 (0.1363)  loss_mask: 0.2824 (0.3240)  loss_objectness: 0.0529 (0.0652)  loss_rpn_box_reg: 0.0525 (0.0661)  time: 0.6222 (0.7198)  data: 0.0003 (0.0192)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:35:20  iter: 5050  loss: 0.7764 (0.9022)  loss_classifier: 0.2674 (0.3100)  loss_box_reg: 0.1230 (0.1363)  loss_mask: 0.2837 (0.3249)  loss_objectness: 0.0485 (0.0651)  loss_rpn_box_reg: 0.0688 (0.0659)  time: 0.6221 (0.7198)  data: 0.0004 (0.0190)  lr: 0.160000  max mem: 14654
:::MLLOG {"namespace": "", "time_ms": 1634387945534, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.9014464939879899, "loss_classifier": 0.3098327255455574, "loss_box_reg": 0.1362883302074682, "loss_mask": 0.32403733919457633, "loss_objectness": 0.06518442238210746, "loss_rpn_box_reg": 0.06610367720799133, "time": 0.7197565751500649, "data": 0.01922697449674701, "throughput": 177.83790300673917}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 5050}}
:::MLLOG {"namespace": "", "time_ms": 1634387945534, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 177.83790300673917, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:34:32  iter: 5100  loss: 0.7004 (0.8962)  loss_classifier: 0.2430 (0.3079)  loss_box_reg: 0.1052 (0.1353)  loss_mask: 0.2750 (0.3237)  loss_objectness: 0.0455 (0.0642)  loss_rpn_box_reg: 0.0430 (0.0651)  time: 0.6200 (0.7188)  data: 0.0003 (0.0188)  lr: 0.160000  max mem: 14558
INFO:maskrcnn_benchmark.trainer:eta: 2:34:32  iter: 5100  loss: 0.7599 (0.8995)  loss_classifier: 0.2526 (0.3091)  loss_box_reg: 0.1209 (0.1363)  loss_mask: 0.2845 (0.3237)  loss_objectness: 0.0508 (0.0646)  loss_rpn_box_reg: 0.0478 (0.0658)  time: 0.6200 (0.7188)  data: 0.0004 (0.0188)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 2:34:32  iter: 5100  loss: 0.7368 (0.9024)  loss_classifier: 0.2504 (0.3099)  loss_box_reg: 0.1142 (0.1365)  loss_mask: 0.2829 (0.3244)  loss_objectness: 0.0443 (0.0657)  loss_rpn_box_reg: 0.0366 (0.0659)  time: 0.6200 (0.7188)  data: 0.0004 (0.0188)  lr: 0.160000  max mem: 14591
INFO:maskrcnn_benchmark.trainer:eta: 2:34:32  iter: 5100  loss: 0.8140 (0.8980)  loss_classifier: 0.2758 (0.3085)  loss_box_reg: 0.1319 (0.1358)  loss_mask: 0.2856 (0.3233)  loss_objectness: 0.0565 (0.0647)  loss_rpn_box_reg: 0.0720 (0.0658)  time: 0.6206 (0.7188)  data: 0.0004 (0.0189)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 2:34:32  iter: 5100  loss: 0.7622 (0.8990)  loss_classifier: 0.2548 (0.3087)  loss_box_reg: 0.1236 (0.1358)  loss_mask: 0.2761 (0.3237)  loss_objectness: 0.0450 (0.0649)  loss_rpn_box_reg: 0.0607 (0.0659)  time: 0.6205 (0.7188)  data: 0.0004 (0.0189)  lr: 0.160000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 2:34:32  iter: 5100  loss: 0.7473 (0.8982)  loss_classifier: 0.2526 (0.3081)  loss_box_reg: 0.1117 (0.1359)  loss_mask: 0.2737 (0.3241)  loss_objectness: 0.0434 (0.0646)  loss_rpn_box_reg: 0.0532 (0.0655)  time: 0.6196 (0.7188)  data: 0.0003 (0.0188)  lr: 0.160000  max mem: 14740
2021-10-16 12:39:36,695 maskrcnn_benchmark.trainer INFO: eta: 2:34:32  iter: 5100  loss: 0.7969 (0.8999)  loss_classifier: 0.2451 (0.3093)  loss_box_reg: 0.1171 (0.1361)  loss_mask: 0.2794 (0.3236)  loss_objectness: 0.0470 (0.0650)  loss_rpn_box_reg: 0.0536 (0.0660)  time: 0.6198 (0.7188)  data: 0.0003 (0.0190)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:34:32  iter: 5100  loss: 0.7161 (0.9010)  loss_classifier: 0.2331 (0.3095)  loss_box_reg: 0.1099 (0.1362)  loss_mask: 0.2728 (0.3245)  loss_objectness: 0.0466 (0.0650)  loss_rpn_box_reg: 0.0470 (0.0658)  time: 0.6198 (0.7188)  data: 0.0003 (0.0188)  lr: 0.160000  max mem: 14654
INFO:maskrcnn_benchmark.trainer:eta: 2:34:32  iter: 5100  loss: 0.7969 (0.8999)  loss_classifier: 0.2451 (0.3093)  loss_box_reg: 0.1171 (0.1361)  loss_mask: 0.2794 (0.3236)  loss_objectness: 0.0470 (0.0650)  loss_rpn_box_reg: 0.0536 (0.0660)  time: 0.6198 (0.7188)  data: 0.0003 (0.0190)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634387976695, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8999452138706749, "loss_classifier": 0.30925923535929006, "loss_box_reg": 0.1360925208586816, "loss_mask": 0.32357033051112116, "loss_objectness": 0.06500483492097142, "loss_rpn_box_reg": 0.06601829272804453, "time": 0.7188101810100032, "data": 0.01904254165350222, "throughput": 178.07204653132024}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 5100}}
:::MLLOG {"namespace": "", "time_ms": 1634387976695, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 178.07204653132024, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:33:44  iter: 5150  loss: 0.7697 (0.8981)  loss_classifier: 0.2457 (0.3086)  loss_box_reg: 0.1215 (0.1361)  loss_mask: 0.2840 (0.3233)  loss_objectness: 0.0500 (0.0644)  loss_rpn_box_reg: 0.0510 (0.0657)  time: 0.6227 (0.7179)  data: 0.0004 (0.0186)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 2:33:44  iter: 5150  loss: 0.7249 (0.8949)  loss_classifier: 0.2247 (0.3073)  loss_box_reg: 0.1155 (0.1351)  loss_mask: 0.2761 (0.3233)  loss_objectness: 0.0424 (0.0641)  loss_rpn_box_reg: 0.0515 (0.0651)  time: 0.6228 (0.7179)  data: 0.0003 (0.0187)  lr: 0.160000  max mem: 14558
INFO:maskrcnn_benchmark.trainer:eta: 2:33:44  iter: 5150  loss: 0.6667 (0.9008)  loss_classifier: 0.2008 (0.3093)  loss_box_reg: 0.1012 (0.1362)  loss_mask: 0.2704 (0.3240)  loss_objectness: 0.0429 (0.0655)  loss_rpn_box_reg: 0.0386 (0.0658)  time: 0.6228 (0.7179)  data: 0.0003 (0.0186)  lr: 0.160000  max mem: 14591
INFO:maskrcnn_benchmark.trainer:eta: 2:33:44  iter: 5150  loss: 0.7491 (0.8965)  loss_classifier: 0.2438 (0.3079)  loss_box_reg: 0.1032 (0.1356)  loss_mask: 0.2775 (0.3229)  loss_objectness: 0.0410 (0.0645)  loss_rpn_box_reg: 0.0474 (0.0657)  time: 0.6226 (0.7179)  data: 0.0003 (0.0187)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 2:33:44  iter: 5150  loss: 0.7450 (0.8976)  loss_classifier: 0.2379 (0.3082)  loss_box_reg: 0.1131 (0.1356)  loss_mask: 0.2869 (0.3233)  loss_objectness: 0.0419 (0.0647)  loss_rpn_box_reg: 0.0538 (0.0659)  time: 0.6222 (0.7179)  data: 0.0004 (0.0187)  lr: 0.160000  max mem: 14673
2021-10-16 12:40:07,873 maskrcnn_benchmark.trainer INFO: eta: 2:33:44  iter: 5150  loss: 0.7244 (0.8987)  loss_classifier: 0.2362 (0.3088)  loss_box_reg: 0.1132 (0.1360)  loss_mask: 0.2689 (0.3232)  loss_objectness: 0.0399 (0.0649)  loss_rpn_box_reg: 0.0423 (0.0659)  time: 0.6227 (0.7179)  data: 0.0003 (0.0189)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:33:44  iter: 5150  loss: 0.7709 (0.8969)  loss_classifier: 0.2584 (0.3076)  loss_box_reg: 0.1156 (0.1358)  loss_mask: 0.2824 (0.3237)  loss_objectness: 0.0473 (0.0645)  loss_rpn_box_reg: 0.0555 (0.0654)  time: 0.6226 (0.7179)  data: 0.0003 (0.0187)  lr: 0.160000  max mem: 14740
INFO:maskrcnn_benchmark.trainer:eta: 2:33:44  iter: 5150  loss: 0.7792 (0.8998)  loss_classifier: 0.2579 (0.3090)  loss_box_reg: 0.1250 (0.1360)  loss_mask: 0.2890 (0.3241)  loss_objectness: 0.0416 (0.0648)  loss_rpn_box_reg: 0.0515 (0.0658)  time: 0.6229 (0.7179)  data: 0.0004 (0.0186)  lr: 0.160000  max mem: 14654
INFO:maskrcnn_benchmark.trainer:eta: 2:33:44  iter: 5150  loss: 0.7244 (0.8987)  loss_classifier: 0.2362 (0.3088)  loss_box_reg: 0.1132 (0.1360)  loss_mask: 0.2689 (0.3232)  loss_objectness: 0.0399 (0.0649)  loss_rpn_box_reg: 0.0423 (0.0659)  time: 0.6227 (0.7179)  data: 0.0003 (0.0189)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634388007873, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8987155277694313, "loss_classifier": 0.30880178250734086, "loss_box_reg": 0.1359554402023391, "loss_mask": 0.3231542508955141, "loss_objectness": 0.06487291084150376, "loss_rpn_box_reg": 0.06593114376013863, "time": 0.7178854869638832, "data": 0.018862110665700968, "throughput": 178.3014175998235}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 5150}}
:::MLLOG {"namespace": "", "time_ms": 1634388007873, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 178.3014175998235, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:32:57  iter: 5200  loss: 0.7928 (0.8970)  loss_classifier: 0.2524 (0.3081)  loss_box_reg: 0.1187 (0.1360)  loss_mask: 0.2800 (0.3229)  loss_objectness: 0.0460 (0.0643)  loss_rpn_box_reg: 0.0577 (0.0657)  time: 0.6225 (0.7170)  data: 0.0004 (0.0185)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 2:32:57  iter: 5200  loss: 0.7218 (0.8938)  loss_classifier: 0.2381 (0.3069)  loss_box_reg: 0.1081 (0.1350)  loss_mask: 0.2859 (0.3230)  loss_objectness: 0.0472 (0.0639)  loss_rpn_box_reg: 0.0575 (0.0650)  time: 0.6221 (0.7170)  data: 0.0003 (0.0185)  lr: 0.160000  max mem: 14572
INFO:maskrcnn_benchmark.trainer:eta: 2:32:57  iter: 5200  loss: 0.7641 (0.8994)  loss_classifier: 0.2546 (0.3088)  loss_box_reg: 0.1152 (0.1360)  loss_mask: 0.2970 (0.3235)  loss_objectness: 0.0436 (0.0654)  loss_rpn_box_reg: 0.0495 (0.0657)  time: 0.6227 (0.7170)  data: 0.0003 (0.0185)  lr: 0.160000  max mem: 14656
INFO:maskrcnn_benchmark.trainer:eta: 2:32:57  iter: 5200  loss: 0.7343 (0.8952)  loss_classifier: 0.2531 (0.3075)  loss_box_reg: 0.1129 (0.1354)  loss_mask: 0.2804 (0.3225)  loss_objectness: 0.0434 (0.0643)  loss_rpn_box_reg: 0.0521 (0.0656)  time: 0.6221 (0.7170)  data: 0.0003 (0.0185)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 2:32:57  iter: 5200  loss: 0.7339 (0.8962)  loss_classifier: 0.2414 (0.3076)  loss_box_reg: 0.1131 (0.1354)  loss_mask: 0.2898 (0.3230)  loss_objectness: 0.0403 (0.0645)  loss_rpn_box_reg: 0.0416 (0.0657)  time: 0.6228 (0.7170)  data: 0.0003 (0.0185)  lr: 0.160000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 2:32:57  iter: 5200  loss: 0.7786 (0.8959)  loss_classifier: 0.2514 (0.3072)  loss_box_reg: 0.1287 (0.1357)  loss_mask: 0.2846 (0.3233)  loss_objectness: 0.0446 (0.0643)  loss_rpn_box_reg: 0.0605 (0.0654)  time: 0.6230 (0.7170)  data: 0.0004 (0.0185)  lr: 0.160000  max mem: 14740
2021-10-16 12:40:39,089 maskrcnn_benchmark.trainer INFO: eta: 2:32:57  iter: 5200  loss: 0.6846 (0.8973)  loss_classifier: 0.2303 (0.3082)  loss_box_reg: 0.1062 (0.1358)  loss_mask: 0.2691 (0.3228)  loss_objectness: 0.0380 (0.0647)  loss_rpn_box_reg: 0.0444 (0.0659)  time: 0.6230 (0.7170)  data: 0.0003 (0.0187)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:32:57  iter: 5200  loss: 0.7247 (0.8984)  loss_classifier: 0.2479 (0.3085)  loss_box_reg: 0.1117 (0.1358)  loss_mask: 0.2629 (0.3237)  loss_objectness: 0.0476 (0.0647)  loss_rpn_box_reg: 0.0575 (0.0657)  time: 0.6229 (0.7170)  data: 0.0004 (0.0185)  lr: 0.160000  max mem: 14654
INFO:maskrcnn_benchmark.trainer:eta: 2:32:57  iter: 5200  loss: 0.6846 (0.8973)  loss_classifier: 0.2303 (0.3082)  loss_box_reg: 0.1062 (0.1358)  loss_mask: 0.2691 (0.3228)  loss_objectness: 0.0380 (0.0647)  loss_rpn_box_reg: 0.0444 (0.0659)  time: 0.6230 (0.7170)  data: 0.0003 (0.0187)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634388039090, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8973484576837375, "loss_classifier": 0.30823068094941286, "loss_box_reg": 0.1357853669371868, "loss_mask": 0.3227727029902431, "loss_objectness": 0.06470708716123437, "loss_rpn_box_reg": 0.06585262006739727, "time": 0.7169858953585991, "data": 0.018684728008050187, "throughput": 178.5251297530491}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 5200}}
:::MLLOG {"namespace": "", "time_ms": 1634388039090, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 178.5251297530491, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:32:09  iter: 5250  loss: 0.7775 (0.8943)  loss_classifier: 0.2751 (0.3071)  loss_box_reg: 0.1239 (0.1353)  loss_mask: 0.2779 (0.3221)  loss_objectness: 0.0477 (0.0642)  loss_rpn_box_reg: 0.0558 (0.0655)  time: 0.6174 (0.7161)  data: 0.0004 (0.0183)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 2:32:09  iter: 5250  loss: 0.7196 (0.8924)  loss_classifier: 0.2498 (0.3063)  loss_box_reg: 0.1016 (0.1348)  loss_mask: 0.2753 (0.3226)  loss_objectness: 0.0425 (0.0638)  loss_rpn_box_reg: 0.0422 (0.0649)  time: 0.6184 (0.7161)  data: 0.0003 (0.0183)  lr: 0.160000  max mem: 14572
INFO:maskrcnn_benchmark.trainer:eta: 2:32:09  iter: 5250  loss: 0.7886 (0.8949)  loss_classifier: 0.2539 (0.3071)  loss_box_reg: 0.1179 (0.1352)  loss_mask: 0.2775 (0.3226)  loss_objectness: 0.0498 (0.0644)  loss_rpn_box_reg: 0.0525 (0.0656)  time: 0.6174 (0.7161)  data: 0.0004 (0.0183)  lr: 0.160000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 2:32:09  iter: 5250  loss: 0.7525 (0.8957)  loss_classifier: 0.2353 (0.3076)  loss_box_reg: 0.1109 (0.1359)  loss_mask: 0.2721 (0.3225)  loss_objectness: 0.0506 (0.0642)  loss_rpn_box_reg: 0.0702 (0.0656)  time: 0.6184 (0.7161)  data: 0.0003 (0.0183)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 2:32:09  iter: 5250  loss: 0.7281 (0.8981)  loss_classifier: 0.2322 (0.3083)  loss_box_reg: 0.1099 (0.1358)  loss_mask: 0.2876 (0.3232)  loss_objectness: 0.0400 (0.0652)  loss_rpn_box_reg: 0.0565 (0.0656)  time: 0.6184 (0.7161)  data: 0.0003 (0.0183)  lr: 0.160000  max mem: 14656
INFO:maskrcnn_benchmark.trainer:eta: 2:32:09  iter: 5250  loss: 0.7340 (0.8946)  loss_classifier: 0.2371 (0.3067)  loss_box_reg: 0.1100 (0.1355)  loss_mask: 0.2982 (0.3230)  loss_objectness: 0.0398 (0.0642)  loss_rpn_box_reg: 0.0525 (0.0653)  time: 0.6170 (0.7161)  data: 0.0003 (0.0183)  lr: 0.160000  max mem: 14740
INFO:maskrcnn_benchmark.trainer:eta: 2:32:09  iter: 5250  loss: 0.7480 (0.8972)  loss_classifier: 0.2349 (0.3080)  loss_box_reg: 0.1115 (0.1357)  loss_mask: 0.2784 (0.3233)  loss_objectness: 0.0399 (0.0645)  loss_rpn_box_reg: 0.0585 (0.0657)  time: 0.6170 (0.7161)  data: 0.0003 (0.0183)  lr: 0.160000  max mem: 14654
2021-10-16 12:41:10,088 maskrcnn_benchmark.trainer INFO: eta: 2:32:09  iter: 5250  loss: 0.7312 (0.8960)  loss_classifier: 0.2351 (0.3077)  loss_box_reg: 0.1103 (0.1356)  loss_mask: 0.2739 (0.3224)  loss_objectness: 0.0493 (0.0645)  loss_rpn_box_reg: 0.0607 (0.0658)  time: 0.6173 (0.7161)  data: 0.0003 (0.0185)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:32:09  iter: 5250  loss: 0.7312 (0.8960)  loss_classifier: 0.2351 (0.3077)  loss_box_reg: 0.1103 (0.1356)  loss_mask: 0.2739 (0.3224)  loss_objectness: 0.0493 (0.0645)  loss_rpn_box_reg: 0.0607 (0.0658)  time: 0.6173 (0.7161)  data: 0.0003 (0.0185)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634388070088, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8960093321289335, "loss_classifier": 0.30773518816630047, "loss_box_reg": 0.13559360054698552, "loss_mask": 0.3223691508287475, "loss_objectness": 0.06454759370074385, "loss_rpn_box_reg": 0.06576379937909188, "time": 0.7160619500023978, "data": 0.018510932422819593, "throughput": 178.75548337622376}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 5250}}
:::MLLOG {"namespace": "", "time_ms": 1634388070088, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 178.75548337622376, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:31:22  iter: 5300  loss: 0.7562 (0.8930)  loss_classifier: 0.2604 (0.3066)  loss_box_reg: 0.1129 (0.1351)  loss_mask: 0.2842 (0.3218)  loss_objectness: 0.0469 (0.0640)  loss_rpn_box_reg: 0.0570 (0.0655)  time: 0.6222 (0.7152)  data: 0.0003 (0.0182)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 2:31:22  iter: 5300  loss: 0.7555 (0.8936)  loss_classifier: 0.2480 (0.3066)  loss_box_reg: 0.1214 (0.1351)  loss_mask: 0.2826 (0.3222)  loss_objectness: 0.0429 (0.0642)  loss_rpn_box_reg: 0.0473 (0.0655)  time: 0.6222 (0.7152)  data: 0.0003 (0.0182)  lr: 0.160000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 2:31:22  iter: 5300  loss: 0.6914 (0.8910)  loss_classifier: 0.2262 (0.3058)  loss_box_reg: 0.1003 (0.1346)  loss_mask: 0.2717 (0.3222)  loss_objectness: 0.0366 (0.0636)  loss_rpn_box_reg: 0.0520 (0.0648)  time: 0.6228 (0.7152)  data: 0.0003 (0.0182)  lr: 0.160000  max mem: 14572
INFO:maskrcnn_benchmark.trainer:eta: 2:31:22  iter: 5300  loss: 0.7307 (0.8969)  loss_classifier: 0.2528 (0.3078)  loss_box_reg: 0.1110 (0.1357)  loss_mask: 0.2789 (0.3228)  loss_objectness: 0.0402 (0.0650)  loss_rpn_box_reg: 0.0467 (0.0656)  time: 0.6229 (0.7152)  data: 0.0003 (0.0181)  lr: 0.160000  max mem: 14656
INFO:maskrcnn_benchmark.trainer:eta: 2:31:22  iter: 5300  loss: 0.8168 (0.8946)  loss_classifier: 0.2548 (0.3071)  loss_box_reg: 0.1186 (0.1357)  loss_mask: 0.2900 (0.3221)  loss_objectness: 0.0474 (0.0640)  loss_rpn_box_reg: 0.0612 (0.0655)  time: 0.6229 (0.7152)  data: 0.0004 (0.0181)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 2:31:22  iter: 5300  loss: 0.7604 (0.8936)  loss_classifier: 0.2697 (0.3063)  loss_box_reg: 0.1216 (0.1354)  loss_mask: 0.2747 (0.3226)  loss_objectness: 0.0556 (0.0640)  loss_rpn_box_reg: 0.0584 (0.0653)  time: 0.6214 (0.7152)  data: 0.0003 (0.0181)  lr: 0.160000  max mem: 14740
2021-10-16 12:41:41,226 maskrcnn_benchmark.trainer INFO: eta: 2:31:22  iter: 5300  loss: 0.7722 (0.8947)  loss_classifier: 0.2644 (0.3072)  loss_box_reg: 0.1186 (0.1355)  loss_mask: 0.2706 (0.3219)  loss_objectness: 0.0492 (0.0644)  loss_rpn_box_reg: 0.0500 (0.0657)  time: 0.6213 (0.7152)  data: 0.0003 (0.0183)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:31:22  iter: 5300  loss: 0.7722 (0.8947)  loss_classifier: 0.2644 (0.3072)  loss_box_reg: 0.1186 (0.1355)  loss_mask: 0.2706 (0.3219)  loss_objectness: 0.0492 (0.0644)  loss_rpn_box_reg: 0.0500 (0.0657)  time: 0.6213 (0.7152)  data: 0.0003 (0.0183)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:31:22  iter: 5300  loss: 0.7685 (0.8959)  loss_classifier: 0.2538 (0.3074)  loss_box_reg: 0.1189 (0.1355)  loss_mask: 0.2841 (0.3229)  loss_objectness: 0.0532 (0.0643)  loss_rpn_box_reg: 0.0567 (0.0656)  time: 0.6213 (0.7152)  data: 0.0004 (0.0181)  lr: 0.160000  max mem: 14654
:::MLLOG {"namespace": "", "time_ms": 1634388101226, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8947427152631418, "loss_classifier": 0.30724518229376596, "loss_box_reg": 0.13545367521633622, "loss_mask": 0.3219474612710611, "loss_objectness": 0.06438104124177459, "loss_rpn_box_reg": 0.06571535574254703, "time": 0.7151817177826504, "data": 0.018340707814918374, "throughput": 178.97549226628897}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 5300}}
:::MLLOG {"namespace": "", "time_ms": 1634388101226, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 178.97549226628897, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:30:36  iter: 5350  loss: 0.7825 (0.8927)  loss_classifier: 0.2667 (0.3060)  loss_box_reg: 0.1193 (0.1353)  loss_mask: 0.2833 (0.3223)  loss_objectness: 0.0470 (0.0640)  loss_rpn_box_reg: 0.0576 (0.0652)  time: 0.6201 (0.7143)  data: 0.0004 (0.0180)  lr: 0.160000  max mem: 14740
INFO:maskrcnn_benchmark.trainer:eta: 2:30:36  iter: 5350  loss: 0.7792 (0.8947)  loss_classifier: 0.2737 (0.3070)  loss_box_reg: 0.1155 (0.1354)  loss_mask: 0.2853 (0.3226)  loss_objectness: 0.0529 (0.0642)  loss_rpn_box_reg: 0.0525 (0.0655)  time: 0.6211 (0.7143)  data: 0.0004 (0.0180)  lr: 0.160000  max mem: 14654
2021-10-16 12:42:12,422 maskrcnn_benchmark.trainer INFO: eta: 2:30:36  iter: 5350  loss: 0.7539 (0.8937)  loss_classifier: 0.2542 (0.3068)  loss_box_reg: 0.1217 (0.1353)  loss_mask: 0.2780 (0.3216)  loss_objectness: 0.0486 (0.0642)  loss_rpn_box_reg: 0.0442 (0.0657)  time: 0.6202 (0.7143)  data: 0.0003 (0.0182)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:30:36  iter: 5350  loss: 0.7539 (0.8937)  loss_classifier: 0.2542 (0.3068)  loss_box_reg: 0.1217 (0.1353)  loss_mask: 0.2780 (0.3216)  loss_objectness: 0.0486 (0.0642)  loss_rpn_box_reg: 0.0442 (0.0657)  time: 0.6202 (0.7143)  data: 0.0003 (0.0182)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634388132422, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8936597453600892, "loss_classifier": 0.3067978544296505, "loss_box_reg": 0.1353446629072026, "loss_mask": 0.3216264953262338, "loss_objectness": 0.06423028131163566, "loss_rpn_box_reg": 0.06566045188545205, "time": 0.7143288377957924, "data": 0.018173650848531276, "throughput": 179.18918182691624}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 5350}}
:::MLLOG {"namespace": "", "time_ms": 1634388132422, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 179.18918182691624, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:30:36  iter: 5350  loss: 0.7990 (0.8919)  loss_classifier: 0.2643 (0.3061)  loss_box_reg: 0.1226 (0.1350)  loss_mask: 0.2877 (0.3214)  loss_objectness: 0.0508 (0.0639)  loss_rpn_box_reg: 0.0621 (0.0654)  time: 0.6212 (0.7143)  data: 0.0003 (0.0180)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 2:30:36  iter: 5350  loss: 0.7701 (0.8924)  loss_classifier: 0.2493 (0.3061)  loss_box_reg: 0.1085 (0.1349)  loss_mask: 0.2748 (0.3218)  loss_objectness: 0.0434 (0.0641)  loss_rpn_box_reg: 0.0583 (0.0655)  time: 0.6219 (0.7143)  data: 0.0004 (0.0180)  lr: 0.160000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 2:30:36  iter: 5350  loss: 0.7802 (0.8899)  loss_classifier: 0.2483 (0.3054)  loss_box_reg: 0.1094 (0.1344)  loss_mask: 0.2765 (0.3218)  loss_objectness: 0.0472 (0.0635)  loss_rpn_box_reg: 0.0553 (0.0648)  time: 0.6220 (0.7143)  data: 0.0003 (0.0180)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 2:30:36  iter: 5350  loss: 0.7626 (0.8957)  loss_classifier: 0.2453 (0.3073)  loss_box_reg: 0.1076 (0.1355)  loss_mask: 0.2694 (0.3224)  loss_objectness: 0.0498 (0.0649)  loss_rpn_box_reg: 0.0615 (0.0656)  time: 0.6221 (0.7143)  data: 0.0003 (0.0180)  lr: 0.160000  max mem: 14656
INFO:maskrcnn_benchmark.trainer:eta: 2:30:36  iter: 5350  loss: 0.7620 (0.8934)  loss_classifier: 0.2559 (0.3067)  loss_box_reg: 0.1089 (0.1356)  loss_mask: 0.2782 (0.3218)  loss_objectness: 0.0419 (0.0639)  loss_rpn_box_reg: 0.0440 (0.0654)  time: 0.6220 (0.7143)  data: 0.0003 (0.0180)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 2:29:49  iter: 5400  loss: 0.6984 (0.8920)  loss_classifier: 0.2404 (0.3062)  loss_box_reg: 0.1043 (0.1354)  loss_mask: 0.2758 (0.3214)  loss_objectness: 0.0376 (0.0637)  loss_rpn_box_reg: 0.0451 (0.0653)  time: 0.6269 (0.7135)  data: 0.0003 (0.0178)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 2:29:49  iter: 5400  loss: 0.7297 (0.8944)  loss_classifier: 0.2395 (0.3068)  loss_box_reg: 0.1171 (0.1353)  loss_mask: 0.2697 (0.3220)  loss_objectness: 0.0478 (0.0648)  loss_rpn_box_reg: 0.0465 (0.0655)  time: 0.6269 (0.7135)  data: 0.0003 (0.0178)  lr: 0.160000  max mem: 14656
INFO:maskrcnn_benchmark.trainer:eta: 2:29:50  iter: 5400  loss: 0.7498 (0.8910)  loss_classifier: 0.2660 (0.3057)  loss_box_reg: 0.1212 (0.1349)  loss_mask: 0.2828 (0.3211)  loss_objectness: 0.0383 (0.0638)  loss_rpn_box_reg: 0.0543 (0.0654)  time: 0.6263 (0.7135)  data: 0.0003 (0.0179)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 2:29:50  iter: 5400  loss: 0.7593 (0.8889)  loss_classifier: 0.2482 (0.3049)  loss_box_reg: 0.1154 (0.1343)  loss_mask: 0.2839 (0.3215)  loss_objectness: 0.0455 (0.0633)  loss_rpn_box_reg: 0.0647 (0.0648)  time: 0.6269 (0.7135)  data: 0.0003 (0.0178)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 2:29:50  iter: 5400  loss: 0.7862 (0.8913)  loss_classifier: 0.2707 (0.3057)  loss_box_reg: 0.1232 (0.1348)  loss_mask: 0.2923 (0.3215)  loss_objectness: 0.0574 (0.0640)  loss_rpn_box_reg: 0.0594 (0.0654)  time: 0.6262 (0.7135)  data: 0.0003 (0.0179)  lr: 0.160000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 2:29:50  iter: 5400  loss: 0.7655 (0.8917)  loss_classifier: 0.2469 (0.3056)  loss_box_reg: 0.1205 (0.1352)  loss_mask: 0.2767 (0.3219)  loss_objectness: 0.0425 (0.0638)  loss_rpn_box_reg: 0.0507 (0.0652)  time: 0.6265 (0.7135)  data: 0.0003 (0.0178)  lr: 0.160000  max mem: 14740
2021-10-16 12:42:43,608 maskrcnn_benchmark.trainer INFO: eta: 2:29:49  iter: 5400  loss: 0.7513 (0.8925)  loss_classifier: 0.2539 (0.3063)  loss_box_reg: 0.1180 (0.1352)  loss_mask: 0.2801 (0.3213)  loss_objectness: 0.0471 (0.0641)  loss_rpn_box_reg: 0.0513 (0.0656)  time: 0.6259 (0.7135)  data: 0.0003 (0.0180)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:29:49  iter: 5400  loss: 0.7513 (0.8925)  loss_classifier: 0.2539 (0.3063)  loss_box_reg: 0.1180 (0.1352)  loss_mask: 0.2801 (0.3213)  loss_objectness: 0.0471 (0.0641)  loss_rpn_box_reg: 0.0513 (0.0656)  time: 0.6259 (0.7135)  data: 0.0003 (0.0180)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:29:50  iter: 5400  loss: 0.7749 (0.8936)  loss_classifier: 0.2447 (0.3065)  loss_box_reg: 0.1157 (0.1353)  loss_mask: 0.2846 (0.3223)  loss_objectness: 0.0464 (0.0641)  loss_rpn_box_reg: 0.0579 (0.0655)  time: 0.6260 (0.7135)  data: 0.0004 (0.0178)  lr: 0.160000  max mem: 14654
:::MLLOG {"namespace": "", "time_ms": 1634388163608, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8925109273029699, "loss_classifier": 0.3063180154506807, "loss_box_reg": 0.1351764427649323, "loss_mask": 0.3213283453385035, "loss_objectness": 0.06406270510448074, "loss_rpn_box_reg": 0.06562541915259014, "time": 0.7134897918612869, "data": 0.01800944756578516, "throughput": 179.3999037688897}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 5400}}
:::MLLOG {"namespace": "", "time_ms": 1634388163608, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 179.3999037688897, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:29:03  iter: 5450  loss: 0.7546 (0.8905)  loss_classifier: 0.2382 (0.3051)  loss_box_reg: 0.1122 (0.1350)  loss_mask: 0.2826 (0.3216)  loss_objectness: 0.0434 (0.0637)  loss_rpn_box_reg: 0.0510 (0.0651)  time: 0.6187 (0.7127)  data: 0.0003 (0.0177)  lr: 0.160000  max mem: 14740
INFO:maskrcnn_benchmark.trainer:eta: 2:29:04  iter: 5450  loss: 0.7382 (0.8924)  loss_classifier: 0.2425 (0.3060)  loss_box_reg: 0.1138 (0.1351)  loss_mask: 0.2870 (0.3220)  loss_objectness: 0.0423 (0.0639)  loss_rpn_box_reg: 0.0533 (0.0654)  time: 0.6188 (0.7127)  data: 0.0004 (0.0176)  lr: 0.160000  max mem: 14654
2021-10-16 12:43:14,763 maskrcnn_benchmark.trainer INFO: eta: 2:29:03  iter: 5450  loss: 0.7965 (0.8916)  loss_classifier: 0.2540 (0.3060)  loss_box_reg: 0.1150 (0.1351)  loss_mask: 0.2787 (0.3210)  loss_objectness: 0.0490 (0.0640)  loss_rpn_box_reg: 0.0532 (0.0656)  time: 0.6188 (0.7127)  data: 0.0004 (0.0178)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:29:03  iter: 5450  loss: 0.7965 (0.8916)  loss_classifier: 0.2540 (0.3060)  loss_box_reg: 0.1150 (0.1351)  loss_mask: 0.2787 (0.3210)  loss_objectness: 0.0490 (0.0640)  loss_rpn_box_reg: 0.0532 (0.0656)  time: 0.6188 (0.7127)  data: 0.0004 (0.0178)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634388194763, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8916169024005942, "loss_classifier": 0.3059847254025827, "loss_box_reg": 0.13505686205457212, "loss_mask": 0.32100328805796596, "loss_objectness": 0.06397667103370122, "loss_rpn_box_reg": 0.06559535647152898, "time": 0.7126605624890109, "data": 0.017848556326069964, "throughput": 179.60864784344474}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 5450}}
:::MLLOG {"namespace": "", "time_ms": 1634388194763, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 179.60864784344474, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:29:04  iter: 5450  loss: 0.7038 (0.8899)  loss_classifier: 0.2251 (0.3051)  loss_box_reg: 0.1053 (0.1346)  loss_mask: 0.2741 (0.3211)  loss_objectness: 0.0452 (0.0638)  loss_rpn_box_reg: 0.0418 (0.0653)  time: 0.6187 (0.7127)  data: 0.0003 (0.0177)  lr: 0.160000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 2:29:03  iter: 5450  loss: 0.7575 (0.8899)  loss_classifier: 0.2417 (0.3054)  loss_box_reg: 0.1113 (0.1347)  loss_mask: 0.2864 (0.3208)  loss_objectness: 0.0455 (0.0636)  loss_rpn_box_reg: 0.0578 (0.0654)  time: 0.6189 (0.7127)  data: 0.0003 (0.0177)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 2:29:03  iter: 5450  loss: 0.7301 (0.8878)  loss_classifier: 0.2482 (0.3045)  loss_box_reg: 0.1258 (0.1342)  loss_mask: 0.2750 (0.3212)  loss_objectness: 0.0452 (0.0632)  loss_rpn_box_reg: 0.0593 (0.0647)  time: 0.6187 (0.7127)  data: 0.0004 (0.0177)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 2:29:03  iter: 5450  loss: 0.7085 (0.8932)  loss_classifier: 0.2393 (0.3064)  loss_box_reg: 0.1106 (0.1352)  loss_mask: 0.2694 (0.3216)  loss_objectness: 0.0420 (0.0646)  loss_rpn_box_reg: 0.0549 (0.0654)  time: 0.6185 (0.7127)  data: 0.0003 (0.0176)  lr: 0.160000  max mem: 14656
INFO:maskrcnn_benchmark.trainer:eta: 2:29:03  iter: 5450  loss: 0.7914 (0.8909)  loss_classifier: 0.2571 (0.3058)  loss_box_reg: 0.1192 (0.1353)  loss_mask: 0.2864 (0.3210)  loss_objectness: 0.0441 (0.0635)  loss_rpn_box_reg: 0.0532 (0.0652)  time: 0.6187 (0.7127)  data: 0.0004 (0.0176)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 2:28:18  iter: 5500  loss: 0.7174 (0.8867)  loss_classifier: 0.2380 (0.3040)  loss_box_reg: 0.1167 (0.1341)  loss_mask: 0.2821 (0.3208)  loss_objectness: 0.0407 (0.0631)  loss_rpn_box_reg: 0.0528 (0.0646)  time: 0.6240 (0.7119)  data: 0.0003 (0.0175)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 2:28:18  iter: 5500  loss: 0.7305 (0.8899)  loss_classifier: 0.2434 (0.3054)  loss_box_reg: 0.1124 (0.1351)  loss_mask: 0.2770 (0.3207)  loss_objectness: 0.0458 (0.0634)  loss_rpn_box_reg: 0.0431 (0.0652)  time: 0.6241 (0.7118)  data: 0.0003 (0.0175)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 2:28:18  iter: 5500  loss: 0.8212 (0.8890)  loss_classifier: 0.2749 (0.3049)  loss_box_reg: 0.1377 (0.1346)  loss_mask: 0.2938 (0.3205)  loss_objectness: 0.0562 (0.0635)  loss_rpn_box_reg: 0.0589 (0.0654)  time: 0.6233 (0.7119)  data: 0.0004 (0.0175)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 2:28:18  iter: 5500  loss: 0.7394 (0.8920)  loss_classifier: 0.2407 (0.3059)  loss_box_reg: 0.1076 (0.1350)  loss_mask: 0.2825 (0.3213)  loss_objectness: 0.0373 (0.0645)  loss_rpn_box_reg: 0.0538 (0.0654)  time: 0.6238 (0.7118)  data: 0.0003 (0.0175)  lr: 0.160000  max mem: 14656
INFO:maskrcnn_benchmark.trainer:eta: 2:28:18  iter: 5500  loss: 0.7342 (0.8887)  loss_classifier: 0.2587 (0.3047)  loss_box_reg: 0.1197 (0.1344)  loss_mask: 0.2770 (0.3207)  loss_objectness: 0.0422 (0.0636)  loss_rpn_box_reg: 0.0559 (0.0652)  time: 0.6236 (0.7119)  data: 0.0003 (0.0175)  lr: 0.160000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 2:28:18  iter: 5500  loss: 0.7292 (0.8894)  loss_classifier: 0.2375 (0.3047)  loss_box_reg: 0.1094 (0.1349)  loss_mask: 0.2671 (0.3212)  loss_objectness: 0.0406 (0.0635)  loss_rpn_box_reg: 0.0504 (0.0650)  time: 0.6224 (0.7119)  data: 0.0003 (0.0175)  lr: 0.160000  max mem: 14740
2021-10-16 12:43:45,942 maskrcnn_benchmark.trainer INFO: eta: 2:28:18  iter: 5500  loss: 0.7607 (0.8907)  loss_classifier: 0.2448 (0.3056)  loss_box_reg: 0.1204 (0.1349)  loss_mask: 0.2903 (0.3207)  loss_objectness: 0.0454 (0.0638)  loss_rpn_box_reg: 0.0600 (0.0656)  time: 0.6225 (0.7119)  data: 0.0003 (0.0177)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:28:18  iter: 5500  loss: 0.7148 (0.8911)  loss_classifier: 0.2347 (0.3055)  loss_box_reg: 0.1058 (0.1349)  loss_mask: 0.2770 (0.3216)  loss_objectness: 0.0479 (0.0638)  loss_rpn_box_reg: 0.0599 (0.0653)  time: 0.6224 (0.7119)  data: 0.0003 (0.0175)  lr: 0.160000  max mem: 14654
INFO:maskrcnn_benchmark.trainer:eta: 2:28:18  iter: 5500  loss: 0.7607 (0.8907)  loss_classifier: 0.2448 (0.3056)  loss_box_reg: 0.1204 (0.1349)  loss_mask: 0.2903 (0.3207)  loss_objectness: 0.0454 (0.0638)  loss_rpn_box_reg: 0.0600 (0.0656)  time: 0.6225 (0.7119)  data: 0.0003 (0.0177)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634388225942, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.890671560964801, "loss_classifier": 0.30559172172438015, "loss_box_reg": 0.1349356982043775, "loss_mask": 0.32071009999242694, "loss_objectness": 0.063849686388265, "loss_rpn_box_reg": 0.06558435530469499, "time": 0.7118507712104104, "data": 0.01769022291356867, "throughput": 179.81296807806012}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 5500}}
:::MLLOG {"namespace": "", "time_ms": 1634388225942, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 179.81296807806012, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
:::MLLOG {"namespace": "", "time_ms": 1634388234339, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 111, "epoch_num": 6}}
:::MLLOG {"namespace": "", "time_ms": 1634388234339, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 112, "first_epoch_num": 6}}
:::MLLOG {"namespace": "", "time_ms": 1634388234340, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 113, "epoch_num": 6}}
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
2021-10-16 12:43:54,711 maskrcnn_benchmark.data.build WARNING: When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
Done (t=0.55s)
creating index...
index created!
Done (t=0.55s)
creating index...
Done (t=0.55s)
creating index...
shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]index created!
index created!
Done (t=0.54s)
creating index...
shapes=None
passthrough=True
creating index...
GT annotations already exist!
shapes=None
passthrough=True
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]  0% 0/40 [00:00<?, ?it/s]Done (t=0.54s)
creating index...
index created!
shapes=None
passthrough=True
Done (t=0.55s)
creating index...
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]Done (t=0.55s)
creating index...
index created!
Done (t=0.54s)
creating index...
shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]index created!
index created!
shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]shapes=None
passthrough=True
creating index...
GT annotations already exist!
2021-10-16 12:43:55,293 maskrcnn_benchmark.inference INFO: Start evaluation on coco_2017_val dataset(5000 images).
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]index created!
shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]  2% 1/40 [00:00<00:11,  3.43it/s]  2% 1/40 [00:00<00:11,  3.47it/s]  2% 1/40 [00:00<00:11,  3.42it/s]  2% 1/40 [00:00<00:11,  3.35it/s]  2% 1/40 [00:00<00:11,  3.45it/s]  2% 1/40 [00:00<00:11,  3.28it/s]  2% 1/40 [00:00<00:12,  3.15it/s]  2% 1/40 [00:00<00:11,  3.30it/s]  5% 2/40 [00:00<00:11,  3.43it/s]  5% 2/40 [00:00<00:10,  3.48it/s]  5% 2/40 [00:00<00:11,  3.41it/s]  5% 2/40 [00:00<00:10,  3.46it/s]  5% 2/40 [00:00<00:10,  3.52it/s]  5% 2/40 [00:00<00:11,  3.38it/s]  5% 2/40 [00:00<00:11,  3.26it/s]  5% 2/40 [00:00<00:11,  3.36it/s]  8% 3/40 [00:00<00:10,  3.46it/s]  8% 3/40 [00:00<00:10,  3.53it/s]  8% 3/40 [00:00<00:10,  3.41it/s]  8% 3/40 [00:00<00:10,  3.46it/s]  8% 3/40 [00:00<00:10,  3.55it/s]  8% 3/40 [00:00<00:10,  3.43it/s]  8% 3/40 [00:00<00:11,  3.33it/s]  8% 3/40 [00:00<00:10,  3.39it/s] 10% 4/40 [00:01<00:10,  3.46it/s] 10% 4/40 [00:01<00:10,  3.51it/s] 10% 4/40 [00:01<00:10,  3.42it/s] 10% 4/40 [00:01<00:10,  3.45it/s] 10% 4/40 [00:01<00:10,  3.50it/s] 10% 4/40 [00:01<00:10,  3.47it/s] 10% 4/40 [00:01<00:10,  3.36it/s] 10% 4/40 [00:01<00:10,  3.38it/s] 12% 5/40 [00:01<00:10,  3.45it/s] 12% 5/40 [00:01<00:09,  3.51it/s] 12% 5/40 [00:01<00:10,  3.47it/s] 12% 5/40 [00:01<00:10,  3.48it/s] 12% 5/40 [00:01<00:10,  3.49it/s] 12% 5/40 [00:01<00:10,  3.47it/s] 12% 5/40 [00:01<00:10,  3.43it/s] 12% 5/40 [00:01<00:10,  3.45it/s] 15% 6/40 [00:01<00:09,  3.51it/s] 15% 6/40 [00:01<00:09,  3.44it/s] 15% 6/40 [00:01<00:09,  3.51it/s] 15% 6/40 [00:01<00:09,  3.44it/s] 15% 6/40 [00:01<00:09,  3.47it/s] 15% 6/40 [00:01<00:09,  3.54it/s] 15% 6/40 [00:01<00:09,  3.47it/s] 15% 6/40 [00:01<00:09,  3.46it/s] 18% 7/40 [00:02<00:09,  3.48it/s] 18% 7/40 [00:02<00:09,  3.44it/s] 18% 7/40 [00:01<00:09,  3.51it/s] 18% 7/40 [00:02<00:09,  3.46it/s] 18% 7/40 [00:01<00:09,  3.51it/s] 18% 7/40 [00:01<00:09,  3.50it/s] 18% 7/40 [00:02<00:09,  3.53it/s] 18% 7/40 [00:02<00:09,  3.46it/s] 20% 8/40 [00:02<00:09,  3.48it/s] 20% 8/40 [00:02<00:08,  3.57it/s] 20% 8/40 [00:02<00:09,  3.44it/s] 20% 8/40 [00:02<00:09,  3.41it/s] 20% 8/40 [00:02<00:09,  3.45it/s] 20% 8/40 [00:02<00:09,  3.51it/s] 20% 8/40 [00:02<00:09,  3.52it/s] 20% 8/40 [00:02<00:09,  3.48it/s] 22% 9/40 [00:02<00:08,  3.48it/s] 22% 9/40 [00:02<00:08,  3.47it/s] 22% 9/40 [00:02<00:08,  3.53it/s] 22% 9/40 [00:02<00:09,  3.43it/s] 22% 9/40 [00:02<00:08,  3.51it/s] 22% 9/40 [00:02<00:08,  3.46it/s] 22% 9/40 [00:02<00:08,  3.56it/s] 22% 9/40 [00:02<00:08,  3.47it/s] 25% 10/40 [00:02<00:08,  3.55it/s] 25% 10/40 [00:02<00:08,  3.46it/s] 25% 10/40 [00:02<00:08,  3.45it/s] 25% 10/40 [00:02<00:08,  3.57it/s] 25% 10/40 [00:02<00:08,  3.50it/s] 25% 10/40 [00:02<00:08,  3.49it/s] 25% 10/40 [00:02<00:08,  3.54it/s] 25% 10/40 [00:02<00:08,  3.47it/s] 28% 11/40 [00:03<00:08,  3.53it/s] 28% 11/40 [00:03<00:08,  3.44it/s] 28% 11/40 [00:03<00:08,  3.45it/s] 28% 11/40 [00:03<00:08,  3.53it/s] 28% 11/40 [00:03<00:08,  3.55it/s] 28% 11/40 [00:03<00:08,  3.50it/s] 28% 11/40 [00:03<00:08,  3.53it/s] 28% 11/40 [00:03<00:08,  3.46it/s] 30% 12/40 [00:03<00:07,  3.56it/s] 30% 12/40 [00:03<00:08,  3.50it/s] 30% 12/40 [00:03<00:08,  3.45it/s] 30% 12/40 [00:03<00:07,  3.56it/s] 30% 12/40 [00:03<00:07,  3.54it/s] 30% 12/40 [00:03<00:08,  3.46it/s] 30% 12/40 [00:03<00:07,  3.55it/s] 30% 12/40 [00:03<00:08,  3.50it/s] 32% 13/40 [00:03<00:07,  3.63it/s] 32% 13/40 [00:03<00:07,  3.49it/s] 32% 13/40 [00:03<00:07,  3.48it/s] 32% 13/40 [00:03<00:07,  3.51it/s] 32% 13/40 [00:03<00:07,  3.51it/s] 32% 13/40 [00:03<00:07,  3.52it/s] 32% 13/40 [00:03<00:07,  3.53it/s] 32% 13/40 [00:03<00:07,  3.47it/s] 35% 14/40 [00:03<00:07,  3.56it/s] 35% 14/40 [00:04<00:07,  3.54it/s] 35% 14/40 [00:04<00:07,  3.48it/s] 35% 14/40 [00:03<00:07,  3.57it/s] 35% 14/40 [00:04<00:07,  3.48it/s] 35% 14/40 [00:03<00:07,  3.53it/s] 35% 14/40 [00:03<00:07,  3.48it/s] 35% 14/40 [00:04<00:07,  3.55it/s] 38% 15/40 [00:04<00:07,  3.51it/s] 38% 15/40 [00:04<00:07,  3.52it/s] 38% 15/40 [00:04<00:06,  3.62it/s] 38% 15/40 [00:04<00:07,  3.51it/s] 38% 15/40 [00:04<00:07,  3.57it/s] 38% 15/40 [00:04<00:07,  3.49it/s] 38% 15/40 [00:04<00:07,  3.51it/s] 38% 15/40 [00:04<00:07,  3.44it/s] 40% 16/40 [00:04<00:06,  3.52it/s] 40% 16/40 [00:04<00:06,  3.55it/s] 40% 16/40 [00:04<00:06,  3.56it/s] 40% 16/40 [00:04<00:06,  3.46it/s] 40% 16/40 [00:04<00:06,  3.54it/s] 40% 16/40 [00:04<00:06,  3.48it/s] 40% 16/40 [00:04<00:06,  3.46it/s] 40% 16/40 [00:04<00:06,  3.49it/s] 42% 17/40 [00:04<00:06,  3.51it/s] 42% 17/40 [00:04<00:06,  3.58it/s] 42% 17/40 [00:04<00:06,  3.62it/s] 42% 17/40 [00:04<00:06,  3.60it/s] 42% 17/40 [00:04<00:06,  3.43it/s] 42% 17/40 [00:04<00:06,  3.46it/s] 42% 17/40 [00:04<00:06,  3.56it/s] 42% 17/40 [00:04<00:06,  3.50it/s] 45% 18/40 [00:05<00:06,  3.64it/s] 45% 18/40 [00:05<00:06,  3.51it/s] 45% 18/40 [00:05<00:06,  3.52it/s] 45% 18/40 [00:05<00:06,  3.56it/s] 45% 18/40 [00:05<00:06,  3.44it/s] 45% 18/40 [00:05<00:06,  3.45it/s] 45% 18/40 [00:05<00:06,  3.53it/s] 45% 18/40 [00:05<00:06,  3.49it/s] 48% 19/40 [00:05<00:05,  3.61it/s] 48% 19/40 [00:05<00:05,  3.50it/s] 48% 19/40 [00:05<00:05,  3.59it/s] 48% 19/40 [00:05<00:06,  3.49it/s] 48% 19/40 [00:05<00:06,  3.47it/s] 48% 19/40 [00:05<00:06,  3.49it/s] 48% 19/40 [00:05<00:05,  3.51it/s] 48% 19/40 [00:05<00:05,  3.52it/s] 50% 20/40 [00:05<00:05,  3.59it/s] 50% 20/40 [00:05<00:05,  3.52it/s] 50% 20/40 [00:05<00:05,  3.57it/s] 50% 20/40 [00:05<00:05,  3.46it/s] 50% 20/40 [00:05<00:05,  3.50it/s] 50% 20/40 [00:05<00:05,  3.51it/s] 50% 20/40 [00:05<00:05,  3.52it/s] 50% 20/40 [00:05<00:05,  3.49it/s] 52% 21/40 [00:05<00:05,  3.57it/s] 52% 21/40 [00:05<00:05,  3.51it/s] 52% 21/40 [00:05<00:05,  3.57it/s] 52% 21/40 [00:06<00:05,  3.56it/s] 52% 21/40 [00:06<00:05,  3.49it/s] 52% 21/40 [00:06<00:05,  3.50it/s] 52% 21/40 [00:05<00:05,  3.53it/s] 52% 21/40 [00:06<00:05,  3.52it/s] 55% 22/40 [00:06<00:04,  3.62it/s] 55% 22/40 [00:06<00:05,  3.54it/s] 55% 22/40 [00:06<00:05,  3.54it/s] 55% 22/40 [00:06<00:05,  3.52it/s] 55% 22/40 [00:06<00:05,  3.44it/s] 55% 22/40 [00:06<00:05,  3.47it/s] 55% 22/40 [00:06<00:05,  3.57it/s] 55% 22/40 [00:06<00:05,  3.48it/s] 57% 23/40 [00:06<00:04,  3.61it/s] 57% 23/40 [00:06<00:04,  3.56it/s] 57% 23/40 [00:06<00:04,  3.58it/s] 57% 23/40 [00:06<00:04,  3.50it/s] 57% 23/40 [00:06<00:04,  3.43it/s] 57% 23/40 [00:06<00:04,  3.50it/s] 57% 23/40 [00:06<00:04,  3.54it/s] 57% 23/40 [00:06<00:04,  3.45it/s] 60% 24/40 [00:06<00:04,  3.59it/s] 60% 24/40 [00:06<00:04,  3.57it/s] 60% 24/40 [00:06<00:04,  3.61it/s] 60% 24/40 [00:06<00:04,  3.52it/s] 60% 24/40 [00:06<00:04,  3.44it/s] 60% 24/40 [00:06<00:04,  3.51it/s] 60% 24/40 [00:06<00:04,  3.57it/s] 60% 24/40 [00:06<00:04,  3.49it/s] 62% 25/40 [00:07<00:04,  3.61it/s] 62% 25/40 [00:07<00:04,  3.54it/s] 62% 25/40 [00:07<00:04,  3.61it/s] 62% 25/40 [00:07<00:04,  3.48it/s] 62% 25/40 [00:07<00:04,  3.45it/s] 62% 25/40 [00:07<00:04,  3.56it/s] 62% 25/40 [00:07<00:04,  3.47it/s] 62% 25/40 [00:07<00:04,  3.48it/s] 65% 26/40 [00:07<00:03,  3.61it/s] 65% 26/40 [00:07<00:03,  3.51it/s] 65% 26/40 [00:07<00:03,  3.56it/s] 65% 26/40 [00:07<00:03,  3.53it/s] 65% 26/40 [00:07<00:03,  3.52it/s] 65% 26/40 [00:07<00:04,  3.44it/s] 65% 26/40 [00:07<00:03,  3.54it/s] 65% 26/40 [00:07<00:04,  3.47it/s] 68% 27/40 [00:07<00:03,  3.59it/s] 68% 27/40 [00:07<00:03,  3.57it/s] 68% 27/40 [00:07<00:03,  3.58it/s] 68% 27/40 [00:07<00:03,  3.51it/s] 68% 27/40 [00:07<00:03,  3.49it/s] 68% 27/40 [00:07<00:03,  3.51it/s] 68% 27/40 [00:07<00:03,  3.51it/s] 68% 27/40 [00:07<00:03,  3.53it/s] 70% 28/40 [00:07<00:03,  3.59it/s] 70% 28/40 [00:07<00:03,  3.57it/s] 70% 28/40 [00:07<00:03,  3.64it/s] 70% 28/40 [00:08<00:03,  3.48it/s] 70% 28/40 [00:08<00:03,  3.51it/s] 70% 28/40 [00:08<00:03,  3.46it/s] 70% 28/40 [00:07<00:03,  3.54it/s] 70% 28/40 [00:08<00:03,  3.52it/s] 72% 29/40 [00:08<00:03,  3.57it/s] 72% 29/40 [00:08<00:03,  3.56it/s] 72% 29/40 [00:08<00:03,  3.58it/s] 72% 29/40 [00:08<00:03,  3.54it/s] 72% 29/40 [00:08<00:03,  3.52it/s] 72% 29/40 [00:08<00:03,  3.44it/s] 72% 29/40 [00:08<00:03,  3.50it/s] 72% 29/40 [00:08<00:03,  3.53it/s] 75% 30/40 [00:08<00:02,  3.63it/s] 75% 30/40 [00:08<00:02,  3.56it/s] 75% 30/40 [00:08<00:02,  3.52it/s] 75% 30/40 [00:08<00:02,  3.49it/s] 75% 30/40 [00:08<00:02,  3.52it/s] 75% 30/40 [00:08<00:02,  3.53it/s] 75% 30/40 [00:08<00:02,  3.42it/s] 75% 30/40 [00:08<00:02,  3.53it/s] 78% 31/40 [00:08<00:02,  3.61it/s] 78% 31/40 [00:08<00:02,  3.52it/s] 78% 31/40 [00:08<00:02,  3.49it/s] 78% 31/40 [00:08<00:02,  3.49it/s] 78% 31/40 [00:08<00:02,  3.55it/s] 78% 31/40 [00:08<00:02,  3.50it/s] 78% 31/40 [00:08<00:02,  3.46it/s] 78% 31/40 [00:08<00:02,  3.53it/s] 80% 32/40 [00:08<00:02,  3.61it/s] 80% 32/40 [00:09<00:02,  3.48it/s] 80% 32/40 [00:09<00:02,  3.53it/s] 80% 32/40 [00:09<00:02,  3.50it/s] 80% 32/40 [00:09<00:02,  3.50it/s] 80% 32/40 [00:09<00:02,  3.49it/s] 80% 32/40 [00:09<00:02,  3.49it/s] 80% 32/40 [00:09<00:02,  3.50it/s] 82% 33/40 [00:09<00:01,  3.57it/s] 82% 33/40 [00:09<00:01,  3.60it/s] 82% 33/40 [00:09<00:02,  3.47it/s] 82% 33/40 [00:09<00:01,  3.51it/s] 82% 33/40 [00:09<00:01,  3.56it/s] 82% 33/40 [00:09<00:02,  3.44it/s] 82% 33/40 [00:09<00:02,  3.46it/s] 82% 33/40 [00:09<00:01,  3.55it/s] 85% 34/40 [00:09<00:01,  3.58it/s] 85% 34/40 [00:09<00:01,  3.53it/s] 85% 34/40 [00:09<00:01,  3.49it/s] 85% 34/40 [00:09<00:01,  3.54it/s] 85% 34/40 [00:09<00:01,  3.52it/s] 85% 34/40 [00:09<00:01,  3.61it/s] 85% 34/40 [00:09<00:01,  3.48it/s] 85% 34/40 [00:09<00:01,  3.45it/s] 88% 35/40 [00:09<00:01,  3.55it/s] 88% 35/40 [00:09<00:01,  3.57it/s] 88% 35/40 [00:09<00:01,  3.49it/s] 88% 35/40 [00:10<00:01,  3.54it/s] 88% 35/40 [00:09<00:01,  3.50it/s] 88% 35/40 [00:09<00:01,  3.52it/s] 88% 35/40 [00:10<00:01,  3.43it/s] 88% 35/40 [00:10<00:01,  3.44it/s] 90% 36/40 [00:10<00:01,  3.53it/s] 90% 36/40 [00:10<00:01,  3.61it/s] 90% 36/40 [00:10<00:01,  3.51it/s] 90% 36/40 [00:10<00:01,  3.54it/s] 90% 36/40 [00:10<00:01,  3.49it/s] 90% 36/40 [00:10<00:01,  3.44it/s] 90% 36/40 [00:10<00:01,  3.47it/s] 90% 36/40 [00:10<00:01,  3.42it/s] 92% 37/40 [00:10<00:00,  3.52it/s] 92% 37/40 [00:10<00:00,  3.59it/s] 92% 37/40 [00:10<00:00,  3.46it/s] 92% 37/40 [00:10<00:00,  3.58it/s] 92% 37/40 [00:10<00:00,  3.53it/s] 92% 37/40 [00:10<00:00,  3.49it/s] 92% 37/40 [00:10<00:00,  3.44it/s] 92% 37/40 [00:10<00:00,  3.43it/s] 95% 38/40 [00:10<00:00,  3.55it/s] 95% 38/40 [00:10<00:00,  3.57it/s] 95% 38/40 [00:10<00:00,  3.47it/s] 95% 38/40 [00:10<00:00,  3.60it/s] 98% 39/40 [00:10<00:00,  4.39it/s] 95% 38/40 [00:10<00:00,  3.86it/s] 95% 38/40 [00:10<00:00,  3.62it/s] 98% 39/40 [00:10<00:00,  4.29it/s] 95% 38/40 [00:10<00:00,  3.51it/s] 95% 38/40 [00:10<00:00,  3.48it/s] 98% 39/40 [00:10<00:00,  4.22it/s] 98% 39/40 [00:10<00:00,  3.83it/s]100% 40/40 [00:10<00:00,  4.66it/s]100% 40/40 [00:10<00:00,  3.65it/s]
100% 40/40 [00:10<00:00,  3.64it/s]
100% 40/40 [00:11<00:00,  4.48it/s]100% 40/40 [00:11<00:00,  3.61it/s]
100% 40/40 [00:11<00:00,  4.70it/s]100% 40/40 [00:11<00:00,  3.59it/s]
 98% 39/40 [00:11<00:00,  3.73it/s] 98% 39/40 [00:11<00:00,  3.60it/s]100% 40/40 [00:11<00:00,  3.60it/s]
 98% 39/40 [00:11<00:00,  3.54it/s] 98% 39/40 [00:11<00:00,  3.54it/s]100% 40/40 [00:11<00:00,  3.56it/s]
100% 40/40 [00:11<00:00,  3.58it/s]
100% 40/40 [00:11<00:00,  4.42it/s]100% 40/40 [00:11<00:00,  3.55it/s]
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.234792 (0.017975666427612304 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.290305 (0.018064487838745116 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.213993 (0.017942389297485352 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.261424 (0.018018278121948242 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.203038 (0.01792486152648926 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.262279 (0.018019646072387697 s / img per device, on 8 devices)
2021-10-16 12:44:06,492 maskrcnn_benchmark.inference INFO: Total inference time: 0:00:11.198835 (0.017918136215209962 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.187371 (0.017899794006347655 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.198835 (0.017918136215209962 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.026s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.026s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.026s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.027s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.027s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.027s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.027s
2021-10-16 12:44:06,683 maskrcnn_benchmark.timed_section INFO: EXPOSED: Launching evaluation preparation tasks took 0.032s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.032s
:::MLLOG {"namespace": "", "time_ms": 1634388246686, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 168, "first_epoch_num": 7, "epoch_count": 1}}
:::MLLOG {"namespace": "", "time_ms": 1634388246688, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 169, "epoch_num": 7}}
INFO:maskrcnn_benchmark.timed_section:Prepping took 9.131 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 9.268 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 9.278 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 9.402 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 9.586 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 9.558 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 9.814 seconds total
2021-10-16 12:44:17,773 maskrcnn_benchmark.timed_section INFO: Prepping took 10.039 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 10.039 seconds total
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.190s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.191s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.193s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.193s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.193s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.193s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.197s
2021-10-16 12:44:26,372 maskrcnn_benchmark.timed_section INFO: EXPOSED: Launching evaluation task took 0.198s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.198s
Evaluating predictions
Loading and preparing results...
resFile is ./inference/coco_2017_val/segm.json
Loading and preparing results...
resFile is ./inference/coco_2017_val/bbox.json
DONE (t=0.92s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=2.12s)
Running per image evaluation...
Evaluate annotation type *segm*
DONE (t=1.90s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.28123
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.48089
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.29358
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.15504
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.31031
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.35878
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.26027
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.41765
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.43826
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.26004
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.47036
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.56015
DONE (t=2.81s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.26702
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.45342
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.27896
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.10980
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.29020
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.39419
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.25163
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.39053
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.40760
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.21694
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.44253
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.54911
INFO:maskrcnn_benchmark.trainer:eta: 2:28:21  iter: 5550  loss: 0.7578 (0.8853)  loss_classifier: 0.2472 (0.3035)  loss_box_reg: 0.1186 (0.1339)  loss_mask: 0.2845 (0.3204)  loss_objectness: 0.0339 (0.0629)  loss_rpn_box_reg: 0.0506 (0.0646)  time: 0.6245 (0.7150)  data: 0.0003 (0.0196)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 2:28:21  iter: 5550  loss: 0.7298 (0.8884)  loss_classifier: 0.2468 (0.3048)  loss_box_reg: 0.1164 (0.1349)  loss_mask: 0.2783 (0.3204)  loss_objectness: 0.0375 (0.0632)  loss_rpn_box_reg: 0.0567 (0.0651)  time: 0.6247 (0.7150)  data: 0.0003 (0.0196)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 2:28:21  iter: 5550  loss: 0.7579 (0.8907)  loss_classifier: 0.2593 (0.3054)  loss_box_reg: 0.1181 (0.1348)  loss_mask: 0.2828 (0.3209)  loss_objectness: 0.0361 (0.0643)  loss_rpn_box_reg: 0.0443 (0.0653)  time: 0.6244 (0.7150)  data: 0.0003 (0.0196)  lr: 0.160000  max mem: 14656
INFO:maskrcnn_benchmark.trainer:eta: 2:28:21  iter: 5550  loss: 0.7716 (0.8876)  loss_classifier: 0.2818 (0.3043)  loss_box_reg: 0.1216 (0.1343)  loss_mask: 0.2849 (0.3203)  loss_objectness: 0.0442 (0.0635)  loss_rpn_box_reg: 0.0500 (0.0651)  time: 0.6244 (0.7150)  data: 0.0004 (0.0196)  lr: 0.160000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 2:28:21  iter: 5550  loss: 0.7268 (0.8875)  loss_classifier: 0.2344 (0.3044)  loss_box_reg: 0.1092 (0.1344)  loss_mask: 0.2860 (0.3201)  loss_objectness: 0.0382 (0.0633)  loss_rpn_box_reg: 0.0429 (0.0653)  time: 0.6245 (0.7150)  data: 0.0003 (0.0196)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 2:28:21  iter: 5550  loss: 0.7216 (0.8879)  loss_classifier: 0.2507 (0.3041)  loss_box_reg: 0.1182 (0.1347)  loss_mask: 0.2729 (0.3208)  loss_objectness: 0.0356 (0.0634)  loss_rpn_box_reg: 0.0561 (0.0649)  time: 0.6232 (0.7150)  data: 0.0004 (0.0196)  lr: 0.160000  max mem: 14740
INFO:maskrcnn_benchmark.trainer:eta: 2:28:21  iter: 5550  loss: 0.7423 (0.8898)  loss_classifier: 0.2442 (0.3050)  loss_box_reg: 0.1076 (0.1347)  loss_mask: 0.2856 (0.3212)  loss_objectness: 0.0355 (0.0636)  loss_rpn_box_reg: 0.0471 (0.0653)  time: 0.6236 (0.7150)  data: 0.0003 (0.0196)  lr: 0.160000  max mem: 14654
2021-10-16 12:44:39,001 maskrcnn_benchmark.trainer INFO: eta: 2:28:21  iter: 5550  loss: 0.7532 (0.8895)  loss_classifier: 0.2312 (0.3052)  loss_box_reg: 0.1193 (0.1348)  loss_mask: 0.2806 (0.3203)  loss_objectness: 0.0385 (0.0637)  loss_rpn_box_reg: 0.0529 (0.0655)  time: 0.6232 (0.7150)  data: 0.0004 (0.0198)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:28:21  iter: 5550  loss: 0.7532 (0.8895)  loss_classifier: 0.2312 (0.3052)  loss_box_reg: 0.1193 (0.1348)  loss_mask: 0.2806 (0.3203)  loss_objectness: 0.0385 (0.0637)  loss_rpn_box_reg: 0.0529 (0.0655)  time: 0.6232 (0.7150)  data: 0.0004 (0.0198)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634388279002, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8894943844144408, "loss_classifier": 0.30517385466410235, "loss_box_reg": 0.1347894993873716, "loss_mask": 0.32032399586192123, "loss_objectness": 0.06369512273518889, "loss_rpn_box_reg": 0.06551191242512416, "time": 0.7149979327176068, "data": 0.01981458599502976, "throughput": 179.02149662655663}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 5550}}
:::MLLOG {"namespace": "", "time_ms": 1634388279002, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 179.02149662655663, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
2021-10-16 12:44:39,002 maskrcnn_benchmark.trainer INFO: bbox mAP: 0.2812293466738086, segm mAP: 0.2670241133865294
INFO:maskrcnn_benchmark.trainer:bbox mAP: 0.2812293466738086, segm mAP: 0.2670241133865294
:::MLLOG {"namespace": "", "time_ms": 1634388279002, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": {"BBOX": 0.2812293466738086, "SEGM": 0.2670241133865294}, "metadata": {"file": "tools/train_mlperf.py", "lineno": 133, "epoch_num": 6}}
:::MLLOG {"namespace": "", "time_ms": 1634388279002, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 134, "epoch_num": 6}}
INFO:maskrcnn_benchmark.trainer:eta: 2:27:36  iter: 5600  loss: 0.7249 (0.8884)  loss_classifier: 0.2402 (0.3045)  loss_box_reg: 0.1129 (0.1345)  loss_mask: 0.2798 (0.3208)  loss_objectness: 0.0416 (0.0634)  loss_rpn_box_reg: 0.0521 (0.0652)  time: 0.6223 (0.7142)  data: 0.0004 (0.0194)  lr: 0.160000  max mem: 14654
2021-10-16 12:45:10,241 maskrcnn_benchmark.trainer INFO: eta: 2:27:35  iter: 5600  loss: 0.6988 (0.8882)  loss_classifier: 0.2339 (0.3047)  loss_box_reg: 0.1132 (0.1346)  loss_mask: 0.2744 (0.3199)  loss_objectness: 0.0364 (0.0635)  loss_rpn_box_reg: 0.0473 (0.0654)  time: 0.6221 (0.7142)  data: 0.0003 (0.0196)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:27:35  iter: 5600  loss: 0.6988 (0.8882)  loss_classifier: 0.2339 (0.3047)  loss_box_reg: 0.1132 (0.1346)  loss_mask: 0.2744 (0.3199)  loss_objectness: 0.0364 (0.0635)  loss_rpn_box_reg: 0.0473 (0.0654)  time: 0.6221 (0.7142)  data: 0.0003 (0.0196)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:27:36  iter: 5600  loss: 0.7159 (0.8868)  loss_classifier: 0.2286 (0.3037)  loss_box_reg: 0.1053 (0.1346)  loss_mask: 0.2738 (0.3204)  loss_objectness: 0.0341 (0.0632)  loss_rpn_box_reg: 0.0704 (0.0650)  time: 0.6223 (0.7142)  data: 0.0003 (0.0194)  lr: 0.160000  max mem: 14740
:::MLLOG {"namespace": "", "time_ms": 1634388310242, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8882055419843111, "loss_classifier": 0.3046875679213554, "loss_box_reg": 0.13463081411813618, "loss_mask": 0.3199392953408616, "loss_objectness": 0.0635177660111471, "loss_rpn_box_reg": 0.06543009918715273, "time": 0.7141926085948944, "data": 0.019641348677022115, "throughput": 179.223361400824}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 5600}}
:::MLLOG {"namespace": "", "time_ms": 1634388310242, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 179.223361400824, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:27:36  iter: 5600  loss: 0.7472 (0.8862)  loss_classifier: 0.2348 (0.3038)  loss_box_reg: 0.1156 (0.1341)  loss_mask: 0.2795 (0.3199)  loss_objectness: 0.0398 (0.0633)  loss_rpn_box_reg: 0.0564 (0.0651)  time: 0.6216 (0.7142)  data: 0.0003 (0.0195)  lr: 0.160000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 2:27:36  iter: 5600  loss: 0.7184 (0.8861)  loss_classifier: 0.2293 (0.3039)  loss_box_reg: 0.1048 (0.1343)  loss_mask: 0.2796 (0.3197)  loss_objectness: 0.0412 (0.0632)  loss_rpn_box_reg: 0.0521 (0.0652)  time: 0.6219 (0.7142)  data: 0.0004 (0.0195)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 2:27:36  iter: 5600  loss: 0.7003 (0.8841)  loss_classifier: 0.2294 (0.3030)  loss_box_reg: 0.1108 (0.1337)  loss_mask: 0.2802 (0.3201)  loss_objectness: 0.0364 (0.0627)  loss_rpn_box_reg: 0.0498 (0.0645)  time: 0.6214 (0.7142)  data: 0.0003 (0.0194)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 2:27:35  iter: 5600  loss: 0.7333 (0.8892)  loss_classifier: 0.2433 (0.3048)  loss_box_reg: 0.1045 (0.1346)  loss_mask: 0.2727 (0.3205)  loss_objectness: 0.0422 (0.0641)  loss_rpn_box_reg: 0.0525 (0.0652)  time: 0.6215 (0.7142)  data: 0.0003 (0.0194)  lr: 0.160000  max mem: 14656
INFO:maskrcnn_benchmark.trainer:eta: 2:27:35  iter: 5600  loss: 0.7312 (0.8872)  loss_classifier: 0.2289 (0.3043)  loss_box_reg: 0.1116 (0.1348)  loss_mask: 0.2789 (0.3200)  loss_objectness: 0.0332 (0.0631)  loss_rpn_box_reg: 0.0485 (0.0650)  time: 0.6224 (0.7142)  data: 0.0003 (0.0194)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 2:26:50  iter: 5650  loss: 0.7365 (0.8853)  loss_classifier: 0.2450 (0.3031)  loss_box_reg: 0.1085 (0.1344)  loss_mask: 0.2813 (0.3200)  loss_objectness: 0.0455 (0.0630)  loss_rpn_box_reg: 0.0490 (0.0648)  time: 0.6221 (0.7134)  data: 0.0004 (0.0193)  lr: 0.160000  max mem: 14740
INFO:maskrcnn_benchmark.trainer:eta: 2:26:50  iter: 5650  loss: 0.7595 (0.8872)  loss_classifier: 0.2455 (0.3040)  loss_box_reg: 0.1272 (0.1343)  loss_mask: 0.2848 (0.3205)  loss_objectness: 0.0465 (0.0632)  loss_rpn_box_reg: 0.0636 (0.0651)  time: 0.6221 (0.7134)  data: 0.0004 (0.0192)  lr: 0.160000  max mem: 14654
2021-10-16 12:45:41,260 maskrcnn_benchmark.trainer INFO: eta: 2:26:50  iter: 5650  loss: 0.6690 (0.8869)  loss_classifier: 0.2074 (0.3041)  loss_box_reg: 0.0983 (0.1345)  loss_mask: 0.2615 (0.3196)  loss_objectness: 0.0384 (0.0634)  loss_rpn_box_reg: 0.0605 (0.0654)  time: 0.6222 (0.7134)  data: 0.0003 (0.0195)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:26:50  iter: 5650  loss: 0.6690 (0.8869)  loss_classifier: 0.2074 (0.3041)  loss_box_reg: 0.0983 (0.1345)  loss_mask: 0.2615 (0.3196)  loss_objectness: 0.0384 (0.0634)  loss_rpn_box_reg: 0.0605 (0.0654)  time: 0.6222 (0.7134)  data: 0.0003 (0.0195)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634388341260, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.88692406830007, "loss_classifier": 0.3041306096012086, "loss_box_reg": 0.13445266999563912, "loss_mask": 0.31957665534937274, "loss_objectness": 0.06337550245719938, "loss_rpn_box_reg": 0.06538863143924854, "time": 0.7133623821545492, "data": 0.019471961586876252, "throughput": 179.43194539275405}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 5650}}
:::MLLOG {"namespace": "", "time_ms": 1634388341261, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 179.43194539275405, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:26:50  iter: 5650  loss: 0.7707 (0.8849)  loss_classifier: 0.2549 (0.3033)  loss_box_reg: 0.1238 (0.1340)  loss_mask: 0.2810 (0.3195)  loss_objectness: 0.0496 (0.0632)  loss_rpn_box_reg: 0.0519 (0.0650)  time: 0.6228 (0.7134)  data: 0.0004 (0.0193)  lr: 0.160000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 2:26:50  iter: 5650  loss: 0.7723 (0.8848)  loss_classifier: 0.2520 (0.3033)  loss_box_reg: 0.1112 (0.1341)  loss_mask: 0.2789 (0.3193)  loss_objectness: 0.0472 (0.0630)  loss_rpn_box_reg: 0.0557 (0.0651)  time: 0.6228 (0.7134)  data: 0.0004 (0.0193)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 2:26:50  iter: 5650  loss: 0.7409 (0.8828)  loss_classifier: 0.2428 (0.3025)  loss_box_reg: 0.1047 (0.1336)  loss_mask: 0.2771 (0.3197)  loss_objectness: 0.0389 (0.0626)  loss_rpn_box_reg: 0.0475 (0.0644)  time: 0.6237 (0.7134)  data: 0.0003 (0.0193)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 2:26:49  iter: 5650  loss: 0.7100 (0.8878)  loss_classifier: 0.2117 (0.3042)  loss_box_reg: 0.1059 (0.1344)  loss_mask: 0.2722 (0.3201)  loss_objectness: 0.0402 (0.0639)  loss_rpn_box_reg: 0.0487 (0.0651)  time: 0.6237 (0.7134)  data: 0.0003 (0.0192)  lr: 0.160000  max mem: 14656
INFO:maskrcnn_benchmark.trainer:eta: 2:26:49  iter: 5650  loss: 0.7193 (0.8858)  loss_classifier: 0.2358 (0.3038)  loss_box_reg: 0.1057 (0.1346)  loss_mask: 0.2758 (0.3196)  loss_objectness: 0.0364 (0.0629)  loss_rpn_box_reg: 0.0463 (0.0649)  time: 0.6237 (0.7134)  data: 0.0004 (0.0192)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 2:26:04  iter: 5700  loss: 0.7461 (0.8815)  loss_classifier: 0.2406 (0.3020)  loss_box_reg: 0.1112 (0.1334)  loss_mask: 0.2822 (0.3194)  loss_objectness: 0.0447 (0.0624)  loss_rpn_box_reg: 0.0553 (0.0643)  time: 0.6231 (0.7126)  data: 0.0003 (0.0191)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 2:26:04  iter: 5700  loss: 0.6962 (0.8845)  loss_classifier: 0.2211 (0.3032)  loss_box_reg: 0.1064 (0.1344)  loss_mask: 0.2693 (0.3193)  loss_objectness: 0.0424 (0.0627)  loss_rpn_box_reg: 0.0474 (0.0648)  time: 0.6233 (0.7126)  data: 0.0003 (0.0191)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 2:26:04  iter: 5700  loss: 0.6863 (0.8861)  loss_classifier: 0.2210 (0.3035)  loss_box_reg: 0.0973 (0.1342)  loss_mask: 0.2676 (0.3197)  loss_objectness: 0.0390 (0.0637)  loss_rpn_box_reg: 0.0473 (0.0650)  time: 0.6235 (0.7126)  data: 0.0003 (0.0191)  lr: 0.160000  max mem: 14656
INFO:maskrcnn_benchmark.trainer:eta: 2:26:04  iter: 5700  loss: 0.7608 (0.8836)  loss_classifier: 0.2693 (0.3028)  loss_box_reg: 0.1194 (0.1339)  loss_mask: 0.2767 (0.3189)  loss_objectness: 0.0421 (0.0628)  loss_rpn_box_reg: 0.0486 (0.0650)  time: 0.6246 (0.7126)  data: 0.0004 (0.0191)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 2:26:04  iter: 5700  loss: 0.6686 (0.8834)  loss_classifier: 0.2167 (0.3027)  loss_box_reg: 0.1003 (0.1337)  loss_mask: 0.2767 (0.3192)  loss_objectness: 0.0415 (0.0630)  loss_rpn_box_reg: 0.0536 (0.0649)  time: 0.6242 (0.7126)  data: 0.0003 (0.0191)  lr: 0.160000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 2:26:04  iter: 5700  loss: 0.7560 (0.8841)  loss_classifier: 0.2544 (0.3026)  loss_box_reg: 0.1239 (0.1342)  loss_mask: 0.2724 (0.3197)  loss_objectness: 0.0516 (0.0628)  loss_rpn_box_reg: 0.0714 (0.0648)  time: 0.6240 (0.7126)  data: 0.0004 (0.0191)  lr: 0.160000  max mem: 14740
2021-10-16 12:46:12,466 maskrcnn_benchmark.trainer INFO: eta: 2:26:04  iter: 5700  loss: 0.7271 (0.8857)  loss_classifier: 0.2500 (0.3036)  loss_box_reg: 0.1184 (0.1343)  loss_mask: 0.2871 (0.3193)  loss_objectness: 0.0391 (0.0632)  loss_rpn_box_reg: 0.0451 (0.0653)  time: 0.6240 (0.7126)  data: 0.0003 (0.0193)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:26:04  iter: 5700  loss: 0.7271 (0.8857)  loss_classifier: 0.2500 (0.3036)  loss_box_reg: 0.1184 (0.1343)  loss_mask: 0.2871 (0.3193)  loss_objectness: 0.0391 (0.0632)  loss_rpn_box_reg: 0.0451 (0.0653)  time: 0.6240 (0.7126)  data: 0.0003 (0.0193)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:26:04  iter: 5700  loss: 0.7621 (0.8860)  loss_classifier: 0.2592 (0.3035)  loss_box_reg: 0.1183 (0.1342)  loss_mask: 0.2681 (0.3201)  loss_objectness: 0.0428 (0.0631)  loss_rpn_box_reg: 0.0552 (0.0651)  time: 0.6240 (0.7126)  data: 0.0004 (0.0191)  lr: 0.160000  max mem: 14655
:::MLLOG {"namespace": "", "time_ms": 1634388372466, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.885725348105556, "loss_classifier": 0.3036406116148359, "loss_box_reg": 0.13429203345125804, "loss_mask": 0.31927269196824026, "loss_objectness": 0.06321569798187467, "loss_rpn_box_reg": 0.06530431357784229, "time": 0.7125794265981306, "data": 0.01930537972533912, "throughput": 179.62909848671148}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 5700}}
:::MLLOG {"namespace": "", "time_ms": 1634388372466, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 179.62909848671148, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:25:20  iter: 5750  loss: 0.6838 (0.8830)  loss_classifier: 0.2275 (0.3022)  loss_box_reg: 0.1078 (0.1341)  loss_mask: 0.2684 (0.3193)  loss_objectness: 0.0360 (0.0627)  loss_rpn_box_reg: 0.0562 (0.0648)  time: 0.6287 (0.7118)  data: 0.0004 (0.0189)  lr: 0.160000  max mem: 14740
INFO:maskrcnn_benchmark.trainer:eta: 2:25:20  iter: 5750  loss: 0.7063 (0.8847)  loss_classifier: 0.2235 (0.3030)  loss_box_reg: 0.1066 (0.1341)  loss_mask: 0.2887 (0.3198)  loss_objectness: 0.0414 (0.0629)  loss_rpn_box_reg: 0.0450 (0.0650)  time: 0.6288 (0.7118)  data: 0.0003 (0.0189)  lr: 0.160000  max mem: 14655
2021-10-16 12:46:43,820 maskrcnn_benchmark.trainer INFO: eta: 2:25:19  iter: 5750  loss: 0.7508 (0.8845)  loss_classifier: 0.2564 (0.3031)  loss_box_reg: 0.1128 (0.1341)  loss_mask: 0.2854 (0.3190)  loss_objectness: 0.0442 (0.0631)  loss_rpn_box_reg: 0.0594 (0.0652)  time: 0.6289 (0.7118)  data: 0.0003 (0.0191)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:25:19  iter: 5750  loss: 0.7508 (0.8845)  loss_classifier: 0.2564 (0.3031)  loss_box_reg: 0.1128 (0.1341)  loss_mask: 0.2854 (0.3190)  loss_objectness: 0.0442 (0.0631)  loss_rpn_box_reg: 0.0594 (0.0652)  time: 0.6289 (0.7118)  data: 0.0003 (0.0191)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634388403820, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8844855142417162, "loss_classifier": 0.303113582311765, "loss_box_reg": 0.134121269334877, "loss_mask": 0.3189633512393288, "loss_objectness": 0.06306381311170432, "loss_rpn_box_reg": 0.06522349876618903, "time": 0.7118359722883805, "data": 0.01914152713443922, "throughput": 179.81670635232294}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 5750}}
:::MLLOG {"namespace": "", "time_ms": 1634388403820, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 179.81670635232294, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:25:20  iter: 5750  loss: 0.7743 (0.8822)  loss_classifier: 0.2638 (0.3022)  loss_box_reg: 0.1127 (0.1335)  loss_mask: 0.2673 (0.3188)  loss_objectness: 0.0481 (0.0628)  loss_rpn_box_reg: 0.0722 (0.0649)  time: 0.6305 (0.7118)  data: 0.0004 (0.0190)  lr: 0.160000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 2:25:20  iter: 5750  loss: 0.7086 (0.8823)  loss_classifier: 0.2402 (0.3024)  loss_box_reg: 0.1128 (0.1338)  loss_mask: 0.2827 (0.3186)  loss_objectness: 0.0390 (0.0627)  loss_rpn_box_reg: 0.0505 (0.0649)  time: 0.6302 (0.7118)  data: 0.0004 (0.0190)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 2:25:20  iter: 5750  loss: 0.7400 (0.8803)  loss_classifier: 0.2220 (0.3015)  loss_box_reg: 0.1269 (0.1333)  loss_mask: 0.2887 (0.3190)  loss_objectness: 0.0445 (0.0622)  loss_rpn_box_reg: 0.0450 (0.0642)  time: 0.6291 (0.7118)  data: 0.0003 (0.0189)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 2:25:19  iter: 5750  loss: 0.7437 (0.8831)  loss_classifier: 0.2373 (0.3027)  loss_box_reg: 0.1078 (0.1342)  loss_mask: 0.2756 (0.3189)  loss_objectness: 0.0415 (0.0625)  loss_rpn_box_reg: 0.0554 (0.0647)  time: 0.6292 (0.7118)  data: 0.0004 (0.0189)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 2:25:19  iter: 5750  loss: 0.7519 (0.8849)  loss_classifier: 0.2466 (0.3030)  loss_box_reg: 0.1128 (0.1340)  loss_mask: 0.2854 (0.3194)  loss_objectness: 0.0369 (0.0635)  loss_rpn_box_reg: 0.0594 (0.0650)  time: 0.6292 (0.7118)  data: 0.0003 (0.0189)  lr: 0.160000  max mem: 14656
INFO:maskrcnn_benchmark.trainer:eta: 2:24:35  iter: 5800  loss: 0.8035 (0.8838)  loss_classifier: 0.2930 (0.3026)  loss_box_reg: 0.1351 (0.1340)  loss_mask: 0.2876 (0.3194)  loss_objectness: 0.0428 (0.0627)  loss_rpn_box_reg: 0.0679 (0.0650)  time: 0.6237 (0.7111)  data: 0.0004 (0.0188)  lr: 0.160000  max mem: 14655
INFO:maskrcnn_benchmark.trainer:eta: 2:24:35  iter: 5800  loss: 0.7970 (0.8821)  loss_classifier: 0.2552 (0.3018)  loss_box_reg: 0.1249 (0.1340)  loss_mask: 0.2852 (0.3190)  loss_objectness: 0.0450 (0.0625)  loss_rpn_box_reg: 0.0498 (0.0647)  time: 0.6242 (0.7111)  data: 0.0004 (0.0188)  lr: 0.160000  max mem: 14740
2021-10-16 12:47:15,034 maskrcnn_benchmark.trainer INFO: eta: 2:24:35  iter: 5800  loss: 0.7789 (0.8836)  loss_classifier: 0.2664 (0.3028)  loss_box_reg: 0.1225 (0.1341)  loss_mask: 0.2790 (0.3187)  loss_objectness: 0.0481 (0.0629)  loss_rpn_box_reg: 0.0559 (0.0652)  time: 0.6244 (0.7111)  data: 0.0003 (0.0190)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:24:35  iter: 5800  loss: 0.7789 (0.8836)  loss_classifier: 0.2664 (0.3028)  loss_box_reg: 0.1225 (0.1341)  loss_mask: 0.2790 (0.3187)  loss_objectness: 0.0481 (0.0629)  loss_rpn_box_reg: 0.0559 (0.0652)  time: 0.6244 (0.7111)  data: 0.0003 (0.0190)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634388435035, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8836467285145974, "loss_classifier": 0.302805089825957, "loss_box_reg": 0.13406343205731586, "loss_mask": 0.318673432795652, "loss_objectness": 0.06292616129820716, "loss_rpn_box_reg": 0.06517861306795786, "time": 0.711081302412625, "data": 0.01898038707930466, "throughput": 180.0075456431062}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 5800}}
:::MLLOG {"namespace": "", "time_ms": 1634388435035, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 180.0075456431062, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:24:35  iter: 5800  loss: 0.7975 (0.8811)  loss_classifier: 0.2630 (0.3018)  loss_box_reg: 0.1305 (0.1334)  loss_mask: 0.2862 (0.3184)  loss_objectness: 0.0433 (0.0627)  loss_rpn_box_reg: 0.0526 (0.0648)  time: 0.6242 (0.7111)  data: 0.0004 (0.0188)  lr: 0.160000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 2:24:35  iter: 5800  loss: 0.7632 (0.8811)  loss_classifier: 0.2511 (0.3019)  loss_box_reg: 0.1148 (0.1336)  loss_mask: 0.2919 (0.3183)  loss_objectness: 0.0477 (0.0625)  loss_rpn_box_reg: 0.0497 (0.0648)  time: 0.6242 (0.7111)  data: 0.0004 (0.0188)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 2:24:35  iter: 5800  loss: 0.7683 (0.8793)  loss_classifier: 0.2647 (0.3011)  loss_box_reg: 0.1193 (0.1332)  loss_mask: 0.2872 (0.3187)  loss_objectness: 0.0434 (0.0621)  loss_rpn_box_reg: 0.0540 (0.0642)  time: 0.6238 (0.7111)  data: 0.0004 (0.0188)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 2:24:35  iter: 5800  loss: 0.7545 (0.8839)  loss_classifier: 0.2479 (0.3027)  loss_box_reg: 0.1177 (0.1339)  loss_mask: 0.2812 (0.3190)  loss_objectness: 0.0443 (0.0634)  loss_rpn_box_reg: 0.0433 (0.0649)  time: 0.6237 (0.7111)  data: 0.0004 (0.0188)  lr: 0.160000  max mem: 14656
INFO:maskrcnn_benchmark.trainer:eta: 2:24:35  iter: 5800  loss: 0.7256 (0.8819)  loss_classifier: 0.2426 (0.3022)  loss_box_reg: 0.1184 (0.1341)  loss_mask: 0.2700 (0.3185)  loss_objectness: 0.0427 (0.0624)  loss_rpn_box_reg: 0.0506 (0.0646)  time: 0.6238 (0.7111)  data: 0.0004 (0.0188)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 2:23:50  iter: 5850  loss: 0.7309 (0.8781)  loss_classifier: 0.2386 (0.3006)  loss_box_reg: 0.1177 (0.1330)  loss_mask: 0.2869 (0.3184)  loss_objectness: 0.0384 (0.0620)  loss_rpn_box_reg: 0.0554 (0.0642)  time: 0.6212 (0.7103)  data: 0.0004 (0.0186)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 2:23:50  iter: 5850  loss: 0.7752 (0.8828)  loss_classifier: 0.2638 (0.3022)  loss_box_reg: 0.1295 (0.1338)  loss_mask: 0.2687 (0.3187)  loss_objectness: 0.0458 (0.0633)  loss_rpn_box_reg: 0.0670 (0.0649)  time: 0.6212 (0.7103)  data: 0.0004 (0.0186)  lr: 0.160000  max mem: 14656
INFO:maskrcnn_benchmark.trainer:eta: 2:23:50  iter: 5850  loss: 0.7345 (0.8804)  loss_classifier: 0.2425 (0.3016)  loss_box_reg: 0.1135 (0.1339)  loss_mask: 0.2756 (0.3182)  loss_objectness: 0.0375 (0.0622)  loss_rpn_box_reg: 0.0482 (0.0646)  time: 0.6213 (0.7103)  data: 0.0003 (0.0186)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 2:23:50  iter: 5850  loss: 0.7716 (0.8799)  loss_classifier: 0.2680 (0.3013)  loss_box_reg: 0.1201 (0.1334)  loss_mask: 0.2888 (0.3180)  loss_objectness: 0.0403 (0.0624)  loss_rpn_box_reg: 0.0561 (0.0648)  time: 0.6209 (0.7103)  data: 0.0004 (0.0186)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 2:23:50  iter: 5850  loss: 0.7383 (0.8797)  loss_classifier: 0.2446 (0.3011)  loss_box_reg: 0.1118 (0.1332)  loss_mask: 0.2700 (0.3181)  loss_objectness: 0.0438 (0.0625)  loss_rpn_box_reg: 0.0500 (0.0647)  time: 0.6209 (0.7103)  data: 0.0004 (0.0186)  lr: 0.160000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 2:23:50  iter: 5850  loss: 0.7593 (0.8809)  loss_classifier: 0.2406 (0.3012)  loss_box_reg: 0.1193 (0.1338)  loss_mask: 0.2833 (0.3187)  loss_objectness: 0.0468 (0.0624)  loss_rpn_box_reg: 0.0530 (0.0647)  time: 0.6189 (0.7103)  data: 0.0004 (0.0186)  lr: 0.160000  max mem: 14740
2021-10-16 12:47:46,163 maskrcnn_benchmark.trainer INFO: eta: 2:23:50  iter: 5850  loss: 0.7678 (0.8824)  loss_classifier: 0.2584 (0.3023)  loss_box_reg: 0.1286 (0.1339)  loss_mask: 0.2775 (0.3183)  loss_objectness: 0.0493 (0.0628)  loss_rpn_box_reg: 0.0524 (0.0651)  time: 0.6186 (0.7103)  data: 0.0004 (0.0188)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:23:50  iter: 5850  loss: 0.8059 (0.8824)  loss_classifier: 0.2819 (0.3021)  loss_box_reg: 0.1324 (0.1338)  loss_mask: 0.2845 (0.3191)  loss_objectness: 0.0465 (0.0626)  loss_rpn_box_reg: 0.0575 (0.0649)  time: 0.6184 (0.7103)  data: 0.0004 (0.0186)  lr: 0.160000  max mem: 14655
INFO:maskrcnn_benchmark.trainer:eta: 2:23:50  iter: 5850  loss: 0.7678 (0.8824)  loss_classifier: 0.2584 (0.3023)  loss_box_reg: 0.1286 (0.1339)  loss_mask: 0.2775 (0.3183)  loss_objectness: 0.0493 (0.0628)  loss_rpn_box_reg: 0.0524 (0.0651)  time: 0.6186 (0.7103)  data: 0.0004 (0.0188)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634388466163, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8824111449871308, "loss_classifier": 0.3023175293678402, "loss_box_reg": 0.13390842547906864, "loss_mask": 0.31829465344166147, "loss_objectness": 0.06278408634516164, "loss_rpn_box_reg": 0.06510645090626219, "time": 0.710324827993018, "data": 0.01882237833789271, "throughput": 180.19924822514884}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 5850}}
:::MLLOG {"namespace": "", "time_ms": 1634388466164, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 180.19924822514884, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:23:05  iter: 5900  loss: 0.7283 (0.8797)  loss_classifier: 0.2459 (0.3008)  loss_box_reg: 0.1120 (0.1337)  loss_mask: 0.2678 (0.3184)  loss_objectness: 0.0435 (0.0623)  loss_rpn_box_reg: 0.0570 (0.0646)  time: 0.6231 (0.7096)  data: 0.0004 (0.0185)  lr: 0.160000  max mem: 14740
2021-10-16 12:48:17,291 maskrcnn_benchmark.trainer INFO: eta: 2:23:05  iter: 5900  loss: 0.7457 (0.8815)  loss_classifier: 0.2672 (0.3020)  loss_box_reg: 0.1242 (0.1338)  loss_mask: 0.2796 (0.3180)  loss_objectness: 0.0430 (0.0626)  loss_rpn_box_reg: 0.0513 (0.0651)  time: 0.6231 (0.7096)  data: 0.0003 (0.0187)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:23:06  iter: 5900  loss: 0.7480 (0.8814)  loss_classifier: 0.2500 (0.3017)  loss_box_reg: 0.1223 (0.1336)  loss_mask: 0.2801 (0.3188)  loss_objectness: 0.0463 (0.0625)  loss_rpn_box_reg: 0.0584 (0.0648)  time: 0.6233 (0.7096)  data: 0.0004 (0.0184)  lr: 0.160000  max mem: 14655
INFO:maskrcnn_benchmark.trainer:eta: 2:23:05  iter: 5900  loss: 0.7457 (0.8815)  loss_classifier: 0.2672 (0.3020)  loss_box_reg: 0.1242 (0.1338)  loss_mask: 0.2796 (0.3180)  loss_objectness: 0.0430 (0.0626)  loss_rpn_box_reg: 0.0513 (0.0651)  time: 0.6231 (0.7096)  data: 0.0003 (0.0187)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:23:06  iter: 5900  loss: 0.7692 (0.8789)  loss_classifier: 0.2703 (0.3009)  loss_box_reg: 0.1276 (0.1333)  loss_mask: 0.2940 (0.3177)  loss_objectness: 0.0393 (0.0622)  loss_rpn_box_reg: 0.0564 (0.0647)  time: 0.6238 (0.7096)  data: 0.0004 (0.0185)  lr: 0.160000  max mem: 14996
:::MLLOG {"namespace": "", "time_ms": 1634388497291, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8815000019891788, "loss_classifier": 0.3019954279380835, "loss_box_reg": 0.13381903596092173, "loss_mask": 0.31796695836014666, "loss_objectness": 0.06263688912362618, "loss_rpn_box_reg": 0.06508169112805971, "time": 0.7095809813677254, "data": 0.018666192151732364, "throughput": 180.38814928956882}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 5900}}
:::MLLOG {"namespace": "", "time_ms": 1634388497291, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 180.38814928956882, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:23:06  iter: 5900  loss: 0.8070 (0.8787)  loss_classifier: 0.2727 (0.3008)  loss_box_reg: 0.1198 (0.1331)  loss_mask: 0.2898 (0.3178)  loss_objectness: 0.0439 (0.0624)  loss_rpn_box_reg: 0.0572 (0.0646)  time: 0.6228 (0.7096)  data: 0.0004 (0.0185)  lr: 0.160000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 2:23:06  iter: 5900  loss: 0.7375 (0.8770)  loss_classifier: 0.2358 (0.3001)  loss_box_reg: 0.1057 (0.1329)  loss_mask: 0.2757 (0.3181)  loss_objectness: 0.0438 (0.0619)  loss_rpn_box_reg: 0.0545 (0.0641)  time: 0.6241 (0.7096)  data: 0.0003 (0.0185)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 2:23:05  iter: 5900  loss: 0.7406 (0.8794)  loss_classifier: 0.2472 (0.3012)  loss_box_reg: 0.1237 (0.1338)  loss_mask: 0.2812 (0.3179)  loss_objectness: 0.0392 (0.0620)  loss_rpn_box_reg: 0.0566 (0.0645)  time: 0.6241 (0.7096)  data: 0.0003 (0.0184)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 2:23:05  iter: 5900  loss: 0.7061 (0.8815)  loss_classifier: 0.2309 (0.3017)  loss_box_reg: 0.0987 (0.1336)  loss_mask: 0.2731 (0.3183)  loss_objectness: 0.0389 (0.0631)  loss_rpn_box_reg: 0.0419 (0.0647)  time: 0.6242 (0.7096)  data: 0.0003 (0.0185)  lr: 0.160000  max mem: 14656
INFO:maskrcnn_benchmark.trainer:eta: 2:22:21  iter: 5950  loss: 0.6983 (0.8759)  loss_classifier: 0.2258 (0.2997)  loss_box_reg: 0.1075 (0.1327)  loss_mask: 0.2686 (0.3177)  loss_objectness: 0.0336 (0.0617)  loss_rpn_box_reg: 0.0414 (0.0640)  time: 0.6227 (0.7089)  data: 0.0003 (0.0183)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 2:22:21  iter: 5950  loss: 0.7473 (0.8785)  loss_classifier: 0.2530 (0.3008)  loss_box_reg: 0.1143 (0.1337)  loss_mask: 0.2756 (0.3176)  loss_objectness: 0.0392 (0.0619)  loss_rpn_box_reg: 0.0531 (0.0644)  time: 0.6229 (0.7089)  data: 0.0004 (0.0183)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 2:22:21  iter: 5950  loss: 0.7798 (0.8805)  loss_classifier: 0.2668 (0.3013)  loss_box_reg: 0.1289 (0.1335)  loss_mask: 0.2774 (0.3180)  loss_objectness: 0.0477 (0.0630)  loss_rpn_box_reg: 0.0577 (0.0647)  time: 0.6232 (0.7089)  data: 0.0004 (0.0183)  lr: 0.160000  max mem: 14656
INFO:maskrcnn_benchmark.trainer:eta: 2:22:21  iter: 5950  loss: 0.7994 (0.8779)  loss_classifier: 0.2659 (0.3006)  loss_box_reg: 0.1283 (0.1332)  loss_mask: 0.2850 (0.3174)  loss_objectness: 0.0438 (0.0621)  loss_rpn_box_reg: 0.0561 (0.0647)  time: 0.6243 (0.7089)  data: 0.0004 (0.0183)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 2:22:21  iter: 5950  loss: 0.7478 (0.8775)  loss_classifier: 0.2302 (0.3003)  loss_box_reg: 0.1133 (0.1330)  loss_mask: 0.2733 (0.3174)  loss_objectness: 0.0401 (0.0622)  loss_rpn_box_reg: 0.0545 (0.0646)  time: 0.6245 (0.7089)  data: 0.0003 (0.0183)  lr: 0.160000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 2:22:21  iter: 5950  loss: 0.7701 (0.8787)  loss_classifier: 0.2454 (0.3004)  loss_box_reg: 0.1182 (0.1335)  loss_mask: 0.2818 (0.3181)  loss_objectness: 0.0428 (0.0621)  loss_rpn_box_reg: 0.0524 (0.0646)  time: 0.6232 (0.7089)  data: 0.0003 (0.0183)  lr: 0.160000  max mem: 14740
2021-10-16 12:48:48,519 maskrcnn_benchmark.trainer INFO: eta: 2:22:21  iter: 5950  loss: 0.7529 (0.8805)  loss_classifier: 0.2368 (0.3016)  loss_box_reg: 0.1165 (0.1337)  loss_mask: 0.2817 (0.3176)  loss_objectness: 0.0416 (0.0625)  loss_rpn_box_reg: 0.0494 (0.0650)  time: 0.6232 (0.7089)  data: 0.0003 (0.0185)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:22:21  iter: 5950  loss: 0.6926 (0.8803)  loss_classifier: 0.2305 (0.3012)  loss_box_reg: 0.1078 (0.1335)  loss_mask: 0.2720 (0.3185)  loss_objectness: 0.0419 (0.0623)  loss_rpn_box_reg: 0.0468 (0.0647)  time: 0.6228 (0.7089)  data: 0.0003 (0.0183)  lr: 0.160000  max mem: 14655
INFO:maskrcnn_benchmark.trainer:eta: 2:22:21  iter: 5950  loss: 0.7529 (0.8805)  loss_classifier: 0.2368 (0.3016)  loss_box_reg: 0.1165 (0.1337)  loss_mask: 0.2817 (0.3176)  loss_objectness: 0.0416 (0.0625)  loss_rpn_box_reg: 0.0494 (0.0650)  time: 0.6232 (0.7089)  data: 0.0003 (0.0185)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634388528519, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.880474255410563, "loss_classifier": 0.3015914423087565, "loss_box_reg": 0.13370457372866854, "loss_mask": 0.31764904609497857, "loss_objectness": 0.06253142620366411, "loss_rpn_box_reg": 0.06499776755937008, "time": 0.7088665963020645, "data": 0.018512741136951606, "throughput": 180.56994174607183}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 5950}}
:::MLLOG {"namespace": "", "time_ms": 1634388528520, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 180.56994174607183, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:21:38  iter: 6000  loss: 0.7250 (0.8776)  loss_classifier: 0.2382 (0.3000)  loss_box_reg: 0.1076 (0.1334)  loss_mask: 0.2752 (0.3177)  loss_objectness: 0.0391 (0.0620)  loss_rpn_box_reg: 0.0447 (0.0644)  time: 0.6218 (0.7082)  data: 0.0003 (0.0182)  lr: 0.160000  max mem: 14740
INFO:maskrcnn_benchmark.trainer:eta: 2:21:38  iter: 6000  loss: 0.8304 (0.8795)  loss_classifier: 0.2870 (0.3009)  loss_box_reg: 0.1253 (0.1334)  loss_mask: 0.2741 (0.3181)  loss_objectness: 0.0528 (0.0623)  loss_rpn_box_reg: 0.0535 (0.0647)  time: 0.6219 (0.7082)  data: 0.0004 (0.0181)  lr: 0.160000  max mem: 14655
2021-10-16 12:49:19,815 maskrcnn_benchmark.trainer INFO: eta: 2:21:38  iter: 6000  loss: 0.7488 (0.8795)  loss_classifier: 0.2477 (0.3012)  loss_box_reg: 0.1182 (0.1336)  loss_mask: 0.2906 (0.3173)  loss_objectness: 0.0461 (0.0624)  loss_rpn_box_reg: 0.0507 (0.0649)  time: 0.6220 (0.7082)  data: 0.0004 (0.0184)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:21:38  iter: 6000  loss: 0.7488 (0.8795)  loss_classifier: 0.2477 (0.3012)  loss_box_reg: 0.1182 (0.1336)  loss_mask: 0.2906 (0.3173)  loss_objectness: 0.0461 (0.0624)  loss_rpn_box_reg: 0.0507 (0.0649)  time: 0.6220 (0.7082)  data: 0.0004 (0.0184)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634388559815, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8794681635548671, "loss_classifier": 0.30121886826182404, "loss_box_reg": 0.1335687326589832, "loss_mask": 0.31732502665370704, "loss_objectness": 0.0624072190032651, "loss_rpn_box_reg": 0.06494831746257841, "time": 0.7081752940416336, "data": 0.01836193851629893, "throughput": 180.74620941587787}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 6000}}
INFO:maskrcnn_benchmark.trainer:eta: 2:21:38  iter: 6000  loss: 0.7787 (0.8765)  loss_classifier: 0.2676 (0.2999)  loss_box_reg: 0.1206 (0.1328)  loss_mask: 0.2770 (0.3171)  loss_objectness: 0.0475 (0.0621)  loss_rpn_box_reg: 0.0543 (0.0645)  time: 0.6213 (0.7082)  data: 0.0003 (0.0182)  lr: 0.160000  max mem: 14673
:::MLLOG {"namespace": "", "time_ms": 1634388559815, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 180.74620941587787, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:21:38  iter: 6000  loss: 0.7457 (0.8769)  loss_classifier: 0.2536 (0.3002)  loss_box_reg: 0.1155 (0.1331)  loss_mask: 0.2764 (0.3171)  loss_objectness: 0.0415 (0.0619)  loss_rpn_box_reg: 0.0483 (0.0646)  time: 0.6213 (0.7082)  data: 0.0003 (0.0182)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 2:21:38  iter: 6000  loss: 0.7565 (0.8751)  loss_classifier: 0.2567 (0.2994)  loss_box_reg: 0.1174 (0.1327)  loss_mask: 0.2847 (0.3174)  loss_objectness: 0.0421 (0.0616)  loss_rpn_box_reg: 0.0474 (0.0640)  time: 0.6210 (0.7082)  data: 0.0004 (0.0182)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 2:21:38  iter: 6000  loss: 0.7491 (0.8794)  loss_classifier: 0.2356 (0.3008)  loss_box_reg: 0.1237 (0.1334)  loss_mask: 0.2837 (0.3177)  loss_objectness: 0.0438 (0.0628)  loss_rpn_box_reg: 0.0576 (0.0646)  time: 0.6210 (0.7082)  data: 0.0004 (0.0182)  lr: 0.160000  max mem: 14656
INFO:maskrcnn_benchmark.trainer:eta: 2:21:38  iter: 6000  loss: 0.7583 (0.8775)  loss_classifier: 0.2656 (0.3005)  loss_box_reg: 0.1196 (0.1336)  loss_mask: 0.2723 (0.3173)  loss_objectness: 0.0402 (0.0617)  loss_rpn_box_reg: 0.0542 (0.0644)  time: 0.6209 (0.7082)  data: 0.0003 (0.0181)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 2:20:54  iter: 6050  loss: 0.7907 (0.8742)  loss_classifier: 0.2506 (0.2991)  loss_box_reg: 0.1117 (0.1325)  loss_mask: 0.2790 (0.3171)  loss_objectness: 0.0500 (0.0615)  loss_rpn_box_reg: 0.0657 (0.0640)  time: 0.6250 (0.7075)  data: 0.0003 (0.0180)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 2:20:54  iter: 6050  loss: 0.7696 (0.8786)  loss_classifier: 0.2464 (0.3005)  loss_box_reg: 0.1145 (0.1333)  loss_mask: 0.2763 (0.3175)  loss_objectness: 0.0528 (0.0627)  loss_rpn_box_reg: 0.0595 (0.0646)  time: 0.6247 (0.7075)  data: 0.0004 (0.0180)  lr: 0.160000  max mem: 14656
INFO:maskrcnn_benchmark.trainer:eta: 2:20:54  iter: 6050  loss: 0.7681 (0.8755)  loss_classifier: 0.2575 (0.2996)  loss_box_reg: 0.1160 (0.1327)  loss_mask: 0.2898 (0.3168)  loss_objectness: 0.0489 (0.0620)  loss_rpn_box_reg: 0.0441 (0.0644)  time: 0.6239 (0.7075)  data: 0.0003 (0.0180)  lr: 0.160000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 2:20:54  iter: 6050  loss: 0.7218 (0.8764)  loss_classifier: 0.2389 (0.3001)  loss_box_reg: 0.1079 (0.1334)  loss_mask: 0.2892 (0.3170)  loss_objectness: 0.0426 (0.0616)  loss_rpn_box_reg: 0.0472 (0.0643)  time: 0.6248 (0.7075)  data: 0.0003 (0.0180)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 2:20:54  iter: 6050  loss: 0.7517 (0.8760)  loss_classifier: 0.2642 (0.2998)  loss_box_reg: 0.1089 (0.1330)  loss_mask: 0.2890 (0.3168)  loss_objectness: 0.0443 (0.0618)  loss_rpn_box_reg: 0.0486 (0.0646)  time: 0.6245 (0.7075)  data: 0.0004 (0.0180)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 2:20:54  iter: 6050  loss: 0.8135 (0.8768)  loss_classifier: 0.2596 (0.2997)  loss_box_reg: 0.1225 (0.1334)  loss_mask: 0.2887 (0.3174)  loss_objectness: 0.0500 (0.0619)  loss_rpn_box_reg: 0.0656 (0.0644)  time: 0.6243 (0.7075)  data: 0.0004 (0.0180)  lr: 0.160000  max mem: 14740
INFO:maskrcnn_benchmark.trainer:eta: 2:20:54  iter: 6050  loss: 0.7742 (0.8785)  loss_classifier: 0.2586 (0.3006)  loss_box_reg: 0.1194 (0.1333)  loss_mask: 0.2847 (0.3179)  loss_objectness: 0.0574 (0.0621)  loss_rpn_box_reg: 0.0536 (0.0647)  time: 0.6243 (0.7075)  data: 0.0003 (0.0180)  lr: 0.160000  max mem: 14655
2021-10-16 12:49:51,024 maskrcnn_benchmark.trainer INFO: eta: 2:20:54  iter: 6050  loss: 0.7825 (0.8787)  loss_classifier: 0.2758 (0.3009)  loss_box_reg: 0.1181 (0.1335)  loss_mask: 0.2884 (0.3170)  loss_objectness: 0.0461 (0.0623)  loss_rpn_box_reg: 0.0520 (0.0649)  time: 0.6244 (0.7075)  data: 0.0003 (0.0182)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:20:54  iter: 6050  loss: 0.7825 (0.8787)  loss_classifier: 0.2758 (0.3009)  loss_box_reg: 0.1181 (0.1335)  loss_mask: 0.2884 (0.3170)  loss_objectness: 0.0461 (0.0623)  loss_rpn_box_reg: 0.0520 (0.0649)  time: 0.6244 (0.7075)  data: 0.0003 (0.0182)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634388591025, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.878675629003974, "loss_classifier": 0.3009483215052727, "loss_box_reg": 0.13348694295795588, "loss_mask": 0.3170483973376022, "loss_objectness": 0.062280615224880126, "loss_rpn_box_reg": 0.06491135243911389, "time": 0.7074812390193467, "data": 0.01821383294980388, "throughput": 180.9235255162713}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 6050}}
:::MLLOG {"namespace": "", "time_ms": 1634388591025, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 180.9235255162713, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:20:10  iter: 6100  loss: 0.7479 (0.8749)  loss_classifier: 0.2306 (0.2994)  loss_box_reg: 0.1151 (0.1329)  loss_mask: 0.2766 (0.3165)  loss_objectness: 0.0446 (0.0617)  loss_rpn_box_reg: 0.0631 (0.0645)  time: 0.6208 (0.7068)  data: 0.0003 (0.0179)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 2:20:10  iter: 6100  loss: 0.7598 (0.8735)  loss_classifier: 0.2603 (0.2988)  loss_box_reg: 0.1195 (0.1325)  loss_mask: 0.2680 (0.3168)  loss_objectness: 0.0481 (0.0614)  loss_rpn_box_reg: 0.0575 (0.0640)  time: 0.6201 (0.7068)  data: 0.0004 (0.0179)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 2:20:10  iter: 6100  loss: 0.7228 (0.8755)  loss_classifier: 0.2624 (0.2997)  loss_box_reg: 0.1280 (0.1333)  loss_mask: 0.2691 (0.3167)  loss_objectness: 0.0476 (0.0615)  loss_rpn_box_reg: 0.0566 (0.0643)  time: 0.6200 (0.7068)  data: 0.0004 (0.0179)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 2:20:10  iter: 6100  loss: 0.7114 (0.8743)  loss_classifier: 0.2216 (0.2991)  loss_box_reg: 0.1030 (0.1325)  loss_mask: 0.2887 (0.3165)  loss_objectness: 0.0410 (0.0618)  loss_rpn_box_reg: 0.0445 (0.0643)  time: 0.6211 (0.7068)  data: 0.0003 (0.0179)  lr: 0.160000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 2:20:10  iter: 6100  loss: 0.7909 (0.8776)  loss_classifier: 0.2768 (0.3001)  loss_box_reg: 0.1273 (0.1332)  loss_mask: 0.2813 (0.3172)  loss_objectness: 0.0580 (0.0626)  loss_rpn_box_reg: 0.0594 (0.0646)  time: 0.6201 (0.7068)  data: 0.0004 (0.0179)  lr: 0.160000  max mem: 14656
INFO:maskrcnn_benchmark.trainer:eta: 2:20:10  iter: 6100  loss: 0.7601 (0.8758)  loss_classifier: 0.2685 (0.2994)  loss_box_reg: 0.1171 (0.1332)  loss_mask: 0.2799 (0.3171)  loss_objectness: 0.0393 (0.0617)  loss_rpn_box_reg: 0.0465 (0.0643)  time: 0.6204 (0.7068)  data: 0.0004 (0.0179)  lr: 0.160000  max mem: 14740
2021-10-16 12:50:22,160 maskrcnn_benchmark.trainer INFO: eta: 2:20:10  iter: 6100  loss: 0.7439 (0.8778)  loss_classifier: 0.2522 (0.3007)  loss_box_reg: 0.1139 (0.1334)  loss_mask: 0.2770 (0.3168)  loss_objectness: 0.0446 (0.0621)  loss_rpn_box_reg: 0.0519 (0.0648)  time: 0.6204 (0.7068)  data: 0.0004 (0.0181)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:20:10  iter: 6100  loss: 0.7439 (0.8778)  loss_classifier: 0.2522 (0.3007)  loss_box_reg: 0.1139 (0.1334)  loss_mask: 0.2770 (0.3168)  loss_objectness: 0.0446 (0.0621)  loss_rpn_box_reg: 0.0519 (0.0648)  time: 0.6204 (0.7068)  data: 0.0004 (0.0181)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:20:10  iter: 6100  loss: 0.7488 (0.8775)  loss_classifier: 0.2464 (0.3002)  loss_box_reg: 0.1169 (0.1331)  loss_mask: 0.2751 (0.3175)  loss_objectness: 0.0431 (0.0620)  loss_rpn_box_reg: 0.0522 (0.0646)  time: 0.6204 (0.7068)  data: 0.0004 (0.0179)  lr: 0.160000  max mem: 14655
:::MLLOG {"namespace": "", "time_ms": 1634388622160, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8778499958456539, "loss_classifier": 0.30066243888046895, "loss_box_reg": 0.13342339122328206, "loss_mask": 0.31679389154324766, "loss_objectness": 0.062146174392250716, "loss_rpn_box_reg": 0.06482410023508013, "time": 0.7067864495418111, "data": 0.018068059663303562, "throughput": 181.10137805128923}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 6100}}
:::MLLOG {"namespace": "", "time_ms": 1634388622161, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 181.10137805128923, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:19:27  iter: 6150  loss: 0.7102 (0.8726)  loss_classifier: 0.2296 (0.2984)  loss_box_reg: 0.1127 (0.1323)  loss_mask: 0.2807 (0.3165)  loss_objectness: 0.0443 (0.0613)  loss_rpn_box_reg: 0.0573 (0.0640)  time: 0.6212 (0.7061)  data: 0.0004 (0.0177)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 2:19:27  iter: 6150  loss: 0.7335 (0.8739)  loss_classifier: 0.2610 (0.2990)  loss_box_reg: 0.1157 (0.1327)  loss_mask: 0.2719 (0.3162)  loss_objectness: 0.0430 (0.0615)  loss_rpn_box_reg: 0.0472 (0.0644)  time: 0.6202 (0.7061)  data: 0.0004 (0.0178)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 2:19:27  iter: 6150  loss: 0.6729 (0.8763)  loss_classifier: 0.2131 (0.2996)  loss_box_reg: 0.1052 (0.1330)  loss_mask: 0.2739 (0.3168)  loss_objectness: 0.0398 (0.0625)  loss_rpn_box_reg: 0.0431 (0.0645)  time: 0.6208 (0.7061)  data: 0.0003 (0.0177)  lr: 0.160000  max mem: 14656
INFO:maskrcnn_benchmark.trainer:eta: 2:19:27  iter: 6150  loss: 0.7436 (0.8745)  loss_classifier: 0.2498 (0.2994)  loss_box_reg: 0.1106 (0.1332)  loss_mask: 0.2832 (0.3164)  loss_objectness: 0.0491 (0.0614)  loss_rpn_box_reg: 0.0591 (0.0642)  time: 0.6209 (0.7061)  data: 0.0004 (0.0177)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 2:19:27  iter: 6150  loss: 0.7249 (0.8734)  loss_classifier: 0.2388 (0.2987)  loss_box_reg: 0.1142 (0.1324)  loss_mask: 0.2753 (0.3163)  loss_objectness: 0.0407 (0.0617)  loss_rpn_box_reg: 0.0580 (0.0643)  time: 0.6199 (0.7061)  data: 0.0004 (0.0178)  lr: 0.160000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 2:19:27  iter: 6150  loss: 0.6894 (0.8763)  loss_classifier: 0.2192 (0.2997)  loss_box_reg: 0.1095 (0.1330)  loss_mask: 0.2721 (0.3172)  loss_objectness: 0.0411 (0.0619)  loss_rpn_box_reg: 0.0442 (0.0645)  time: 0.6211 (0.7061)  data: 0.0004 (0.0177)  lr: 0.160000  max mem: 14655
2021-10-16 12:50:53,268 maskrcnn_benchmark.trainer INFO: eta: 2:19:27  iter: 6150  loss: 0.7375 (0.8768)  loss_classifier: 0.2504 (0.3003)  loss_box_reg: 0.0998 (0.1333)  loss_mask: 0.2781 (0.3165)  loss_objectness: 0.0439 (0.0620)  loss_rpn_box_reg: 0.0601 (0.0648)  time: 0.6213 (0.7061)  data: 0.0003 (0.0179)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:19:27  iter: 6150  loss: 0.7385 (0.8748)  loss_classifier: 0.2462 (0.2989)  loss_box_reg: 0.1082 (0.1331)  loss_mask: 0.2853 (0.3169)  loss_objectness: 0.0448 (0.0616)  loss_rpn_box_reg: 0.0489 (0.0643)  time: 0.6212 (0.7061)  data: 0.0003 (0.0177)  lr: 0.160000  max mem: 14740
INFO:maskrcnn_benchmark.trainer:eta: 2:19:27  iter: 6150  loss: 0.7375 (0.8768)  loss_classifier: 0.2504 (0.3003)  loss_box_reg: 0.0998 (0.1333)  loss_mask: 0.2781 (0.3165)  loss_objectness: 0.0439 (0.0620)  loss_rpn_box_reg: 0.0601 (0.0648)  time: 0.6213 (0.7061)  data: 0.0003 (0.0179)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634388653268, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.876848576442013, "loss_classifier": 0.30025238104104024, "loss_box_reg": 0.1332740114659177, "loss_mask": 0.31651245997446337, "loss_objectness": 0.06201197887066661, "loss_rpn_box_reg": 0.06479774554267646, "time": 0.706098364775743, "data": 0.017924660395800582, "throughput": 181.2778592691584}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 6150}}
:::MLLOG {"namespace": "", "time_ms": 1634388653268, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 181.2778592691584, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:18:44  iter: 6200  loss: 0.7394 (0.8736)  loss_classifier: 0.2406 (0.2985)  loss_box_reg: 0.1010 (0.1329)  loss_mask: 0.2782 (0.3165)  loss_objectness: 0.0407 (0.0615)  loss_rpn_box_reg: 0.0410 (0.0642)  time: 0.6203 (0.7054)  data: 0.0004 (0.0176)  lr: 0.160000  max mem: 14740
INFO:maskrcnn_benchmark.trainer:eta: 2:18:44  iter: 6200  loss: 0.7282 (0.8754)  loss_classifier: 0.2266 (0.2993)  loss_box_reg: 0.1090 (0.1328)  loss_mask: 0.2941 (0.3170)  loss_objectness: 0.0423 (0.0618)  loss_rpn_box_reg: 0.0676 (0.0645)  time: 0.6203 (0.7054)  data: 0.0004 (0.0176)  lr: 0.160000  max mem: 14714
2021-10-16 12:51:24,473 maskrcnn_benchmark.trainer INFO: eta: 2:18:44  iter: 6200  loss: 0.7152 (0.8758)  loss_classifier: 0.2260 (0.2998)  loss_box_reg: 0.1062 (0.1331)  loss_mask: 0.2687 (0.3162)  loss_objectness: 0.0412 (0.0619)  loss_rpn_box_reg: 0.0485 (0.0647)  time: 0.6203 (0.7054)  data: 0.0003 (0.0178)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:18:44  iter: 6200  loss: 0.7152 (0.8758)  loss_classifier: 0.2260 (0.2998)  loss_box_reg: 0.1062 (0.1331)  loss_mask: 0.2687 (0.3162)  loss_objectness: 0.0412 (0.0619)  loss_rpn_box_reg: 0.0485 (0.0647)  time: 0.6203 (0.7054)  data: 0.0003 (0.0178)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:18:44  iter: 6200  loss: 0.7422 (0.8725)  loss_classifier: 0.2407 (0.2983)  loss_box_reg: 0.1087 (0.1323)  loss_mask: 0.2830 (0.3160)  loss_objectness: 0.0384 (0.0616)  loss_rpn_box_reg: 0.0583 (0.0643)  time: 0.6193 (0.7054)  data: 0.0003 (0.0176)  lr: 0.160000  max mem: 14673
:::MLLOG {"namespace": "", "time_ms": 1634388684473, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8758242609472044, "loss_classifier": 0.2998127951088452, "loss_box_reg": 0.13314209978062388, "loss_mask": 0.31624197575113466, "loss_objectness": 0.061883916913141164, "loss_rpn_box_reg": 0.06474347387650801, "time": 0.7054371512320734, "data": 0.017783831704047418, "throughput": 181.44777288301734}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 6200}}
:::MLLOG {"namespace": "", "time_ms": 1634388684474, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 181.44777288301734, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:18:44  iter: 6200  loss: 0.7066 (0.8727)  loss_classifier: 0.2150 (0.2985)  loss_box_reg: 0.1121 (0.1325)  loss_mask: 0.2670 (0.3159)  loss_objectness: 0.0419 (0.0614)  loss_rpn_box_reg: 0.0460 (0.0644)  time: 0.6194 (0.7054)  data: 0.0003 (0.0176)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 2:18:44  iter: 6200  loss: 0.7556 (0.8717)  loss_classifier: 0.2474 (0.2981)  loss_box_reg: 0.1216 (0.1322)  loss_mask: 0.2801 (0.3162)  loss_objectness: 0.0455 (0.0612)  loss_rpn_box_reg: 0.0573 (0.0640)  time: 0.6189 (0.7054)  data: 0.0004 (0.0176)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 2:18:44  iter: 6200  loss: 0.7339 (0.8753)  loss_classifier: 0.2274 (0.2992)  loss_box_reg: 0.1135 (0.1329)  loss_mask: 0.2840 (0.3165)  loss_objectness: 0.0497 (0.0624)  loss_rpn_box_reg: 0.0537 (0.0644)  time: 0.6192 (0.7054)  data: 0.0004 (0.0176)  lr: 0.160000  max mem: 14656
INFO:maskrcnn_benchmark.trainer:eta: 2:18:44  iter: 6200  loss: 0.7409 (0.8736)  loss_classifier: 0.2477 (0.2990)  loss_box_reg: 0.1078 (0.1331)  loss_mask: 0.2688 (0.3160)  loss_objectness: 0.0458 (0.0612)  loss_rpn_box_reg: 0.0531 (0.0642)  time: 0.6189 (0.7054)  data: 0.0003 (0.0176)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 2:18:01  iter: 6250  loss: 0.7031 (0.8710)  loss_classifier: 0.2286 (0.2978)  loss_box_reg: 0.1054 (0.1321)  loss_mask: 0.2833 (0.3159)  loss_objectness: 0.0452 (0.0611)  loss_rpn_box_reg: 0.0551 (0.0640)  time: 0.6219 (0.7048)  data: 0.0003 (0.0175)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 2:18:01  iter: 6250  loss: 0.7248 (0.8717)  loss_classifier: 0.2541 (0.2982)  loss_box_reg: 0.1113 (0.1324)  loss_mask: 0.2631 (0.3156)  loss_objectness: 0.0456 (0.0613)  loss_rpn_box_reg: 0.0498 (0.0643)  time: 0.6220 (0.7048)  data: 0.0004 (0.0175)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 2:18:01  iter: 6250  loss: 0.7578 (0.8728)  loss_classifier: 0.2701 (0.2987)  loss_box_reg: 0.1228 (0.1330)  loss_mask: 0.2710 (0.3157)  loss_objectness: 0.0476 (0.0611)  loss_rpn_box_reg: 0.0560 (0.0642)  time: 0.6220 (0.7048)  data: 0.0004 (0.0174)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 2:18:01  iter: 6250  loss: 0.6974 (0.8744)  loss_classifier: 0.2239 (0.2988)  loss_box_reg: 0.1146 (0.1327)  loss_mask: 0.2657 (0.3162)  loss_objectness: 0.0365 (0.0622)  loss_rpn_box_reg: 0.0496 (0.0644)  time: 0.6219 (0.7048)  data: 0.0004 (0.0174)  lr: 0.160000  max mem: 14656
INFO:maskrcnn_benchmark.trainer:eta: 2:18:01  iter: 6250  loss: 0.7768 (0.8719)  loss_classifier: 0.2520 (0.2980)  loss_box_reg: 0.1140 (0.1322)  loss_mask: 0.2797 (0.3158)  loss_objectness: 0.0432 (0.0615)  loss_rpn_box_reg: 0.0589 (0.0643)  time: 0.6214 (0.7048)  data: 0.0003 (0.0175)  lr: 0.160000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 2:18:01  iter: 6250  loss: 0.7445 (0.8725)  loss_classifier: 0.2550 (0.2980)  loss_box_reg: 0.1173 (0.1327)  loss_mask: 0.2764 (0.3162)  loss_objectness: 0.0434 (0.0614)  loss_rpn_box_reg: 0.0487 (0.0641)  time: 0.6215 (0.7048)  data: 0.0003 (0.0175)  lr: 0.160000  max mem: 14740
2021-10-16 12:51:55,610 maskrcnn_benchmark.trainer INFO: eta: 2:18:01  iter: 6250  loss: 0.7410 (0.8747)  loss_classifier: 0.2376 (0.2994)  loss_box_reg: 0.1196 (0.1330)  loss_mask: 0.2762 (0.3160)  loss_objectness: 0.0444 (0.0617)  loss_rpn_box_reg: 0.0585 (0.0647)  time: 0.6216 (0.7048)  data: 0.0003 (0.0176)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:18:01  iter: 6250  loss: 0.7410 (0.8747)  loss_classifier: 0.2376 (0.2994)  loss_box_reg: 0.1196 (0.1330)  loss_mask: 0.2762 (0.3160)  loss_objectness: 0.0444 (0.0617)  loss_rpn_box_reg: 0.0585 (0.0647)  time: 0.6216 (0.7048)  data: 0.0003 (0.0176)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:18:01  iter: 6250  loss: 0.7234 (0.8744)  loss_classifier: 0.2455 (0.2989)  loss_box_reg: 0.1134 (0.1327)  loss_mask: 0.2742 (0.3167)  loss_objectness: 0.0392 (0.0616)  loss_rpn_box_reg: 0.0460 (0.0644)  time: 0.6215 (0.7048)  data: 0.0003 (0.0174)  lr: 0.160000  max mem: 14714
:::MLLOG {"namespace": "", "time_ms": 1634388715610, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8747393949842454, "loss_classifier": 0.2993604367399216, "loss_box_reg": 0.1329959640818462, "loss_mask": 0.3159576832580566, "loss_objectness": 0.061749281848073004, "loss_rpn_box_reg": 0.06467602951347828, "time": 0.7047754570388794, "data": 0.01764511344909668, "throughput": 181.61812918087864}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 6250}}
:::MLLOG {"namespace": "", "time_ms": 1634388715610, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 181.61812918087864, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:17:18  iter: 6300  loss: 0.7611 (0.8699)  loss_classifier: 0.2728 (0.2974)  loss_box_reg: 0.1212 (0.1320)  loss_mask: 0.2767 (0.3157)  loss_objectness: 0.0425 (0.0610)  loss_rpn_box_reg: 0.0511 (0.0639)  time: 0.6196 (0.7041)  data: 0.0003 (0.0173)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 2:17:18  iter: 6300  loss: 0.7826 (0.8720)  loss_classifier: 0.2743 (0.2984)  loss_box_reg: 0.1263 (0.1329)  loss_mask: 0.2782 (0.3154)  loss_objectness: 0.0446 (0.0610)  loss_rpn_box_reg: 0.0594 (0.0642)  time: 0.6197 (0.7041)  data: 0.0004 (0.0173)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 2:17:18  iter: 6300  loss: 0.7517 (0.8736)  loss_classifier: 0.2597 (0.2986)  loss_box_reg: 0.1157 (0.1327)  loss_mask: 0.2776 (0.3160)  loss_objectness: 0.0397 (0.0621)  loss_rpn_box_reg: 0.0420 (0.0643)  time: 0.6197 (0.7041)  data: 0.0003 (0.0173)  lr: 0.160000  max mem: 14656
INFO:maskrcnn_benchmark.trainer:eta: 2:17:18  iter: 6300  loss: 0.7450 (0.8707)  loss_classifier: 0.2570 (0.2978)  loss_box_reg: 0.1148 (0.1323)  loss_mask: 0.2789 (0.3153)  loss_objectness: 0.0390 (0.0612)  loss_rpn_box_reg: 0.0498 (0.0642)  time: 0.6193 (0.7041)  data: 0.0004 (0.0174)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 2:17:18  iter: 6300  loss: 0.7539 (0.8707)  loss_classifier: 0.2749 (0.2976)  loss_box_reg: 0.1170 (0.1321)  loss_mask: 0.2700 (0.3154)  loss_objectness: 0.0505 (0.0614)  loss_rpn_box_reg: 0.0502 (0.0642)  time: 0.6197 (0.7042)  data: 0.0003 (0.0174)  lr: 0.160000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 2:17:18  iter: 6300  loss: 0.7991 (0.8718)  loss_classifier: 0.2635 (0.2978)  loss_box_reg: 0.1219 (0.1326)  loss_mask: 0.2770 (0.3159)  loss_objectness: 0.0493 (0.0613)  loss_rpn_box_reg: 0.0487 (0.0641)  time: 0.6192 (0.7041)  data: 0.0003 (0.0173)  lr: 0.160000  max mem: 14740
2021-10-16 12:52:26,858 maskrcnn_benchmark.trainer INFO: eta: 2:17:18  iter: 6300  loss: 0.7862 (0.8740)  loss_classifier: 0.2717 (0.2990)  loss_box_reg: 0.1260 (0.1329)  loss_mask: 0.2852 (0.3157)  loss_objectness: 0.0518 (0.0617)  loss_rpn_box_reg: 0.0601 (0.0647)  time: 0.6190 (0.7041)  data: 0.0004 (0.0175)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:17:18  iter: 6300  loss: 0.7862 (0.8740)  loss_classifier: 0.2717 (0.2990)  loss_box_reg: 0.1260 (0.1329)  loss_mask: 0.2852 (0.3157)  loss_objectness: 0.0518 (0.0617)  loss_rpn_box_reg: 0.0601 (0.0647)  time: 0.6190 (0.7041)  data: 0.0004 (0.0175)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:17:18  iter: 6300  loss: 0.7615 (0.8736)  loss_classifier: 0.2603 (0.2987)  loss_box_reg: 0.1214 (0.1326)  loss_mask: 0.2873 (0.3164)  loss_objectness: 0.0471 (0.0615)  loss_rpn_box_reg: 0.0539 (0.0644)  time: 0.6190 (0.7042)  data: 0.0003 (0.0173)  lr: 0.160000  max mem: 14714
:::MLLOG {"namespace": "", "time_ms": 1634388746858, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8739683167092384, "loss_classifier": 0.29904907501169614, "loss_box_reg": 0.13291296627723598, "loss_mask": 0.31568249365640066, "loss_objectness": 0.06165144572152741, "loss_rpn_box_reg": 0.06467233645685372, "time": 0.7041420004102918, "data": 0.0175083113095117, "throughput": 181.78151555427246}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 6300}}
:::MLLOG {"namespace": "", "time_ms": 1634388746858, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 181.78151555427246, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:16:35  iter: 6350  loss: 0.8217 (0.8699)  loss_classifier: 0.2641 (0.2973)  loss_box_reg: 0.1245 (0.1320)  loss_mask: 0.2811 (0.3151)  loss_objectness: 0.0438 (0.0613)  loss_rpn_box_reg: 0.0603 (0.0642)  time: 0.6218 (0.7035)  data: 0.0003 (0.0172)  lr: 0.160000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 2:16:35  iter: 6350  loss: 0.7407 (0.8710)  loss_classifier: 0.2584 (0.2975)  loss_box_reg: 0.1136 (0.1325)  loss_mask: 0.2741 (0.3156)  loss_objectness: 0.0453 (0.0612)  loss_rpn_box_reg: 0.0542 (0.0641)  time: 0.6208 (0.7035)  data: 0.0004 (0.0172)  lr: 0.160000  max mem: 14740
INFO:maskrcnn_benchmark.trainer:eta: 2:16:35  iter: 6350  loss: 0.7872 (0.8728)  loss_classifier: 0.2782 (0.2983)  loss_box_reg: 0.1271 (0.1325)  loss_mask: 0.2884 (0.3161)  loss_objectness: 0.0415 (0.0614)  loss_rpn_box_reg: 0.0600 (0.0644)  time: 0.6207 (0.7035)  data: 0.0004 (0.0172)  lr: 0.160000  max mem: 14714
2021-10-16 12:52:58,015 maskrcnn_benchmark.trainer INFO: eta: 2:16:35  iter: 6350  loss: 0.7116 (0.8731)  loss_classifier: 0.2320 (0.2987)  loss_box_reg: 0.1088 (0.1328)  loss_mask: 0.2774 (0.3154)  loss_objectness: 0.0533 (0.0616)  loss_rpn_box_reg: 0.0490 (0.0647)  time: 0.6207 (0.7035)  data: 0.0003 (0.0174)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:16:35  iter: 6350  loss: 0.7116 (0.8731)  loss_classifier: 0.2320 (0.2987)  loss_box_reg: 0.1088 (0.1328)  loss_mask: 0.2774 (0.3154)  loss_objectness: 0.0533 (0.0616)  loss_rpn_box_reg: 0.0490 (0.0647)  time: 0.6207 (0.7035)  data: 0.0003 (0.0174)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:16:35  iter: 6350  loss: 0.7848 (0.8698)  loss_classifier: 0.2655 (0.2975)  loss_box_reg: 0.1190 (0.1322)  loss_mask: 0.2842 (0.3150)  loss_objectness: 0.0414 (0.0611)  loss_rpn_box_reg: 0.0602 (0.0641)  time: 0.6223 (0.7035)  data: 0.0004 (0.0172)  lr: 0.160000  max mem: 14996
:::MLLOG {"namespace": "", "time_ms": 1634388778015, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8730867093238305, "loss_classifier": 0.29866901265119944, "loss_box_reg": 0.13278279850270422, "loss_mask": 0.31540086369345505, "loss_objectness": 0.06158332411493138, "loss_rpn_box_reg": 0.06465071080149863, "time": 0.7035042656125046, "data": 0.01737367648777999, "throughput": 181.94630261204892}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 6350}}
:::MLLOG {"namespace": "", "time_ms": 1634388778015, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 181.94630261204892, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:16:35  iter: 6350  loss: 0.7651 (0.8692)  loss_classifier: 0.2532 (0.2971)  loss_box_reg: 0.1213 (0.1320)  loss_mask: 0.2831 (0.3154)  loss_objectness: 0.0457 (0.0609)  loss_rpn_box_reg: 0.0548 (0.0638)  time: 0.6217 (0.7035)  data: 0.0003 (0.0172)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 2:16:35  iter: 6350  loss: 0.7171 (0.8725)  loss_classifier: 0.2319 (0.2982)  loss_box_reg: 0.1102 (0.1325)  loss_mask: 0.2721 (0.3157)  loss_objectness: 0.0376 (0.0619)  loss_rpn_box_reg: 0.0450 (0.0642)  time: 0.6214 (0.7035)  data: 0.0004 (0.0172)  lr: 0.160000  max mem: 14656
INFO:maskrcnn_benchmark.trainer:eta: 2:16:35  iter: 6350  loss: 0.7746 (0.8711)  loss_classifier: 0.2617 (0.2981)  loss_box_reg: 0.1227 (0.1328)  loss_mask: 0.2756 (0.3152)  loss_objectness: 0.0480 (0.0609)  loss_rpn_box_reg: 0.0520 (0.0641)  time: 0.6216 (0.7035)  data: 0.0004 (0.0172)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 2:15:53  iter: 6400  loss: 0.7523 (0.8703)  loss_classifier: 0.2497 (0.2977)  loss_box_reg: 0.1157 (0.1327)  loss_mask: 0.2746 (0.3149)  loss_objectness: 0.0438 (0.0608)  loss_rpn_box_reg: 0.0493 (0.0641)  time: 0.6255 (0.7029)  data: 0.0004 (0.0170)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 2:15:53  iter: 6400  loss: 0.7612 (0.8716)  loss_classifier: 0.2412 (0.2978)  loss_box_reg: 0.1167 (0.1324)  loss_mask: 0.2812 (0.3154)  loss_objectness: 0.0442 (0.0618)  loss_rpn_box_reg: 0.0530 (0.0642)  time: 0.6256 (0.7029)  data: 0.0003 (0.0170)  lr: 0.160000  max mem: 14656
INFO:maskrcnn_benchmark.trainer:eta: 2:15:53  iter: 6400  loss: 0.7672 (0.8685)  loss_classifier: 0.2643 (0.2969)  loss_box_reg: 0.1202 (0.1319)  loss_mask: 0.2674 (0.3152)  loss_objectness: 0.0430 (0.0608)  loss_rpn_box_reg: 0.0560 (0.0638)  time: 0.6255 (0.7029)  data: 0.0003 (0.0171)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 2:15:53  iter: 6400  loss: 0.7677 (0.8691)  loss_classifier: 0.2672 (0.2970)  loss_box_reg: 0.1294 (0.1319)  loss_mask: 0.2909 (0.3149)  loss_objectness: 0.0472 (0.0612)  loss_rpn_box_reg: 0.0545 (0.0642)  time: 0.6268 (0.7029)  data: 0.0003 (0.0171)  lr: 0.160000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 2:15:53  iter: 6400  loss: 0.7603 (0.8689)  loss_classifier: 0.2430 (0.2971)  loss_box_reg: 0.1088 (0.1320)  loss_mask: 0.2828 (0.3148)  loss_objectness: 0.0462 (0.0610)  loss_rpn_box_reg: 0.0473 (0.0641)  time: 0.6263 (0.7029)  data: 0.0003 (0.0171)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 2:15:53  iter: 6400  loss: 0.7384 (0.8702)  loss_classifier: 0.2381 (0.2972)  loss_box_reg: 0.1151 (0.1324)  loss_mask: 0.2756 (0.3154)  loss_objectness: 0.0401 (0.0612)  loss_rpn_box_reg: 0.0594 (0.0641)  time: 0.6262 (0.7029)  data: 0.0004 (0.0171)  lr: 0.160000  max mem: 14740
INFO:maskrcnn_benchmark.trainer:eta: 2:15:53  iter: 6400  loss: 0.8013 (0.8717)  loss_classifier: 0.2638 (0.2979)  loss_box_reg: 0.1205 (0.1324)  loss_mask: 0.2963 (0.3158)  loss_objectness: 0.0455 (0.0613)  loss_rpn_box_reg: 0.0538 (0.0643)  time: 0.6261 (0.7029)  data: 0.0004 (0.0170)  lr: 0.160000  max mem: 14714
2021-10-16 12:53:29,228 maskrcnn_benchmark.trainer INFO: eta: 2:15:53  iter: 6400  loss: 0.7653 (0.8722)  loss_classifier: 0.2558 (0.2983)  loss_box_reg: 0.1115 (0.1327)  loss_mask: 0.2797 (0.3151)  loss_objectness: 0.0436 (0.0615)  loss_rpn_box_reg: 0.0524 (0.0646)  time: 0.6262 (0.7029)  data: 0.0003 (0.0172)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:15:53  iter: 6400  loss: 0.7653 (0.8722)  loss_classifier: 0.2558 (0.2983)  loss_box_reg: 0.1115 (0.1327)  loss_mask: 0.2797 (0.3151)  loss_objectness: 0.0436 (0.0615)  loss_rpn_box_reg: 0.0524 (0.0646)  time: 0.6262 (0.7029)  data: 0.0003 (0.0172)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634388809229, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.87216905023437, "loss_classifier": 0.2983197320799809, "loss_box_reg": 0.13266370752997317, "loss_mask": 0.31514951252844187, "loss_objectness": 0.06145245322608389, "loss_rpn_box_reg": 0.06458364521735348, "time": 0.7028852091357112, "data": 0.017241570577025415, "throughput": 182.10654931463512}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 6400}}
:::MLLOG {"namespace": "", "time_ms": 1634388809229, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 182.10654931463512, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
:::MLLOG {"namespace": "", "time_ms": 1634388821091, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 111, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1634388821091, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 112, "first_epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1634388821091, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 113, "epoch_num": 7}}
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
2021-10-16 12:53:41,414 maskrcnn_benchmark.data.build WARNING: When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
Done (t=0.55s)
creating index...
Done (t=0.55s)
creating index...
index created!
index created!
shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]Done (t=0.55s)
creating index...
shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]index created!
shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]Done (t=0.55s)
creating index...
Done (t=0.54s)
creating index...
Done (t=0.55s)
creating index...
Done (t=0.55s)
creating index...
Done (t=0.55s)
creating index...
index created!
index created!
shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]index created!
shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]index created!
index created!
shapes=None
passthrough=True
shapes=None
passthrough=True
creating index...
GT annotations already exist!
2021-10-16 12:53:41,999 maskrcnn_benchmark.inference INFO: Start evaluation on coco_2017_val dataset(5000 images).
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]  0% 0/40 [00:00<?, ?it/s]  2% 1/40 [00:00<00:11,  3.36it/s]  2% 1/40 [00:00<00:11,  3.38it/s]  2% 1/40 [00:00<00:11,  3.45it/s]  2% 1/40 [00:00<00:11,  3.42it/s]  2% 1/40 [00:00<00:11,  3.42it/s]  2% 1/40 [00:00<00:11,  3.38it/s]  2% 1/40 [00:00<00:11,  3.36it/s]  2% 1/40 [00:00<00:11,  3.31it/s]  5% 2/40 [00:00<00:11,  3.40it/s]  5% 2/40 [00:00<00:11,  3.37it/s]  5% 2/40 [00:00<00:10,  3.46it/s]  5% 2/40 [00:00<00:10,  3.50it/s]  5% 2/40 [00:00<00:10,  3.52it/s]  5% 2/40 [00:00<00:11,  3.43it/s]  5% 2/40 [00:00<00:11,  3.45it/s]  5% 2/40 [00:00<00:11,  3.37it/s]  8% 3/40 [00:00<00:10,  3.43it/s]  8% 3/40 [00:00<00:10,  3.51it/s]  8% 3/40 [00:00<00:10,  3.38it/s]  8% 3/40 [00:00<00:10,  3.54it/s]  8% 3/40 [00:00<00:10,  3.50it/s]  8% 3/40 [00:00<00:10,  3.48it/s]  8% 3/40 [00:00<00:10,  3.44it/s]  8% 3/40 [00:00<00:10,  3.39it/s] 10% 4/40 [00:01<00:10,  3.44it/s] 10% 4/40 [00:01<00:10,  3.49it/s] 10% 4/40 [00:01<00:10,  3.39it/s] 10% 4/40 [00:01<00:10,  3.49it/s] 10% 4/40 [00:01<00:10,  3.48it/s] 10% 4/40 [00:01<00:10,  3.51it/s] 10% 4/40 [00:01<00:10,  3.44it/s] 10% 4/40 [00:01<00:10,  3.38it/s] 12% 5/40 [00:01<00:10,  3.44it/s] 12% 5/40 [00:01<00:10,  3.45it/s] 12% 5/40 [00:01<00:10,  3.49it/s] 12% 5/40 [00:01<00:10,  3.49it/s] 12% 5/40 [00:01<00:10,  3.50it/s] 12% 5/40 [00:01<00:09,  3.52it/s] 12% 5/40 [00:01<00:10,  3.49it/s] 12% 5/40 [00:01<00:10,  3.45it/s] 15% 6/40 [00:01<00:09,  3.51it/s] 15% 6/40 [00:01<00:09,  3.44it/s] 15% 6/40 [00:01<00:09,  3.44it/s] 15% 6/40 [00:01<00:09,  3.59it/s] 15% 6/40 [00:01<00:09,  3.52it/s] 15% 6/40 [00:01<00:09,  3.49it/s] 15% 6/40 [00:01<00:09,  3.51it/s] 15% 6/40 [00:01<00:09,  3.46it/s] 18% 7/40 [00:02<00:09,  3.46it/s] 18% 7/40 [00:02<00:09,  3.44it/s] 18% 7/40 [00:02<00:09,  3.47it/s] 18% 7/40 [00:01<00:09,  3.52it/s] 18% 7/40 [00:01<00:09,  3.52it/s] 18% 7/40 [00:01<00:09,  3.54it/s] 18% 7/40 [00:02<00:09,  3.49it/s] 18% 7/40 [00:02<00:09,  3.53it/s] 20% 8/40 [00:02<00:09,  3.44it/s] 20% 8/40 [00:02<00:09,  3.46it/s] 20% 8/40 [00:02<00:09,  3.40it/s] 20% 8/40 [00:02<00:08,  3.58it/s] 20% 8/40 [00:02<00:09,  3.54it/s] 20% 8/40 [00:02<00:09,  3.44it/s] 20% 8/40 [00:02<00:09,  3.51it/s] 20% 8/40 [00:02<00:09,  3.52it/s] 22% 9/40 [00:02<00:08,  3.47it/s] 22% 9/40 [00:02<00:08,  3.46it/s] 22% 9/40 [00:02<00:09,  3.42it/s] 22% 9/40 [00:02<00:08,  3.55it/s] 22% 9/40 [00:02<00:08,  3.53it/s] 22% 9/40 [00:02<00:08,  3.47it/s] 22% 9/40 [00:02<00:08,  3.51it/s] 22% 9/40 [00:02<00:08,  3.57it/s] 25% 10/40 [00:02<00:08,  3.50it/s] 25% 10/40 [00:02<00:08,  3.44it/s] 25% 10/40 [00:02<00:08,  3.57it/s] 25% 10/40 [00:02<00:08,  3.43it/s] 25% 10/40 [00:02<00:08,  3.60it/s] 25% 10/40 [00:02<00:08,  3.49it/s] 25% 10/40 [00:02<00:08,  3.49it/s] 25% 10/40 [00:02<00:08,  3.55it/s] 28% 11/40 [00:03<00:08,  3.53it/s] 28% 11/40 [00:03<00:08,  3.42it/s] 28% 11/40 [00:03<00:08,  3.54it/s] 28% 11/40 [00:03<00:08,  3.44it/s] 28% 11/40 [00:03<00:08,  3.57it/s] 28% 11/40 [00:03<00:08,  3.51it/s] 28% 11/40 [00:03<00:08,  3.53it/s] 28% 11/40 [00:03<00:08,  3.48it/s] 30% 12/40 [00:03<00:07,  3.55it/s] 30% 12/40 [00:03<00:07,  3.57it/s] 30% 12/40 [00:03<00:08,  3.49it/s] 30% 12/40 [00:03<00:08,  3.44it/s] 30% 12/40 [00:03<00:07,  3.55it/s] 30% 12/40 [00:03<00:08,  3.47it/s] 30% 12/40 [00:03<00:07,  3.55it/s] 30% 12/40 [00:03<00:07,  3.51it/s] 32% 13/40 [00:03<00:07,  3.64it/s] 32% 13/40 [00:03<00:07,  3.51it/s] 32% 13/40 [00:03<00:07,  3.48it/s] 32% 13/40 [00:03<00:07,  3.46it/s] 32% 13/40 [00:03<00:07,  3.53it/s] 32% 13/40 [00:03<00:07,  3.53it/s] 32% 13/40 [00:03<00:07,  3.54it/s] 32% 13/40 [00:03<00:07,  3.49it/s] 35% 14/40 [00:03<00:07,  3.58it/s] 35% 14/40 [00:04<00:07,  3.53it/s] 35% 14/40 [00:04<00:07,  3.48it/s] 35% 14/40 [00:03<00:07,  3.59it/s] 35% 14/40 [00:04<00:07,  3.47it/s] 35% 14/40 [00:03<00:07,  3.55it/s] 35% 14/40 [00:03<00:07,  3.55it/s] 35% 14/40 [00:03<00:07,  3.49it/s] 38% 15/40 [00:04<00:06,  3.64it/s] 38% 15/40 [00:04<00:07,  3.54it/s] 38% 15/40 [00:04<00:07,  3.49it/s] 38% 15/40 [00:04<00:07,  3.51it/s] 38% 15/40 [00:04<00:07,  3.51it/s] 38% 15/40 [00:04<00:06,  3.57it/s] 38% 15/40 [00:04<00:07,  3.52it/s] 38% 15/40 [00:04<00:07,  3.46it/s] 40% 16/40 [00:04<00:06,  3.56it/s] 40% 16/40 [00:04<00:06,  3.58it/s] 40% 16/40 [00:04<00:06,  3.47it/s] 40% 16/40 [00:04<00:06,  3.54it/s] 40% 16/40 [00:04<00:06,  3.45it/s] 40% 16/40 [00:04<00:06,  3.56it/s] 40% 16/40 [00:04<00:06,  3.50it/s] 40% 16/40 [00:04<00:06,  3.48it/s] 42% 17/40 [00:04<00:06,  3.64it/s] 42% 17/40 [00:04<00:06,  3.54it/s] 42% 17/40 [00:04<00:06,  3.58it/s] 42% 17/40 [00:04<00:06,  3.62it/s] 42% 17/40 [00:04<00:06,  3.45it/s] 42% 17/40 [00:04<00:06,  3.44it/s] 42% 17/40 [00:04<00:06,  3.58it/s] 42% 17/40 [00:04<00:06,  3.52it/s] 45% 18/40 [00:05<00:06,  3.66it/s] 45% 18/40 [00:05<00:06,  3.53it/s] 45% 18/40 [00:05<00:06,  3.52it/s] 45% 18/40 [00:05<00:06,  3.58it/s] 45% 18/40 [00:05<00:06,  3.44it/s] 45% 18/40 [00:05<00:06,  3.45it/s] 45% 18/40 [00:05<00:06,  3.55it/s] 45% 18/40 [00:05<00:06,  3.50it/s] 48% 19/40 [00:05<00:05,  3.63it/s] 48% 19/40 [00:05<00:05,  3.53it/s] 48% 19/40 [00:05<00:05,  3.59it/s] 48% 19/40 [00:05<00:06,  3.49it/s] 48% 19/40 [00:05<00:06,  3.47it/s] 48% 19/40 [00:05<00:06,  3.47it/s] 48% 19/40 [00:05<00:05,  3.53it/s] 48% 19/40 [00:05<00:05,  3.52it/s] 50% 20/40 [00:05<00:05,  3.61it/s] 50% 20/40 [00:05<00:05,  3.53it/s] 50% 20/40 [00:05<00:05,  3.57it/s] 50% 20/40 [00:05<00:05,  3.49it/s] 50% 20/40 [00:05<00:05,  3.46it/s] 50% 20/40 [00:05<00:05,  3.50it/s] 50% 20/40 [00:05<00:05,  3.52it/s] 50% 20/40 [00:05<00:05,  3.53it/s] 52% 21/40 [00:05<00:05,  3.58it/s] 52% 21/40 [00:05<00:05,  3.52it/s] 52% 21/40 [00:05<00:05,  3.59it/s] 52% 21/40 [00:06<00:05,  3.57it/s] 52% 21/40 [00:06<00:05,  3.48it/s] 52% 21/40 [00:06<00:05,  3.48it/s] 52% 21/40 [00:05<00:05,  3.54it/s] 52% 21/40 [00:05<00:05,  3.54it/s] 55% 22/40 [00:06<00:04,  3.63it/s] 55% 22/40 [00:06<00:05,  3.54it/s] 55% 22/40 [00:06<00:05,  3.55it/s] 55% 22/40 [00:06<00:05,  3.52it/s] 55% 22/40 [00:06<00:05,  3.46it/s] 55% 22/40 [00:06<00:05,  3.45it/s] 55% 22/40 [00:06<00:05,  3.59it/s] 55% 22/40 [00:06<00:05,  3.49it/s] 57% 23/40 [00:06<00:04,  3.63it/s] 57% 23/40 [00:06<00:04,  3.57it/s] 57% 23/40 [00:06<00:04,  3.59it/s] 57% 23/40 [00:06<00:04,  3.50it/s] 57% 23/40 [00:06<00:04,  3.49it/s] 57% 23/40 [00:06<00:04,  3.44it/s] 57% 23/40 [00:06<00:04,  3.55it/s] 57% 23/40 [00:06<00:04,  3.46it/s] 60% 24/40 [00:06<00:04,  3.61it/s] 60% 24/40 [00:06<00:04,  3.62it/s] 60% 24/40 [00:06<00:04,  3.57it/s] 60% 24/40 [00:06<00:04,  3.52it/s] 60% 24/40 [00:06<00:04,  3.51it/s] 60% 24/40 [00:06<00:04,  3.45it/s] 60% 24/40 [00:06<00:04,  3.58it/s] 60% 24/40 [00:06<00:04,  3.50it/s] 62% 25/40 [00:06<00:04,  3.56it/s] 62% 25/40 [00:07<00:04,  3.61it/s] 62% 25/40 [00:07<00:04,  3.61it/s] 62% 25/40 [00:07<00:04,  3.49it/s] 62% 25/40 [00:07<00:04,  3.46it/s] 62% 25/40 [00:07<00:04,  3.47it/s] 62% 25/40 [00:07<00:04,  3.57it/s] 62% 25/40 [00:07<00:04,  3.48it/s] 65% 26/40 [00:07<00:03,  3.53it/s] 65% 26/40 [00:07<00:03,  3.62it/s] 65% 26/40 [00:07<00:03,  3.57it/s] 65% 26/40 [00:07<00:03,  3.55it/s] 65% 26/40 [00:07<00:03,  3.51it/s] 65% 26/40 [00:07<00:03,  3.55it/s] 65% 26/40 [00:07<00:04,  3.46it/s] 65% 26/40 [00:07<00:04,  3.47it/s] 68% 27/40 [00:07<00:03,  3.61it/s] 68% 27/40 [00:07<00:03,  3.58it/s] 68% 27/40 [00:07<00:03,  3.60it/s] 68% 27/40 [00:07<00:03,  3.52it/s] 68% 27/40 [00:07<00:03,  3.49it/s] 68% 27/40 [00:07<00:03,  3.50it/s] 68% 27/40 [00:07<00:03,  3.51it/s] 68% 27/40 [00:07<00:03,  3.53it/s] 70% 28/40 [00:07<00:03,  3.60it/s] 70% 28/40 [00:07<00:03,  3.65it/s] 70% 28/40 [00:07<00:03,  3.57it/s] 70% 28/40 [00:08<00:03,  3.49it/s] 70% 28/40 [00:08<00:03,  3.50it/s] 70% 28/40 [00:07<00:03,  3.54it/s] 70% 28/40 [00:08<00:03,  3.47it/s] 70% 28/40 [00:07<00:03,  3.53it/s] 72% 29/40 [00:08<00:03,  3.59it/s] 72% 29/40 [00:08<00:03,  3.60it/s] 72% 29/40 [00:08<00:03,  3.58it/s] 72% 29/40 [00:08<00:03,  3.55it/s] 72% 29/40 [00:08<00:03,  3.51it/s] 72% 29/40 [00:08<00:03,  3.50it/s] 72% 29/40 [00:08<00:03,  3.54it/s] 72% 29/40 [00:08<00:03,  3.45it/s] 75% 30/40 [00:08<00:02,  3.64it/s] 75% 30/40 [00:08<00:02,  3.57it/s] 75% 30/40 [00:08<00:02,  3.53it/s] 75% 30/40 [00:08<00:02,  3.51it/s] 75% 30/40 [00:08<00:02,  3.50it/s] 75% 30/40 [00:08<00:02,  3.53it/s] 75% 30/40 [00:08<00:02,  3.53it/s] 75% 30/40 [00:08<00:02,  3.42it/s] 78% 31/40 [00:08<00:02,  3.63it/s] 78% 31/40 [00:08<00:02,  3.53it/s] 78% 31/40 [00:08<00:02,  3.50it/s] 78% 31/40 [00:08<00:02,  3.50it/s] 78% 31/40 [00:08<00:02,  3.55it/s] 78% 31/40 [00:08<00:02,  3.48it/s] 78% 31/40 [00:08<00:02,  3.53it/s] 78% 31/40 [00:08<00:02,  3.46it/s] 80% 32/40 [00:08<00:02,  3.61it/s] 80% 32/40 [00:09<00:02,  3.54it/s] 80% 32/40 [00:09<00:02,  3.50it/s] 80% 32/40 [00:09<00:02,  3.51it/s] 80% 32/40 [00:09<00:02,  3.49it/s] 80% 32/40 [00:09<00:02,  3.50it/s] 80% 32/40 [00:09<00:02,  3.50it/s] 80% 32/40 [00:09<00:02,  3.49it/s] 82% 33/40 [00:09<00:01,  3.58it/s] 82% 33/40 [00:09<00:01,  3.60it/s] 82% 33/40 [00:09<00:02,  3.48it/s] 82% 33/40 [00:09<00:01,  3.52it/s] 82% 33/40 [00:09<00:01,  3.57it/s] 82% 33/40 [00:09<00:01,  3.55it/s] 82% 33/40 [00:09<00:02,  3.43it/s] 82% 33/40 [00:09<00:02,  3.46it/s] 85% 34/40 [00:09<00:01,  3.60it/s] 85% 34/40 [00:09<00:01,  3.53it/s] 85% 34/40 [00:09<00:01,  3.50it/s] 85% 34/40 [00:09<00:01,  3.55it/s] 85% 34/40 [00:09<00:01,  3.62it/s] 85% 34/40 [00:09<00:01,  3.52it/s] 85% 34/40 [00:09<00:01,  3.48it/s] 85% 34/40 [00:09<00:01,  3.46it/s] 88% 35/40 [00:09<00:01,  3.57it/s] 88% 35/40 [00:09<00:01,  3.58it/s] 88% 35/40 [00:09<00:01,  3.50it/s] 88% 35/40 [00:10<00:01,  3.55it/s] 88% 35/40 [00:09<00:01,  3.50it/s] 88% 35/40 [00:09<00:01,  3.52it/s] 88% 35/40 [00:10<00:01,  3.43it/s] 88% 35/40 [00:10<00:01,  3.45it/s] 90% 36/40 [00:10<00:01,  3.55it/s] 90% 36/40 [00:10<00:01,  3.62it/s] 90% 36/40 [00:10<00:01,  3.51it/s] 90% 36/40 [00:10<00:01,  3.55it/s] 90% 36/40 [00:10<00:01,  3.49it/s] 90% 36/40 [00:10<00:01,  3.48it/s] 90% 36/40 [00:10<00:01,  3.43it/s] 90% 36/40 [00:10<00:01,  3.43it/s] 92% 37/40 [00:10<00:00,  3.54it/s] 92% 37/40 [00:10<00:00,  3.60it/s] 92% 37/40 [00:10<00:00,  3.46it/s] 92% 37/40 [00:10<00:00,  3.58it/s] 92% 37/40 [00:10<00:00,  3.53it/s] 92% 37/40 [00:10<00:00,  3.45it/s] 92% 37/40 [00:10<00:00,  3.47it/s] 92% 37/40 [00:10<00:00,  3.44it/s] 95% 38/40 [00:10<00:00,  3.57it/s] 95% 38/40 [00:10<00:00,  3.58it/s] 98% 39/40 [00:10<00:00,  4.41it/s] 95% 38/40 [00:10<00:00,  3.48it/s] 95% 38/40 [00:10<00:00,  3.61it/s] 95% 38/40 [00:10<00:00,  3.86it/s] 95% 38/40 [00:10<00:00,  3.61it/s] 95% 38/40 [00:10<00:00,  3.50it/s] 98% 39/40 [00:10<00:00,  4.28it/s] 95% 38/40 [00:10<00:00,  3.49it/s] 98% 39/40 [00:10<00:00,  3.84it/s] 98% 39/40 [00:10<00:00,  4.23it/s]100% 40/40 [00:10<00:00,  4.66it/s]100% 40/40 [00:10<00:00,  3.67it/s]
100% 40/40 [00:10<00:00,  3.65it/s]
100% 40/40 [00:11<00:00,  4.47it/s]100% 40/40 [00:11<00:00,  3.62it/s]
100% 40/40 [00:11<00:00,  4.72it/s]100% 40/40 [00:11<00:00,  3.59it/s]
 98% 39/40 [00:11<00:00,  3.73it/s] 98% 39/40 [00:11<00:00,  3.59it/s] 98% 39/40 [00:11<00:00,  3.56it/s]100% 40/40 [00:11<00:00,  3.61it/s]
 98% 39/40 [00:11<00:00,  3.52it/s]100% 40/40 [00:11<00:00,  3.59it/s]
100% 40/40 [00:11<00:00,  3.55it/s]
100% 40/40 [00:11<00:00,  4.41it/s]100% 40/40 [00:11<00:00,  3.55it/s]
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.296715 (0.018074743270874022 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.185354 (0.017896566009521483 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.175144 (0.01788022994995117 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.194141 (0.017910626220703125 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.292742 (0.01806838722229004 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.262513 (0.018020020294189452 s / img per device, on 8 devices)
2021-10-16 12:53:53,174 maskrcnn_benchmark.inference INFO: Total inference time: 0:00:11.175511 (0.01788081817626953 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.199623 (0.017919396209716797 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.175511 (0.01788081817626953 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.026s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.026s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.026s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.027s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.027s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.027s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.027s
2021-10-16 12:53:53,373 maskrcnn_benchmark.timed_section INFO: EXPOSED: Launching evaluation preparation tasks took 0.034s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.034s
:::MLLOG {"namespace": "", "time_ms": 1634388833377, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 168, "first_epoch_num": 8, "epoch_count": 1}}
:::MLLOG {"namespace": "", "time_ms": 1634388833377, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 169, "epoch_num": 8}}
INFO:maskrcnn_benchmark.timed_section:Prepping took 8.339 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 8.343 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 8.405 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 8.397 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 8.467 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 8.550 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 9.001 seconds total
2021-10-16 12:54:03,492 maskrcnn_benchmark.timed_section INFO: Prepping took 8.948 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 8.948 seconds total
INFO:maskrcnn_benchmark.trainer:eta: 2:15:35  iter: 6450  loss: 0.7058 (0.8692)  loss_classifier: 0.2286 (0.2968)  loss_box_reg: 0.1063 (0.1323)  loss_mask: 0.2717 (0.3151)  loss_objectness: 0.0386 (0.0610)  loss_rpn_box_reg: 0.0444 (0.0640)  time: 0.6246 (0.7044)  data: 0.0003 (0.0188)  lr: 0.160000  max mem: 14740
INFO:maskrcnn_benchmark.trainer:eta: 2:15:35  iter: 6450  loss: 0.7385 (0.8709)  loss_classifier: 0.2481 (0.2975)  loss_box_reg: 0.1171 (0.1323)  loss_mask: 0.2721 (0.3156)  loss_objectness: 0.0407 (0.0612)  loss_rpn_box_reg: 0.0463 (0.0643)  time: 0.6246 (0.7044)  data: 0.0004 (0.0188)  lr: 0.160000  max mem: 14714
2021-10-16 12:54:13,898 maskrcnn_benchmark.trainer INFO: eta: 2:15:35  iter: 6450  loss: 0.7300 (0.8712)  loss_classifier: 0.2523 (0.2979)  loss_box_reg: 0.1144 (0.1326)  loss_mask: 0.2827 (0.3149)  loss_objectness: 0.0421 (0.0613)  loss_rpn_box_reg: 0.0542 (0.0645)  time: 0.6240 (0.7044)  data: 0.0004 (0.0190)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:15:35  iter: 6450  loss: 0.7300 (0.8712)  loss_classifier: 0.2523 (0.2979)  loss_box_reg: 0.1144 (0.1326)  loss_mask: 0.2827 (0.3149)  loss_objectness: 0.0421 (0.0613)  loss_rpn_box_reg: 0.0542 (0.0645)  time: 0.6240 (0.7044)  data: 0.0004 (0.0190)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634388853898, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8712121151260628, "loss_classifier": 0.2979354843092981, "loss_box_reg": 0.13255660838220096, "loss_mask": 0.3148819309935089, "loss_objectness": 0.06132037892388974, "loss_rpn_box_reg": 0.06451771283276783, "time": 0.704362026998239, "data": 0.019022036264109057, "throughput": 181.7247311662927}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 6450}}
:::MLLOG {"namespace": "", "time_ms": 1634388853898, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 181.7247311662927, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:15:35  iter: 6450  loss: 0.7377 (0.8680)  loss_classifier: 0.2568 (0.2966)  loss_box_reg: 0.1114 (0.1317)  loss_mask: 0.2722 (0.3146)  loss_objectness: 0.0448 (0.0610)  loss_rpn_box_reg: 0.0568 (0.0640)  time: 0.6224 (0.7044)  data: 0.0004 (0.0188)  lr: 0.160000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 2:15:35  iter: 6450  loss: 0.7015 (0.8680)  loss_classifier: 0.2329 (0.2967)  loss_box_reg: 0.1012 (0.1319)  loss_mask: 0.2726 (0.3145)  loss_objectness: 0.0395 (0.0609)  loss_rpn_box_reg: 0.0504 (0.0640)  time: 0.6237 (0.7044)  data: 0.0003 (0.0188)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 2:15:35  iter: 6450  loss: 0.7071 (0.8674)  loss_classifier: 0.2422 (0.2964)  loss_box_reg: 0.1120 (0.1317)  loss_mask: 0.2778 (0.3149)  loss_objectness: 0.0356 (0.0607)  loss_rpn_box_reg: 0.0448 (0.0638)  time: 0.6215 (0.7044)  data: 0.0003 (0.0188)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 2:15:35  iter: 6450  loss: 0.7718 (0.8695)  loss_classifier: 0.2617 (0.2974)  loss_box_reg: 0.1190 (0.1326)  loss_mask: 0.2821 (0.3147)  loss_objectness: 0.0366 (0.0607)  loss_rpn_box_reg: 0.0506 (0.0640)  time: 0.6211 (0.7044)  data: 0.0004 (0.0188)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 2:15:35  iter: 6450  loss: 0.7981 (0.8707)  loss_classifier: 0.2654 (0.2974)  loss_box_reg: 0.1189 (0.1323)  loss_mask: 0.2851 (0.3151)  loss_objectness: 0.0457 (0.0617)  loss_rpn_box_reg: 0.0573 (0.0641)  time: 0.6222 (0.7044)  data: 0.0004 (0.0188)  lr: 0.160000  max mem: 14656
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.166s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.167s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.168s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.168s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.169s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.169s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.171s
2021-10-16 12:54:14,071 maskrcnn_benchmark.timed_section INFO: EXPOSED: Launching evaluation task took 0.171s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.171s
Evaluating predictions
Loading and preparing results...
resFile is ./inference/coco_2017_val/segm.json
Loading and preparing results...
resFile is ./inference/coco_2017_val/bbox.json
DONE (t=1.82s)
DONE (t=0.88s)
Running per image evaluation...
Evaluate annotation type *segm*
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=1.91s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.29824
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.50111
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.31996
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.15509
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.32646
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.38610
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.26847
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.42827
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.44913
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.25779
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.48886
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.56264
DONE (t=2.79s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.28372
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.47454
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.29898
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.11483
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.30604
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.41379
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.26001
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.40291
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.42021
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.22043
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.46169
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.55130
2021-10-16 12:54:26,716 maskrcnn_benchmark.trainer INFO: bbox mAP: 0.29823517787270454, segm mAP: 0.28372087966902765
INFO:maskrcnn_benchmark.trainer:bbox mAP: 0.29823517787270454, segm mAP: 0.28372087966902765
:::MLLOG {"namespace": "", "time_ms": 1634388866716, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": {"BBOX": 0.29823517787270454, "SEGM": 0.28372087966902765}, "metadata": {"file": "tools/train_mlperf.py", "lineno": 133, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1634388866716, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 134, "epoch_num": 7}}
INFO:maskrcnn_benchmark.trainer:eta: 2:14:53  iter: 6500  loss: 0.7439 (0.8671)  loss_classifier: 0.2607 (0.2964)  loss_box_reg: 0.1189 (0.1318)  loss_mask: 0.2747 (0.3142)  loss_objectness: 0.0435 (0.0607)  loss_rpn_box_reg: 0.0486 (0.0640)  time: 0.6236 (0.7038)  data: 0.0004 (0.0187)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 2:14:53  iter: 6500  loss: 0.7595 (0.8685)  loss_classifier: 0.2511 (0.2970)  loss_box_reg: 0.1177 (0.1324)  loss_mask: 0.2706 (0.3144)  loss_objectness: 0.0482 (0.0606)  loss_rpn_box_reg: 0.0575 (0.0640)  time: 0.6242 (0.7038)  data: 0.0004 (0.0187)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 2:14:53  iter: 6500  loss: 0.7162 (0.8697)  loss_classifier: 0.2348 (0.2971)  loss_box_reg: 0.1129 (0.1322)  loss_mask: 0.2743 (0.3148)  loss_objectness: 0.0409 (0.0616)  loss_rpn_box_reg: 0.0572 (0.0641)  time: 0.6241 (0.7038)  data: 0.0004 (0.0187)  lr: 0.160000  max mem: 14656
INFO:maskrcnn_benchmark.trainer:eta: 2:14:53  iter: 6500  loss: 0.6967 (0.8663)  loss_classifier: 0.2319 (0.2960)  loss_box_reg: 0.0999 (0.1316)  loss_mask: 0.2718 (0.3145)  loss_objectness: 0.0370 (0.0605)  loss_rpn_box_reg: 0.0501 (0.0637)  time: 0.6243 (0.7038)  data: 0.0003 (0.0187)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 2:14:53  iter: 6500  loss: 0.7585 (0.8671)  loss_classifier: 0.2364 (0.2963)  loss_box_reg: 0.1233 (0.1316)  loss_mask: 0.2812 (0.3143)  loss_objectness: 0.0409 (0.0609)  loss_rpn_box_reg: 0.0575 (0.0640)  time: 0.6246 (0.7038)  data: 0.0004 (0.0187)  lr: 0.160000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 2:14:53  iter: 6500  loss: 0.6892 (0.8698)  loss_classifier: 0.2298 (0.2971)  loss_box_reg: 0.1090 (0.1321)  loss_mask: 0.2644 (0.3153)  loss_objectness: 0.0367 (0.0610)  loss_rpn_box_reg: 0.0471 (0.0642)  time: 0.6243 (0.7038)  data: 0.0003 (0.0187)  lr: 0.160000  max mem: 14714
2021-10-16 12:54:45,413 maskrcnn_benchmark.trainer INFO: eta: 2:14:53  iter: 6500  loss: 0.7118 (0.8702)  loss_classifier: 0.2395 (0.2975)  loss_box_reg: 0.1091 (0.1324)  loss_mask: 0.2707 (0.3146)  loss_objectness: 0.0383 (0.0612)  loss_rpn_box_reg: 0.0542 (0.0645)  time: 0.6242 (0.7038)  data: 0.0003 (0.0189)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:14:53  iter: 6500  loss: 0.7555 (0.8684)  loss_classifier: 0.2373 (0.2965)  loss_box_reg: 0.1164 (0.1323)  loss_mask: 0.2787 (0.3148)  loss_objectness: 0.0442 (0.0609)  loss_rpn_box_reg: 0.0636 (0.0640)  time: 0.6242 (0.7038)  data: 0.0004 (0.0187)  lr: 0.160000  max mem: 14740
INFO:maskrcnn_benchmark.trainer:eta: 2:14:53  iter: 6500  loss: 0.7118 (0.8702)  loss_classifier: 0.2395 (0.2975)  loss_box_reg: 0.1091 (0.1324)  loss_mask: 0.2707 (0.3146)  loss_objectness: 0.0383 (0.0612)  loss_rpn_box_reg: 0.0542 (0.0645)  time: 0.6242 (0.7038)  data: 0.0003 (0.0189)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634388885413, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8702252835356272, "loss_classifier": 0.2975132212260595, "loss_box_reg": 0.132409862283868, "loss_mask": 0.3146127791381799, "loss_objectness": 0.06120196429095589, "loss_rpn_box_reg": 0.06448745689082604, "time": 0.7037923078536987, "data": 0.018920856585869422, "throughput": 181.87183714802418}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 6500}}
:::MLLOG {"namespace": "", "time_ms": 1634388885413, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 181.87183714802418, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:14:11  iter: 6550  loss: 0.6857 (0.8675)  loss_classifier: 0.2248 (0.2961)  loss_box_reg: 0.1095 (0.1321)  loss_mask: 0.2668 (0.3145)  loss_objectness: 0.0365 (0.0608)  loss_rpn_box_reg: 0.0502 (0.0639)  time: 0.6196 (0.7032)  data: 0.0003 (0.0186)  lr: 0.160000  max mem: 14740
INFO:maskrcnn_benchmark.trainer:eta: 2:14:11  iter: 6550  loss: 0.7842 (0.8692)  loss_classifier: 0.2580 (0.2969)  loss_box_reg: 0.1115 (0.1321)  loss_mask: 0.2966 (0.3150)  loss_objectness: 0.0422 (0.0610)  loss_rpn_box_reg: 0.0613 (0.0642)  time: 0.6197 (0.7032)  data: 0.0004 (0.0185)  lr: 0.160000  max mem: 14714
2021-10-16 12:55:16,548 maskrcnn_benchmark.trainer INFO: eta: 2:14:11  iter: 6550  loss: 0.7564 (0.8694)  loss_classifier: 0.2422 (0.2972)  loss_box_reg: 0.1202 (0.1323)  loss_mask: 0.2834 (0.3143)  loss_objectness: 0.0427 (0.0611)  loss_rpn_box_reg: 0.0569 (0.0644)  time: 0.6197 (0.7032)  data: 0.0003 (0.0188)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:14:11  iter: 6550  loss: 0.7564 (0.8694)  loss_classifier: 0.2422 (0.2972)  loss_box_reg: 0.1202 (0.1323)  loss_mask: 0.2834 (0.3143)  loss_objectness: 0.0427 (0.0611)  loss_rpn_box_reg: 0.0569 (0.0644)  time: 0.6197 (0.7032)  data: 0.0003 (0.0188)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634388916548, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8693828758074127, "loss_classifier": 0.297179864771266, "loss_box_reg": 0.13232340421780006, "loss_mask": 0.3143480827676431, "loss_objectness": 0.0610956760848524, "loss_rpn_box_reg": 0.06443584832241972, "time": 0.7031732347721362, "data": 0.018779519132075418, "throughput": 182.03195694938316}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 6550}}
:::MLLOG {"namespace": "", "time_ms": 1634388916548, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 182.03195694938316, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:14:11  iter: 6550  loss: 0.7514 (0.8662)  loss_classifier: 0.2461 (0.2959)  loss_box_reg: 0.1092 (0.1315)  loss_mask: 0.2782 (0.3140)  loss_objectness: 0.0447 (0.0608)  loss_rpn_box_reg: 0.0547 (0.0639)  time: 0.6200 (0.7032)  data: 0.0004 (0.0186)  lr: 0.160000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 2:14:11  iter: 6550  loss: 0.6780 (0.8661)  loss_classifier: 0.2092 (0.2960)  loss_box_reg: 0.1038 (0.1317)  loss_mask: 0.2758 (0.3139)  loss_objectness: 0.0322 (0.0606)  loss_rpn_box_reg: 0.0357 (0.0639)  time: 0.6200 (0.7032)  data: 0.0003 (0.0186)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 2:14:11  iter: 6550  loss: 0.7099 (0.8650)  loss_classifier: 0.2308 (0.2955)  loss_box_reg: 0.1057 (0.1314)  loss_mask: 0.2648 (0.3142)  loss_objectness: 0.0330 (0.0604)  loss_rpn_box_reg: 0.0371 (0.0636)  time: 0.6213 (0.7032)  data: 0.0003 (0.0186)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 2:14:11  iter: 6550  loss: 0.7194 (0.8686)  loss_classifier: 0.2432 (0.2967)  loss_box_reg: 0.1087 (0.1321)  loss_mask: 0.2677 (0.3145)  loss_objectness: 0.0347 (0.0614)  loss_rpn_box_reg: 0.0462 (0.0640)  time: 0.6210 (0.7032)  data: 0.0003 (0.0186)  lr: 0.160000  max mem: 14656
INFO:maskrcnn_benchmark.trainer:eta: 2:14:11  iter: 6550  loss: 0.7264 (0.8676)  loss_classifier: 0.2449 (0.2967)  loss_box_reg: 0.1075 (0.1323)  loss_mask: 0.2606 (0.3141)  loss_objectness: 0.0434 (0.0605)  loss_rpn_box_reg: 0.0493 (0.0639)  time: 0.6212 (0.7032)  data: 0.0003 (0.0186)  lr: 0.160000  max mem: 14683
INFO:maskrcnn_benchmark.trainer:eta: 2:13:29  iter: 6600  loss: 0.7684 (0.8641)  loss_classifier: 0.2401 (0.2951)  loss_box_reg: 0.1203 (0.1313)  loss_mask: 0.2825 (0.3139)  loss_objectness: 0.0400 (0.0602)  loss_rpn_box_reg: 0.0462 (0.0635)  time: 0.6256 (0.7026)  data: 0.0003 (0.0184)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 2:13:29  iter: 6600  loss: 0.7209 (0.8666)  loss_classifier: 0.2310 (0.2963)  loss_box_reg: 0.1173 (0.1322)  loss_mask: 0.2846 (0.3138)  loss_objectness: 0.0397 (0.0604)  loss_rpn_box_reg: 0.0523 (0.0639)  time: 0.6255 (0.7026)  data: 0.0003 (0.0184)  lr: 0.160000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 2:13:29  iter: 6600  loss: 0.7383 (0.8677)  loss_classifier: 0.2551 (0.2963)  loss_box_reg: 0.1208 (0.1320)  loss_mask: 0.2881 (0.3142)  loss_objectness: 0.0409 (0.0613)  loss_rpn_box_reg: 0.0433 (0.0639)  time: 0.6254 (0.7026)  data: 0.0004 (0.0184)  lr: 0.160000  max mem: 14656
INFO:maskrcnn_benchmark.trainer:eta: 2:13:29  iter: 6600  loss: 0.7346 (0.8653)  loss_classifier: 0.2562 (0.2955)  loss_box_reg: 0.1169 (0.1314)  loss_mask: 0.2745 (0.3138)  loss_objectness: 0.0395 (0.0607)  loss_rpn_box_reg: 0.0589 (0.0639)  time: 0.6244 (0.7026)  data: 0.0004 (0.0185)  lr: 0.160000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 2:13:29  iter: 6600  loss: 0.7296 (0.8652)  loss_classifier: 0.2333 (0.2957)  loss_box_reg: 0.1156 (0.1315)  loss_mask: 0.2837 (0.3136)  loss_objectness: 0.0356 (0.0605)  loss_rpn_box_reg: 0.0532 (0.0639)  time: 0.6242 (0.7026)  data: 0.0004 (0.0185)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 2:13:29  iter: 6600  loss: 0.7042 (0.8681)  loss_classifier: 0.2408 (0.2965)  loss_box_reg: 0.1143 (0.1319)  loss_mask: 0.2704 (0.3147)  loss_objectness: 0.0407 (0.0608)  loss_rpn_box_reg: 0.0537 (0.0642)  time: 0.6238 (0.7026)  data: 0.0003 (0.0184)  lr: 0.160000  max mem: 14714
2021-10-16 12:55:47,775 maskrcnn_benchmark.trainer INFO: eta: 2:13:29  iter: 6600  loss: 0.7388 (0.8685)  loss_classifier: 0.2601 (0.2969)  loss_box_reg: 0.1081 (0.1322)  loss_mask: 0.2763 (0.3141)  loss_objectness: 0.0397 (0.0610)  loss_rpn_box_reg: 0.0478 (0.0644)  time: 0.6238 (0.7026)  data: 0.0003 (0.0186)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:13:29  iter: 6600  loss: 0.7388 (0.8685)  loss_classifier: 0.2601 (0.2969)  loss_box_reg: 0.1081 (0.1322)  loss_mask: 0.2763 (0.3141)  loss_objectness: 0.0397 (0.0610)  loss_rpn_box_reg: 0.0478 (0.0644)  time: 0.6238 (0.7026)  data: 0.0003 (0.0186)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:13:29  iter: 6600  loss: 0.7118 (0.8665)  loss_classifier: 0.2374 (0.2957)  loss_box_reg: 0.1168 (0.1320)  loss_mask: 0.2689 (0.3142)  loss_objectness: 0.0407 (0.0607)  loss_rpn_box_reg: 0.0536 (0.0638)  time: 0.6239 (0.7026)  data: 0.0004 (0.0184)  lr: 0.160000  max mem: 14740
:::MLLOG {"namespace": "", "time_ms": 1634388947775, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8685266320678321, "loss_classifier": 0.29685985420125, "loss_box_reg": 0.1322194276258674, "loss_mask": 0.31407572635195474, "loss_objectness": 0.060984236984654806, "loss_rpn_box_reg": 0.06438738728280771, "time": 0.7025775396823883, "data": 0.01864063768675833, "throughput": 182.18629655861827}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 6600}}
:::MLLOG {"namespace": "", "time_ms": 1634388947775, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 182.18629655861827, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:12:47  iter: 6650  loss: 0.7741 (0.8644)  loss_classifier: 0.2610 (0.2952)  loss_box_reg: 0.1186 (0.1313)  loss_mask: 0.2734 (0.3135)  loss_objectness: 0.0435 (0.0605)  loss_rpn_box_reg: 0.0542 (0.0638)  time: 0.6221 (0.7020)  data: 0.0004 (0.0183)  lr: 0.160000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 2:12:47  iter: 6650  loss: 0.7749 (0.8643)  loss_classifier: 0.2484 (0.2953)  loss_box_reg: 0.1275 (0.1314)  loss_mask: 0.2837 (0.3134)  loss_objectness: 0.0371 (0.0604)  loss_rpn_box_reg: 0.0504 (0.0638)  time: 0.6230 (0.7020)  data: 0.0004 (0.0183)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 2:12:47  iter: 6650  loss: 0.7128 (0.8667)  loss_classifier: 0.2378 (0.2959)  loss_box_reg: 0.1174 (0.1319)  loss_mask: 0.2729 (0.3139)  loss_objectness: 0.0424 (0.0612)  loss_rpn_box_reg: 0.0482 (0.0639)  time: 0.6244 (0.7020)  data: 0.0003 (0.0183)  lr: 0.160000  max mem: 14656
INFO:maskrcnn_benchmark.trainer:eta: 2:12:47  iter: 6650  loss: 0.7328 (0.8634)  loss_classifier: 0.2548 (0.2949)  loss_box_reg: 0.1169 (0.1312)  loss_mask: 0.2768 (0.3137)  loss_objectness: 0.0396 (0.0601)  loss_rpn_box_reg: 0.0401 (0.0635)  time: 0.6245 (0.7020)  data: 0.0004 (0.0183)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 2:12:47  iter: 6650  loss: 0.7764 (0.8658)  loss_classifier: 0.2617 (0.2960)  loss_box_reg: 0.1231 (0.1321)  loss_mask: 0.2738 (0.3135)  loss_objectness: 0.0447 (0.0603)  loss_rpn_box_reg: 0.0547 (0.0639)  time: 0.6242 (0.7020)  data: 0.0004 (0.0183)  lr: 0.160000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 2:12:47  iter: 6650  loss: 0.7333 (0.8654)  loss_classifier: 0.2424 (0.2954)  loss_box_reg: 0.1129 (0.1319)  loss_mask: 0.2822 (0.3139)  loss_objectness: 0.0413 (0.0605)  loss_rpn_box_reg: 0.0493 (0.0638)  time: 0.6228 (0.7020)  data: 0.0004 (0.0183)  lr: 0.160000  max mem: 14740
INFO:maskrcnn_benchmark.trainer:eta: 2:12:47  iter: 6650  loss: 0.7754 (0.8673)  loss_classifier: 0.2688 (0.2962)  loss_box_reg: 0.1209 (0.1318)  loss_mask: 0.2742 (0.3144)  loss_objectness: 0.0356 (0.0607)  loss_rpn_box_reg: 0.0526 (0.0641)  time: 0.6227 (0.7020)  data: 0.0004 (0.0183)  lr: 0.160000  max mem: 14714
2021-10-16 12:56:19,002 maskrcnn_benchmark.trainer INFO: eta: 2:12:47  iter: 6650  loss: 0.7434 (0.8677)  loss_classifier: 0.2419 (0.2965)  loss_box_reg: 0.1109 (0.1321)  loss_mask: 0.2699 (0.3138)  loss_objectness: 0.0509 (0.0609)  loss_rpn_box_reg: 0.0517 (0.0644)  time: 0.6227 (0.7020)  data: 0.0003 (0.0185)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:12:47  iter: 6650  loss: 0.7434 (0.8677)  loss_classifier: 0.2419 (0.2965)  loss_box_reg: 0.1109 (0.1321)  loss_mask: 0.2699 (0.3138)  loss_objectness: 0.0509 (0.0609)  loss_rpn_box_reg: 0.0517 (0.0644)  time: 0.6227 (0.7020)  data: 0.0003 (0.0185)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634388979002, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8677113043768961, "loss_classifier": 0.29652291607923975, "loss_box_reg": 0.1321143820528571, "loss_mask": 0.31380568537048825, "loss_objectness": 0.06090132627552165, "loss_rpn_box_reg": 0.06436699500153388, "time": 0.7019907632268461, "data": 0.018503965937105335, "throughput": 182.3385815101348}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 6650}}
:::MLLOG {"namespace": "", "time_ms": 1634388979002, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 182.3385815101348, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:12:06  iter: 6700  loss: 0.7070 (0.8634)  loss_classifier: 0.2236 (0.2948)  loss_box_reg: 0.1074 (0.1312)  loss_mask: 0.2679 (0.3132)  loss_objectness: 0.0406 (0.0604)  loss_rpn_box_reg: 0.0492 (0.0637)  time: 0.6244 (0.7014)  data: 0.0003 (0.0182)  lr: 0.160000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 2:12:06  iter: 6700  loss: 0.7011 (0.8633)  loss_classifier: 0.2250 (0.2949)  loss_box_reg: 0.1099 (0.1313)  loss_mask: 0.2688 (0.3131)  loss_objectness: 0.0370 (0.0602)  loss_rpn_box_reg: 0.0397 (0.0637)  time: 0.6240 (0.7014)  data: 0.0003 (0.0182)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 2:12:06  iter: 6700  loss: 0.7043 (0.8664)  loss_classifier: 0.2352 (0.2958)  loss_box_reg: 0.1080 (0.1317)  loss_mask: 0.2682 (0.3142)  loss_objectness: 0.0387 (0.0606)  loss_rpn_box_reg: 0.0512 (0.0641)  time: 0.6243 (0.7014)  data: 0.0003 (0.0181)  lr: 0.160000  max mem: 14714
2021-10-16 12:56:50,230 maskrcnn_benchmark.trainer INFO: eta: 2:12:05  iter: 6700  loss: 0.7541 (0.8669)  loss_classifier: 0.2433 (0.2962)  loss_box_reg: 0.1103 (0.1320)  loss_mask: 0.2722 (0.3135)  loss_objectness: 0.0445 (0.0608)  loss_rpn_box_reg: 0.0557 (0.0643)  time: 0.6244 (0.7014)  data: 0.0004 (0.0184)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:12:05  iter: 6700  loss: 0.7541 (0.8669)  loss_classifier: 0.2433 (0.2962)  loss_box_reg: 0.1103 (0.1320)  loss_mask: 0.2722 (0.3135)  loss_objectness: 0.0445 (0.0608)  loss_rpn_box_reg: 0.0557 (0.0643)  time: 0.6244 (0.7014)  data: 0.0004 (0.0184)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:12:06  iter: 6700  loss: 0.7340 (0.8646)  loss_classifier: 0.2327 (0.2951)  loss_box_reg: 0.1111 (0.1318)  loss_mask: 0.2761 (0.3136)  loss_objectness: 0.0365 (0.0604)  loss_rpn_box_reg: 0.0532 (0.0638)  time: 0.6241 (0.7014)  data: 0.0004 (0.0182)  lr: 0.160000  max mem: 14740
INFO:maskrcnn_benchmark.trainer:eta: 2:12:06  iter: 6700  loss: 0.7491 (0.8625)  loss_classifier: 0.2550 (0.2945)  loss_box_reg: 0.1217 (0.1311)  loss_mask: 0.2755 (0.3134)  loss_objectness: 0.0460 (0.0600)  loss_rpn_box_reg: 0.0492 (0.0635)  time: 0.6229 (0.7014)  data: 0.0004 (0.0182)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 2:12:05  iter: 6700  loss: 0.7214 (0.8649)  loss_classifier: 0.2390 (0.2956)  loss_box_reg: 0.1133 (0.1320)  loss_mask: 0.2709 (0.3133)  loss_objectness: 0.0380 (0.0601)  loss_rpn_box_reg: 0.0592 (0.0638)  time: 0.6230 (0.7014)  data: 0.0003 (0.0182)  lr: 0.160000  max mem: 14803
:::MLLOG {"namespace": "", "time_ms": 1634389010230, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8669319543420378, "loss_classifier": 0.29623778524349875, "loss_box_reg": 0.13203746444417108, "loss_mask": 0.31354438721688827, "loss_objectness": 0.060787726207844804, "loss_rpn_box_reg": 0.06432459163827016, "time": 0.7014129179982996, "data": 0.018368961561971636, "throughput": 182.48879756205216}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 6700}}
INFO:maskrcnn_benchmark.trainer:eta: 2:12:05  iter: 6700  loss: 0.7577 (0.8657)  loss_classifier: 0.2690 (0.2956)  loss_box_reg: 0.1316 (0.1317)  loss_mask: 0.2747 (0.3136)  loss_objectness: 0.0392 (0.0610)  loss_rpn_box_reg: 0.0495 (0.0638)  time: 0.6228 (0.7014)  data: 0.0004 (0.0182)  lr: 0.160000  max mem: 14656
:::MLLOG {"namespace": "", "time_ms": 1634389010230, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 182.48879756205216, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:11:24  iter: 6750  loss: 0.7272 (0.8624)  loss_classifier: 0.2484 (0.2945)  loss_box_reg: 0.1100 (0.1311)  loss_mask: 0.2698 (0.3129)  loss_objectness: 0.0402 (0.0602)  loss_rpn_box_reg: 0.0600 (0.0637)  time: 0.6245 (0.7009)  data: 0.0004 (0.0181)  lr: 0.160000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 2:11:24  iter: 6750  loss: 0.7844 (0.8625)  loss_classifier: 0.2581 (0.2947)  loss_box_reg: 0.1193 (0.1312)  loss_mask: 0.2783 (0.3128)  loss_objectness: 0.0359 (0.0601)  loss_rpn_box_reg: 0.0511 (0.0637)  time: 0.6250 (0.7009)  data: 0.0004 (0.0181)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 2:11:24  iter: 6750  loss: 0.7519 (0.8637)  loss_classifier: 0.2482 (0.2947)  loss_box_reg: 0.1165 (0.1317)  loss_mask: 0.2840 (0.3133)  loss_objectness: 0.0372 (0.0603)  loss_rpn_box_reg: 0.0495 (0.0637)  time: 0.6249 (0.7009)  data: 0.0003 (0.0180)  lr: 0.160000  max mem: 14740
INFO:maskrcnn_benchmark.trainer:eta: 2:11:24  iter: 6750  loss: 0.6467 (0.8616)  loss_classifier: 0.2105 (0.2942)  loss_box_reg: 0.1072 (0.1310)  loss_mask: 0.2741 (0.3132)  loss_objectness: 0.0327 (0.0599)  loss_rpn_box_reg: 0.0452 (0.0634)  time: 0.6250 (0.7009)  data: 0.0003 (0.0180)  lr: 0.160000  max mem: 15034
2021-10-16 12:57:21,499 maskrcnn_benchmark.trainer INFO: eta: 2:11:24  iter: 6750  loss: 0.7356 (0.8659)  loss_classifier: 0.2513 (0.2959)  loss_box_reg: 0.1111 (0.1319)  loss_mask: 0.2815 (0.3133)  loss_objectness: 0.0362 (0.0606)  loss_rpn_box_reg: 0.0464 (0.0642)  time: 0.6250 (0.7008)  data: 0.0003 (0.0182)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:11:24  iter: 6750  loss: 0.7521 (0.8651)  loss_classifier: 0.2494 (0.2953)  loss_box_reg: 0.1267 (0.1317)  loss_mask: 0.2821 (0.3134)  loss_objectness: 0.0532 (0.0609)  loss_rpn_box_reg: 0.0590 (0.0638)  time: 0.6249 (0.7008)  data: 0.0004 (0.0180)  lr: 0.160000  max mem: 14656
INFO:maskrcnn_benchmark.trainer:eta: 2:11:24  iter: 6750  loss: 0.7416 (0.8657)  loss_classifier: 0.2522 (0.2955)  loss_box_reg: 0.1200 (0.1317)  loss_mask: 0.2804 (0.3139)  loss_objectness: 0.0379 (0.0605)  loss_rpn_box_reg: 0.0565 (0.0641)  time: 0.6252 (0.7009)  data: 0.0003 (0.0180)  lr: 0.160000  max mem: 14714
INFO:maskrcnn_benchmark.trainer:eta: 2:11:24  iter: 6750  loss: 0.7170 (0.8640)  loss_classifier: 0.2438 (0.2953)  loss_box_reg: 0.1078 (0.1319)  loss_mask: 0.2757 (0.3130)  loss_objectness: 0.0407 (0.0600)  loss_rpn_box_reg: 0.0436 (0.0638)  time: 0.6250 (0.7008)  data: 0.0004 (0.0180)  lr: 0.160000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 2:11:24  iter: 6750  loss: 0.7356 (0.8659)  loss_classifier: 0.2513 (0.2959)  loss_box_reg: 0.1111 (0.1319)  loss_mask: 0.2815 (0.3133)  loss_objectness: 0.0362 (0.0606)  loss_rpn_box_reg: 0.0464 (0.0642)  time: 0.6250 (0.7008)  data: 0.0003 (0.0182)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634389041499, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.865920185552703, "loss_classifier": 0.29588499872662405, "loss_box_reg": 0.13191384940839337, "loss_mask": 0.3132547165950139, "loss_objectness": 0.060634594146576196, "loss_rpn_box_reg": 0.06423202710184786, "time": 0.7008497727358782, "data": 0.01823644115306713, "throughput": 182.6354305578665}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 6750}}
:::MLLOG {"namespace": "", "time_ms": 1634389041499, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 182.6354305578665, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:10:43  iter: 6800  loss: 0.7118 (0.8607)  loss_classifier: 0.2385 (0.2938)  loss_box_reg: 0.1048 (0.1309)  loss_mask: 0.2741 (0.3129)  loss_objectness: 0.0422 (0.0598)  loss_rpn_box_reg: 0.0480 (0.0634)  time: 0.6264 (0.7003)  data: 0.0004 (0.0179)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 2:10:43  iter: 6800  loss: 0.7504 (0.8641)  loss_classifier: 0.2606 (0.2949)  loss_box_reg: 0.1210 (0.1315)  loss_mask: 0.2790 (0.3131)  loss_objectness: 0.0408 (0.0608)  loss_rpn_box_reg: 0.0533 (0.0638)  time: 0.6264 (0.7003)  data: 0.0004 (0.0179)  lr: 0.160000  max mem: 14656
INFO:maskrcnn_benchmark.trainer:eta: 2:10:43  iter: 6800  loss: 0.7547 (0.8631)  loss_classifier: 0.2523 (0.2949)  loss_box_reg: 0.1168 (0.1318)  loss_mask: 0.2833 (0.3128)  loss_objectness: 0.0430 (0.0599)  loss_rpn_box_reg: 0.0616 (0.0637)  time: 0.6264 (0.7003)  data: 0.0004 (0.0179)  lr: 0.160000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 2:10:43  iter: 6800  loss: 0.7328 (0.8617)  loss_classifier: 0.2532 (0.2943)  loss_box_reg: 0.1158 (0.1311)  loss_mask: 0.2604 (0.3125)  loss_objectness: 0.0406 (0.0600)  loss_rpn_box_reg: 0.0567 (0.0637)  time: 0.6267 (0.7003)  data: 0.0004 (0.0179)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 2:10:43  iter: 6800  loss: 0.7039 (0.8616)  loss_classifier: 0.2340 (0.2941)  loss_box_reg: 0.1072 (0.1310)  loss_mask: 0.2803 (0.3127)  loss_objectness: 0.0371 (0.0601)  loss_rpn_box_reg: 0.0527 (0.0637)  time: 0.6262 (0.7003)  data: 0.0004 (0.0179)  lr: 0.160000  max mem: 14673
2021-10-16 12:57:52,739 maskrcnn_benchmark.trainer INFO: eta: 2:10:43  iter: 6800  loss: 0.7425 (0.8650)  loss_classifier: 0.2443 (0.2955)  loss_box_reg: 0.1082 (0.1318)  loss_mask: 0.2681 (0.3130)  loss_objectness: 0.0435 (0.0605)  loss_rpn_box_reg: 0.0549 (0.0642)  time: 0.6249 (0.7003)  data: 0.0003 (0.0181)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:10:43  iter: 6800  loss: 0.7524 (0.8627)  loss_classifier: 0.2548 (0.2944)  loss_box_reg: 0.1103 (0.1315)  loss_mask: 0.2709 (0.3131)  loss_objectness: 0.0403 (0.0602)  loss_rpn_box_reg: 0.0454 (0.0636)  time: 0.6250 (0.7003)  data: 0.0004 (0.0179)  lr: 0.160000  max mem: 14740
INFO:maskrcnn_benchmark.trainer:eta: 2:10:43  iter: 6800  loss: 0.7392 (0.8647)  loss_classifier: 0.2557 (0.2952)  loss_box_reg: 0.1210 (0.1315)  loss_mask: 0.2721 (0.3136)  loss_objectness: 0.0441 (0.0603)  loss_rpn_box_reg: 0.0644 (0.0641)  time: 0.6249 (0.7003)  data: 0.0004 (0.0179)  lr: 0.160000  max mem: 14714
INFO:maskrcnn_benchmark.trainer:eta: 2:10:43  iter: 6800  loss: 0.7425 (0.8650)  loss_classifier: 0.2443 (0.2955)  loss_box_reg: 0.1082 (0.1318)  loss_mask: 0.2681 (0.3130)  loss_objectness: 0.0435 (0.0605)  loss_rpn_box_reg: 0.0549 (0.0642)  time: 0.6249 (0.7003)  data: 0.0003 (0.0181)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634389072739, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8649854301091503, "loss_classifier": 0.2955152103797916, "loss_box_reg": 0.1317977160121903, "loss_mask": 0.31297337038332923, "loss_objectness": 0.06050952356089564, "loss_rpn_box_reg": 0.06418961019912625, "time": 0.700290553078932, "data": 0.018105834862765145, "throughput": 182.78127476834993}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 6800}}
:::MLLOG {"namespace": "", "time_ms": 1634389072739, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 182.78127476834993, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:10:01  iter: 6850  loss: 0.7458 (0.8608)  loss_classifier: 0.2376 (0.2940)  loss_box_reg: 0.1081 (0.1310)  loss_mask: 0.2715 (0.3123)  loss_objectness: 0.0437 (0.0600)  loss_rpn_box_reg: 0.0469 (0.0636)  time: 0.6220 (0.6997)  data: 0.0004 (0.0178)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 2:10:01  iter: 6850  loss: 0.6812 (0.8618)  loss_classifier: 0.2208 (0.2940)  loss_box_reg: 0.0969 (0.1314)  loss_mask: 0.2663 (0.3128)  loss_objectness: 0.0390 (0.0600)  loss_rpn_box_reg: 0.0416 (0.0636)  time: 0.6204 (0.6997)  data: 0.0003 (0.0178)  lr: 0.160000  max mem: 14740
2021-10-16 12:58:23,875 maskrcnn_benchmark.trainer INFO: eta: 2:10:01  iter: 6850  loss: 0.7583 (0.8642)  loss_classifier: 0.2464 (0.2952)  loss_box_reg: 0.1195 (0.1317)  loss_mask: 0.2781 (0.3127)  loss_objectness: 0.0458 (0.0604)  loss_rpn_box_reg: 0.0599 (0.0641)  time: 0.6205 (0.6997)  data: 0.0004 (0.0180)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:10:02  iter: 6850  loss: 0.7788 (0.8637)  loss_classifier: 0.2592 (0.2948)  loss_box_reg: 0.1156 (0.1314)  loss_mask: 0.2671 (0.3133)  loss_objectness: 0.0496 (0.0602)  loss_rpn_box_reg: 0.0533 (0.0640)  time: 0.6204 (0.6997)  data: 0.0004 (0.0178)  lr: 0.160000  max mem: 14714
INFO:maskrcnn_benchmark.trainer:eta: 2:10:01  iter: 6850  loss: 0.7583 (0.8642)  loss_classifier: 0.2464 (0.2952)  loss_box_reg: 0.1195 (0.1317)  loss_mask: 0.2781 (0.3127)  loss_objectness: 0.0458 (0.0604)  loss_rpn_box_reg: 0.0599 (0.0641)  time: 0.6205 (0.6997)  data: 0.0004 (0.0180)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:10:02  iter: 6850  loss: 0.6891 (0.8607)  loss_classifier: 0.2206 (0.2938)  loss_box_reg: 0.1002 (0.1308)  loss_mask: 0.2738 (0.3125)  loss_objectness: 0.0399 (0.0600)  loss_rpn_box_reg: 0.0450 (0.0636)  time: 0.6215 (0.6997)  data: 0.0003 (0.0178)  lr: 0.160000  max mem: 14673
:::MLLOG {"namespace": "", "time_ms": 1634389103875, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8641941797298236, "loss_classifier": 0.29519832366248117, "loss_box_reg": 0.13170051744109168, "loss_mask": 0.31272660304160016, "loss_objectness": 0.06042036688213583, "loss_rpn_box_reg": 0.06414836917969867, "time": 0.699724355266042, "data": 0.017976926191009743, "throughput": 182.92917637736528}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 6850}}
:::MLLOG {"namespace": "", "time_ms": 1634389103875, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 182.92917637736528, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:10:01  iter: 6850  loss: 0.7594 (0.8599)  loss_classifier: 0.2586 (0.2935)  loss_box_reg: 0.1048 (0.1308)  loss_mask: 0.2769 (0.3127)  loss_objectness: 0.0463 (0.0597)  loss_rpn_box_reg: 0.0442 (0.0633)  time: 0.6222 (0.6997)  data: 0.0004 (0.0178)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 2:10:01  iter: 6850  loss: 0.6932 (0.8632)  loss_classifier: 0.2353 (0.2946)  loss_box_reg: 0.1055 (0.1314)  loss_mask: 0.2667 (0.3128)  loss_objectness: 0.0368 (0.0607)  loss_rpn_box_reg: 0.0463 (0.0637)  time: 0.6222 (0.6997)  data: 0.0003 (0.0178)  lr: 0.160000  max mem: 14656
INFO:maskrcnn_benchmark.trainer:eta: 2:10:01  iter: 6850  loss: 0.7573 (0.8622)  loss_classifier: 0.2373 (0.2945)  loss_box_reg: 0.1111 (0.1317)  loss_mask: 0.2801 (0.3125)  loss_objectness: 0.0472 (0.0598)  loss_rpn_box_reg: 0.0630 (0.0637)  time: 0.6221 (0.6997)  data: 0.0004 (0.0178)  lr: 0.160000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 2:09:21  iter: 6900  loss: 0.7368 (0.8628)  loss_classifier: 0.2457 (0.2944)  loss_box_reg: 0.1187 (0.1313)  loss_mask: 0.2777 (0.3131)  loss_objectness: 0.0422 (0.0601)  loss_rpn_box_reg: 0.0553 (0.0640)  time: 0.6209 (0.6992)  data: 0.0003 (0.0176)  lr: 0.160000  max mem: 14714
INFO:maskrcnn_benchmark.trainer:eta: 2:09:20  iter: 6900  loss: 0.7761 (0.8612)  loss_classifier: 0.2660 (0.2938)  loss_box_reg: 0.1256 (0.1313)  loss_mask: 0.2937 (0.3125)  loss_objectness: 0.0418 (0.0600)  loss_rpn_box_reg: 0.0459 (0.0635)  time: 0.6207 (0.6992)  data: 0.0004 (0.0177)  lr: 0.160000  max mem: 14740
2021-10-16 12:58:55,120 maskrcnn_benchmark.trainer INFO: eta: 2:09:20  iter: 6900  loss: 0.7089 (0.8635)  loss_classifier: 0.2577 (0.2950)  loss_box_reg: 0.1166 (0.1316)  loss_mask: 0.2647 (0.3125)  loss_objectness: 0.0402 (0.0603)  loss_rpn_box_reg: 0.0514 (0.0641)  time: 0.6209 (0.6992)  data: 0.0004 (0.0178)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:09:20  iter: 6900  loss: 0.7089 (0.8635)  loss_classifier: 0.2577 (0.2950)  loss_box_reg: 0.1166 (0.1316)  loss_mask: 0.2647 (0.3125)  loss_objectness: 0.0402 (0.0603)  loss_rpn_box_reg: 0.0514 (0.0641)  time: 0.6209 (0.6992)  data: 0.0004 (0.0178)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634389135120, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.863477288989917, "loss_classifier": 0.29498673961754296, "loss_box_reg": 0.13161597373203604, "loss_mask": 0.3124682606238386, "loss_objectness": 0.06031654488754229, "loss_rpn_box_reg": 0.06408977059782416, "time": 0.6991821834315425, "data": 0.017849965371947357, "throughput": 183.07102645519942}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 6900}}
:::MLLOG {"namespace": "", "time_ms": 1634389135121, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 183.07102645519942, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:09:21  iter: 6900  loss: 0.7409 (0.8598)  loss_classifier: 0.2435 (0.2935)  loss_box_reg: 0.1094 (0.1307)  loss_mask: 0.2699 (0.3122)  loss_objectness: 0.0459 (0.0599)  loss_rpn_box_reg: 0.0608 (0.0635)  time: 0.6209 (0.6992)  data: 0.0003 (0.0177)  lr: 0.160000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 2:09:20  iter: 6900  loss: 0.7746 (0.8601)  loss_classifier: 0.2723 (0.2937)  loss_box_reg: 0.1232 (0.1309)  loss_mask: 0.2883 (0.3120)  loss_objectness: 0.0493 (0.0599)  loss_rpn_box_reg: 0.0599 (0.0636)  time: 0.6209 (0.6992)  data: 0.0004 (0.0177)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 2:09:20  iter: 6900  loss: 0.7281 (0.8624)  loss_classifier: 0.2460 (0.2943)  loss_box_reg: 0.1209 (0.1313)  loss_mask: 0.2747 (0.3125)  loss_objectness: 0.0424 (0.0605)  loss_rpn_box_reg: 0.0599 (0.0636)  time: 0.6214 (0.6992)  data: 0.0004 (0.0176)  lr: 0.160000  max mem: 14656
INFO:maskrcnn_benchmark.trainer:eta: 2:09:20  iter: 6900  loss: 0.7596 (0.8592)  loss_classifier: 0.2585 (0.2932)  loss_box_reg: 0.1078 (0.1307)  loss_mask: 0.2760 (0.3124)  loss_objectness: 0.0438 (0.0596)  loss_rpn_box_reg: 0.0490 (0.0632)  time: 0.6214 (0.6992)  data: 0.0003 (0.0177)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 2:09:20  iter: 6900  loss: 0.7606 (0.8616)  loss_classifier: 0.2621 (0.2943)  loss_box_reg: 0.1130 (0.1316)  loss_mask: 0.2866 (0.3123)  loss_objectness: 0.0423 (0.0597)  loss_rpn_box_reg: 0.0552 (0.0637)  time: 0.6214 (0.6992)  data: 0.0004 (0.0176)  lr: 0.160000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 2:08:40  iter: 6950  loss: 0.7464 (0.8590)  loss_classifier: 0.2594 (0.2933)  loss_box_reg: 0.1155 (0.1308)  loss_mask: 0.2718 (0.3117)  loss_objectness: 0.0431 (0.0597)  loss_rpn_box_reg: 0.0519 (0.0635)  time: 0.6223 (0.6986)  data: 0.0003 (0.0176)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 2:08:39  iter: 6950  loss: 0.7671 (0.8603)  loss_classifier: 0.2610 (0.2935)  loss_box_reg: 0.1220 (0.1312)  loss_mask: 0.2764 (0.3123)  loss_objectness: 0.0363 (0.0598)  loss_rpn_box_reg: 0.0480 (0.0635)  time: 0.6221 (0.6986)  data: 0.0004 (0.0175)  lr: 0.160000  max mem: 14843
2021-10-16 12:59:26,293 maskrcnn_benchmark.trainer INFO: eta: 2:08:39  iter: 6950  loss: 0.7483 (0.8626)  loss_classifier: 0.2490 (0.2947)  loss_box_reg: 0.1205 (0.1315)  loss_mask: 0.2759 (0.3122)  loss_objectness: 0.0396 (0.0602)  loss_rpn_box_reg: 0.0504 (0.0640)  time: 0.6219 (0.6986)  data: 0.0003 (0.0177)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:08:40  iter: 6950  loss: 0.7270 (0.8619)  loss_classifier: 0.2392 (0.2941)  loss_box_reg: 0.1124 (0.1312)  loss_mask: 0.2821 (0.3128)  loss_objectness: 0.0403 (0.0600)  loss_rpn_box_reg: 0.0472 (0.0639)  time: 0.6219 (0.6986)  data: 0.0003 (0.0175)  lr: 0.160000  max mem: 14714
INFO:maskrcnn_benchmark.trainer:eta: 2:08:39  iter: 6950  loss: 0.7483 (0.8626)  loss_classifier: 0.2490 (0.2947)  loss_box_reg: 0.1205 (0.1315)  loss_mask: 0.2759 (0.3122)  loss_objectness: 0.0396 (0.0602)  loss_rpn_box_reg: 0.0504 (0.0640)  time: 0.6219 (0.6986)  data: 0.0003 (0.0177)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634389166293, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8626170300536876, "loss_classifier": 0.29467355836745646, "loss_box_reg": 0.1315162559662671, "loss_mask": 0.31222426968083966, "loss_objectness": 0.06018917494004579, "loss_rpn_box_reg": 0.06401377156564443, "time": 0.698637429587275, "data": 0.017724549170020674, "throughput": 183.2137738105685}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 6950}}
INFO:maskrcnn_benchmark.trainer:eta: 2:08:40  iter: 6950  loss: 0.7914 (0.8591)  loss_classifier: 0.2597 (0.2932)  loss_box_reg: 0.1229 (0.1307)  loss_mask: 0.2826 (0.3120)  loss_objectness: 0.0437 (0.0598)  loss_rpn_box_reg: 0.0632 (0.0635)  time: 0.6226 (0.6986)  data: 0.0003 (0.0175)  lr: 0.160000  max mem: 14673
:::MLLOG {"namespace": "", "time_ms": 1634389166294, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 183.2137738105685, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:08:40  iter: 6950  loss: 0.7366 (0.8583)  loss_classifier: 0.2408 (0.2929)  loss_box_reg: 0.1114 (0.1306)  loss_mask: 0.2824 (0.3122)  loss_objectness: 0.0382 (0.0594)  loss_rpn_box_reg: 0.0561 (0.0632)  time: 0.6223 (0.6986)  data: 0.0004 (0.0175)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 2:08:39  iter: 6950  loss: 0.7577 (0.8617)  loss_classifier: 0.2568 (0.2941)  loss_box_reg: 0.1177 (0.1312)  loss_mask: 0.2927 (0.3123)  loss_objectness: 0.0452 (0.0604)  loss_rpn_box_reg: 0.0580 (0.0636)  time: 0.6222 (0.6986)  data: 0.0004 (0.0175)  lr: 0.160000  max mem: 14656
INFO:maskrcnn_benchmark.trainer:eta: 2:08:39  iter: 6950  loss: 0.7528 (0.8606)  loss_classifier: 0.2681 (0.2939)  loss_box_reg: 0.1164 (0.1315)  loss_mask: 0.2676 (0.3120)  loss_objectness: 0.0392 (0.0596)  loss_rpn_box_reg: 0.0448 (0.0636)  time: 0.6222 (0.6986)  data: 0.0003 (0.0175)  lr: 0.160000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 2:07:59  iter: 7000  loss: 0.7756 (0.8611)  loss_classifier: 0.2816 (0.2939)  loss_box_reg: 0.1160 (0.1312)  loss_mask: 0.2780 (0.3121)  loss_objectness: 0.0375 (0.0603)  loss_rpn_box_reg: 0.0530 (0.0636)  time: 0.6233 (0.6981)  data: 0.0004 (0.0174)  lr: 0.160000  max mem: 14656
INFO:maskrcnn_benchmark.trainer:eta: 2:07:59  iter: 7000  loss: 0.7192 (0.8574)  loss_classifier: 0.2581 (0.2926)  loss_box_reg: 0.1093 (0.1305)  loss_mask: 0.2679 (0.3119)  loss_objectness: 0.0377 (0.0593)  loss_rpn_box_reg: 0.0403 (0.0631)  time: 0.6234 (0.6981)  data: 0.0003 (0.0174)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 2:07:59  iter: 7000  loss: 0.7426 (0.8598)  loss_classifier: 0.2509 (0.2937)  loss_box_reg: 0.1129 (0.1314)  loss_mask: 0.2777 (0.3118)  loss_objectness: 0.0387 (0.0595)  loss_rpn_box_reg: 0.0440 (0.0635)  time: 0.6233 (0.6981)  data: 0.0003 (0.0174)  lr: 0.160000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 2:07:59  iter: 7000  loss: 0.7616 (0.8585)  loss_classifier: 0.2447 (0.2930)  loss_box_reg: 0.1185 (0.1306)  loss_mask: 0.2756 (0.3117)  loss_objectness: 0.0444 (0.0597)  loss_rpn_box_reg: 0.0460 (0.0635)  time: 0.6240 (0.6981)  data: 0.0004 (0.0174)  lr: 0.160000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 2:07:59  iter: 7000  loss: 0.7601 (0.8583)  loss_classifier: 0.2545 (0.2930)  loss_box_reg: 0.1174 (0.1307)  loss_mask: 0.2720 (0.3115)  loss_objectness: 0.0455 (0.0596)  loss_rpn_box_reg: 0.0491 (0.0635)  time: 0.6240 (0.6981)  data: 0.0004 (0.0174)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 2:07:59  iter: 7000  loss: 0.7360 (0.8596)  loss_classifier: 0.2474 (0.2932)  loss_box_reg: 0.1134 (0.1311)  loss_mask: 0.2690 (0.3120)  loss_objectness: 0.0419 (0.0597)  loss_rpn_box_reg: 0.0578 (0.0634)  time: 0.6240 (0.6981)  data: 0.0004 (0.0174)  lr: 0.160000  max mem: 14843
INFO:maskrcnn_benchmark.trainer:eta: 2:07:59  iter: 7000  loss: 0.7899 (0.8612)  loss_classifier: 0.2632 (0.2938)  loss_box_reg: 0.1230 (0.1311)  loss_mask: 0.2887 (0.3126)  loss_objectness: 0.0399 (0.0599)  loss_rpn_box_reg: 0.0547 (0.0639)  time: 0.6240 (0.6981)  data: 0.0004 (0.0174)  lr: 0.160000  max mem: 14714
2021-10-16 12:59:57,482 maskrcnn_benchmark.trainer INFO: eta: 2:07:59  iter: 7000  loss: 0.7844 (0.8620)  loss_classifier: 0.2561 (0.2944)  loss_box_reg: 0.1243 (0.1315)  loss_mask: 0.2851 (0.3120)  loss_objectness: 0.0415 (0.0601)  loss_rpn_box_reg: 0.0609 (0.0640)  time: 0.6240 (0.6981)  data: 0.0003 (0.0176)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:07:59  iter: 7000  loss: 0.7844 (0.8620)  loss_classifier: 0.2561 (0.2944)  loss_box_reg: 0.1243 (0.1315)  loss_mask: 0.2851 (0.3120)  loss_objectness: 0.0415 (0.0601)  loss_rpn_box_reg: 0.0609 (0.0640)  time: 0.6240 (0.6981)  data: 0.0003 (0.0176)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634389197482, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8619784617636885, "loss_classifier": 0.2944140802015151, "loss_box_reg": 0.13146380835821453, "loss_mask": 0.3120245777666569, "loss_objectness": 0.060092909597658686, "loss_rpn_box_reg": 0.06398308629143451, "time": 0.698102627652032, "data": 0.01760091938291277, "throughput": 183.35413008042903}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 7000}}
:::MLLOG {"namespace": "", "time_ms": 1634389197482, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 183.35413008042903, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:07:18  iter: 7050  loss: 0.7807 (0.8568)  loss_classifier: 0.2759 (0.2924)  loss_box_reg: 0.1218 (0.1304)  loss_mask: 0.2760 (0.3117)  loss_objectness: 0.0443 (0.0592)  loss_rpn_box_reg: 0.0625 (0.0631)  time: 0.6192 (0.6976)  data: 0.0004 (0.0173)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 2:07:18  iter: 7050  loss: 0.7485 (0.8590)  loss_classifier: 0.2549 (0.2934)  loss_box_reg: 0.1122 (0.1313)  loss_mask: 0.2740 (0.3115)  loss_objectness: 0.0441 (0.0594)  loss_rpn_box_reg: 0.0544 (0.0635)  time: 0.6189 (0.6976)  data: 0.0003 (0.0173)  lr: 0.160000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 2:07:18  iter: 7050  loss: 0.7230 (0.8603)  loss_classifier: 0.2285 (0.2936)  loss_box_reg: 0.1129 (0.1311)  loss_mask: 0.2744 (0.3119)  loss_objectness: 0.0411 (0.0602)  loss_rpn_box_reg: 0.0454 (0.0635)  time: 0.6188 (0.6976)  data: 0.0004 (0.0173)  lr: 0.160000  max mem: 14656
INFO:maskrcnn_benchmark.trainer:eta: 2:07:18  iter: 7050  loss: 0.7545 (0.8574)  loss_classifier: 0.2412 (0.2927)  loss_box_reg: 0.1150 (0.1306)  loss_mask: 0.2723 (0.3112)  loss_objectness: 0.0395 (0.0596)  loss_rpn_box_reg: 0.0567 (0.0634)  time: 0.6185 (0.6976)  data: 0.0004 (0.0173)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 2:07:18  iter: 7050  loss: 0.7192 (0.8577)  loss_classifier: 0.2442 (0.2927)  loss_box_reg: 0.1194 (0.1305)  loss_mask: 0.2770 (0.3115)  loss_objectness: 0.0346 (0.0596)  loss_rpn_box_reg: 0.0424 (0.0634)  time: 0.6177 (0.6976)  data: 0.0003 (0.0173)  lr: 0.160000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 2:07:18  iter: 7050  loss: 0.7215 (0.8589)  loss_classifier: 0.2460 (0.2930)  loss_box_reg: 0.1051 (0.1311)  loss_mask: 0.2665 (0.3117)  loss_objectness: 0.0500 (0.0597)  loss_rpn_box_reg: 0.0624 (0.0635)  time: 0.6184 (0.6976)  data: 0.0004 (0.0173)  lr: 0.160000  max mem: 14843
INFO:maskrcnn_benchmark.trainer:eta: 2:07:18  iter: 7050  loss: 0.6743 (0.8603)  loss_classifier: 0.2230 (0.2935)  loss_box_reg: 0.1002 (0.1309)  loss_mask: 0.2684 (0.3123)  loss_objectness: 0.0375 (0.0597)  loss_rpn_box_reg: 0.0452 (0.0638)  time: 0.6185 (0.6976)  data: 0.0003 (0.0173)  lr: 0.160000  max mem: 14714
2021-10-16 13:00:28,628 maskrcnn_benchmark.trainer INFO: eta: 2:07:18  iter: 7050  loss: 0.7389 (0.8612)  loss_classifier: 0.2592 (0.2942)  loss_box_reg: 0.1098 (0.1314)  loss_mask: 0.2794 (0.3118)  loss_objectness: 0.0418 (0.0600)  loss_rpn_box_reg: 0.0485 (0.0639)  time: 0.6183 (0.6976)  data: 0.0004 (0.0175)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:07:18  iter: 7050  loss: 0.7389 (0.8612)  loss_classifier: 0.2592 (0.2942)  loss_box_reg: 0.1098 (0.1314)  loss_mask: 0.2794 (0.3118)  loss_objectness: 0.0418 (0.0600)  loss_rpn_box_reg: 0.0485 (0.0639)  time: 0.6183 (0.6976)  data: 0.0004 (0.0175)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634389228628, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8612320892988368, "loss_classifier": 0.29418917410656914, "loss_box_reg": 0.1313739323272231, "loss_mask": 0.31176941175621453, "loss_objectness": 0.05997838219482425, "loss_rpn_box_reg": 0.06392118939297631, "time": 0.6975694902230661, "data": 0.017479104995727537, "throughput": 183.49426371710817}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 7050}}
:::MLLOG {"namespace": "", "time_ms": 1634389228629, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 183.49426371710817, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:06:37  iter: 7100  loss: 0.7299 (0.8568)  loss_classifier: 0.2530 (0.2924)  loss_box_reg: 0.1174 (0.1304)  loss_mask: 0.2732 (0.3112)  loss_objectness: 0.0406 (0.0595)  loss_rpn_box_reg: 0.0503 (0.0634)  time: 0.6294 (0.6971)  data: 0.0003 (0.0172)  lr: 0.160000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 2:06:37  iter: 7100  loss: 0.7651 (0.8568)  loss_classifier: 0.2534 (0.2924)  loss_box_reg: 0.1219 (0.1305)  loss_mask: 0.2804 (0.3110)  loss_objectness: 0.0494 (0.0594)  loss_rpn_box_reg: 0.0546 (0.0634)  time: 0.6298 (0.6971)  data: 0.0004 (0.0172)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 2:06:37  iter: 7100  loss: 0.7350 (0.8581)  loss_classifier: 0.2539 (0.2927)  loss_box_reg: 0.1150 (0.1309)  loss_mask: 0.2750 (0.3115)  loss_objectness: 0.0414 (0.0596)  loss_rpn_box_reg: 0.0484 (0.0634)  time: 0.6297 (0.6971)  data: 0.0003 (0.0172)  lr: 0.160000  max mem: 14843
2021-10-16 13:00:59,805 maskrcnn_benchmark.trainer INFO: eta: 2:06:37  iter: 7100  loss: 0.7396 (0.8604)  loss_classifier: 0.2453 (0.2939)  loss_box_reg: 0.1165 (0.1313)  loss_mask: 0.2837 (0.3116)  loss_objectness: 0.0394 (0.0599)  loss_rpn_box_reg: 0.0530 (0.0639)  time: 0.6300 (0.6970)  data: 0.0003 (0.0174)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:06:37  iter: 7100  loss: 0.6823 (0.8592)  loss_classifier: 0.2241 (0.2931)  loss_box_reg: 0.1098 (0.1308)  loss_mask: 0.2686 (0.3121)  loss_objectness: 0.0332 (0.0596)  loss_rpn_box_reg: 0.0536 (0.0637)  time: 0.6297 (0.6971)  data: 0.0003 (0.0171)  lr: 0.160000  max mem: 14714
INFO:maskrcnn_benchmark.trainer:eta: 2:06:37  iter: 7100  loss: 0.7396 (0.8604)  loss_classifier: 0.2453 (0.2939)  loss_box_reg: 0.1165 (0.1313)  loss_mask: 0.2837 (0.3116)  loss_objectness: 0.0394 (0.0599)  loss_rpn_box_reg: 0.0530 (0.0639)  time: 0.6300 (0.6970)  data: 0.0003 (0.0174)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634389259805, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8604072797004606, "loss_classifier": 0.2938681989834762, "loss_box_reg": 0.13126506518621758, "loss_mask": 0.3115508013963699, "loss_objectness": 0.05986169115627106, "loss_rpn_box_reg": 0.06386152342775128, "time": 0.6970481406467062, "data": 0.017359358223391252, "throughput": 183.6315062561452}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 7100}}
INFO:maskrcnn_benchmark.trainer:eta: 2:06:37  iter: 7100  loss: 0.7578 (0.8561)  loss_classifier: 0.2470 (0.2921)  loss_box_reg: 0.1138 (0.1303)  loss_mask: 0.2751 (0.3114)  loss_objectness: 0.0398 (0.0591)  loss_rpn_box_reg: 0.0612 (0.0631)  time: 0.6291 (0.6971)  data: 0.0004 (0.0172)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 2:06:37  iter: 7100  loss: 0.7229 (0.8596)  loss_classifier: 0.2503 (0.2933)  loss_box_reg: 0.1142 (0.1310)  loss_mask: 0.2762 (0.3116)  loss_objectness: 0.0388 (0.0601)  loss_rpn_box_reg: 0.0588 (0.0635)  time: 0.6290 (0.6970)  data: 0.0004 (0.0172)  lr: 0.160000  max mem: 14656
INFO:maskrcnn_benchmark.trainer:eta: 2:06:37  iter: 7100  loss: 0.7266 (0.8581)  loss_classifier: 0.2411 (0.2931)  loss_box_reg: 0.1041 (0.1311)  loss_mask: 0.2736 (0.3112)  loss_objectness: 0.0392 (0.0592)  loss_rpn_box_reg: 0.0540 (0.0634)  time: 0.6289 (0.6970)  data: 0.0003 (0.0172)  lr: 0.160000  max mem: 14803
:::MLLOG {"namespace": "", "time_ms": 1634389259805, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 183.6315062561452, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:05:57  iter: 7150  loss: 0.7663 (0.8555)  loss_classifier: 0.2731 (0.2919)  loss_box_reg: 0.1172 (0.1302)  loss_mask: 0.2867 (0.3112)  loss_objectness: 0.0444 (0.0591)  loss_rpn_box_reg: 0.0533 (0.0631)  time: 0.6222 (0.6965)  data: 0.0003 (0.0171)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 2:05:57  iter: 7150  loss: 0.7334 (0.8575)  loss_classifier: 0.2581 (0.2929)  loss_box_reg: 0.1053 (0.1311)  loss_mask: 0.2803 (0.3110)  loss_objectness: 0.0501 (0.0592)  loss_rpn_box_reg: 0.0622 (0.0634)  time: 0.6234 (0.6965)  data: 0.0003 (0.0170)  lr: 0.160000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 2:05:57  iter: 7150  loss: 0.6906 (0.8587)  loss_classifier: 0.2300 (0.2930)  loss_box_reg: 0.1039 (0.1309)  loss_mask: 0.2671 (0.3114)  loss_objectness: 0.0363 (0.0600)  loss_rpn_box_reg: 0.0502 (0.0635)  time: 0.6224 (0.6965)  data: 0.0003 (0.0170)  lr: 0.160000  max mem: 14656
INFO:maskrcnn_benchmark.trainer:eta: 2:05:57  iter: 7150  loss: 0.7419 (0.8561)  loss_classifier: 0.2635 (0.2922)  loss_box_reg: 0.1123 (0.1305)  loss_mask: 0.2729 (0.3108)  loss_objectness: 0.0453 (0.0593)  loss_rpn_box_reg: 0.0486 (0.0634)  time: 0.6217 (0.6965)  data: 0.0004 (0.0171)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 2:05:57  iter: 7150  loss: 0.7370 (0.8561)  loss_classifier: 0.2485 (0.2921)  loss_box_reg: 0.1088 (0.1303)  loss_mask: 0.2855 (0.3110)  loss_objectness: 0.0371 (0.0594)  loss_rpn_box_reg: 0.0373 (0.0634)  time: 0.6222 (0.6965)  data: 0.0004 (0.0171)  lr: 0.160000  max mem: 14673
2021-10-16 13:01:31,003 maskrcnn_benchmark.trainer INFO: eta: 2:05:57  iter: 7150  loss: 0.7475 (0.8597)  loss_classifier: 0.2584 (0.2936)  loss_box_reg: 0.1178 (0.1312)  loss_mask: 0.2771 (0.3113)  loss_objectness: 0.0486 (0.0598)  loss_rpn_box_reg: 0.0511 (0.0638)  time: 0.6223 (0.6965)  data: 0.0004 (0.0172)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:05:57  iter: 7150  loss: 0.7266 (0.8585)  loss_classifier: 0.2322 (0.2928)  loss_box_reg: 0.1059 (0.1307)  loss_mask: 0.2707 (0.3118)  loss_objectness: 0.0382 (0.0595)  loss_rpn_box_reg: 0.0484 (0.0637)  time: 0.6223 (0.6965)  data: 0.0003 (0.0170)  lr: 0.160000  max mem: 14714
INFO:maskrcnn_benchmark.trainer:eta: 2:05:57  iter: 7150  loss: 0.7475 (0.8597)  loss_classifier: 0.2584 (0.2936)  loss_box_reg: 0.1178 (0.1312)  loss_mask: 0.2771 (0.3113)  loss_objectness: 0.0486 (0.0598)  loss_rpn_box_reg: 0.0511 (0.0638)  time: 0.6223 (0.6965)  data: 0.0004 (0.0172)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:05:57  iter: 7150  loss: 0.7947 (0.8576)  loss_classifier: 0.2743 (0.2925)  loss_box_reg: 0.1168 (0.1309)  loss_mask: 0.2873 (0.3113)  loss_objectness: 0.0484 (0.0595)  loss_rpn_box_reg: 0.0608 (0.0634)  time: 0.6223 (0.6965)  data: 0.0004 (0.0171)  lr: 0.160000  max mem: 14843
:::MLLOG {"namespace": "", "time_ms": 1634389291004, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8596691828882778, "loss_classifier": 0.29362166461932077, "loss_box_reg": 0.13118159419795095, "loss_mask": 0.31127304102574194, "loss_objectness": 0.05976337403006904, "loss_rpn_box_reg": 0.063829509479912, "time": 0.6965370749426888, "data": 0.017241412176118864, "throughput": 183.76624102964206}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 7150}}
:::MLLOG {"namespace": "", "time_ms": 1634389291004, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 183.76624102964206, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:05:17  iter: 7200  loss: 0.7207 (0.8554)  loss_classifier: 0.2537 (0.2919)  loss_box_reg: 0.1255 (0.1304)  loss_mask: 0.2639 (0.3105)  loss_objectness: 0.0371 (0.0593)  loss_rpn_box_reg: 0.0412 (0.0633)  time: 0.6212 (0.6960)  data: 0.0004 (0.0170)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 2:05:17  iter: 7200  loss: 0.7600 (0.8549)  loss_classifier: 0.2630 (0.2916)  loss_box_reg: 0.1182 (0.1302)  loss_mask: 0.2819 (0.3111)  loss_objectness: 0.0475 (0.0590)  loss_rpn_box_reg: 0.0694 (0.0631)  time: 0.6223 (0.6960)  data: 0.0004 (0.0169)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 2:05:17  iter: 7200  loss: 0.7415 (0.8553)  loss_classifier: 0.2532 (0.2918)  loss_box_reg: 0.1172 (0.1302)  loss_mask: 0.2718 (0.3108)  loss_objectness: 0.0425 (0.0593)  loss_rpn_box_reg: 0.0499 (0.0633)  time: 0.6207 (0.6960)  data: 0.0003 (0.0170)  lr: 0.160000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 2:05:17  iter: 7200  loss: 0.8006 (0.8580)  loss_classifier: 0.2707 (0.2928)  loss_box_reg: 0.1231 (0.1308)  loss_mask: 0.2875 (0.3112)  loss_objectness: 0.0473 (0.0599)  loss_rpn_box_reg: 0.0607 (0.0634)  time: 0.6223 (0.6960)  data: 0.0004 (0.0169)  lr: 0.160000  max mem: 14656
INFO:maskrcnn_benchmark.trainer:eta: 2:05:17  iter: 7200  loss: 0.7050 (0.8566)  loss_classifier: 0.2307 (0.2925)  loss_box_reg: 0.1140 (0.1309)  loss_mask: 0.2736 (0.3108)  loss_objectness: 0.0439 (0.0590)  loss_rpn_box_reg: 0.0435 (0.0633)  time: 0.6223 (0.6960)  data: 0.0003 (0.0169)  lr: 0.160000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 2:05:17  iter: 7200  loss: 0.7591 (0.8570)  loss_classifier: 0.2908 (0.2924)  loss_box_reg: 0.1131 (0.1308)  loss_mask: 0.2721 (0.3111)  loss_objectness: 0.0392 (0.0594)  loss_rpn_box_reg: 0.0464 (0.0633)  time: 0.6227 (0.6960)  data: 0.0004 (0.0169)  lr: 0.160000  max mem: 14843
2021-10-16 13:02:02,155 maskrcnn_benchmark.trainer INFO: eta: 2:05:17  iter: 7200  loss: 0.7925 (0.8590)  loss_classifier: 0.2611 (0.2934)  loss_box_reg: 0.1225 (0.1311)  loss_mask: 0.2795 (0.3110)  loss_objectness: 0.0428 (0.0597)  loss_rpn_box_reg: 0.0520 (0.0638)  time: 0.6230 (0.6960)  data: 0.0004 (0.0171)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:05:17  iter: 7200  loss: 0.7635 (0.8576)  loss_classifier: 0.2575 (0.2925)  loss_box_reg: 0.1119 (0.1306)  loss_mask: 0.2770 (0.3115)  loss_objectness: 0.0437 (0.0594)  loss_rpn_box_reg: 0.0481 (0.0636)  time: 0.6227 (0.6960)  data: 0.0003 (0.0169)  lr: 0.160000  max mem: 14714
INFO:maskrcnn_benchmark.trainer:eta: 2:05:17  iter: 7200  loss: 0.7925 (0.8590)  loss_classifier: 0.2611 (0.2934)  loss_box_reg: 0.1225 (0.1311)  loss_mask: 0.2795 (0.3110)  loss_objectness: 0.0428 (0.0597)  loss_rpn_box_reg: 0.0520 (0.0638)  time: 0.6230 (0.6960)  data: 0.0004 (0.0171)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634389322155, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8590120220598247, "loss_classifier": 0.2934108278538204, "loss_box_reg": 0.13110947187831495, "loss_mask": 0.31104346845505965, "loss_objectness": 0.05966812160771547, "loss_rpn_box_reg": 0.06378013276132859, "time": 0.6960266400376955, "data": 0.01712471150689655, "throughput": 183.9010069974732}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 7200}}
:::MLLOG {"namespace": "", "time_ms": 1634389322155, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 183.9010069974732, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:04:36  iter: 7250  loss: 0.7978 (0.8547)  loss_classifier: 0.2664 (0.2916)  loss_box_reg: 0.1296 (0.1303)  loss_mask: 0.2820 (0.3103)  loss_objectness: 0.0438 (0.0592)  loss_rpn_box_reg: 0.0587 (0.0632)  time: 0.6234 (0.6955)  data: 0.0004 (0.0169)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 2:04:36  iter: 7250  loss: 0.7554 (0.8546)  loss_classifier: 0.2378 (0.2915)  loss_box_reg: 0.1157 (0.1301)  loss_mask: 0.2758 (0.3105)  loss_objectness: 0.0428 (0.0592)  loss_rpn_box_reg: 0.0600 (0.0633)  time: 0.6230 (0.6955)  data: 0.0004 (0.0168)  lr: 0.160000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 2:04:36  iter: 7250  loss: 0.7504 (0.8562)  loss_classifier: 0.2303 (0.2920)  loss_box_reg: 0.1185 (0.1307)  loss_mask: 0.2804 (0.3109)  loss_objectness: 0.0409 (0.0593)  loss_rpn_box_reg: 0.0563 (0.0633)  time: 0.6231 (0.6955)  data: 0.0004 (0.0168)  lr: 0.160000  max mem: 14843
2021-10-16 13:02:33,325 maskrcnn_benchmark.trainer INFO: eta: 2:04:36  iter: 7250  loss: 0.7446 (0.8583)  loss_classifier: 0.2447 (0.2932)  loss_box_reg: 0.1041 (0.1310)  loss_mask: 0.2748 (0.3108)  loss_objectness: 0.0442 (0.0596)  loss_rpn_box_reg: 0.0538 (0.0637)  time: 0.6231 (0.6955)  data: 0.0003 (0.0170)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:04:36  iter: 7250  loss: 0.7612 (0.8570)  loss_classifier: 0.2650 (0.2923)  loss_box_reg: 0.1155 (0.1305)  loss_mask: 0.2777 (0.3113)  loss_objectness: 0.0405 (0.0593)  loss_rpn_box_reg: 0.0470 (0.0635)  time: 0.6230 (0.6955)  data: 0.0003 (0.0168)  lr: 0.160000  max mem: 14714
INFO:maskrcnn_benchmark.trainer:eta: 2:04:36  iter: 7250  loss: 0.7446 (0.8583)  loss_classifier: 0.2447 (0.2932)  loss_box_reg: 0.1041 (0.1310)  loss_mask: 0.2748 (0.3108)  loss_objectness: 0.0442 (0.0596)  loss_rpn_box_reg: 0.0538 (0.0637)  time: 0.6231 (0.6955)  data: 0.0003 (0.0170)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:04:36  iter: 7250  loss: 0.7614 (0.8542)  loss_classifier: 0.2559 (0.2914)  loss_box_reg: 0.1242 (0.1301)  loss_mask: 0.2770 (0.3108)  loss_objectness: 0.0436 (0.0589)  loss_rpn_box_reg: 0.0437 (0.0630)  time: 0.6233 (0.6955)  data: 0.0004 (0.0168)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 2:04:36  iter: 7250  loss: 0.7209 (0.8572)  loss_classifier: 0.2428 (0.2925)  loss_box_reg: 0.1177 (0.1307)  loss_mask: 0.2728 (0.3109)  loss_objectness: 0.0419 (0.0597)  loss_rpn_box_reg: 0.0493 (0.0633)  time: 0.6234 (0.6955)  data: 0.0004 (0.0168)  lr: 0.160000  max mem: 14656
INFO:maskrcnn_benchmark.trainer:eta: 2:04:36  iter: 7250  loss: 0.6984 (0.8557)  loss_classifier: 0.2411 (0.2922)  loss_box_reg: 0.1077 (0.1308)  loss_mask: 0.2751 (0.3105)  loss_objectness: 0.0369 (0.0589)  loss_rpn_box_reg: 0.0470 (0.0633)  time: 0.6235 (0.6955)  data: 0.0004 (0.0168)  lr: 0.160000  max mem: 14803
:::MLLOG {"namespace": "", "time_ms": 1634389353325, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8582673650527822, "loss_classifier": 0.29315264425298265, "loss_box_reg": 0.130999411079872, "loss_mask": 0.3108091412885436, "loss_objectness": 0.05957941007023228, "loss_rpn_box_reg": 0.06372675881226515, "time": 0.6955257784087082, "data": 0.017009573739150474, "throughput": 184.0334376863082}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 7250}}
:::MLLOG {"namespace": "", "time_ms": 1634389353326, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 184.0334376863082, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:03:57  iter: 7300  loss: 0.7357 (0.8539)  loss_classifier: 0.2614 (0.2913)  loss_box_reg: 0.1143 (0.1302)  loss_mask: 0.2762 (0.3101)  loss_objectness: 0.0366 (0.0590)  loss_rpn_box_reg: 0.0525 (0.0632)  time: 0.6273 (0.6951)  data: 0.0004 (0.0167)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 2:03:57  iter: 7300  loss: 0.7666 (0.8540)  loss_classifier: 0.2695 (0.2913)  loss_box_reg: 0.1223 (0.1300)  loss_mask: 0.2814 (0.3103)  loss_objectness: 0.0439 (0.0591)  loss_rpn_box_reg: 0.0506 (0.0633)  time: 0.6271 (0.6951)  data: 0.0004 (0.0167)  lr: 0.160000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 2:03:57  iter: 7300  loss: 0.7616 (0.8556)  loss_classifier: 0.2487 (0.2918)  loss_box_reg: 0.1175 (0.1307)  loss_mask: 0.2912 (0.3106)  loss_objectness: 0.0431 (0.0592)  loss_rpn_box_reg: 0.0496 (0.0632)  time: 0.6267 (0.6950)  data: 0.0004 (0.0167)  lr: 0.160000  max mem: 14843
2021-10-16 13:03:04,594 maskrcnn_benchmark.trainer INFO: eta: 2:03:56  iter: 7300  loss: 0.7304 (0.8574)  loss_classifier: 0.2330 (0.2928)  loss_box_reg: 0.1031 (0.1309)  loss_mask: 0.2711 (0.3105)  loss_objectness: 0.0439 (0.0595)  loss_rpn_box_reg: 0.0445 (0.0637)  time: 0.6266 (0.6950)  data: 0.0003 (0.0169)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:03:57  iter: 7300  loss: 0.7729 (0.8565)  loss_classifier: 0.2625 (0.2921)  loss_box_reg: 0.1225 (0.1305)  loss_mask: 0.2800 (0.3111)  loss_objectness: 0.0528 (0.0593)  loss_rpn_box_reg: 0.0563 (0.0635)  time: 0.6268 (0.6951)  data: 0.0003 (0.0167)  lr: 0.160000  max mem: 14714
INFO:maskrcnn_benchmark.trainer:eta: 2:03:56  iter: 7300  loss: 0.7304 (0.8574)  loss_classifier: 0.2330 (0.2928)  loss_box_reg: 0.1031 (0.1309)  loss_mask: 0.2711 (0.3105)  loss_objectness: 0.0439 (0.0595)  loss_rpn_box_reg: 0.0445 (0.0637)  time: 0.6266 (0.6950)  data: 0.0003 (0.0169)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:03:57  iter: 7300  loss: 0.7672 (0.8536)  loss_classifier: 0.2710 (0.2912)  loss_box_reg: 0.1210 (0.1300)  loss_mask: 0.2802 (0.3106)  loss_objectness: 0.0402 (0.0588)  loss_rpn_box_reg: 0.0483 (0.0630)  time: 0.6259 (0.6951)  data: 0.0004 (0.0167)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 2:03:56  iter: 7300  loss: 0.7134 (0.8565)  loss_classifier: 0.2569 (0.2923)  loss_box_reg: 0.1134 (0.1306)  loss_mask: 0.2741 (0.3107)  loss_objectness: 0.0378 (0.0596)  loss_rpn_box_reg: 0.0432 (0.0633)  time: 0.6257 (0.6950)  data: 0.0003 (0.0167)  lr: 0.160000  max mem: 14656
INFO:maskrcnn_benchmark.trainer:eta: 2:03:56  iter: 7300  loss: 0.7639 (0.8550)  loss_classifier: 0.2543 (0.2920)  loss_box_reg: 0.1131 (0.1307)  loss_mask: 0.2659 (0.3103)  loss_objectness: 0.0423 (0.0588)  loss_rpn_box_reg: 0.0468 (0.0632)  time: 0.6248 (0.6950)  data: 0.0004 (0.0167)  lr: 0.160000  max mem: 14803
:::MLLOG {"namespace": "", "time_ms": 1634389384594, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.857382348547243, "loss_classifier": 0.2928174732268265, "loss_box_reg": 0.13086793211068679, "loss_mask": 0.3105490082604428, "loss_objectness": 0.059468295149862356, "loss_rpn_box_reg": 0.06367964026428861, "time": 0.6950453449275396, "data": 0.0168962883622679, "throughput": 184.160646401199}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 7300}}
:::MLLOG {"namespace": "", "time_ms": 1634389384595, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 184.160646401199, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
:::MLLOG {"namespace": "", "time_ms": 1634389407080, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 111, "epoch_num": 8}}
:::MLLOG {"namespace": "", "time_ms": 1634389407080, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 112, "first_epoch_num": 8}}
:::MLLOG {"namespace": "", "time_ms": 1634389407081, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 113, "epoch_num": 8}}
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
2021-10-16 13:03:27,421 maskrcnn_benchmark.data.build WARNING: When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
Done (t=0.56s)
creating index...
index created!
shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]Done (t=0.56s)
creating index...
Done (t=0.56s)
creating index...
Done (t=0.55s)
creating index...
index created!
shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]Done (t=0.55s)
creating index...
index created!
index created!
Done (t=0.56s)
creating index...
shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
Done (t=0.55s)
creating index...
  0% 0/40 [00:00<?, ?it/s]index created!
shapes=None
passthrough=True
index created!
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]index created!
shapes=None
passthrough=True
Done (t=0.55s)
creating index...
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]shapes=None
passthrough=True
creating index...
GT annotations already exist!
2021-10-16 13:03:28,005 maskrcnn_benchmark.inference INFO: Start evaluation on coco_2017_val dataset(5000 images).
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]index created!
shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]  2% 1/40 [00:00<00:11,  3.40it/s]  2% 1/40 [00:00<00:11,  3.40it/s]  2% 1/40 [00:00<00:11,  3.29it/s]  2% 1/40 [00:00<00:11,  3.30it/s]  2% 1/40 [00:00<00:11,  3.39it/s]  2% 1/40 [00:00<00:11,  3.27it/s]  2% 1/40 [00:00<00:12,  3.21it/s]  2% 1/40 [00:00<00:11,  3.25it/s]  5% 2/40 [00:00<00:11,  3.40it/s]  5% 2/40 [00:00<00:11,  3.39it/s]  5% 2/40 [00:00<00:11,  3.41it/s]  5% 2/40 [00:00<00:11,  3.33it/s]  5% 2/40 [00:00<00:10,  3.46it/s]  5% 2/40 [00:00<00:11,  3.34it/s]  5% 2/40 [00:00<00:11,  3.32it/s]  5% 2/40 [00:00<00:11,  3.32it/s]  8% 3/40 [00:00<00:10,  3.42it/s]  8% 3/40 [00:00<00:10,  3.41it/s]  8% 3/40 [00:00<00:10,  3.38it/s]  8% 3/40 [00:00<00:10,  3.40it/s]  8% 3/40 [00:00<00:10,  3.50it/s]  8% 3/40 [00:00<00:10,  3.37it/s]  8% 3/40 [00:00<00:10,  3.38it/s]  8% 3/40 [00:00<00:11,  3.34it/s] 10% 4/40 [00:01<00:10,  3.43it/s] 10% 4/40 [00:01<00:10,  3.39it/s] 10% 4/40 [00:01<00:10,  3.41it/s] 10% 4/40 [00:01<00:10,  3.41it/s] 10% 4/40 [00:01<00:10,  3.46it/s] 10% 4/40 [00:01<00:10,  3.42it/s] 10% 4/40 [00:01<00:10,  3.38it/s] 10% 4/40 [00:01<00:10,  3.35it/s] 12% 5/40 [00:01<00:10,  3.41it/s] 12% 5/40 [00:01<00:10,  3.44it/s] 12% 5/40 [00:01<00:10,  3.44it/s] 12% 5/40 [00:01<00:10,  3.42it/s] 12% 5/40 [00:01<00:10,  3.44it/s] 12% 5/40 [00:01<00:10,  3.45it/s] 12% 5/40 [00:01<00:10,  3.44it/s] 12% 5/40 [00:01<00:10,  3.42it/s] 15% 6/40 [00:01<00:09,  3.40it/s] 15% 6/40 [00:01<00:09,  3.47it/s] 15% 6/40 [00:01<00:09,  3.45it/s] 15% 6/40 [00:01<00:09,  3.41it/s] 15% 6/40 [00:01<00:09,  3.51it/s] 15% 6/40 [00:01<00:09,  3.47it/s] 15% 6/40 [00:01<00:09,  3.43it/s] 15% 6/40 [00:01<00:09,  3.42it/s] 18% 7/40 [00:02<00:09,  3.41it/s] 18% 7/40 [00:02<00:09,  3.48it/s] 18% 7/40 [00:02<00:09,  3.43it/s] 18% 7/40 [00:02<00:09,  3.42it/s] 18% 7/40 [00:02<00:09,  3.46it/s] 18% 7/40 [00:02<00:09,  3.47it/s] 18% 7/40 [00:02<00:09,  3.45it/s] 18% 7/40 [00:02<00:09,  3.49it/s] 20% 8/40 [00:02<00:09,  3.41it/s] 20% 8/40 [00:02<00:09,  3.54it/s] 20% 8/40 [00:02<00:09,  3.43it/s] 20% 8/40 [00:02<00:09,  3.48it/s] 20% 8/40 [00:02<00:09,  3.37it/s] 20% 8/40 [00:02<00:09,  3.46it/s] 20% 8/40 [00:02<00:09,  3.41it/s] 20% 8/40 [00:02<00:09,  3.48it/s] 22% 9/40 [00:02<00:08,  3.45it/s] 22% 9/40 [00:02<00:08,  3.51it/s] 22% 9/40 [00:02<00:08,  3.49it/s] 22% 9/40 [00:02<00:09,  3.41it/s] 22% 9/40 [00:02<00:09,  3.39it/s] 22% 9/40 [00:02<00:08,  3.46it/s] 22% 9/40 [00:02<00:09,  3.42it/s] 22% 9/40 [00:02<00:08,  3.53it/s] 25% 10/40 [00:02<00:08,  3.53it/s] 25% 10/40 [00:02<00:08,  3.42it/s] 25% 10/40 [00:02<00:08,  3.55it/s] 25% 10/40 [00:02<00:08,  3.47it/s] 25% 10/40 [00:02<00:08,  3.46it/s] 25% 10/40 [00:02<00:08,  3.45it/s] 25% 10/40 [00:02<00:08,  3.39it/s] 25% 10/40 [00:02<00:08,  3.51it/s] 28% 11/40 [00:03<00:08,  3.51it/s] 28% 11/40 [00:03<00:08,  3.41it/s] 28% 11/40 [00:03<00:08,  3.53it/s] 28% 11/40 [00:03<00:08,  3.50it/s] 28% 11/40 [00:03<00:08,  3.48it/s] 28% 11/40 [00:03<00:08,  3.44it/s] 28% 11/40 [00:03<00:08,  3.41it/s] 28% 11/40 [00:03<00:08,  3.50it/s] 30% 12/40 [00:03<00:07,  3.53it/s] 30% 12/40 [00:03<00:08,  3.41it/s] 30% 12/40 [00:03<00:07,  3.52it/s] 30% 12/40 [00:03<00:07,  3.51it/s] 30% 12/40 [00:03<00:08,  3.48it/s] 30% 12/40 [00:03<00:08,  3.46it/s] 30% 12/40 [00:03<00:08,  3.43it/s] 30% 12/40 [00:03<00:07,  3.52it/s] 32% 13/40 [00:03<00:07,  3.59it/s] 32% 13/40 [00:03<00:07,  3.46it/s] 32% 13/40 [00:03<00:07,  3.48it/s] 32% 13/40 [00:03<00:07,  3.48it/s] 32% 13/40 [00:03<00:07,  3.49it/s] 32% 13/40 [00:03<00:07,  3.45it/s] 32% 13/40 [00:03<00:07,  3.43it/s] 32% 13/40 [00:03<00:07,  3.51it/s] 35% 14/40 [00:03<00:07,  3.53it/s] 35% 14/40 [00:04<00:07,  3.49it/s] 35% 14/40 [00:03<00:07,  3.55it/s] 35% 14/40 [00:04<00:07,  3.45it/s] 35% 14/40 [00:04<00:07,  3.52it/s] 35% 14/40 [00:04<00:07,  3.50it/s] 35% 14/40 [00:04<00:07,  3.44it/s] 35% 14/40 [00:04<00:07,  3.46it/s] 38% 15/40 [00:04<00:07,  3.49it/s] 38% 15/40 [00:04<00:06,  3.59it/s] 38% 15/40 [00:04<00:07,  3.47it/s] 38% 15/40 [00:04<00:07,  3.47it/s] 38% 15/40 [00:04<00:07,  3.53it/s] 38% 15/40 [00:04<00:07,  3.50it/s] 38% 15/40 [00:04<00:07,  3.47it/s] 38% 15/40 [00:04<00:07,  3.42it/s] 40% 16/40 [00:04<00:06,  3.52it/s] 40% 16/40 [00:04<00:06,  3.53it/s] 40% 16/40 [00:04<00:07,  3.42it/s] 40% 16/40 [00:04<00:06,  3.51it/s] 40% 16/40 [00:04<00:06,  3.46it/s] 40% 16/40 [00:04<00:06,  3.50it/s] 40% 16/40 [00:04<00:06,  3.46it/s] 40% 16/40 [00:04<00:06,  3.44it/s] 42% 17/40 [00:04<00:06,  3.49it/s] 42% 17/40 [00:04<00:06,  3.60it/s] 42% 17/40 [00:04<00:06,  3.57it/s] 42% 17/40 [00:04<00:06,  3.41it/s] 42% 17/40 [00:04<00:06,  3.54it/s] 42% 17/40 [00:04<00:06,  3.54it/s] 42% 17/40 [00:04<00:06,  3.44it/s] 42% 17/40 [00:04<00:06,  3.46it/s] 45% 18/40 [00:05<00:06,  3.62it/s] 45% 18/40 [00:05<00:06,  3.48it/s] 45% 18/40 [00:05<00:06,  3.53it/s] 45% 18/40 [00:05<00:06,  3.41it/s] 45% 18/40 [00:05<00:06,  3.50it/s] 45% 18/40 [00:05<00:06,  3.49it/s] 45% 18/40 [00:05<00:06,  3.42it/s] 45% 18/40 [00:05<00:06,  3.46it/s] 48% 19/40 [00:05<00:05,  3.58it/s] 48% 19/40 [00:05<00:06,  3.48it/s] 48% 19/40 [00:05<00:05,  3.55it/s] 48% 19/40 [00:05<00:06,  3.43it/s] 48% 19/40 [00:05<00:06,  3.49it/s] 48% 19/40 [00:05<00:06,  3.45it/s] 48% 19/40 [00:05<00:06,  3.45it/s] 48% 19/40 [00:05<00:06,  3.49it/s] 50% 20/40 [00:05<00:05,  3.56it/s] 50% 20/40 [00:05<00:05,  3.49it/s] 50% 20/40 [00:05<00:05,  3.53it/s] 50% 20/40 [00:05<00:05,  3.45it/s] 50% 20/40 [00:05<00:05,  3.47it/s] 50% 20/40 [00:05<00:05,  3.46it/s] 50% 20/40 [00:05<00:05,  3.42it/s] 50% 20/40 [00:05<00:05,  3.50it/s] 52% 21/40 [00:05<00:05,  3.54it/s] 52% 21/40 [00:05<00:05,  3.48it/s] 52% 21/40 [00:06<00:05,  3.55it/s] 52% 21/40 [00:06<00:05,  3.52it/s] 52% 21/40 [00:06<00:05,  3.50it/s] 52% 21/40 [00:06<00:05,  3.45it/s] 52% 21/40 [00:06<00:05,  3.44it/s] 52% 21/40 [00:06<00:05,  3.51it/s] 55% 22/40 [00:06<00:04,  3.60it/s] 55% 22/40 [00:06<00:05,  3.50it/s] 55% 22/40 [00:06<00:05,  3.51it/s] 55% 22/40 [00:06<00:05,  3.48it/s] 55% 22/40 [00:06<00:05,  3.46it/s] 55% 22/40 [00:06<00:05,  3.56it/s] 55% 22/40 [00:06<00:05,  3.43it/s] 55% 22/40 [00:06<00:05,  3.41it/s] 57% 23/40 [00:06<00:04,  3.60it/s] 57% 23/40 [00:06<00:04,  3.51it/s] 57% 23/40 [00:06<00:04,  3.55it/s] 57% 23/40 [00:06<00:04,  3.46it/s] 57% 23/40 [00:06<00:04,  3.43it/s] 57% 23/40 [00:06<00:04,  3.46it/s] 57% 23/40 [00:06<00:04,  3.52it/s] 57% 23/40 [00:06<00:05,  3.39it/s] 60% 24/40 [00:06<00:04,  3.57it/s] 60% 24/40 [00:06<00:04,  3.52it/s] 60% 24/40 [00:06<00:04,  3.59it/s] 60% 24/40 [00:06<00:04,  3.49it/s] 60% 24/40 [00:06<00:04,  3.48it/s] 60% 24/40 [00:06<00:04,  3.55it/s] 60% 24/40 [00:06<00:04,  3.47it/s] 60% 24/40 [00:06<00:04,  3.40it/s] 62% 25/40 [00:07<00:04,  3.53it/s] 62% 25/40 [00:07<00:04,  3.56it/s] 62% 25/40 [00:07<00:04,  3.58it/s] 62% 25/40 [00:07<00:04,  3.44it/s] 62% 25/40 [00:07<00:04,  3.54it/s] 62% 25/40 [00:07<00:04,  3.45it/s] 62% 25/40 [00:07<00:04,  3.41it/s] 62% 25/40 [00:07<00:04,  3.41it/s] 65% 26/40 [00:07<00:04,  3.49it/s] 65% 26/40 [00:07<00:03,  3.56it/s] 65% 26/40 [00:07<00:03,  3.53it/s] 65% 26/40 [00:07<00:04,  3.49it/s] 65% 26/40 [00:07<00:03,  3.52it/s] 65% 26/40 [00:07<00:04,  3.44it/s] 65% 26/40 [00:07<00:04,  3.47it/s] 65% 26/40 [00:07<00:04,  3.41it/s] 68% 27/40 [00:07<00:03,  3.56it/s] 68% 27/40 [00:07<00:03,  3.54it/s] 68% 27/40 [00:07<00:03,  3.55it/s] 68% 27/40 [00:07<00:03,  3.46it/s] 68% 27/40 [00:07<00:03,  3.50it/s] 68% 27/40 [00:07<00:03,  3.48it/s] 68% 27/40 [00:07<00:03,  3.46it/s] 68% 27/40 [00:07<00:03,  3.45it/s] 70% 28/40 [00:07<00:03,  3.57it/s] 70% 28/40 [00:07<00:03,  3.52it/s] 70% 28/40 [00:07<00:03,  3.61it/s] 70% 28/40 [00:08<00:03,  3.43it/s] 70% 28/40 [00:08<00:03,  3.49it/s] 70% 28/40 [00:08<00:03,  3.50it/s] 70% 28/40 [00:08<00:03,  3.47it/s] 70% 28/40 [00:08<00:03,  3.42it/s] 72% 29/40 [00:08<00:03,  3.55it/s] 72% 29/40 [00:08<00:03,  3.54it/s] 72% 29/40 [00:08<00:03,  3.56it/s] 72% 29/40 [00:08<00:03,  3.50it/s] 72% 29/40 [00:08<00:03,  3.51it/s] 72% 29/40 [00:08<00:03,  3.48it/s] 72% 29/40 [00:08<00:03,  3.46it/s] 72% 29/40 [00:08<00:03,  3.41it/s] 75% 30/40 [00:08<00:02,  3.61it/s] 75% 30/40 [00:08<00:02,  3.53it/s] 75% 30/40 [00:08<00:02,  3.49it/s] 75% 30/40 [00:08<00:02,  3.46it/s] 75% 30/40 [00:08<00:02,  3.50it/s] 75% 30/40 [00:08<00:02,  3.49it/s] 75% 30/40 [00:08<00:02,  3.47it/s] 75% 30/40 [00:08<00:02,  3.40it/s] 78% 31/40 [00:08<00:02,  3.59it/s] 78% 31/40 [00:08<00:02,  3.49it/s] 78% 31/40 [00:08<00:02,  3.46it/s] 78% 31/40 [00:08<00:02,  3.45it/s] 78% 31/40 [00:08<00:02,  3.50it/s] 78% 31/40 [00:08<00:02,  3.52it/s] 78% 31/40 [00:08<00:02,  3.45it/s] 78% 31/40 [00:09<00:02,  3.44it/s] 80% 32/40 [00:09<00:02,  3.58it/s] 80% 32/40 [00:09<00:02,  3.47it/s] 80% 32/40 [00:09<00:02,  3.48it/s] 80% 32/40 [00:09<00:02,  3.47it/s] 80% 32/40 [00:09<00:02,  3.47it/s] 80% 32/40 [00:09<00:02,  3.46it/s] 80% 32/40 [00:09<00:02,  3.46it/s] 80% 32/40 [00:09<00:02,  3.47it/s] 82% 33/40 [00:09<00:01,  3.55it/s] 82% 33/40 [00:09<00:02,  3.45it/s] 82% 33/40 [00:09<00:01,  3.55it/s] 82% 33/40 [00:09<00:02,  3.48it/s] 82% 33/40 [00:09<00:01,  3.52it/s] 82% 33/40 [00:09<00:01,  3.54it/s] 82% 33/40 [00:09<00:02,  3.40it/s] 82% 33/40 [00:09<00:02,  3.43it/s] 85% 34/40 [00:09<00:01,  3.56it/s] 85% 34/40 [00:09<00:01,  3.47it/s] 85% 34/40 [00:09<00:01,  3.48it/s] 85% 34/40 [00:09<00:01,  3.58it/s] 85% 34/40 [00:09<00:01,  3.50it/s] 85% 34/40 [00:09<00:01,  3.49it/s] 85% 34/40 [00:09<00:01,  3.43it/s] 85% 34/40 [00:09<00:01,  3.43it/s] 88% 35/40 [00:09<00:01,  3.52it/s] 88% 35/40 [00:09<00:01,  3.47it/s] 88% 35/40 [00:09<00:01,  3.52it/s] 88% 35/40 [00:10<00:01,  3.50it/s] 88% 35/40 [00:10<00:01,  3.49it/s] 88% 35/40 [00:10<00:01,  3.47it/s] 88% 35/40 [00:10<00:01,  3.38it/s] 88% 35/40 [00:10<00:01,  3.42it/s] 90% 36/40 [00:10<00:01,  3.50it/s] 90% 36/40 [00:10<00:01,  3.58it/s] 90% 36/40 [00:10<00:01,  3.48it/s] 90% 36/40 [00:10<00:01,  3.49it/s] 90% 36/40 [00:10<00:01,  3.44it/s] 90% 36/40 [00:10<00:01,  3.46it/s] 90% 36/40 [00:10<00:01,  3.40it/s] 90% 36/40 [00:10<00:01,  3.41it/s] 92% 37/40 [00:10<00:00,  3.50it/s] 92% 37/40 [00:10<00:00,  3.56it/s] 92% 37/40 [00:10<00:00,  3.43it/s] 92% 37/40 [00:10<00:00,  3.53it/s] 92% 37/40 [00:10<00:00,  3.50it/s] 92% 37/40 [00:10<00:00,  3.42it/s] 92% 37/40 [00:10<00:00,  3.45it/s] 95% 38/40 [00:10<00:00,  3.53it/s] 92% 37/40 [00:10<00:00,  3.40it/s] 95% 38/40 [00:10<00:00,  3.53it/s] 95% 38/40 [00:10<00:00,  3.44it/s] 98% 39/40 [00:10<00:00,  4.36it/s] 95% 38/40 [00:10<00:00,  3.57it/s] 95% 38/40 [00:10<00:00,  3.57it/s] 95% 38/40 [00:10<00:00,  3.47it/s] 95% 38/40 [00:10<00:00,  3.83it/s] 98% 39/40 [00:10<00:00,  4.24it/s] 95% 38/40 [00:11<00:00,  3.46it/s] 98% 39/40 [00:11<00:00,  4.18it/s]100% 40/40 [00:11<00:00,  4.62it/s]100% 40/40 [00:11<00:00,  3.63it/s]
 98% 39/40 [00:11<00:00,  3.79it/s]100% 40/40 [00:11<00:00,  3.60it/s]
100% 40/40 [00:11<00:00,  4.43it/s]100% 40/40 [00:11<00:00,  3.58it/s]
100% 40/40 [00:11<00:00,  4.67it/s]100% 40/40 [00:11<00:00,  3.55it/s]
 98% 39/40 [00:11<00:00,  3.56it/s] 98% 39/40 [00:11<00:00,  3.52it/s]100% 40/40 [00:11<00:00,  3.57it/s] 98% 39/40 [00:11<00:00,  3.70it/s]
100% 40/40 [00:11<00:00,  3.55it/s]
 98% 39/40 [00:11<00:00,  3.49it/s]100% 40/40 [00:11<00:00,  3.52it/s]
100% 40/40 [00:11<00:00,  4.37it/s]100% 40/40 [00:11<00:00,  3.51it/s]
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.413890 (0.018262224197387697 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.371299 (0.018194078063964843 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.391537 (0.018226459884643553 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.394133 (0.018230613327026367 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.453144 (0.01832502975463867 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.333391 (0.018133425521850585 s / img per device, on 8 devices)
2021-10-16 13:03:39,364 maskrcnn_benchmark.inference INFO: Total inference time: 0:00:11.358910 (0.01817425537109375 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.364719 (0.018183549880981444 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.358910 (0.01817425537109375 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.026s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.027s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.027s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.027s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.027s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.027s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.028s
2021-10-16 13:03:39,587 maskrcnn_benchmark.timed_section INFO: EXPOSED: Launching evaluation preparation tasks took 0.033s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.033s
:::MLLOG {"namespace": "", "time_ms": 1634389419590, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 168, "first_epoch_num": 9, "epoch_count": 1}}
:::MLLOG {"namespace": "", "time_ms": 1634389419591, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 169, "epoch_num": 9}}
INFO:maskrcnn_benchmark.trainer:eta: 2:03:36  iter: 7350  loss: 0.7393 (0.8530)  loss_classifier: 0.2473 (0.2910)  loss_box_reg: 0.1070 (0.1299)  loss_mask: 0.2805 (0.3104)  loss_objectness: 0.0399 (0.0587)  loss_rpn_box_reg: 0.0570 (0.0630)  time: 0.6720 (0.6964)  data: 0.0004 (0.0183)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 2:03:36  iter: 7350  loss: 0.6832 (0.8548)  loss_classifier: 0.2243 (0.2915)  loss_box_reg: 0.1035 (0.1306)  loss_mask: 0.2683 (0.3104)  loss_objectness: 0.0396 (0.0591)  loss_rpn_box_reg: 0.0489 (0.0632)  time: 0.6734 (0.6964)  data: 0.0004 (0.0183)  lr: 0.160000  max mem: 14843
INFO:maskrcnn_benchmark.trainer:eta: 2:03:36  iter: 7350  loss: 0.7593 (0.8559)  loss_classifier: 0.2521 (0.2919)  loss_box_reg: 0.1119 (0.1304)  loss_mask: 0.2803 (0.3109)  loss_objectness: 0.0444 (0.0592)  loss_rpn_box_reg: 0.0553 (0.0635)  time: 0.6701 (0.6964)  data: 0.0005 (0.0183)  lr: 0.160000  max mem: 14714
INFO:maskrcnn_benchmark.trainer:eta: 2:03:36  iter: 7350  loss: 0.7558 (0.8533)  loss_classifier: 0.2389 (0.2911)  loss_box_reg: 0.1161 (0.1299)  loss_mask: 0.2829 (0.3101)  loss_objectness: 0.0394 (0.0590)  loss_rpn_box_reg: 0.0548 (0.0632)  time: 0.6852 (0.6964)  data: 0.0004 (0.0183)  lr: 0.160000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 2:03:36  iter: 7350  loss: 0.7298 (0.8542)  loss_classifier: 0.2654 (0.2917)  loss_box_reg: 0.1202 (0.1306)  loss_mask: 0.2687 (0.3100)  loss_objectness: 0.0416 (0.0587)  loss_rpn_box_reg: 0.0493 (0.0632)  time: 0.6800 (0.6964)  data: 0.0005 (0.0183)  lr: 0.160000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 2:03:36  iter: 7350  loss: 0.6781 (0.8556)  loss_classifier: 0.2335 (0.2920)  loss_box_reg: 0.1072 (0.1305)  loss_mask: 0.2681 (0.3104)  loss_objectness: 0.0406 (0.0595)  loss_rpn_box_reg: 0.0398 (0.0632)  time: 0.6775 (0.6964)  data: 0.0004 (0.0183)  lr: 0.160000  max mem: 14656
INFO:maskrcnn_benchmark.trainer:eta: 2:03:36  iter: 7350  loss: 0.7276 (0.8531)  loss_classifier: 0.2455 (0.2911)  loss_box_reg: 0.1053 (0.1301)  loss_mask: 0.2773 (0.3099)  loss_objectness: 0.0367 (0.0589)  loss_rpn_box_reg: 0.0470 (0.0631)  time: 0.6840 (0.6964)  data: 0.0004 (0.0183)  lr: 0.160000  max mem: 14996
2021-10-16 13:03:49,377 maskrcnn_benchmark.trainer INFO: eta: 2:03:36  iter: 7350  loss: 0.7092 (0.8566)  loss_classifier: 0.2338 (0.2925)  loss_box_reg: 0.1126 (0.1308)  loss_mask: 0.2703 (0.3103)  loss_objectness: 0.0421 (0.0593)  loss_rpn_box_reg: 0.0486 (0.0637)  time: 0.6735 (0.6964)  data: 0.0004 (0.0185)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:03:36  iter: 7350  loss: 0.7092 (0.8566)  loss_classifier: 0.2338 (0.2925)  loss_box_reg: 0.1126 (0.1308)  loss_mask: 0.2703 (0.3103)  loss_objectness: 0.0421 (0.0593)  loss_rpn_box_reg: 0.0486 (0.0637)  time: 0.6735 (0.6964)  data: 0.0004 (0.0185)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634389429377, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8566171328591652, "loss_classifier": 0.2925362884238058, "loss_box_reg": 0.13078344450157997, "loss_mask": 0.310292750915297, "loss_objectness": 0.0593493320835995, "loss_rpn_box_reg": 0.06365531738518047, "time": 0.6964099846405237, "data": 0.01849305873014489, "throughput": 183.79977717589972}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 7350}}
:::MLLOG {"namespace": "", "time_ms": 1634389429377, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 183.79977717589972, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.timed_section:Prepping took 9.954 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 10.037 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 10.074 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 10.066 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 10.348 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 10.374 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 10.631 seconds total
2021-10-16 13:03:51,530 maskrcnn_benchmark.timed_section INFO: Prepping took 10.802 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 10.802 seconds total
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.205s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.205s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.205s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.206s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.207s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.207s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.207s
2021-10-16 13:04:02,636 maskrcnn_benchmark.timed_section INFO: EXPOSED: Launching evaluation task took 0.208s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.208s
Evaluating predictions
Loading and preparing results...
resFile is ./inference/coco_2017_val/segm.json
Loading and preparing results...
resFile is ./inference/coco_2017_val/bbox.json
DONE (t=1.02s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=2.38s)
Running per image evaluation...
Evaluate annotation type *segm*
DONE (t=2.02s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.29092
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.48978
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.31095
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.16052
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.32202
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.37903
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.27209
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.43375
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.45501
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.26112
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.49199
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.58068
DONE (t=3.01s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.27608
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.46557
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.28974
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.11409
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.29945
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.40938
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.26288
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.40863
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.42666
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.22493
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.46872
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.56705
2021-10-16 13:04:15,314 maskrcnn_benchmark.trainer INFO: bbox mAP: 0.29092151548297884, segm mAP: 0.27607850668783196
INFO:maskrcnn_benchmark.trainer:bbox mAP: 0.29092151548297884, segm mAP: 0.27607850668783196
:::MLLOG {"namespace": "", "time_ms": 1634389455314, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": {"BBOX": 0.29092151548297884, "SEGM": 0.27607850668783196}, "metadata": {"file": "tools/train_mlperf.py", "lineno": 133, "epoch_num": 8}}
:::MLLOG {"namespace": "", "time_ms": 1634389455314, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 134, "epoch_num": 8}}
INFO:maskrcnn_benchmark.trainer:eta: 2:02:58  iter: 7400  loss: 0.7182 (0.8523)  loss_classifier: 0.2269 (0.2908)  loss_box_reg: 0.1145 (0.1301)  loss_mask: 0.2675 (0.3096)  loss_objectness: 0.0369 (0.0588)  loss_rpn_box_reg: 0.0469 (0.0631)  time: 0.6320 (0.6961)  data: 0.0004 (0.0182)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 2:02:58  iter: 7400  loss: 0.7315 (0.8527)  loss_classifier: 0.2429 (0.2908)  loss_box_reg: 0.1188 (0.1299)  loss_mask: 0.2728 (0.3098)  loss_objectness: 0.0368 (0.0590)  loss_rpn_box_reg: 0.0532 (0.0632)  time: 0.6318 (0.6961)  data: 0.0004 (0.0182)  lr: 0.160000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 2:02:58  iter: 7400  loss: 0.7234 (0.8549)  loss_classifier: 0.2368 (0.2917)  loss_box_reg: 0.1073 (0.1304)  loss_mask: 0.2693 (0.3101)  loss_objectness: 0.0411 (0.0594)  loss_rpn_box_reg: 0.0482 (0.0632)  time: 0.6304 (0.6961)  data: 0.0003 (0.0182)  lr: 0.160000  max mem: 14656
INFO:maskrcnn_benchmark.trainer:eta: 2:02:58  iter: 7400  loss: 0.7269 (0.8534)  loss_classifier: 0.2293 (0.2914)  loss_box_reg: 0.1100 (0.1305)  loss_mask: 0.2776 (0.3097)  loss_objectness: 0.0373 (0.0586)  loss_rpn_box_reg: 0.0595 (0.0631)  time: 0.6304 (0.6961)  data: 0.0004 (0.0182)  lr: 0.160000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 2:02:58  iter: 7400  loss: 0.6766 (0.8520)  loss_classifier: 0.2331 (0.2906)  loss_box_reg: 0.1083 (0.1298)  loss_mask: 0.2728 (0.3101)  loss_objectness: 0.0325 (0.0586)  loss_rpn_box_reg: 0.0518 (0.0629)  time: 0.6304 (0.6961)  data: 0.0003 (0.0182)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 2:02:58  iter: 7400  loss: 0.7430 (0.8542)  loss_classifier: 0.2390 (0.2913)  loss_box_reg: 0.1162 (0.1305)  loss_mask: 0.2812 (0.3102)  loss_objectness: 0.0390 (0.0590)  loss_rpn_box_reg: 0.0509 (0.0632)  time: 0.6332 (0.6961)  data: 0.0004 (0.0182)  lr: 0.160000  max mem: 14843
2021-10-16 13:04:21,596 maskrcnn_benchmark.trainer INFO: eta: 2:02:58  iter: 7400  loss: 0.7756 (0.8559)  loss_classifier: 0.2658 (0.2922)  loss_box_reg: 0.1237 (0.1307)  loss_mask: 0.2735 (0.3101)  loss_objectness: 0.0463 (0.0593)  loss_rpn_box_reg: 0.0696 (0.0636)  time: 0.6333 (0.6961)  data: 0.0004 (0.0184)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:02:58  iter: 7400  loss: 0.7370 (0.8551)  loss_classifier: 0.2473 (0.2916)  loss_box_reg: 0.1115 (0.1303)  loss_mask: 0.2796 (0.3106)  loss_objectness: 0.0363 (0.0591)  loss_rpn_box_reg: 0.0529 (0.0635)  time: 0.6332 (0.6961)  data: 0.0003 (0.0182)  lr: 0.160000  max mem: 14714
INFO:maskrcnn_benchmark.trainer:eta: 2:02:58  iter: 7400  loss: 0.7756 (0.8559)  loss_classifier: 0.2658 (0.2922)  loss_box_reg: 0.1237 (0.1307)  loss_mask: 0.2735 (0.3101)  loss_objectness: 0.0463 (0.0593)  loss_rpn_box_reg: 0.0696 (0.0636)  time: 0.6333 (0.6961)  data: 0.0004 (0.0184)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634389461596, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8558873372585387, "loss_classifier": 0.2922334853610074, "loss_box_reg": 0.130705743016694, "loss_mask": 0.31006054558061263, "loss_objectness": 0.059253378201376744, "loss_rpn_box_reg": 0.06363418551388424, "time": 0.6960584515494269, "data": 0.018413726155822343, "throughput": 183.8926022880289}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 7400}}
:::MLLOG {"namespace": "", "time_ms": 1634389461596, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 183.8926022880289, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:02:18  iter: 7450  loss: 0.7226 (0.8535)  loss_classifier: 0.2387 (0.2910)  loss_box_reg: 0.1107 (0.1304)  loss_mask: 0.2726 (0.3100)  loss_objectness: 0.0398 (0.0589)  loss_rpn_box_reg: 0.0519 (0.0632)  time: 0.6284 (0.6956)  data: 0.0004 (0.0181)  lr: 0.160000  max mem: 14843
INFO:maskrcnn_benchmark.trainer:eta: 2:02:18  iter: 7450  loss: 0.7370 (0.8544)  loss_classifier: 0.2446 (0.2913)  loss_box_reg: 0.1107 (0.1302)  loss_mask: 0.2759 (0.3104)  loss_objectness: 0.0418 (0.0590)  loss_rpn_box_reg: 0.0539 (0.0634)  time: 0.6284 (0.6956)  data: 0.0004 (0.0181)  lr: 0.160000  max mem: 14714
2021-10-16 13:04:52,884 maskrcnn_benchmark.trainer INFO: eta: 2:02:18  iter: 7450  loss: 0.7287 (0.8551)  loss_classifier: 0.2466 (0.2920)  loss_box_reg: 0.1195 (0.1306)  loss_mask: 0.2647 (0.3098)  loss_objectness: 0.0422 (0.0591)  loss_rpn_box_reg: 0.0456 (0.0636)  time: 0.6284 (0.6956)  data: 0.0003 (0.0183)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:02:18  iter: 7450  loss: 0.7287 (0.8551)  loss_classifier: 0.2466 (0.2920)  loss_box_reg: 0.1195 (0.1306)  loss_mask: 0.2647 (0.3098)  loss_objectness: 0.0422 (0.0591)  loss_rpn_box_reg: 0.0456 (0.0636)  time: 0.6284 (0.6956)  data: 0.0003 (0.0183)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:02:18  iter: 7450  loss: 0.7638 (0.8519)  loss_classifier: 0.2526 (0.2905)  loss_box_reg: 0.1176 (0.1298)  loss_mask: 0.2728 (0.3096)  loss_objectness: 0.0404 (0.0589)  loss_rpn_box_reg: 0.0519 (0.0632)  time: 0.6292 (0.6956)  data: 0.0004 (0.0181)  lr: 0.160000  max mem: 14673
:::MLLOG {"namespace": "", "time_ms": 1634389492885, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8550638574881841, "loss_classifier": 0.2919529255454572, "loss_box_reg": 0.13060167853111063, "loss_mask": 0.3098076280811489, "loss_objectness": 0.05912429082651166, "loss_rpn_box_reg": 0.06357733497021083, "time": 0.6955867272895454, "data": 0.018293097739251668, "throughput": 184.01731226064445}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 7450}}
INFO:maskrcnn_benchmark.trainer:eta: 2:02:18  iter: 7450  loss: 0.6737 (0.8516)  loss_classifier: 0.2350 (0.2905)  loss_box_reg: 0.1033 (0.1300)  loss_mask: 0.2702 (0.3094)  loss_objectness: 0.0383 (0.0587)  loss_rpn_box_reg: 0.0423 (0.0630)  time: 0.6290 (0.6956)  data: 0.0004 (0.0181)  lr: 0.160000  max mem: 14996
:::MLLOG {"namespace": "", "time_ms": 1634389492885, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 184.01731226064445, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:02:18  iter: 7450  loss: 0.7276 (0.8512)  loss_classifier: 0.2429 (0.2903)  loss_box_reg: 0.1196 (0.1297)  loss_mask: 0.2644 (0.3098)  loss_objectness: 0.0426 (0.0585)  loss_rpn_box_reg: 0.0523 (0.0629)  time: 0.6286 (0.6956)  data: 0.0004 (0.0181)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 2:02:18  iter: 7450  loss: 0.7688 (0.8542)  loss_classifier: 0.2685 (0.2914)  loss_box_reg: 0.1166 (0.1304)  loss_mask: 0.2696 (0.3099)  loss_objectness: 0.0453 (0.0593)  loss_rpn_box_reg: 0.0715 (0.0632)  time: 0.6286 (0.6956)  data: 0.0004 (0.0181)  lr: 0.160000  max mem: 14656
INFO:maskrcnn_benchmark.trainer:eta: 2:02:18  iter: 7450  loss: 0.7093 (0.8524)  loss_classifier: 0.2419 (0.2910)  loss_box_reg: 0.1099 (0.1304)  loss_mask: 0.2552 (0.3095)  loss_objectness: 0.0354 (0.0585)  loss_rpn_box_reg: 0.0411 (0.0630)  time: 0.6286 (0.6956)  data: 0.0004 (0.0181)  lr: 0.160000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 2:01:38  iter: 7500  loss: 0.7379 (0.8503)  loss_classifier: 0.2534 (0.2899)  loss_box_reg: 0.1168 (0.1296)  loss_mask: 0.2834 (0.3095)  loss_objectness: 0.0388 (0.0584)  loss_rpn_box_reg: 0.0565 (0.0629)  time: 0.6219 (0.6951)  data: 0.0004 (0.0180)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 2:01:38  iter: 7500  loss: 0.6836 (0.8515)  loss_classifier: 0.2292 (0.2906)  loss_box_reg: 0.1040 (0.1302)  loss_mask: 0.2577 (0.3093)  loss_objectness: 0.0321 (0.0584)  loss_rpn_box_reg: 0.0450 (0.0630)  time: 0.6217 (0.6951)  data: 0.0003 (0.0180)  lr: 0.160000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 2:01:38  iter: 7500  loss: 0.7163 (0.8535)  loss_classifier: 0.2331 (0.2911)  loss_box_reg: 0.1313 (0.1303)  loss_mask: 0.2723 (0.3097)  loss_objectness: 0.0354 (0.0592)  loss_rpn_box_reg: 0.0465 (0.0631)  time: 0.6219 (0.6951)  data: 0.0004 (0.0180)  lr: 0.160000  max mem: 14656
INFO:maskrcnn_benchmark.trainer:eta: 2:01:38  iter: 7500  loss: 0.7410 (0.8508)  loss_classifier: 0.2428 (0.2902)  loss_box_reg: 0.1041 (0.1299)  loss_mask: 0.2796 (0.3092)  loss_objectness: 0.0382 (0.0586)  loss_rpn_box_reg: 0.0618 (0.0630)  time: 0.6227 (0.6951)  data: 0.0004 (0.0180)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 2:01:38  iter: 7500  loss: 0.6989 (0.8511)  loss_classifier: 0.2278 (0.2901)  loss_box_reg: 0.1100 (0.1296)  loss_mask: 0.2692 (0.3094)  loss_objectness: 0.0405 (0.0588)  loss_rpn_box_reg: 0.0698 (0.0632)  time: 0.6232 (0.6951)  data: 0.0004 (0.0180)  lr: 0.160000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 2:01:38  iter: 7500  loss: 0.6900 (0.8525)  loss_classifier: 0.2341 (0.2905)  loss_box_reg: 0.1087 (0.1303)  loss_mask: 0.2746 (0.3098)  loss_objectness: 0.0392 (0.0588)  loss_rpn_box_reg: 0.0456 (0.0632)  time: 0.6241 (0.6951)  data: 0.0003 (0.0180)  lr: 0.160000  max mem: 14843
2021-10-16 13:05:24,107 maskrcnn_benchmark.trainer INFO: eta: 2:01:38  iter: 7500  loss: 0.6990 (0.8542)  loss_classifier: 0.2179 (0.2916)  loss_box_reg: 0.1032 (0.1305)  loss_mask: 0.2771 (0.3096)  loss_objectness: 0.0352 (0.0590)  loss_rpn_box_reg: 0.0443 (0.0636)  time: 0.6242 (0.6951)  data: 0.0004 (0.0182)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:01:38  iter: 7500  loss: 0.7132 (0.8535)  loss_classifier: 0.2492 (0.2910)  loss_box_reg: 0.1174 (0.1301)  loss_mask: 0.2645 (0.3101)  loss_objectness: 0.0372 (0.0589)  loss_rpn_box_reg: 0.0519 (0.0634)  time: 0.6241 (0.6951)  data: 0.0004 (0.0180)  lr: 0.160000  max mem: 14714
INFO:maskrcnn_benchmark.trainer:eta: 2:01:38  iter: 7500  loss: 0.6990 (0.8542)  loss_classifier: 0.2179 (0.2916)  loss_box_reg: 0.1032 (0.1305)  loss_mask: 0.2771 (0.3096)  loss_objectness: 0.0352 (0.0590)  loss_rpn_box_reg: 0.0443 (0.0636)  time: 0.6242 (0.6951)  data: 0.0004 (0.0182)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634389524107, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8542498846213022, "loss_classifier": 0.2915864962687095, "loss_box_reg": 0.13049643074121947, "loss_mask": 0.30960024678111076, "loss_objectness": 0.05901206925449272, "loss_rpn_box_reg": 0.06355464202774068, "time": 0.6951124474843343, "data": 0.018174348735809327, "throughput": 184.14286848587145}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 7500}}
:::MLLOG {"namespace": "", "time_ms": 1634389524107, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 184.14286848587145, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:00:58  iter: 7550  loss: 0.6916 (0.8526)  loss_classifier: 0.2241 (0.2907)  loss_box_reg: 0.1066 (0.1300)  loss_mask: 0.2569 (0.3099)  loss_objectness: 0.0381 (0.0588)  loss_rpn_box_reg: 0.0457 (0.0633)  time: 0.6232 (0.6946)  data: 0.0003 (0.0178)  lr: 0.160000  max mem: 14714
2021-10-16 13:05:55,242 maskrcnn_benchmark.trainer INFO: eta: 2:00:58  iter: 7550  loss: 0.7903 (0.8535)  loss_classifier: 0.2653 (0.2913)  loss_box_reg: 0.1205 (0.1304)  loss_mask: 0.2818 (0.3094)  loss_objectness: 0.0519 (0.0589)  loss_rpn_box_reg: 0.0562 (0.0635)  time: 0.6232 (0.6946)  data: 0.0004 (0.0181)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:00:58  iter: 7550  loss: 0.7903 (0.8535)  loss_classifier: 0.2653 (0.2913)  loss_box_reg: 0.1205 (0.1304)  loss_mask: 0.2818 (0.3094)  loss_objectness: 0.0519 (0.0589)  loss_rpn_box_reg: 0.0562 (0.0635)  time: 0.6232 (0.6946)  data: 0.0004 (0.0181)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:00:58  iter: 7550  loss: 0.7115 (0.8517)  loss_classifier: 0.2223 (0.2902)  loss_box_reg: 0.1114 (0.1302)  loss_mask: 0.2780 (0.3095)  loss_objectness: 0.0389 (0.0587)  loss_rpn_box_reg: 0.0462 (0.0631)  time: 0.6232 (0.6946)  data: 0.0003 (0.0179)  lr: 0.160000  max mem: 14843
:::MLLOG {"namespace": "", "time_ms": 1634389555242, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8534937839002799, "loss_classifier": 0.29132489334175127, "loss_box_reg": 0.13039905926098566, "loss_mask": 0.30935845639926707, "loss_objectness": 0.058922646771869716, "loss_rpn_box_reg": 0.06348872860400191, "time": 0.6946329597763667, "data": 0.018056852549117132, "throughput": 184.2699776889494}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 7550}}
:::MLLOG {"namespace": "", "time_ms": 1634389555243, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 184.2699776889494, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:00:58  iter: 7550  loss: 0.7416 (0.8501)  loss_classifier: 0.2457 (0.2899)  loss_box_reg: 0.1130 (0.1298)  loss_mask: 0.2743 (0.3089)  loss_objectness: 0.0363 (0.0585)  loss_rpn_box_reg: 0.0599 (0.0629)  time: 0.6248 (0.6946)  data: 0.0004 (0.0179)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 2:00:58  iter: 7550  loss: 0.7286 (0.8501)  loss_classifier: 0.2479 (0.2898)  loss_box_reg: 0.1134 (0.1295)  loss_mask: 0.2693 (0.3091)  loss_objectness: 0.0382 (0.0586)  loss_rpn_box_reg: 0.0472 (0.0631)  time: 0.6251 (0.6946)  data: 0.0004 (0.0179)  lr: 0.160000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 2:00:58  iter: 7550  loss: 0.7269 (0.8495)  loss_classifier: 0.2428 (0.2896)  loss_box_reg: 0.1026 (0.1295)  loss_mask: 0.2852 (0.3093)  loss_objectness: 0.0331 (0.0583)  loss_rpn_box_reg: 0.0562 (0.0628)  time: 0.6266 (0.6946)  data: 0.0003 (0.0179)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 2:00:58  iter: 7550  loss: 0.6719 (0.8526)  loss_classifier: 0.2251 (0.2908)  loss_box_reg: 0.1128 (0.1302)  loss_mask: 0.2607 (0.3094)  loss_objectness: 0.0322 (0.0591)  loss_rpn_box_reg: 0.0474 (0.0631)  time: 0.6262 (0.6946)  data: 0.0004 (0.0178)  lr: 0.160000  max mem: 14656
INFO:maskrcnn_benchmark.trainer:eta: 2:00:58  iter: 7550  loss: 0.7305 (0.8508)  loss_classifier: 0.2302 (0.2903)  loss_box_reg: 0.1183 (0.1301)  loss_mask: 0.2750 (0.3090)  loss_objectness: 0.0424 (0.0583)  loss_rpn_box_reg: 0.0508 (0.0630)  time: 0.6266 (0.6946)  data: 0.0003 (0.0178)  lr: 0.160000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 2:00:19  iter: 7600  loss: 0.7280 (0.8518)  loss_classifier: 0.2381 (0.2904)  loss_box_reg: 0.1083 (0.1299)  loss_mask: 0.2763 (0.3096)  loss_objectness: 0.0376 (0.0586)  loss_rpn_box_reg: 0.0474 (0.0633)  time: 0.6235 (0.6942)  data: 0.0004 (0.0177)  lr: 0.160000  max mem: 14714
2021-10-16 13:06:26,541 maskrcnn_benchmark.trainer INFO: eta: 2:00:19  iter: 7600  loss: 0.7470 (0.8528)  loss_classifier: 0.2486 (0.2911)  loss_box_reg: 0.1186 (0.1303)  loss_mask: 0.2734 (0.3091)  loss_objectness: 0.0393 (0.0588)  loss_rpn_box_reg: 0.0530 (0.0634)  time: 0.6233 (0.6942)  data: 0.0004 (0.0179)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:00:19  iter: 7600  loss: 0.7470 (0.8528)  loss_classifier: 0.2486 (0.2911)  loss_box_reg: 0.1186 (0.1303)  loss_mask: 0.2734 (0.3091)  loss_objectness: 0.0393 (0.0588)  loss_rpn_box_reg: 0.0530 (0.0634)  time: 0.6233 (0.6942)  data: 0.0004 (0.0179)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 2:00:19  iter: 7600  loss: 0.6931 (0.8508)  loss_classifier: 0.2268 (0.2899)  loss_box_reg: 0.1091 (0.1301)  loss_mask: 0.2739 (0.3092)  loss_objectness: 0.0318 (0.0585)  loss_rpn_box_reg: 0.0434 (0.0631)  time: 0.6236 (0.6942)  data: 0.0004 (0.0177)  lr: 0.160000  max mem: 14843
:::MLLOG {"namespace": "", "time_ms": 1634389586541, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8527565337403824, "loss_classifier": 0.29105310560155073, "loss_box_reg": 0.1303308919586523, "loss_mask": 0.30913712099390595, "loss_objectness": 0.058824367238772345, "loss_rpn_box_reg": 0.06341104843518942, "time": 0.6941812313230414, "data": 0.017941601935185885, "throughput": 184.38988872696044}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 7600}}
:::MLLOG {"namespace": "", "time_ms": 1634389586541, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 184.38988872696044, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 2:00:19  iter: 7600  loss: 0.7267 (0.8493)  loss_classifier: 0.2398 (0.2896)  loss_box_reg: 0.1118 (0.1297)  loss_mask: 0.2705 (0.3087)  loss_objectness: 0.0405 (0.0584)  loss_rpn_box_reg: 0.0510 (0.0629)  time: 0.6227 (0.6942)  data: 0.0004 (0.0178)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 2:00:19  iter: 7600  loss: 0.7222 (0.8494)  loss_classifier: 0.2565 (0.2896)  loss_box_reg: 0.1199 (0.1294)  loss_mask: 0.2776 (0.3089)  loss_objectness: 0.0411 (0.0585)  loss_rpn_box_reg: 0.0481 (0.0630)  time: 0.6226 (0.6942)  data: 0.0004 (0.0178)  lr: 0.160000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 2:00:19  iter: 7600  loss: 0.7277 (0.8488)  loss_classifier: 0.2530 (0.2894)  loss_box_reg: 0.1192 (0.1294)  loss_mask: 0.2742 (0.3091)  loss_objectness: 0.0414 (0.0582)  loss_rpn_box_reg: 0.0542 (0.0628)  time: 0.6247 (0.6942)  data: 0.0004 (0.0177)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 2:00:19  iter: 7600  loss: 0.6865 (0.8518)  loss_classifier: 0.2281 (0.2905)  loss_box_reg: 0.1122 (0.1301)  loss_mask: 0.2618 (0.3091)  loss_objectness: 0.0349 (0.0590)  loss_rpn_box_reg: 0.0423 (0.0630)  time: 0.6243 (0.6942)  data: 0.0003 (0.0177)  lr: 0.160000  max mem: 14656
INFO:maskrcnn_benchmark.trainer:eta: 2:00:19  iter: 7600  loss: 0.7372 (0.8501)  loss_classifier: 0.2645 (0.2901)  loss_box_reg: 0.1165 (0.1300)  loss_mask: 0.2800 (0.3088)  loss_objectness: 0.0384 (0.0582)  loss_rpn_box_reg: 0.0567 (0.0629)  time: 0.6243 (0.6942)  data: 0.0004 (0.0177)  lr: 0.160000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:59:40  iter: 7650  loss: 0.7281 (0.8482)  loss_classifier: 0.2462 (0.2891)  loss_box_reg: 0.1088 (0.1293)  loss_mask: 0.2675 (0.3089)  loss_objectness: 0.0429 (0.0581)  loss_rpn_box_reg: 0.0543 (0.0628)  time: 0.6266 (0.6937)  data: 0.0004 (0.0176)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:59:40  iter: 7650  loss: 0.6746 (0.8493)  loss_classifier: 0.2412 (0.2898)  loss_box_reg: 0.1046 (0.1299)  loss_mask: 0.2694 (0.3086)  loss_objectness: 0.0332 (0.0581)  loss_rpn_box_reg: 0.0465 (0.0629)  time: 0.6268 (0.6937)  data: 0.0004 (0.0176)  lr: 0.160000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:59:40  iter: 7650  loss: 0.7617 (0.8511)  loss_classifier: 0.2679 (0.2903)  loss_box_reg: 0.1243 (0.1300)  loss_mask: 0.2713 (0.3089)  loss_objectness: 0.0435 (0.0589)  loss_rpn_box_reg: 0.0501 (0.0630)  time: 0.6268 (0.6937)  data: 0.0004 (0.0176)  lr: 0.160000  max mem: 14656
INFO:maskrcnn_benchmark.trainer:eta: 1:59:40  iter: 7650  loss: 0.7340 (0.8488)  loss_classifier: 0.2503 (0.2894)  loss_box_reg: 0.1169 (0.1296)  loss_mask: 0.2839 (0.3085)  loss_objectness: 0.0395 (0.0583)  loss_rpn_box_reg: 0.0530 (0.0629)  time: 0.6253 (0.6937)  data: 0.0004 (0.0177)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:59:40  iter: 7650  loss: 0.6463 (0.8485)  loss_classifier: 0.2083 (0.2892)  loss_box_reg: 0.0989 (0.1293)  loss_mask: 0.2680 (0.3086)  loss_objectness: 0.0344 (0.0584)  loss_rpn_box_reg: 0.0463 (0.0629)  time: 0.6251 (0.6937)  data: 0.0003 (0.0176)  lr: 0.160000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 1:59:40  iter: 7650  loss: 0.7413 (0.8502)  loss_classifier: 0.2698 (0.2897)  loss_box_reg: 0.1175 (0.1300)  loss_mask: 0.2695 (0.3090)  loss_objectness: 0.0464 (0.0584)  loss_rpn_box_reg: 0.0490 (0.0630)  time: 0.6243 (0.6937)  data: 0.0004 (0.0176)  lr: 0.160000  max mem: 14843
2021-10-16 13:06:57,865 maskrcnn_benchmark.trainer INFO: eta: 1:59:40  iter: 7650  loss: 0.7240 (0.8518)  loss_classifier: 0.2385 (0.2907)  loss_box_reg: 0.1127 (0.1302)  loss_mask: 0.2730 (0.3089)  loss_objectness: 0.0353 (0.0587)  loss_rpn_box_reg: 0.0516 (0.0633)  time: 0.6243 (0.6937)  data: 0.0003 (0.0178)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:59:40  iter: 7650  loss: 0.7305 (0.8512)  loss_classifier: 0.2462 (0.2901)  loss_box_reg: 0.1149 (0.1298)  loss_mask: 0.2736 (0.3094)  loss_objectness: 0.0426 (0.0586)  loss_rpn_box_reg: 0.0582 (0.0632)  time: 0.6244 (0.6937)  data: 0.0004 (0.0176)  lr: 0.160000  max mem: 14714
INFO:maskrcnn_benchmark.trainer:eta: 1:59:40  iter: 7650  loss: 0.7240 (0.8518)  loss_classifier: 0.2385 (0.2907)  loss_box_reg: 0.1127 (0.1302)  loss_mask: 0.2730 (0.3089)  loss_objectness: 0.0353 (0.0587)  loss_rpn_box_reg: 0.0516 (0.0633)  time: 0.6243 (0.6937)  data: 0.0003 (0.0178)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634389617865, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8518172369556489, "loss_classifier": 0.29069703913299866, "loss_box_reg": 0.13021328940838453, "loss_mask": 0.3088946212273018, "loss_objectness": 0.058694538646955896, "loss_rpn_box_reg": 0.06331774900953462, "time": 0.6937388133379369, "data": 0.01782755471522512, "throughput": 184.50747967253798}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 7650}}
:::MLLOG {"namespace": "", "time_ms": 1634389617866, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 184.50747967253798, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:59:00  iter: 7700  loss: 0.7479 (0.8496)  loss_classifier: 0.2535 (0.2895)  loss_box_reg: 0.1147 (0.1299)  loss_mask: 0.2844 (0.3088)  loss_objectness: 0.0362 (0.0583)  loss_rpn_box_reg: 0.0527 (0.0630)  time: 0.6217 (0.6933)  data: 0.0004 (0.0175)  lr: 0.160000  max mem: 14843
2021-10-16 13:07:29,087 maskrcnn_benchmark.trainer INFO: eta: 1:59:00  iter: 7700  loss: 0.7092 (0.8510)  loss_classifier: 0.2269 (0.2904)  loss_box_reg: 0.1022 (0.1301)  loss_mask: 0.2842 (0.3087)  loss_objectness: 0.0356 (0.0586)  loss_rpn_box_reg: 0.0417 (0.0632)  time: 0.6218 (0.6933)  data: 0.0003 (0.0177)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:59:00  iter: 7700  loss: 0.6655 (0.8478)  loss_classifier: 0.2037 (0.2890)  loss_box_reg: 0.0997 (0.1295)  loss_mask: 0.2609 (0.3083)  loss_objectness: 0.0340 (0.0582)  loss_rpn_box_reg: 0.0457 (0.0628)  time: 0.6233 (0.6933)  data: 0.0003 (0.0175)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:59:00  iter: 7700  loss: 0.7092 (0.8510)  loss_classifier: 0.2269 (0.2904)  loss_box_reg: 0.1022 (0.1301)  loss_mask: 0.2842 (0.3087)  loss_objectness: 0.0356 (0.0586)  loss_rpn_box_reg: 0.0417 (0.0632)  time: 0.6218 (0.6933)  data: 0.0003 (0.0177)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:59:00  iter: 7700  loss: 0.7593 (0.8507)  loss_classifier: 0.2426 (0.2900)  loss_box_reg: 0.1200 (0.1298)  loss_mask: 0.2789 (0.3092)  loss_objectness: 0.0394 (0.0585)  loss_rpn_box_reg: 0.0584 (0.0632)  time: 0.6217 (0.6933)  data: 0.0004 (0.0175)  lr: 0.160000  max mem: 14714
INFO:maskrcnn_benchmark.trainer:eta: 1:59:00  iter: 7700  loss: 0.7239 (0.8478)  loss_classifier: 0.2468 (0.2890)  loss_box_reg: 0.1043 (0.1292)  loss_mask: 0.2746 (0.3084)  loss_objectness: 0.0366 (0.0583)  loss_rpn_box_reg: 0.0513 (0.0629)  time: 0.6223 (0.6933)  data: 0.0004 (0.0175)  lr: 0.160000  max mem: 14673
:::MLLOG {"namespace": "", "time_ms": 1634389649087, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8510130373107923, "loss_classifier": 0.2904048995451107, "loss_box_reg": 0.13007703263599837, "loss_mask": 0.3086955327124565, "loss_objectness": 0.05859651385310602, "loss_rpn_box_reg": 0.06323905906615802, "time": 0.6932887801257047, "data": 0.01771477460861206, "throughput": 184.62724865789906}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 7700}}
:::MLLOG {"namespace": "", "time_ms": 1634389649087, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 184.62724865789906, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:59:00  iter: 7700  loss: 0.6952 (0.8475)  loss_classifier: 0.2399 (0.2889)  loss_box_reg: 0.1022 (0.1292)  loss_mask: 0.2712 (0.3087)  loss_objectness: 0.0352 (0.0580)  loss_rpn_box_reg: 0.0555 (0.0627)  time: 0.6242 (0.6933)  data: 0.0003 (0.0175)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:59:00  iter: 7700  loss: 0.7392 (0.8504)  loss_classifier: 0.2432 (0.2900)  loss_box_reg: 0.1180 (0.1299)  loss_mask: 0.2711 (0.3087)  loss_objectness: 0.0404 (0.0588)  loss_rpn_box_reg: 0.0477 (0.0629)  time: 0.6243 (0.6933)  data: 0.0004 (0.0175)  lr: 0.160000  max mem: 14656
INFO:maskrcnn_benchmark.trainer:eta: 1:59:00  iter: 7700  loss: 0.7892 (0.8487)  loss_classifier: 0.2649 (0.2896)  loss_box_reg: 0.1238 (0.1299)  loss_mask: 0.2850 (0.3084)  loss_objectness: 0.0434 (0.0580)  loss_rpn_box_reg: 0.0597 (0.0628)  time: 0.6243 (0.6933)  data: 0.0004 (0.0175)  lr: 0.160000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:58:21  iter: 7750  loss: 0.7286 (0.8472)  loss_classifier: 0.2437 (0.2887)  loss_box_reg: 0.1232 (0.1292)  loss_mask: 0.2720 (0.3082)  loss_objectness: 0.0446 (0.0582)  loss_rpn_box_reg: 0.0470 (0.0628)  time: 0.6221 (0.6929)  data: 0.0004 (0.0174)  lr: 0.160000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 1:58:21  iter: 7750  loss: 0.6757 (0.8471)  loss_classifier: 0.2316 (0.2888)  loss_box_reg: 0.1016 (0.1294)  loss_mask: 0.2691 (0.3080)  loss_objectness: 0.0325 (0.0581)  loss_rpn_box_reg: 0.0406 (0.0627)  time: 0.6227 (0.6928)  data: 0.0003 (0.0174)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:58:21  iter: 7750  loss: 0.7081 (0.8489)  loss_classifier: 0.2424 (0.2892)  loss_box_reg: 0.1045 (0.1298)  loss_mask: 0.2711 (0.3086)  loss_objectness: 0.0423 (0.0583)  loss_rpn_box_reg: 0.0559 (0.0629)  time: 0.6226 (0.6928)  data: 0.0004 (0.0174)  lr: 0.160000  max mem: 14843
2021-10-16 13:08:00,299 maskrcnn_benchmark.trainer INFO: eta: 1:58:21  iter: 7750  loss: 0.7429 (0.8502)  loss_classifier: 0.2311 (0.2901)  loss_box_reg: 0.1022 (0.1300)  loss_mask: 0.2673 (0.3084)  loss_objectness: 0.0432 (0.0585)  loss_rpn_box_reg: 0.0504 (0.0632)  time: 0.6227 (0.6928)  data: 0.0003 (0.0176)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:58:21  iter: 7750  loss: 0.7142 (0.8499)  loss_classifier: 0.2460 (0.2897)  loss_box_reg: 0.1079 (0.1297)  loss_mask: 0.2636 (0.3090)  loss_objectness: 0.0386 (0.0584)  loss_rpn_box_reg: 0.0381 (0.0632)  time: 0.6226 (0.6929)  data: 0.0004 (0.0174)  lr: 0.160000  max mem: 14714
INFO:maskrcnn_benchmark.trainer:eta: 1:58:21  iter: 7750  loss: 0.7429 (0.8502)  loss_classifier: 0.2311 (0.2901)  loss_box_reg: 0.1022 (0.1300)  loss_mask: 0.2673 (0.3084)  loss_objectness: 0.0432 (0.0585)  loss_rpn_box_reg: 0.0504 (0.0632)  time: 0.6227 (0.6928)  data: 0.0003 (0.0176)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634389680299, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8502234009427408, "loss_classifier": 0.2901082469196089, "loss_box_reg": 0.12996089592236545, "loss_mask": 0.3084398524568927, "loss_objectness": 0.05849635563574491, "loss_rpn_box_reg": 0.06321805055595695, "time": 0.692843243598938, "data": 0.017603514886671497, "throughput": 184.74597419051196}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 7750}}
:::MLLOG {"namespace": "", "time_ms": 1634389680299, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 184.74597419051196, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:58:21  iter: 7750  loss: 0.6800 (0.8469)  loss_classifier: 0.2266 (0.2886)  loss_box_reg: 0.1071 (0.1291)  loss_mask: 0.2840 (0.3085)  loss_objectness: 0.0398 (0.0579)  loss_rpn_box_reg: 0.0506 (0.0627)  time: 0.6228 (0.6928)  data: 0.0003 (0.0174)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:58:21  iter: 7750  loss: 0.7078 (0.8496)  loss_classifier: 0.2318 (0.2897)  loss_box_reg: 0.1178 (0.1298)  loss_mask: 0.2680 (0.3085)  loss_objectness: 0.0341 (0.0587)  loss_rpn_box_reg: 0.0472 (0.0629)  time: 0.6227 (0.6928)  data: 0.0003 (0.0174)  lr: 0.160000  max mem: 14656
INFO:maskrcnn_benchmark.trainer:eta: 1:58:21  iter: 7750  loss: 0.7829 (0.8480)  loss_classifier: 0.2450 (0.2894)  loss_box_reg: 0.1210 (0.1298)  loss_mask: 0.2889 (0.3082)  loss_objectness: 0.0396 (0.0579)  loss_rpn_box_reg: 0.0602 (0.0628)  time: 0.6227 (0.6928)  data: 0.0004 (0.0174)  lr: 0.160000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:57:42  iter: 7800  loss: 0.6714 (0.8461)  loss_classifier: 0.2178 (0.2883)  loss_box_reg: 0.1019 (0.1290)  loss_mask: 0.2670 (0.3083)  loss_objectness: 0.0399 (0.0578)  loss_rpn_box_reg: 0.0453 (0.0626)  time: 0.6219 (0.6924)  data: 0.0003 (0.0173)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:57:42  iter: 7800  loss: 0.7804 (0.8491)  loss_classifier: 0.2646 (0.2895)  loss_box_reg: 0.1282 (0.1298)  loss_mask: 0.2682 (0.3082)  loss_objectness: 0.0468 (0.0587)  loss_rpn_box_reg: 0.0576 (0.0629)  time: 0.6222 (0.6924)  data: 0.0004 (0.0173)  lr: 0.160000  max mem: 14787
INFO:maskrcnn_benchmark.trainer:eta: 1:57:42  iter: 7800  loss: 0.7690 (0.8474)  loss_classifier: 0.2694 (0.2891)  loss_box_reg: 0.1303 (0.1297)  loss_mask: 0.2800 (0.3080)  loss_objectness: 0.0406 (0.0578)  loss_rpn_box_reg: 0.0510 (0.0627)  time: 0.6227 (0.6924)  data: 0.0004 (0.0173)  lr: 0.160000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:57:42  iter: 7800  loss: 0.7418 (0.8464)  loss_classifier: 0.2309 (0.2886)  loss_box_reg: 0.1082 (0.1293)  loss_mask: 0.2674 (0.3078)  loss_objectness: 0.0402 (0.0580)  loss_rpn_box_reg: 0.0524 (0.0627)  time: 0.6228 (0.6924)  data: 0.0004 (0.0173)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:57:42  iter: 7800  loss: 0.7117 (0.8465)  loss_classifier: 0.2469 (0.2885)  loss_box_reg: 0.1100 (0.1291)  loss_mask: 0.2809 (0.3080)  loss_objectness: 0.0407 (0.0581)  loss_rpn_box_reg: 0.0490 (0.0628)  time: 0.6232 (0.6924)  data: 0.0004 (0.0173)  lr: 0.160000  max mem: 14673
2021-10-16 13:08:31,517 maskrcnn_benchmark.trainer INFO: eta: 1:57:42  iter: 7800  loss: 0.7139 (0.8495)  loss_classifier: 0.2363 (0.2898)  loss_box_reg: 0.1048 (0.1299)  loss_mask: 0.2778 (0.3082)  loss_objectness: 0.0369 (0.0584)  loss_rpn_box_reg: 0.0479 (0.0632)  time: 0.6221 (0.6924)  data: 0.0004 (0.0175)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:57:42  iter: 7800  loss: 0.7742 (0.8491)  loss_classifier: 0.2466 (0.2894)  loss_box_reg: 0.1207 (0.1296)  loss_mask: 0.2737 (0.3088)  loss_objectness: 0.0384 (0.0583)  loss_rpn_box_reg: 0.0471 (0.0631)  time: 0.6220 (0.6924)  data: 0.0003 (0.0173)  lr: 0.160000  max mem: 14714
INFO:maskrcnn_benchmark.trainer:eta: 1:57:42  iter: 7800  loss: 0.7139 (0.8495)  loss_classifier: 0.2363 (0.2898)  loss_box_reg: 0.1048 (0.1299)  loss_mask: 0.2778 (0.3082)  loss_objectness: 0.0369 (0.0584)  loss_rpn_box_reg: 0.0479 (0.0632)  time: 0.6221 (0.6924)  data: 0.0004 (0.0175)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:57:42  iter: 7800  loss: 0.7119 (0.8481)  loss_classifier: 0.2553 (0.2889)  loss_box_reg: 0.1064 (0.1297)  loss_mask: 0.2750 (0.3084)  loss_objectness: 0.0426 (0.0582)  loss_rpn_box_reg: 0.0378 (0.0629)  time: 0.6222 (0.6924)  data: 0.0003 (0.0173)  lr: 0.160000  max mem: 14843
:::MLLOG {"namespace": "", "time_ms": 1634389711517, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8494986031491023, "loss_classifier": 0.28982848596018856, "loss_box_reg": 0.12987123467454997, "loss_mask": 0.3082301308252873, "loss_objectness": 0.058380142375588036, "loss_rpn_box_reg": 0.06318860986783432, "time": 0.6924042633557931, "data": 0.017493657851830508, "throughput": 184.8631020549147}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 7800}}
:::MLLOG {"namespace": "", "time_ms": 1634389711517, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 184.8631020549147, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:57:03  iter: 7850  loss: 0.6946 (0.8454)  loss_classifier: 0.2237 (0.2881)  loss_box_reg: 0.1049 (0.1289)  loss_mask: 0.2756 (0.3081)  loss_objectness: 0.0357 (0.0577)  loss_rpn_box_reg: 0.0518 (0.0626)  time: 0.6206 (0.6920)  data: 0.0003 (0.0172)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:57:03  iter: 7850  loss: 0.7394 (0.8468)  loss_classifier: 0.2552 (0.2889)  loss_box_reg: 0.1236 (0.1296)  loss_mask: 0.2729 (0.3078)  loss_objectness: 0.0464 (0.0577)  loss_rpn_box_reg: 0.0522 (0.0627)  time: 0.6206 (0.6920)  data: 0.0003 (0.0172)  lr: 0.160000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:57:03  iter: 7850  loss: 0.7444 (0.8486)  loss_classifier: 0.2603 (0.2894)  loss_box_reg: 0.1140 (0.1297)  loss_mask: 0.2819 (0.3081)  loss_objectness: 0.0354 (0.0586)  loss_rpn_box_reg: 0.0472 (0.0628)  time: 0.6206 (0.6920)  data: 0.0004 (0.0172)  lr: 0.160000  max mem: 14787
INFO:maskrcnn_benchmark.trainer:eta: 1:57:03  iter: 7850  loss: 0.6941 (0.8457)  loss_classifier: 0.2420 (0.2883)  loss_box_reg: 0.1144 (0.1292)  loss_mask: 0.2672 (0.3076)  loss_objectness: 0.0405 (0.0579)  loss_rpn_box_reg: 0.0544 (0.0627)  time: 0.6217 (0.6920)  data: 0.0004 (0.0172)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:57:03  iter: 7850  loss: 0.7227 (0.8458)  loss_classifier: 0.2460 (0.2882)  loss_box_reg: 0.1127 (0.1290)  loss_mask: 0.2693 (0.3078)  loss_objectness: 0.0368 (0.0580)  loss_rpn_box_reg: 0.0515 (0.0627)  time: 0.6217 (0.6920)  data: 0.0004 (0.0172)  lr: 0.160000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 1:57:03  iter: 7850  loss: 0.6691 (0.8473)  loss_classifier: 0.2253 (0.2887)  loss_box_reg: 0.1081 (0.1296)  loss_mask: 0.2638 (0.3081)  loss_objectness: 0.0303 (0.0580)  loss_rpn_box_reg: 0.0495 (0.0629)  time: 0.6227 (0.6920)  data: 0.0003 (0.0172)  lr: 0.160000  max mem: 14843
2021-10-16 13:09:02,708 maskrcnn_benchmark.trainer INFO: eta: 1:57:03  iter: 7850  loss: 0.6960 (0.8487)  loss_classifier: 0.2499 (0.2895)  loss_box_reg: 0.1057 (0.1298)  loss_mask: 0.2597 (0.3080)  loss_objectness: 0.0348 (0.0583)  loss_rpn_box_reg: 0.0462 (0.0631)  time: 0.6226 (0.6920)  data: 0.0004 (0.0174)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:57:03  iter: 7850  loss: 0.6973 (0.8485)  loss_classifier: 0.2278 (0.2892)  loss_box_reg: 0.1039 (0.1295)  loss_mask: 0.2742 (0.3086)  loss_objectness: 0.0369 (0.0582)  loss_rpn_box_reg: 0.0453 (0.0631)  time: 0.6230 (0.6920)  data: 0.0003 (0.0172)  lr: 0.160000  max mem: 14714
INFO:maskrcnn_benchmark.trainer:eta: 1:57:03  iter: 7850  loss: 0.6960 (0.8487)  loss_classifier: 0.2499 (0.2895)  loss_box_reg: 0.1057 (0.1298)  loss_mask: 0.2597 (0.3080)  loss_objectness: 0.0348 (0.0583)  loss_rpn_box_reg: 0.0462 (0.0631)  time: 0.6226 (0.6920)  data: 0.0004 (0.0174)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634389742708, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8486898865897184, "loss_classifier": 0.2895472095925717, "loss_box_reg": 0.129754123968179, "loss_mask": 0.3079832679128191, "loss_objectness": 0.058271869480799716, "loss_rpn_box_reg": 0.063133416178571, "time": 0.6919674156577724, "data": 0.017385061835027804, "throughput": 184.97980844708619}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 7850}}
:::MLLOG {"namespace": "", "time_ms": 1634389742708, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 184.97980844708619, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:56:24  iter: 7900  loss: 0.6637 (0.8450)  loss_classifier: 0.2482 (0.2880)  loss_box_reg: 0.1043 (0.1289)  loss_mask: 0.2711 (0.3076)  loss_objectness: 0.0365 (0.0579)  loss_rpn_box_reg: 0.0366 (0.0626)  time: 0.6240 (0.6916)  data: 0.0004 (0.0171)  lr: 0.160000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 1:56:24  iter: 7900  loss: 0.7292 (0.8447)  loss_classifier: 0.2399 (0.2878)  loss_box_reg: 0.1164 (0.1289)  loss_mask: 0.2693 (0.3079)  loss_objectness: 0.0397 (0.0576)  loss_rpn_box_reg: 0.0494 (0.0625)  time: 0.6227 (0.6915)  data: 0.0004 (0.0171)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:56:24  iter: 7900  loss: 0.7478 (0.8451)  loss_classifier: 0.2452 (0.2881)  loss_box_reg: 0.1148 (0.1292)  loss_mask: 0.2734 (0.3074)  loss_objectness: 0.0464 (0.0578)  loss_rpn_box_reg: 0.0568 (0.0626)  time: 0.6234 (0.6916)  data: 0.0004 (0.0171)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:56:24  iter: 7900  loss: 0.7395 (0.8481)  loss_classifier: 0.2547 (0.2892)  loss_box_reg: 0.1191 (0.1297)  loss_mask: 0.2859 (0.3079)  loss_objectness: 0.0481 (0.0585)  loss_rpn_box_reg: 0.0530 (0.0628)  time: 0.6229 (0.6915)  data: 0.0004 (0.0171)  lr: 0.160000  max mem: 14796
INFO:maskrcnn_benchmark.trainer:eta: 1:56:24  iter: 7900  loss: 0.7080 (0.8461)  loss_classifier: 0.2556 (0.2887)  loss_box_reg: 0.1066 (0.1295)  loss_mask: 0.2633 (0.3076)  loss_objectness: 0.0383 (0.0576)  loss_rpn_box_reg: 0.0372 (0.0627)  time: 0.6228 (0.6915)  data: 0.0004 (0.0171)  lr: 0.160000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:56:24  iter: 7900  loss: 0.6981 (0.8465)  loss_classifier: 0.2317 (0.2884)  loss_box_reg: 0.1069 (0.1295)  loss_mask: 0.2584 (0.3079)  loss_objectness: 0.0376 (0.0579)  loss_rpn_box_reg: 0.0450 (0.0628)  time: 0.6236 (0.6915)  data: 0.0003 (0.0171)  lr: 0.160000  max mem: 14843
INFO:maskrcnn_benchmark.trainer:eta: 1:56:24  iter: 7900  loss: 0.7377 (0.8479)  loss_classifier: 0.2356 (0.2889)  loss_box_reg: 0.1107 (0.1294)  loss_mask: 0.2727 (0.3083)  loss_objectness: 0.0380 (0.0581)  loss_rpn_box_reg: 0.0631 (0.0630)  time: 0.6235 (0.6916)  data: 0.0004 (0.0171)  lr: 0.160000  max mem: 14714
2021-10-16 13:09:33,973 maskrcnn_benchmark.trainer INFO: eta: 1:56:24  iter: 7900  loss: 0.7261 (0.8481)  loss_classifier: 0.2392 (0.2893)  loss_box_reg: 0.1219 (0.1297)  loss_mask: 0.2848 (0.3078)  loss_objectness: 0.0417 (0.0582)  loss_rpn_box_reg: 0.0563 (0.0631)  time: 0.6236 (0.6915)  data: 0.0004 (0.0173)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:56:24  iter: 7900  loss: 0.7261 (0.8481)  loss_classifier: 0.2392 (0.2893)  loss_box_reg: 0.1219 (0.1297)  loss_mask: 0.2848 (0.3078)  loss_objectness: 0.0417 (0.0582)  loss_rpn_box_reg: 0.0563 (0.0631)  time: 0.6236 (0.6915)  data: 0.0004 (0.0173)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634389773973, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8480701267681544, "loss_classifier": 0.28931291090631034, "loss_box_reg": 0.1296981688715883, "loss_mask": 0.3077896599697916, "loss_objectness": 0.05818667743036736, "loss_rpn_box_reg": 0.06308271011349427, "time": 0.6915455160563505, "data": 0.017277833147893978, "throughput": 185.09266133332855}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 7900}}
:::MLLOG {"namespace": "", "time_ms": 1634389773973, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 185.09266133332855, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:55:45  iter: 7950  loss: 0.7238 (0.8459)  loss_classifier: 0.2496 (0.2881)  loss_box_reg: 0.1067 (0.1294)  loss_mask: 0.2721 (0.3077)  loss_objectness: 0.0363 (0.0578)  loss_rpn_box_reg: 0.0482 (0.0628)  time: 0.6237 (0.6911)  data: 0.0004 (0.0170)  lr: 0.160000  max mem: 14843
INFO:maskrcnn_benchmark.trainer:eta: 1:55:45  iter: 7950  loss: 0.6886 (0.8470)  loss_classifier: 0.2281 (0.2886)  loss_box_reg: 0.0960 (0.1293)  loss_mask: 0.2663 (0.3081)  loss_objectness: 0.0393 (0.0580)  loss_rpn_box_reg: 0.0478 (0.0630)  time: 0.6233 (0.6911)  data: 0.0003 (0.0170)  lr: 0.160000  max mem: 14714
2021-10-16 13:10:05,206 maskrcnn_benchmark.trainer INFO: eta: 1:55:45  iter: 7950  loss: 0.7797 (0.8475)  loss_classifier: 0.2544 (0.2891)  loss_box_reg: 0.1233 (0.1296)  loss_mask: 0.2689 (0.3075)  loss_objectness: 0.0423 (0.0581)  loss_rpn_box_reg: 0.0538 (0.0631)  time: 0.6236 (0.6911)  data: 0.0004 (0.0172)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:55:45  iter: 7950  loss: 0.7797 (0.8475)  loss_classifier: 0.2544 (0.2891)  loss_box_reg: 0.1233 (0.1296)  loss_mask: 0.2689 (0.3075)  loss_objectness: 0.0423 (0.0581)  loss_rpn_box_reg: 0.0538 (0.0631)  time: 0.6236 (0.6911)  data: 0.0004 (0.0172)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634389805207, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8475037205444192, "loss_classifier": 0.2891221657779607, "loss_box_reg": 0.12964502578820894, "loss_mask": 0.3075496923886005, "loss_objectness": 0.05811459302023615, "loss_rpn_box_reg": 0.06307224406280888, "time": 0.6911249042007158, "data": 0.01717200588130351, "throughput": 185.20530691631157}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 7950}}
:::MLLOG {"namespace": "", "time_ms": 1634389805207, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 185.20530691631157, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:55:45  iter: 7950  loss: 0.7561 (0.8444)  loss_classifier: 0.2468 (0.2877)  loss_box_reg: 0.1131 (0.1288)  loss_mask: 0.2656 (0.3074)  loss_objectness: 0.0517 (0.0579)  loss_rpn_box_reg: 0.0604 (0.0626)  time: 0.6238 (0.6911)  data: 0.0004 (0.0170)  lr: 0.160000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 1:55:45  iter: 7950  loss: 0.6910 (0.8444)  loss_classifier: 0.2350 (0.2878)  loss_box_reg: 0.1073 (0.1291)  loss_mask: 0.2715 (0.3072)  loss_objectness: 0.0368 (0.0578)  loss_rpn_box_reg: 0.0465 (0.0626)  time: 0.6236 (0.6911)  data: 0.0004 (0.0170)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:55:45  iter: 7950  loss: 0.7385 (0.8440)  loss_classifier: 0.2568 (0.2876)  loss_box_reg: 0.1088 (0.1288)  loss_mask: 0.2645 (0.3076)  loss_objectness: 0.0392 (0.0575)  loss_rpn_box_reg: 0.0545 (0.0625)  time: 0.6240 (0.6911)  data: 0.0004 (0.0170)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:55:45  iter: 7950  loss: 0.6810 (0.8454)  loss_classifier: 0.2275 (0.2884)  loss_box_reg: 0.1021 (0.1294)  loss_mask: 0.2631 (0.3074)  loss_objectness: 0.0370 (0.0576)  loss_rpn_box_reg: 0.0421 (0.0626)  time: 0.6241 (0.6911)  data: 0.0003 (0.0170)  lr: 0.160000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:55:45  iter: 7950  loss: 0.7115 (0.8473)  loss_classifier: 0.2344 (0.2889)  loss_box_reg: 0.1063 (0.1296)  loss_mask: 0.2663 (0.3077)  loss_objectness: 0.0371 (0.0584)  loss_rpn_box_reg: 0.0434 (0.0628)  time: 0.6241 (0.6911)  data: 0.0003 (0.0170)  lr: 0.160000  max mem: 14796
INFO:maskrcnn_benchmark.trainer:eta: 1:55:07  iter: 8000  loss: 0.7286 (0.8437)  loss_classifier: 0.2511 (0.2876)  loss_box_reg: 0.1111 (0.1290)  loss_mask: 0.2753 (0.3070)  loss_objectness: 0.0377 (0.0577)  loss_rpn_box_reg: 0.0490 (0.0626)  time: 0.6233 (0.6907)  data: 0.0004 (0.0169)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:55:07  iter: 8000  loss: 0.7529 (0.8438)  loss_classifier: 0.2461 (0.2875)  loss_box_reg: 0.1171 (0.1287)  loss_mask: 0.2831 (0.3072)  loss_objectness: 0.0423 (0.0578)  loss_rpn_box_reg: 0.0538 (0.0626)  time: 0.6227 (0.6907)  data: 0.0003 (0.0169)  lr: 0.160000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 1:55:07  iter: 8000  loss: 0.7490 (0.8434)  loss_classifier: 0.2519 (0.2873)  loss_box_reg: 0.1144 (0.1287)  loss_mask: 0.2781 (0.3074)  loss_objectness: 0.0373 (0.0574)  loss_rpn_box_reg: 0.0489 (0.0624)  time: 0.6234 (0.6907)  data: 0.0004 (0.0169)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:55:06  iter: 8000  loss: 0.7741 (0.8449)  loss_classifier: 0.2564 (0.2882)  loss_box_reg: 0.1247 (0.1294)  loss_mask: 0.2796 (0.3072)  loss_objectness: 0.0428 (0.0575)  loss_rpn_box_reg: 0.0546 (0.0626)  time: 0.6234 (0.6907)  data: 0.0004 (0.0169)  lr: 0.160000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:55:06  iter: 8000  loss: 0.7618 (0.8466)  loss_classifier: 0.2527 (0.2886)  loss_box_reg: 0.1255 (0.1295)  loss_mask: 0.2783 (0.3075)  loss_objectness: 0.0448 (0.0583)  loss_rpn_box_reg: 0.0454 (0.0627)  time: 0.6235 (0.6907)  data: 0.0004 (0.0169)  lr: 0.160000  max mem: 14796
INFO:maskrcnn_benchmark.trainer:eta: 1:55:07  iter: 8000  loss: 0.7185 (0.8452)  loss_classifier: 0.2354 (0.2879)  loss_box_reg: 0.1120 (0.1293)  loss_mask: 0.2826 (0.3075)  loss_objectness: 0.0370 (0.0577)  loss_rpn_box_reg: 0.0406 (0.0627)  time: 0.6224 (0.6907)  data: 0.0004 (0.0169)  lr: 0.160000  max mem: 14843
2021-10-16 13:10:36,339 maskrcnn_benchmark.trainer INFO: eta: 1:55:06  iter: 8000  loss: 0.7211 (0.8469)  loss_classifier: 0.2475 (0.2889)  loss_box_reg: 0.1134 (0.1296)  loss_mask: 0.2770 (0.3073)  loss_objectness: 0.0433 (0.0580)  loss_rpn_box_reg: 0.0486 (0.0630)  time: 0.6223 (0.6907)  data: 0.0004 (0.0171)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:55:07  iter: 8000  loss: 0.7468 (0.8462)  loss_classifier: 0.2533 (0.2883)  loss_box_reg: 0.1175 (0.1292)  loss_mask: 0.2753 (0.3079)  loss_objectness: 0.0425 (0.0579)  loss_rpn_box_reg: 0.0597 (0.0629)  time: 0.6225 (0.6907)  data: 0.0004 (0.0169)  lr: 0.160000  max mem: 14714
INFO:maskrcnn_benchmark.trainer:eta: 1:55:06  iter: 8000  loss: 0.7211 (0.8469)  loss_classifier: 0.2475 (0.2889)  loss_box_reg: 0.1134 (0.1296)  loss_mask: 0.2770 (0.3073)  loss_objectness: 0.0433 (0.0580)  loss_rpn_box_reg: 0.0486 (0.0630)  time: 0.6223 (0.6907)  data: 0.0004 (0.0171)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634389836339, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8468923511952162, "loss_classifier": 0.2888832089146599, "loss_box_reg": 0.1295800945814408, "loss_mask": 0.30733128209784627, "loss_objectness": 0.058048541586729695, "loss_rpn_box_reg": 0.06304922449321021, "time": 0.6906968868076802, "data": 0.017067715704441072, "throughput": 185.32007664259348}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 8000}}
:::MLLOG {"namespace": "", "time_ms": 1634389836339, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 185.32007664259348, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}

Grad overflow on iteration  8007
Using dynamic loss scale of  262144.0

Grad overflow on iteration  8007
Using dynamic loss scale of  262144.0

Grad overflow on iteration  8007
Grad overflow on iteration 
Using dynamic loss scale of   262144.08007

Using dynamic loss scale of  262144.0

Grad overflow on iteration  8007
Using dynamic loss scale of  262144.0

Grad overflow on iteration  8007
Using dynamic loss scale of 
Grad overflow on iteration   8007262144.0

Using dynamic loss scale of  262144.0

Grad overflow on iteration  8007
Using dynamic loss scale of  262144.0
INFO:maskrcnn_benchmark.trainer:eta: 1:54:28  iter: 8050  loss: 0.7338 (0.8430)  loss_classifier: 0.2337 (0.2872)  loss_box_reg: 0.1172 (0.1287)  loss_mask: 0.2673 (0.3073)  loss_objectness: 0.0409 (0.0574)  loss_rpn_box_reg: 0.0510 (0.0624)  time: 0.6224 (0.6903)  data: 0.0004 (0.0168)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:54:28  iter: 8050  loss: 0.7090 (0.8443)  loss_classifier: 0.2457 (0.2880)  loss_box_reg: 0.1116 (0.1293)  loss_mask: 0.2758 (0.3070)  loss_objectness: 0.0470 (0.0574)  loss_rpn_box_reg: 0.0506 (0.0625)  time: 0.6224 (0.6903)  data: 0.0003 (0.0168)  lr: 0.160000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:54:28  iter: 8050  loss: 0.7091 (0.8460)  loss_classifier: 0.2421 (0.2884)  loss_box_reg: 0.1071 (0.1294)  loss_mask: 0.2691 (0.3073)  loss_objectness: 0.0437 (0.0582)  loss_rpn_box_reg: 0.0557 (0.0627)  time: 0.6225 (0.6903)  data: 0.0003 (0.0168)  lr: 0.160000  max mem: 14796
INFO:maskrcnn_benchmark.trainer:eta: 1:54:28  iter: 8050  loss: 0.7603 (0.8432)  loss_classifier: 0.2539 (0.2873)  loss_box_reg: 0.1177 (0.1286)  loss_mask: 0.2830 (0.3070)  loss_objectness: 0.0370 (0.0577)  loss_rpn_box_reg: 0.0499 (0.0626)  time: 0.6221 (0.6903)  data: 0.0003 (0.0168)  lr: 0.160000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 1:54:28  iter: 8050  loss: 0.7329 (0.8430)  loss_classifier: 0.2331 (0.2873)  loss_box_reg: 0.1148 (0.1289)  loss_mask: 0.2712 (0.3068)  loss_objectness: 0.0372 (0.0576)  loss_rpn_box_reg: 0.0466 (0.0625)  time: 0.6229 (0.6903)  data: 0.0004 (0.0168)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:54:28  iter: 8050  loss: 0.7292 (0.8447)  loss_classifier: 0.2415 (0.2877)  loss_box_reg: 0.1143 (0.1293)  loss_mask: 0.2657 (0.3073)  loss_objectness: 0.0368 (0.0577)  loss_rpn_box_reg: 0.0488 (0.0627)  time: 0.6232 (0.6903)  data: 0.0004 (0.0168)  lr: 0.160000  max mem: 14843
INFO:maskrcnn_benchmark.trainer:eta: 1:54:28  iter: 8050  loss: 0.7104 (0.8455)  loss_classifier: 0.2401 (0.2881)  loss_box_reg: 0.1120 (0.1291)  loss_mask: 0.2673 (0.3077)  loss_objectness: 0.0359 (0.0578)  loss_rpn_box_reg: 0.0472 (0.0629)  time: 0.6230 (0.6903)  data: 0.0004 (0.0168)  lr: 0.160000  max mem: 14714
2021-10-16 13:11:07,579 maskrcnn_benchmark.trainer INFO: eta: 1:54:28  iter: 8050  loss: 0.7125 (0.8464)  loss_classifier: 0.2508 (0.2887)  loss_box_reg: 0.1108 (0.1295)  loss_mask: 0.2789 (0.3072)  loss_objectness: 0.0335 (0.0580)  loss_rpn_box_reg: 0.0483 (0.0631)  time: 0.6232 (0.6903)  data: 0.0003 (0.0170)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:54:28  iter: 8050  loss: 0.7125 (0.8464)  loss_classifier: 0.2508 (0.2887)  loss_box_reg: 0.1108 (0.1295)  loss_mask: 0.2789 (0.3072)  loss_objectness: 0.0335 (0.0580)  loss_rpn_box_reg: 0.0483 (0.0631)  time: 0.6232 (0.6903)  data: 0.0003 (0.0170)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634389867579, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8464372852870397, "loss_classifier": 0.28871653818288207, "loss_box_reg": 0.12951896350480824, "loss_mask": 0.3071626770829562, "loss_objectness": 0.05798850352985796, "loss_rpn_box_reg": 0.06305060346176998, "time": 0.6902876496166916, "data": 0.01696429865700858, "throughput": 185.4299436924257}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 8050}}
:::MLLOG {"namespace": "", "time_ms": 1634389867579, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 185.4299436924257, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:53:49  iter: 8100  loss: 0.6578 (0.8423)  loss_classifier: 0.2293 (0.2870)  loss_box_reg: 0.0956 (0.1288)  loss_mask: 0.2710 (0.3066)  loss_objectness: 0.0416 (0.0575)  loss_rpn_box_reg: 0.0580 (0.0624)  time: 0.6244 (0.6899)  data: 0.0004 (0.0167)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:53:49  iter: 8100  loss: 0.7013 (0.8422)  loss_classifier: 0.2400 (0.2869)  loss_box_reg: 0.1098 (0.1286)  loss_mask: 0.2735 (0.3070)  loss_objectness: 0.0393 (0.0573)  loss_rpn_box_reg: 0.0502 (0.0624)  time: 0.6235 (0.6899)  data: 0.0003 (0.0167)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:53:49  iter: 8100  loss: 0.6881 (0.8453)  loss_classifier: 0.2379 (0.2881)  loss_box_reg: 0.1043 (0.1293)  loss_mask: 0.2632 (0.3071)  loss_objectness: 0.0375 (0.0582)  loss_rpn_box_reg: 0.0397 (0.0627)  time: 0.6238 (0.6899)  data: 0.0003 (0.0167)  lr: 0.160000  max mem: 14796
INFO:maskrcnn_benchmark.trainer:eta: 1:53:49  iter: 8100  loss: 0.7171 (0.8435)  loss_classifier: 0.2341 (0.2877)  loss_box_reg: 0.1149 (0.1292)  loss_mask: 0.2815 (0.3068)  loss_objectness: 0.0399 (0.0573)  loss_rpn_box_reg: 0.0488 (0.0625)  time: 0.6238 (0.6899)  data: 0.0003 (0.0167)  lr: 0.160000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:53:49  iter: 8100  loss: 0.7290 (0.8425)  loss_classifier: 0.2427 (0.2870)  loss_box_reg: 0.1035 (0.1285)  loss_mask: 0.2744 (0.3068)  loss_objectness: 0.0451 (0.0576)  loss_rpn_box_reg: 0.0536 (0.0625)  time: 0.6240 (0.6899)  data: 0.0003 (0.0167)  lr: 0.160000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 1:53:49  iter: 8100  loss: 0.6996 (0.8441)  loss_classifier: 0.2443 (0.2875)  loss_box_reg: 0.1048 (0.1292)  loss_mask: 0.2705 (0.3071)  loss_objectness: 0.0372 (0.0576)  loss_rpn_box_reg: 0.0549 (0.0627)  time: 0.6237 (0.6899)  data: 0.0003 (0.0167)  lr: 0.160000  max mem: 14843
2021-10-16 13:11:38,755 maskrcnn_benchmark.trainer INFO: eta: 1:53:49  iter: 8100  loss: 0.7253 (0.8458)  loss_classifier: 0.2426 (0.2885)  loss_box_reg: 0.1171 (0.1295)  loss_mask: 0.2682 (0.3070)  loss_objectness: 0.0479 (0.0579)  loss_rpn_box_reg: 0.0501 (0.0630)  time: 0.6239 (0.6899)  data: 0.0004 (0.0169)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:53:49  iter: 8100  loss: 0.7253 (0.8458)  loss_classifier: 0.2426 (0.2885)  loss_box_reg: 0.1171 (0.1295)  loss_mask: 0.2682 (0.3070)  loss_objectness: 0.0479 (0.0579)  loss_rpn_box_reg: 0.0501 (0.0630)  time: 0.6239 (0.6899)  data: 0.0004 (0.0169)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:53:49  iter: 8100  loss: 0.7099 (0.8449)  loss_classifier: 0.2378 (0.2878)  loss_box_reg: 0.1109 (0.1290)  loss_mask: 0.2821 (0.3075)  loss_objectness: 0.0437 (0.0577)  loss_rpn_box_reg: 0.0425 (0.0628)  time: 0.6236 (0.6899)  data: 0.0003 (0.0167)  lr: 0.160000  max mem: 14714
:::MLLOG {"namespace": "", "time_ms": 1634389898755, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8458245402133023, "loss_classifier": 0.2884910717486967, "loss_box_reg": 0.12945572720446774, "loss_mask": 0.3069590724931087, "loss_objectness": 0.057914588547622166, "loss_rpn_box_reg": 0.06300408072321227, "time": 0.6898755153608911, "data": 0.016862662839300838, "throughput": 185.54072024579682}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 8100}}
:::MLLOG {"namespace": "", "time_ms": 1634389898756, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 185.54072024579682, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:53:11  iter: 8150  loss: 0.7682 (0.8434)  loss_classifier: 0.2526 (0.2872)  loss_box_reg: 0.1229 (0.1291)  loss_mask: 0.2747 (0.3069)  loss_objectness: 0.0358 (0.0575)  loss_rpn_box_reg: 0.0386 (0.0626)  time: 0.6243 (0.6895)  data: 0.0004 (0.0166)  lr: 0.160000  max mem: 14843
2021-10-16 13:12:09,985 maskrcnn_benchmark.trainer INFO: eta: 1:53:11  iter: 8150  loss: 0.7216 (0.8453)  loss_classifier: 0.2483 (0.2883)  loss_box_reg: 0.1170 (0.1294)  loss_mask: 0.2771 (0.3068)  loss_objectness: 0.0339 (0.0578)  loss_rpn_box_reg: 0.0504 (0.0630)  time: 0.6244 (0.6895)  data: 0.0004 (0.0168)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:53:11  iter: 8150  loss: 0.7037 (0.8442)  loss_classifier: 0.2418 (0.2875)  loss_box_reg: 0.1104 (0.1289)  loss_mask: 0.2801 (0.3073)  loss_objectness: 0.0368 (0.0576)  loss_rpn_box_reg: 0.0475 (0.0628)  time: 0.6245 (0.6895)  data: 0.0003 (0.0166)  lr: 0.160000  max mem: 14714
INFO:maskrcnn_benchmark.trainer:eta: 1:53:11  iter: 8150  loss: 0.7216 (0.8453)  loss_classifier: 0.2483 (0.2883)  loss_box_reg: 0.1170 (0.1294)  loss_mask: 0.2771 (0.3068)  loss_objectness: 0.0339 (0.0578)  loss_rpn_box_reg: 0.0504 (0.0630)  time: 0.6244 (0.6895)  data: 0.0004 (0.0168)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634389929985, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.845275802714693, "loss_classifier": 0.28832391057552004, "loss_box_reg": 0.12939089957827507, "loss_mask": 0.3067721162178765, "loss_objectness": 0.057828879447459625, "loss_rpn_box_reg": 0.06295999742575858, "time": 0.6894750011771734, "data": 0.016761886678590365, "throughput": 185.64850035383375}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 8150}}
:::MLLOG {"namespace": "", "time_ms": 1634389929985, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 185.64850035383375, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:53:11  iter: 8150  loss: 0.7537 (0.8417)  loss_classifier: 0.2542 (0.2869)  loss_box_reg: 0.1148 (0.1287)  loss_mask: 0.2731 (0.3064)  loss_objectness: 0.0406 (0.0574)  loss_rpn_box_reg: 0.0612 (0.0624)  time: 0.6232 (0.6895)  data: 0.0004 (0.0166)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:53:11  iter: 8150  loss: 0.7240 (0.8418)  loss_classifier: 0.2339 (0.2867)  loss_box_reg: 0.1039 (0.1284)  loss_mask: 0.2727 (0.3066)  loss_objectness: 0.0423 (0.0576)  loss_rpn_box_reg: 0.0455 (0.0625)  time: 0.6234 (0.6895)  data: 0.0004 (0.0166)  lr: 0.160000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 1:53:11  iter: 8150  loss: 0.7495 (0.8418)  loss_classifier: 0.2676 (0.2868)  loss_box_reg: 0.1131 (0.1285)  loss_mask: 0.2690 (0.3068)  loss_objectness: 0.0392 (0.0572)  loss_rpn_box_reg: 0.0476 (0.0624)  time: 0.6227 (0.6895)  data: 0.0004 (0.0166)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:53:11  iter: 8150  loss: 0.7697 (0.8431)  loss_classifier: 0.2545 (0.2876)  loss_box_reg: 0.1189 (0.1292)  loss_mask: 0.2713 (0.3066)  loss_objectness: 0.0422 (0.0573)  loss_rpn_box_reg: 0.0495 (0.0625)  time: 0.6227 (0.6895)  data: 0.0004 (0.0166)  lr: 0.160000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:53:11  iter: 8150  loss: 0.7970 (0.8447)  loss_classifier: 0.2795 (0.2879)  loss_box_reg: 0.1244 (0.1292)  loss_mask: 0.2819 (0.3069)  loss_objectness: 0.0406 (0.0581)  loss_rpn_box_reg: 0.0592 (0.0627)  time: 0.6221 (0.6895)  data: 0.0004 (0.0166)  lr: 0.160000  max mem: 14796
INFO:maskrcnn_benchmark.trainer:eta: 1:52:32  iter: 8200  loss: 0.7517 (0.8412)  loss_classifier: 0.2427 (0.2867)  loss_box_reg: 0.1169 (0.1286)  loss_mask: 0.2838 (0.3062)  loss_objectness: 0.0429 (0.0573)  loss_rpn_box_reg: 0.0572 (0.0624)  time: 0.6199 (0.6891)  data: 0.0004 (0.0165)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:52:32  iter: 8200  loss: 0.7416 (0.8412)  loss_classifier: 0.2562 (0.2866)  loss_box_reg: 0.1189 (0.1285)  loss_mask: 0.2803 (0.3067)  loss_objectness: 0.0436 (0.0572)  loss_rpn_box_reg: 0.0503 (0.0624)  time: 0.6200 (0.6891)  data: 0.0003 (0.0165)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:52:32  iter: 8200  loss: 0.7117 (0.8425)  loss_classifier: 0.2441 (0.2873)  loss_box_reg: 0.1064 (0.1291)  loss_mask: 0.2696 (0.3064)  loss_objectness: 0.0398 (0.0572)  loss_rpn_box_reg: 0.0525 (0.0625)  time: 0.6200 (0.6891)  data: 0.0003 (0.0165)  lr: 0.160000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:52:32  iter: 8200  loss: 0.7048 (0.8440)  loss_classifier: 0.2178 (0.2876)  loss_box_reg: 0.1042 (0.1292)  loss_mask: 0.2643 (0.3067)  loss_objectness: 0.0429 (0.0580)  loss_rpn_box_reg: 0.0575 (0.0626)  time: 0.6200 (0.6891)  data: 0.0004 (0.0165)  lr: 0.160000  max mem: 14796
INFO:maskrcnn_benchmark.trainer:eta: 1:52:32  iter: 8200  loss: 0.7086 (0.8412)  loss_classifier: 0.2381 (0.2865)  loss_box_reg: 0.1060 (0.1284)  loss_mask: 0.2729 (0.3065)  loss_objectness: 0.0441 (0.0575)  loss_rpn_box_reg: 0.0461 (0.0624)  time: 0.6199 (0.6891)  data: 0.0003 (0.0165)  lr: 0.160000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 1:52:32  iter: 8200  loss: 0.7594 (0.8427)  loss_classifier: 0.2579 (0.2869)  loss_box_reg: 0.1191 (0.1290)  loss_mask: 0.2716 (0.3067)  loss_objectness: 0.0531 (0.0574)  loss_rpn_box_reg: 0.0569 (0.0626)  time: 0.6212 (0.6891)  data: 0.0004 (0.0165)  lr: 0.160000  max mem: 14843
INFO:maskrcnn_benchmark.trainer:eta: 1:52:32  iter: 8200  loss: 0.7344 (0.8435)  loss_classifier: 0.2291 (0.2873)  loss_box_reg: 0.1135 (0.1288)  loss_mask: 0.2605 (0.3071)  loss_objectness: 0.0406 (0.0575)  loss_rpn_box_reg: 0.0405 (0.0628)  time: 0.6212 (0.6891)  data: 0.0003 (0.0165)  lr: 0.160000  max mem: 14714
2021-10-16 13:12:41,107 maskrcnn_benchmark.trainer INFO: eta: 1:52:32  iter: 8200  loss: 0.7690 (0.8448)  loss_classifier: 0.2450 (0.2881)  loss_box_reg: 0.1191 (0.1294)  loss_mask: 0.2678 (0.3066)  loss_objectness: 0.0495 (0.0578)  loss_rpn_box_reg: 0.0537 (0.0629)  time: 0.6212 (0.6891)  data: 0.0003 (0.0167)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:52:32  iter: 8200  loss: 0.7690 (0.8448)  loss_classifier: 0.2450 (0.2881)  loss_box_reg: 0.1191 (0.1294)  loss_mask: 0.2678 (0.3066)  loss_objectness: 0.0495 (0.0578)  loss_rpn_box_reg: 0.0537 (0.0629)  time: 0.6212 (0.6891)  data: 0.0003 (0.0167)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634389961107, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8447790612534779, "loss_classifier": 0.28813581845654945, "loss_box_reg": 0.12935048275056477, "loss_mask": 0.3065986720218164, "loss_objectness": 0.05775746766807193, "loss_rpn_box_reg": 0.06293662085004786, "time": 0.6890662709387337, "data": 0.016662720296441055, "throughput": 185.75862061224115}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 8200}}
:::MLLOG {"namespace": "", "time_ms": 1634389961107, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 185.75862061224115, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:51:54  iter: 8250  loss: 0.7619 (0.8422)  loss_classifier: 0.2513 (0.2868)  loss_box_reg: 0.1159 (0.1290)  loss_mask: 0.2807 (0.3065)  loss_objectness: 0.0431 (0.0574)  loss_rpn_box_reg: 0.0565 (0.0626)  time: 0.6205 (0.6887)  data: 0.0004 (0.0164)  lr: 0.160000  max mem: 14843
2021-10-16 13:13:12,247 maskrcnn_benchmark.trainer INFO: eta: 1:51:54  iter: 8250  loss: 0.7156 (0.8441)  loss_classifier: 0.2577 (0.2879)  loss_box_reg: 0.1054 (0.1293)  loss_mask: 0.2726 (0.3064)  loss_objectness: 0.0379 (0.0577)  loss_rpn_box_reg: 0.0463 (0.0629)  time: 0.6201 (0.6887)  data: 0.0003 (0.0166)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:51:54  iter: 8250  loss: 0.7156 (0.8441)  loss_classifier: 0.2577 (0.2879)  loss_box_reg: 0.1054 (0.1293)  loss_mask: 0.2726 (0.3064)  loss_objectness: 0.0379 (0.0577)  loss_rpn_box_reg: 0.0463 (0.0629)  time: 0.6201 (0.6887)  data: 0.0003 (0.0166)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:51:54  iter: 8250  loss: 0.7893 (0.8430)  loss_classifier: 0.2821 (0.2872)  loss_box_reg: 0.1329 (0.1288)  loss_mask: 0.2833 (0.3069)  loss_objectness: 0.0418 (0.0575)  loss_rpn_box_reg: 0.0522 (0.0627)  time: 0.6202 (0.6887)  data: 0.0004 (0.0164)  lr: 0.160000  max mem: 14714
:::MLLOG {"namespace": "", "time_ms": 1634389992247, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.844143042679989, "loss_classifier": 0.28792679769974766, "loss_box_reg": 0.1292524668601144, "loss_mask": 0.3063769729859901, "loss_objectness": 0.05768345969068733, "loss_rpn_box_reg": 0.06290334590400258, "time": 0.6886646659446485, "data": 0.016564545226819587, "throughput": 185.86694850159193}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 8250}}
:::MLLOG {"namespace": "", "time_ms": 1634389992247, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 185.86694850159193, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:51:54  iter: 8250  loss: 0.7437 (0.8406)  loss_classifier: 0.2612 (0.2862)  loss_box_reg: 0.1127 (0.1283)  loss_mask: 0.2656 (0.3062)  loss_objectness: 0.0389 (0.0574)  loss_rpn_box_reg: 0.0541 (0.0624)  time: 0.6213 (0.6887)  data: 0.0003 (0.0164)  lr: 0.160000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 1:51:54  iter: 8250  loss: 0.6877 (0.8404)  loss_classifier: 0.2326 (0.2864)  loss_box_reg: 0.1074 (0.1285)  loss_mask: 0.2627 (0.3060)  loss_objectness: 0.0418 (0.0572)  loss_rpn_box_reg: 0.0375 (0.0623)  time: 0.6215 (0.6887)  data: 0.0004 (0.0164)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:51:54  iter: 8250  loss: 0.7131 (0.8406)  loss_classifier: 0.2560 (0.2864)  loss_box_reg: 0.1059 (0.1284)  loss_mask: 0.2673 (0.3065)  loss_objectness: 0.0384 (0.0571)  loss_rpn_box_reg: 0.0529 (0.0623)  time: 0.6215 (0.6887)  data: 0.0003 (0.0164)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:51:54  iter: 8250  loss: 0.6915 (0.8433)  loss_classifier: 0.2298 (0.2873)  loss_box_reg: 0.1057 (0.1291)  loss_mask: 0.2629 (0.3064)  loss_objectness: 0.0434 (0.0579)  loss_rpn_box_reg: 0.0598 (0.0626)  time: 0.6215 (0.6887)  data: 0.0003 (0.0164)  lr: 0.160000  max mem: 14796
INFO:maskrcnn_benchmark.trainer:eta: 1:51:54  iter: 8250  loss: 0.7554 (0.8419)  loss_classifier: 0.2538 (0.2871)  loss_box_reg: 0.1209 (0.1290)  loss_mask: 0.2651 (0.3062)  loss_objectness: 0.0383 (0.0571)  loss_rpn_box_reg: 0.0529 (0.0624)  time: 0.6216 (0.6887)  data: 0.0004 (0.0164)  lr: 0.160000  max mem: 14803
:::MLLOG {"namespace": "", "time_ms": 1634389994123, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 111, "epoch_num": 9}}
:::MLLOG {"namespace": "", "time_ms": 1634389994123, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 112, "first_epoch_num": 9}}
:::MLLOG {"namespace": "", "time_ms": 1634389994123, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 113, "epoch_num": 9}}
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
2021-10-16 13:13:14,474 maskrcnn_benchmark.data.build WARNING: When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
Done (t=0.56s)
creating index...
Done (t=0.55s)
creating index...
index created!
shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]index created!
shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]Done (t=0.56s)
creating index...
index created!
shapes=None
passthrough=True
Done (t=0.55s)
creating index...
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
Done (t=0.56s)
creating index...
  0% 0/40 [00:00<?, ?it/s]Done (t=0.56s)
creating index...
Done (t=0.55s)
creating index...
Done (t=0.55s)
creating index...
index created!
index created!
index created!
shapes=None
passthrough=True
shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]  0% 0/40 [00:00<?, ?it/s]index created!
shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]index created!
shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]shapes=None
passthrough=True
creating index...
GT annotations already exist!
2021-10-16 13:13:15,060 maskrcnn_benchmark.inference INFO: Start evaluation on coco_2017_val dataset(5000 images).
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]  2% 1/40 [00:00<00:11,  3.40it/s]  2% 1/40 [00:00<00:11,  3.40it/s]  2% 1/40 [00:00<00:11,  3.41it/s]  2% 1/40 [00:00<00:11,  3.38it/s]  2% 1/40 [00:00<00:12,  3.23it/s]  2% 1/40 [00:00<00:11,  3.26it/s]  2% 1/40 [00:00<00:11,  3.27it/s]  2% 1/40 [00:00<00:12,  3.16it/s]  5% 2/40 [00:00<00:11,  3.41it/s]  5% 2/40 [00:00<00:11,  3.39it/s]  5% 2/40 [00:00<00:11,  3.42it/s]  5% 2/40 [00:00<00:10,  3.46it/s]  5% 2/40 [00:00<00:11,  3.38it/s]  5% 2/40 [00:00<00:11,  3.30it/s]  5% 2/40 [00:00<00:11,  3.34it/s]  5% 2/40 [00:00<00:11,  3.30it/s]  8% 3/40 [00:00<00:10,  3.43it/s]  8% 3/40 [00:00<00:10,  3.39it/s]  8% 3/40 [00:00<00:10,  3.47it/s]  8% 3/40 [00:00<00:10,  3.51it/s]  8% 3/40 [00:00<00:10,  3.39it/s]  8% 3/40 [00:00<00:11,  3.36it/s]  8% 3/40 [00:00<00:10,  3.37it/s]  8% 3/40 [00:00<00:11,  3.33it/s] 10% 4/40 [00:01<00:10,  3.44it/s] 10% 4/40 [00:01<00:10,  3.40it/s] 10% 4/40 [00:01<00:10,  3.46it/s] 10% 4/40 [00:01<00:10,  3.46it/s] 10% 4/40 [00:01<00:10,  3.39it/s] 10% 4/40 [00:01<00:10,  3.41it/s] 10% 4/40 [00:01<00:10,  3.39it/s] 10% 4/40 [00:01<00:10,  3.33it/s] 12% 5/40 [00:01<00:10,  3.44it/s] 12% 5/40 [00:01<00:10,  3.45it/s] 12% 5/40 [00:01<00:10,  3.45it/s] 12% 5/40 [00:01<00:10,  3.45it/s] 12% 5/40 [00:01<00:10,  3.44it/s] 12% 5/40 [00:01<00:10,  3.43it/s] 12% 5/40 [00:01<00:10,  3.44it/s] 12% 5/40 [00:01<00:10,  3.41it/s] 15% 6/40 [00:01<00:09,  3.43it/s] 15% 6/40 [00:01<00:09,  3.42it/s] 15% 6/40 [00:01<00:09,  3.47it/s] 15% 6/40 [00:01<00:09,  3.44it/s] 15% 6/40 [00:01<00:09,  3.50it/s] 15% 6/40 [00:01<00:09,  3.46it/s] 15% 6/40 [00:01<00:09,  3.47it/s] 15% 6/40 [00:01<00:09,  3.43it/s] 18% 7/40 [00:02<00:09,  3.42it/s] 18% 7/40 [00:02<00:09,  3.44it/s] 18% 7/40 [00:02<00:09,  3.44it/s] 18% 7/40 [00:02<00:09,  3.47it/s] 18% 7/40 [00:02<00:09,  3.47it/s] 18% 7/40 [00:02<00:09,  3.47it/s] 18% 7/40 [00:02<00:09,  3.50it/s] 18% 7/40 [00:02<00:09,  3.45it/s] 20% 8/40 [00:02<00:09,  3.42it/s] 20% 8/40 [00:02<00:09,  3.39it/s] 20% 8/40 [00:02<00:09,  3.44it/s] 20% 8/40 [00:02<00:09,  3.53it/s] 20% 8/40 [00:02<00:09,  3.48it/s] 20% 8/40 [00:02<00:09,  3.41it/s] 20% 8/40 [00:02<00:09,  3.49it/s] 20% 8/40 [00:02<00:09,  3.46it/s] 22% 9/40 [00:02<00:08,  3.46it/s] 22% 9/40 [00:02<00:09,  3.40it/s] 22% 9/40 [00:02<00:09,  3.43it/s] 22% 9/40 [00:02<00:08,  3.51it/s] 22% 9/40 [00:02<00:08,  3.53it/s] 22% 9/40 [00:02<00:08,  3.48it/s] 22% 9/40 [00:02<00:09,  3.42it/s] 22% 9/40 [00:02<00:08,  3.46it/s] 25% 10/40 [00:02<00:08,  3.42it/s] 25% 10/40 [00:02<00:08,  3.47it/s] 25% 10/40 [00:02<00:08,  3.52it/s] 25% 10/40 [00:02<00:08,  3.54it/s] 25% 10/40 [00:02<00:08,  3.40it/s] 25% 10/40 [00:02<00:08,  3.51it/s] 25% 10/40 [00:02<00:08,  3.45it/s] 25% 10/40 [00:02<00:08,  3.45it/s] 28% 11/40 [00:03<00:08,  3.41it/s] 28% 11/40 [00:03<00:08,  3.50it/s] 28% 11/40 [00:03<00:08,  3.53it/s] 28% 11/40 [00:03<00:08,  3.50it/s] 28% 11/40 [00:03<00:08,  3.41it/s] 28% 11/40 [00:03<00:08,  3.50it/s] 28% 11/40 [00:03<00:08,  3.48it/s] 28% 11/40 [00:03<00:08,  3.44it/s] 30% 12/40 [00:03<00:07,  3.52it/s] 30% 12/40 [00:03<00:08,  3.42it/s] 30% 12/40 [00:03<00:07,  3.54it/s] 30% 12/40 [00:03<00:07,  3.52it/s] 30% 12/40 [00:03<00:08,  3.45it/s] 30% 12/40 [00:03<00:07,  3.51it/s] 30% 12/40 [00:03<00:08,  3.43it/s] 30% 12/40 [00:03<00:08,  3.48it/s] 32% 13/40 [00:03<00:07,  3.46it/s] 32% 13/40 [00:03<00:07,  3.48it/s] 32% 13/40 [00:03<00:07,  3.60it/s] 32% 13/40 [00:03<00:07,  3.49it/s] 32% 13/40 [00:03<00:07,  3.49it/s] 32% 13/40 [00:03<00:07,  3.50it/s] 32% 13/40 [00:03<00:07,  3.43it/s] 32% 13/40 [00:03<00:07,  3.46it/s] 35% 14/40 [00:04<00:07,  3.50it/s] 35% 14/40 [00:04<00:07,  3.45it/s] 35% 14/40 [00:03<00:07,  3.55it/s] 35% 14/40 [00:03<00:07,  3.56it/s] 35% 14/40 [00:04<00:07,  3.50it/s] 35% 14/40 [00:04<00:07,  3.44it/s] 35% 14/40 [00:04<00:07,  3.46it/s] 35% 14/40 [00:04<00:07,  3.52it/s] 38% 15/40 [00:04<00:07,  3.48it/s] 38% 15/40 [00:04<00:07,  3.46it/s] 38% 15/40 [00:04<00:06,  3.61it/s] 38% 15/40 [00:04<00:07,  3.50it/s] 38% 15/40 [00:04<00:07,  3.53it/s] 38% 15/40 [00:04<00:07,  3.47it/s] 38% 15/40 [00:04<00:07,  3.42it/s] 38% 15/40 [00:04<00:07,  3.48it/s] 40% 16/40 [00:04<00:06,  3.43it/s] 40% 16/40 [00:04<00:06,  3.45it/s] 40% 16/40 [00:04<00:06,  3.54it/s] 40% 16/40 [00:04<00:06,  3.51it/s] 40% 16/40 [00:04<00:06,  3.51it/s] 40% 16/40 [00:04<00:06,  3.50it/s] 40% 16/40 [00:04<00:06,  3.45it/s] 40% 16/40 [00:04<00:06,  3.47it/s] 42% 17/40 [00:04<00:06,  3.60it/s] 42% 17/40 [00:04<00:06,  3.42it/s] 42% 17/40 [00:04<00:06,  3.43it/s] 42% 17/40 [00:04<00:06,  3.50it/s] 42% 17/40 [00:04<00:06,  3.56it/s] 42% 17/40 [00:04<00:06,  3.54it/s] 42% 17/40 [00:04<00:06,  3.54it/s] 42% 17/40 [00:04<00:06,  3.47it/s] 45% 18/40 [00:05<00:06,  3.62it/s] 45% 18/40 [00:05<00:06,  3.42it/s] 45% 18/40 [00:05<00:06,  3.48it/s] 45% 18/40 [00:05<00:06,  3.41it/s] 45% 18/40 [00:05<00:06,  3.53it/s] 45% 18/40 [00:05<00:06,  3.49it/s] 45% 18/40 [00:05<00:06,  3.50it/s] 45% 18/40 [00:05<00:06,  3.47it/s] 48% 19/40 [00:05<00:05,  3.58it/s] 48% 19/40 [00:05<00:06,  3.44it/s] 48% 19/40 [00:05<00:06,  3.47it/s] 48% 19/40 [00:05<00:06,  3.44it/s] 48% 19/40 [00:05<00:05,  3.55it/s] 48% 19/40 [00:05<00:06,  3.45it/s] 48% 19/40 [00:05<00:06,  3.49it/s] 48% 19/40 [00:05<00:06,  3.49it/s] 50% 20/40 [00:05<00:05,  3.57it/s] 50% 20/40 [00:05<00:05,  3.47it/s] 50% 20/40 [00:05<00:05,  3.49it/s] 50% 20/40 [00:05<00:05,  3.46it/s] 50% 20/40 [00:05<00:05,  3.54it/s] 50% 20/40 [00:05<00:05,  3.51it/s] 50% 20/40 [00:05<00:05,  3.42it/s] 50% 20/40 [00:05<00:05,  3.48it/s] 52% 21/40 [00:05<00:05,  3.54it/s] 52% 21/40 [00:06<00:05,  3.53it/s] 52% 21/40 [00:05<00:05,  3.56it/s] 52% 21/40 [00:06<00:05,  3.48it/s] 52% 21/40 [00:06<00:05,  3.46it/s] 52% 21/40 [00:06<00:05,  3.52it/s] 52% 21/40 [00:06<00:05,  3.45it/s] 52% 21/40 [00:06<00:05,  3.51it/s] 55% 22/40 [00:06<00:05,  3.59it/s] 55% 22/40 [00:06<00:05,  3.48it/s] 55% 22/40 [00:06<00:05,  3.52it/s] 55% 22/40 [00:06<00:05,  3.52it/s] 55% 22/40 [00:06<00:05,  3.43it/s] 55% 22/40 [00:06<00:05,  3.55it/s] 55% 22/40 [00:06<00:05,  3.42it/s] 55% 22/40 [00:06<00:05,  3.46it/s] 57% 23/40 [00:06<00:04,  3.59it/s] 57% 23/40 [00:06<00:04,  3.47it/s] 57% 23/40 [00:06<00:04,  3.53it/s] 57% 23/40 [00:06<00:04,  3.55it/s] 57% 23/40 [00:06<00:04,  3.47it/s] 57% 23/40 [00:06<00:04,  3.51it/s] 57% 23/40 [00:06<00:04,  3.41it/s] 57% 23/40 [00:06<00:04,  3.44it/s] 60% 24/40 [00:06<00:04,  3.56it/s] 60% 24/40 [00:06<00:04,  3.58it/s] 60% 24/40 [00:06<00:04,  3.49it/s] 60% 24/40 [00:06<00:04,  3.53it/s] 60% 24/40 [00:06<00:04,  3.47it/s] 60% 24/40 [00:06<00:04,  3.54it/s] 60% 24/40 [00:06<00:04,  3.48it/s] 60% 24/40 [00:06<00:04,  3.42it/s] 62% 25/40 [00:07<00:04,  3.52it/s] 62% 25/40 [00:07<00:04,  3.59it/s] 62% 25/40 [00:07<00:04,  3.57it/s] 62% 25/40 [00:07<00:04,  3.44it/s] 62% 25/40 [00:07<00:04,  3.43it/s] 62% 25/40 [00:07<00:04,  3.52it/s] 62% 25/40 [00:07<00:04,  3.46it/s] 62% 25/40 [00:07<00:04,  3.43it/s] 65% 26/40 [00:07<00:04,  3.49it/s] 65% 26/40 [00:07<00:03,  3.58it/s] 65% 26/40 [00:07<00:03,  3.54it/s] 65% 26/40 [00:07<00:03,  3.50it/s] 65% 26/40 [00:07<00:04,  3.47it/s] 65% 26/40 [00:07<00:03,  3.50it/s] 65% 26/40 [00:07<00:04,  3.45it/s] 65% 26/40 [00:07<00:04,  3.42it/s] 68% 27/40 [00:07<00:03,  3.57it/s] 68% 27/40 [00:07<00:03,  3.55it/s] 68% 27/40 [00:07<00:03,  3.55it/s] 68% 27/40 [00:07<00:03,  3.48it/s] 68% 27/40 [00:07<00:03,  3.47it/s] 68% 27/40 [00:07<00:03,  3.47it/s] 68% 27/40 [00:07<00:03,  3.51it/s] 68% 27/40 [00:07<00:03,  3.46it/s] 70% 28/40 [00:07<00:03,  3.56it/s] 70% 28/40 [00:07<00:03,  3.60it/s] 70% 28/40 [00:07<00:03,  3.53it/s] 70% 28/40 [00:08<00:03,  3.44it/s] 70% 28/40 [00:08<00:03,  3.46it/s] 70% 28/40 [00:08<00:03,  3.50it/s] 70% 28/40 [00:08<00:03,  3.50it/s] 70% 28/40 [00:08<00:03,  3.44it/s] 72% 29/40 [00:08<00:03,  3.54it/s] 72% 29/40 [00:08<00:03,  3.56it/s] 72% 29/40 [00:08<00:03,  3.54it/s] 72% 29/40 [00:08<00:03,  3.51it/s] 72% 29/40 [00:08<00:03,  3.48it/s] 72% 29/40 [00:08<00:03,  3.46it/s] 72% 29/40 [00:08<00:03,  3.52it/s] 72% 29/40 [00:08<00:03,  3.42it/s] 75% 30/40 [00:08<00:02,  3.60it/s] 75% 30/40 [00:08<00:02,  3.53it/s] 75% 30/40 [00:08<00:02,  3.49it/s] 75% 30/40 [00:08<00:02,  3.47it/s] 75% 30/40 [00:08<00:02,  3.47it/s] 75% 30/40 [00:08<00:02,  3.50it/s] 75% 30/40 [00:08<00:02,  3.51it/s] 75% 30/40 [00:08<00:02,  3.40it/s] 78% 31/40 [00:08<00:02,  3.57it/s] 78% 31/40 [00:08<00:02,  3.49it/s] 78% 31/40 [00:08<00:02,  3.46it/s] 78% 31/40 [00:08<00:02,  3.47it/s] 78% 31/40 [00:08<00:02,  3.51it/s] 78% 31/40 [00:08<00:02,  3.45it/s] 78% 31/40 [00:08<00:02,  3.51it/s] 78% 31/40 [00:09<00:02,  3.44it/s] 80% 32/40 [00:09<00:02,  3.56it/s] 80% 32/40 [00:09<00:02,  3.49it/s] 80% 32/40 [00:09<00:02,  3.46it/s] 80% 32/40 [00:09<00:02,  3.48it/s] 80% 32/40 [00:09<00:02,  3.46it/s] 80% 32/40 [00:09<00:02,  3.46it/s] 80% 32/40 [00:09<00:02,  3.48it/s] 80% 32/40 [00:09<00:02,  3.47it/s] 82% 33/40 [00:09<00:01,  3.54it/s] 82% 33/40 [00:09<00:01,  3.55it/s] 82% 33/40 [00:09<00:02,  3.45it/s] 82% 33/40 [00:09<00:02,  3.49it/s] 82% 33/40 [00:09<00:01,  3.53it/s] 82% 33/40 [00:09<00:01,  3.53it/s] 82% 33/40 [00:09<00:02,  3.41it/s] 82% 33/40 [00:09<00:02,  3.43it/s] 85% 34/40 [00:09<00:01,  3.55it/s] 85% 34/40 [00:09<00:01,  3.48it/s] 85% 34/40 [00:09<00:01,  3.47it/s] 85% 34/40 [00:09<00:01,  3.52it/s] 85% 34/40 [00:09<00:01,  3.58it/s] 85% 34/40 [00:09<00:01,  3.49it/s] 85% 34/40 [00:09<00:01,  3.44it/s] 85% 34/40 [00:09<00:01,  3.43it/s] 88% 35/40 [00:09<00:01,  3.52it/s] 88% 35/40 [00:09<00:01,  3.53it/s] 88% 35/40 [00:10<00:01,  3.52it/s] 88% 35/40 [00:09<00:01,  3.46it/s] 88% 35/40 [00:10<00:01,  3.47it/s] 88% 35/40 [00:10<00:01,  3.49it/s] 88% 35/40 [00:10<00:01,  3.39it/s] 88% 35/40 [00:10<00:01,  3.42it/s] 90% 36/40 [00:10<00:01,  3.50it/s] 90% 36/40 [00:10<00:01,  3.58it/s] 90% 36/40 [00:10<00:01,  3.48it/s] 90% 36/40 [00:10<00:01,  3.51it/s] 90% 36/40 [00:10<00:01,  3.45it/s] 90% 36/40 [00:10<00:01,  3.45it/s] 90% 36/40 [00:10<00:01,  3.40it/s] 90% 36/40 [00:10<00:01,  3.40it/s] 92% 37/40 [00:10<00:00,  3.50it/s] 92% 37/40 [00:10<00:00,  3.57it/s] 92% 37/40 [00:10<00:00,  3.55it/s] 92% 37/40 [00:10<00:00,  3.43it/s] 92% 37/40 [00:10<00:00,  3.50it/s] 92% 37/40 [00:10<00:00,  3.44it/s] 92% 37/40 [00:10<00:00,  3.43it/s] 92% 37/40 [00:10<00:00,  3.40it/s] 95% 38/40 [00:10<00:00,  3.53it/s] 95% 38/40 [00:10<00:00,  3.54it/s] 95% 38/40 [00:10<00:00,  3.59it/s] 98% 39/40 [00:10<00:00,  4.37it/s] 95% 38/40 [00:10<00:00,  3.45it/s] 95% 38/40 [00:10<00:00,  3.58it/s] 95% 38/40 [00:10<00:00,  3.83it/s] 95% 38/40 [00:10<00:00,  3.47it/s] 95% 38/40 [00:11<00:00,  3.45it/s] 98% 39/40 [00:11<00:00,  4.20it/s] 98% 39/40 [00:10<00:00,  4.25it/s] 98% 39/40 [00:11<00:00,  3.80it/s]100% 40/40 [00:11<00:00,  4.62it/s]100% 40/40 [00:11<00:00,  3.63it/s]
100% 40/40 [00:11<00:00,  3.61it/s]
100% 40/40 [00:11<00:00,  4.68it/s]100% 40/40 [00:11<00:00,  3.56it/s]
 98% 39/40 [00:11<00:00,  3.56it/s]100% 40/40 [00:11<00:00,  4.44it/s]100% 40/40 [00:11<00:00,  3.58it/s]
100% 40/40 [00:11<00:00,  3.57it/s]
 98% 39/40 [00:11<00:00,  3.70it/s] 98% 39/40 [00:11<00:00,  3.53it/s] 98% 39/40 [00:11<00:00,  3.48it/s]100% 40/40 [00:11<00:00,  3.56it/s]
100% 40/40 [00:11<00:00,  3.52it/s]
100% 40/40 [00:11<00:00,  4.37it/s]100% 40/40 [00:11<00:00,  3.52it/s]
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.328698 (0.01812591743469238 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.338137 (0.01814101867675781 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.338817 (0.018142107391357423 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.447105 (0.01831536865234375 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.334333 (0.01813493232727051 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.370914 (0.01819346160888672 s / img per device, on 8 devices)
2021-10-16 13:13:26,386 maskrcnn_benchmark.inference INFO: Total inference time: 0:00:11.325929 (0.018121486282348633 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.425687 (0.018281099700927735 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.325929 (0.018121486282348633 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.026s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.027s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.027s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.027s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.027s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.028s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.028s
2021-10-16 13:13:26,616 maskrcnn_benchmark.timed_section INFO: EXPOSED: Launching evaluation preparation tasks took 0.033s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.033s
:::MLLOG {"namespace": "", "time_ms": 1634390006619, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 168, "first_epoch_num": 10, "epoch_count": 1}}
:::MLLOG {"namespace": "", "time_ms": 1634390006619, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 169, "epoch_num": 10}}
INFO:maskrcnn_benchmark.timed_section:Prepping took 9.890 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 10.039 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 10.061 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 10.157 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 10.213 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 10.319 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 10.623 seconds total
2021-10-16 13:13:38,577 maskrcnn_benchmark.timed_section INFO: Prepping took 10.828 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 10.828 seconds total
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.171s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.171s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.174s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.174s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.175s
2021-10-16 13:13:51,548 maskrcnn_benchmark.timed_section INFO: EXPOSED: Launching evaluation task took 0.176s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.176s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.177s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.178s
Evaluating predictions
Loading and preparing results...
resFile is ./inference/coco_2017_val/segm.json
Loading and preparing results...
resFile is ./inference/coco_2017_val/bbox.json
DONE (t=1.04s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=2.27s)
Running per image evaluation...
Evaluate annotation type *segm*
INFO:maskrcnn_benchmark.trainer:eta: 1:51:33  iter: 8300  loss: 0.7078 (0.8414)  loss_classifier: 0.2334 (0.2865)  loss_box_reg: 0.1092 (0.1289)  loss_mask: 0.2807 (0.3063)  loss_objectness: 0.0358 (0.0573)  loss_rpn_box_reg: 0.0470 (0.0625)  time: 0.6251 (0.6900)  data: 0.0004 (0.0178)  lr: 0.160000  max mem: 14843
INFO:maskrcnn_benchmark.trainer:eta: 1:51:33  iter: 8300  loss: 0.6842 (0.8424)  loss_classifier: 0.2186 (0.2869)  loss_box_reg: 0.1079 (0.1287)  loss_mask: 0.2749 (0.3067)  loss_objectness: 0.0381 (0.0574)  loss_rpn_box_reg: 0.0517 (0.0627)  time: 0.6246 (0.6900)  data: 0.0004 (0.0178)  lr: 0.160000  max mem: 14714
2021-10-16 13:13:57,901 maskrcnn_benchmark.trainer INFO: eta: 1:51:33  iter: 8300  loss: 0.7098 (0.8435)  loss_classifier: 0.2329 (0.2877)  loss_box_reg: 0.1074 (0.1292)  loss_mask: 0.2748 (0.3062)  loss_objectness: 0.0384 (0.0576)  loss_rpn_box_reg: 0.0555 (0.0629)  time: 0.6245 (0.6900)  data: 0.0004 (0.0180)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:51:33  iter: 8300  loss: 0.7098 (0.8435)  loss_classifier: 0.2329 (0.2877)  loss_box_reg: 0.1074 (0.1292)  loss_mask: 0.2748 (0.3062)  loss_objectness: 0.0384 (0.0576)  loss_rpn_box_reg: 0.0555 (0.0629)  time: 0.6245 (0.6900)  data: 0.0004 (0.0180)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:51:33  iter: 8300  loss: 0.6891 (0.8397)  loss_classifier: 0.2167 (0.2861)  loss_box_reg: 0.1060 (0.1284)  loss_mask: 0.2736 (0.3058)  loss_objectness: 0.0328 (0.0571)  loss_rpn_box_reg: 0.0457 (0.0623)  time: 0.6245 (0.6900)  data: 0.0004 (0.0178)  lr: 0.160000  max mem: 14996
:::MLLOG {"namespace": "", "time_ms": 1634390037902, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8435084925466273, "loss_classifier": 0.28767153296933834, "loss_box_reg": 0.12918125341273284, "loss_mask": 0.3061802727091743, "loss_objectness": 0.05758876985971288, "loss_rpn_box_reg": 0.06288666405715049, "time": 0.6900165932724275, "data": 0.01801180216203253, "throughput": 185.50278536484984}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 8300}}
:::MLLOG {"namespace": "", "time_ms": 1634390037902, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 185.50278536484984, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:51:33  iter: 8300  loss: 0.6967 (0.8399)  loss_classifier: 0.2302 (0.2860)  loss_box_reg: 0.1034 (0.1281)  loss_mask: 0.2730 (0.3061)  loss_objectness: 0.0375 (0.0573)  loss_rpn_box_reg: 0.0456 (0.0624)  time: 0.6255 (0.6900)  data: 0.0004 (0.0178)  lr: 0.160000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 1:51:33  iter: 8300  loss: 0.7208 (0.8399)  loss_classifier: 0.2430 (0.2861)  loss_box_reg: 0.1068 (0.1283)  loss_mask: 0.2700 (0.3062)  loss_objectness: 0.0375 (0.0570)  loss_rpn_box_reg: 0.0590 (0.0623)  time: 0.6245 (0.6900)  data: 0.0004 (0.0178)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:51:33  iter: 8300  loss: 0.6696 (0.8413)  loss_classifier: 0.2169 (0.2868)  loss_box_reg: 0.1001 (0.1289)  loss_mask: 0.2774 (0.3060)  loss_objectness: 0.0349 (0.0570)  loss_rpn_box_reg: 0.0382 (0.0624)  time: 0.6245 (0.6900)  data: 0.0003 (0.0178)  lr: 0.160000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:51:33  iter: 8300  loss: 0.7004 (0.8427)  loss_classifier: 0.2258 (0.2871)  loss_box_reg: 0.1035 (0.1290)  loss_mask: 0.2742 (0.3062)  loss_objectness: 0.0429 (0.0578)  loss_rpn_box_reg: 0.0428 (0.0626)  time: 0.6247 (0.6900)  data: 0.0004 (0.0178)  lr: 0.160000  max mem: 14796
DONE (t=2.06s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.28894
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.49018
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.30984
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.16353
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.31849
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.36976
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.26939
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.43339
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.45552
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.27401
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.49712
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.57153
DONE (t=3.00s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.27425
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.46528
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.28842
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.11764
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.30215
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.40619
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.26015
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.40745
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.42589
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.23423
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.47032
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.55191
2021-10-16 13:14:04,155 maskrcnn_benchmark.trainer INFO: bbox mAP: 0.2889388269971078, segm mAP: 0.2742535668503085
INFO:maskrcnn_benchmark.trainer:bbox mAP: 0.2889388269971078, segm mAP: 0.2742535668503085
:::MLLOG {"namespace": "", "time_ms": 1634390044155, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": {"BBOX": 0.2889388269971078, "SEGM": 0.2742535668503085}, "metadata": {"file": "tools/train_mlperf.py", "lineno": 133, "epoch_num": 9}}
:::MLLOG {"namespace": "", "time_ms": 1634390044156, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 134, "epoch_num": 9}}
INFO:maskrcnn_benchmark.trainer:eta: 1:50:55  iter: 8350  loss: 0.6895 (0.8392)  loss_classifier: 0.2301 (0.2857)  loss_box_reg: 0.1116 (0.1281)  loss_mask: 0.2666 (0.3059)  loss_objectness: 0.0395 (0.0572)  loss_rpn_box_reg: 0.0480 (0.0624)  time: 0.6271 (0.6896)  data: 0.0004 (0.0177)  lr: 0.160000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 1:50:54  iter: 8350  loss: 0.7275 (0.8390)  loss_classifier: 0.2236 (0.2858)  loss_box_reg: 0.1112 (0.1283)  loss_mask: 0.2697 (0.3056)  loss_objectness: 0.0413 (0.0570)  loss_rpn_box_reg: 0.0608 (0.0623)  time: 0.6272 (0.6896)  data: 0.0004 (0.0177)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:50:54  iter: 8350  loss: 0.6730 (0.8391)  loss_classifier: 0.2207 (0.2858)  loss_box_reg: 0.1060 (0.1282)  loss_mask: 0.2596 (0.3060)  loss_objectness: 0.0312 (0.0569)  loss_rpn_box_reg: 0.0362 (0.0622)  time: 0.6275 (0.6896)  data: 0.0003 (0.0177)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:50:54  iter: 8350  loss: 0.7419 (0.8420)  loss_classifier: 0.2488 (0.2868)  loss_box_reg: 0.1107 (0.1289)  loss_mask: 0.2734 (0.3060)  loss_objectness: 0.0401 (0.0577)  loss_rpn_box_reg: 0.0522 (0.0626)  time: 0.6276 (0.6896)  data: 0.0004 (0.0177)  lr: 0.160000  max mem: 14796
INFO:maskrcnn_benchmark.trainer:eta: 1:50:54  iter: 8350  loss: 0.7453 (0.8405)  loss_classifier: 0.2461 (0.2865)  loss_box_reg: 0.1120 (0.1288)  loss_mask: 0.2833 (0.3058)  loss_objectness: 0.0411 (0.0569)  loss_rpn_box_reg: 0.0512 (0.0624)  time: 0.6275 (0.6896)  data: 0.0004 (0.0177)  lr: 0.160000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:50:54  iter: 8350  loss: 0.7234 (0.8407)  loss_classifier: 0.2297 (0.2862)  loss_box_reg: 0.1114 (0.1288)  loss_mask: 0.2767 (0.3061)  loss_objectness: 0.0385 (0.0572)  loss_rpn_box_reg: 0.0486 (0.0625)  time: 0.6270 (0.6896)  data: 0.0004 (0.0177)  lr: 0.160000  max mem: 14843
INFO:maskrcnn_benchmark.trainer:eta: 1:50:55  iter: 8350  loss: 0.7162 (0.8416)  loss_classifier: 0.2331 (0.2866)  loss_box_reg: 0.1071 (0.1286)  loss_mask: 0.2758 (0.3065)  loss_objectness: 0.0372 (0.0573)  loss_rpn_box_reg: 0.0545 (0.0627)  time: 0.6273 (0.6896)  data: 0.0004 (0.0177)  lr: 0.160000  max mem: 14714
2021-10-16 13:14:29,186 maskrcnn_benchmark.trainer INFO: eta: 1:50:54  iter: 8350  loss: 0.7075 (0.8427)  loss_classifier: 0.2360 (0.2873)  loss_box_reg: 0.1147 (0.1291)  loss_mask: 0.2728 (0.3060)  loss_objectness: 0.0337 (0.0575)  loss_rpn_box_reg: 0.0482 (0.0628)  time: 0.6268 (0.6896)  data: 0.0004 (0.0179)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:50:54  iter: 8350  loss: 0.7075 (0.8427)  loss_classifier: 0.2360 (0.2873)  loss_box_reg: 0.1147 (0.1291)  loss_mask: 0.2728 (0.3060)  loss_objectness: 0.0337 (0.0575)  loss_rpn_box_reg: 0.0482 (0.0628)  time: 0.6268 (0.6896)  data: 0.0004 (0.0179)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634390069186, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8426801781204646, "loss_classifier": 0.28732847552188856, "loss_box_reg": 0.12906445997602636, "loss_mask": 0.3059685441887307, "loss_objectness": 0.05748079494110303, "loss_rpn_box_reg": 0.06283790397318359, "time": 0.6896314454506971, "data": 0.017907101636875176, "throughput": 185.60638561999988}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 8350}}
:::MLLOG {"namespace": "", "time_ms": 1634390069187, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 185.60638561999988, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:50:16  iter: 8400  loss: 0.7559 (0.8384)  loss_classifier: 0.2365 (0.2855)  loss_box_reg: 0.1130 (0.1280)  loss_mask: 0.2877 (0.3058)  loss_objectness: 0.0458 (0.0568)  loss_rpn_box_reg: 0.0580 (0.0622)  time: 0.6214 (0.6892)  data: 0.0004 (0.0176)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:50:16  iter: 8400  loss: 0.7136 (0.8414)  loss_classifier: 0.2468 (0.2866)  loss_box_reg: 0.1163 (0.1288)  loss_mask: 0.2751 (0.3059)  loss_objectness: 0.0403 (0.0576)  loss_rpn_box_reg: 0.0605 (0.0626)  time: 0.6211 (0.6892)  data: 0.0004 (0.0176)  lr: 0.160000  max mem: 14796
INFO:maskrcnn_benchmark.trainer:eta: 1:50:16  iter: 8400  loss: 0.7466 (0.8398)  loss_classifier: 0.2297 (0.2862)  loss_box_reg: 0.1182 (0.1287)  loss_mask: 0.2841 (0.3057)  loss_objectness: 0.0459 (0.0569)  loss_rpn_box_reg: 0.0495 (0.0623)  time: 0.6214 (0.6892)  data: 0.0004 (0.0176)  lr: 0.160000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:50:16  iter: 8400  loss: 0.7456 (0.8383)  loss_classifier: 0.2512 (0.2856)  loss_box_reg: 0.1194 (0.1283)  loss_mask: 0.2756 (0.3054)  loss_objectness: 0.0427 (0.0569)  loss_rpn_box_reg: 0.0512 (0.0622)  time: 0.6229 (0.6892)  data: 0.0004 (0.0176)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:50:16  iter: 8400  loss: 0.7094 (0.8384)  loss_classifier: 0.2520 (0.2854)  loss_box_reg: 0.1100 (0.1279)  loss_mask: 0.2734 (0.3056)  loss_objectness: 0.0366 (0.0571)  loss_rpn_box_reg: 0.0437 (0.0623)  time: 0.6222 (0.6892)  data: 0.0003 (0.0176)  lr: 0.160000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 1:50:16  iter: 8400  loss: 0.6961 (0.8399)  loss_classifier: 0.2326 (0.2859)  loss_box_reg: 0.1026 (0.1287)  loss_mask: 0.2649 (0.3059)  loss_objectness: 0.0403 (0.0571)  loss_rpn_box_reg: 0.0514 (0.0624)  time: 0.6241 (0.6892)  data: 0.0003 (0.0176)  lr: 0.160000  max mem: 14843
INFO:maskrcnn_benchmark.trainer:eta: 1:50:16  iter: 8400  loss: 0.7039 (0.8411)  loss_classifier: 0.2308 (0.2864)  loss_box_reg: 0.1163 (0.1286)  loss_mask: 0.2844 (0.3063)  loss_objectness: 0.0413 (0.0572)  loss_rpn_box_reg: 0.0465 (0.0626)  time: 0.6241 (0.6892)  data: 0.0004 (0.0176)  lr: 0.160000  max mem: 14714
2021-10-16 13:15:00,306 maskrcnn_benchmark.trainer INFO: eta: 1:50:16  iter: 8400  loss: 0.7621 (0.8422)  loss_classifier: 0.2582 (0.2871)  loss_box_reg: 0.1200 (0.1290)  loss_mask: 0.2846 (0.3058)  loss_objectness: 0.0404 (0.0574)  loss_rpn_box_reg: 0.0513 (0.0628)  time: 0.6239 (0.6892)  data: 0.0004 (0.0178)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:50:16  iter: 8400  loss: 0.7621 (0.8422)  loss_classifier: 0.2582 (0.2871)  loss_box_reg: 0.1200 (0.1290)  loss_mask: 0.2846 (0.3058)  loss_objectness: 0.0404 (0.0574)  loss_rpn_box_reg: 0.0513 (0.0628)  time: 0.6239 (0.6892)  data: 0.0004 (0.0178)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634390100306, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8421554706352098, "loss_classifier": 0.28714239514211104, "loss_box_reg": 0.1290164858009389, "loss_mask": 0.3058023369028455, "loss_objectness": 0.05738994206434914, "loss_rpn_box_reg": 0.06280431114891101, "time": 0.6892312152896609, "data": 0.017803319068182083, "throughput": 185.7141655231124}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 8400}}
:::MLLOG {"namespace": "", "time_ms": 1634390100306, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 185.7141655231124, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:49:38  iter: 8450  loss: 0.6605 (0.8377)  loss_classifier: 0.2486 (0.2853)  loss_box_reg: 0.1036 (0.1282)  loss_mask: 0.2603 (0.3052)  loss_objectness: 0.0437 (0.0569)  loss_rpn_box_reg: 0.0518 (0.0622)  time: 0.6237 (0.6888)  data: 0.0004 (0.0175)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:49:38  iter: 8450  loss: 0.6957 (0.8376)  loss_classifier: 0.2321 (0.2851)  loss_box_reg: 0.1049 (0.1278)  loss_mask: 0.2594 (0.3054)  loss_objectness: 0.0476 (0.0570)  loss_rpn_box_reg: 0.0501 (0.0622)  time: 0.6234 (0.6888)  data: 0.0004 (0.0175)  lr: 0.160000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 1:49:38  iter: 8450  loss: 0.7620 (0.8379)  loss_classifier: 0.2699 (0.2854)  loss_box_reg: 0.1186 (0.1280)  loss_mask: 0.2798 (0.3057)  loss_objectness: 0.0388 (0.0567)  loss_rpn_box_reg: 0.0455 (0.0622)  time: 0.6226 (0.6888)  data: 0.0004 (0.0175)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:49:38  iter: 8450  loss: 0.7032 (0.8409)  loss_classifier: 0.2365 (0.2864)  loss_box_reg: 0.1090 (0.1288)  loss_mask: 0.2745 (0.3057)  loss_objectness: 0.0395 (0.0575)  loss_rpn_box_reg: 0.0440 (0.0625)  time: 0.6225 (0.6888)  data: 0.0004 (0.0175)  lr: 0.160000  max mem: 14796
INFO:maskrcnn_benchmark.trainer:eta: 1:49:38  iter: 8450  loss: 0.6851 (0.8389)  loss_classifier: 0.2314 (0.2859)  loss_box_reg: 0.1069 (0.1286)  loss_mask: 0.2689 (0.3054)  loss_objectness: 0.0419 (0.0567)  loss_rpn_box_reg: 0.0509 (0.0623)  time: 0.6226 (0.6888)  data: 0.0003 (0.0175)  lr: 0.160000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:49:38  iter: 8450  loss: 0.7494 (0.8392)  loss_classifier: 0.2312 (0.2856)  loss_box_reg: 0.1081 (0.1286)  loss_mask: 0.2695 (0.3056)  loss_objectness: 0.0403 (0.0570)  loss_rpn_box_reg: 0.0627 (0.0624)  time: 0.6234 (0.6888)  data: 0.0004 (0.0175)  lr: 0.160000  max mem: 14843
2021-10-16 13:15:31,466 maskrcnn_benchmark.trainer INFO: eta: 1:49:38  iter: 8450  loss: 0.7253 (0.8415)  loss_classifier: 0.2461 (0.2869)  loss_box_reg: 0.1064 (0.1289)  loss_mask: 0.2670 (0.3056)  loss_objectness: 0.0315 (0.0573)  loss_rpn_box_reg: 0.0454 (0.0628)  time: 0.6235 (0.6888)  data: 0.0004 (0.0177)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:49:38  iter: 8450  loss: 0.7433 (0.8405)  loss_classifier: 0.2399 (0.2862)  loss_box_reg: 0.1175 (0.1285)  loss_mask: 0.2787 (0.3061)  loss_objectness: 0.0421 (0.0571)  loss_rpn_box_reg: 0.0610 (0.0626)  time: 0.6235 (0.6888)  data: 0.0004 (0.0175)  lr: 0.160000  max mem: 14714
INFO:maskrcnn_benchmark.trainer:eta: 1:49:38  iter: 8450  loss: 0.7253 (0.8415)  loss_classifier: 0.2461 (0.2869)  loss_box_reg: 0.1064 (0.1289)  loss_mask: 0.2670 (0.3056)  loss_objectness: 0.0315 (0.0573)  loss_rpn_box_reg: 0.0454 (0.0628)  time: 0.6235 (0.6888)  data: 0.0004 (0.0177)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634390131466, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8415444885591078, "loss_classifier": 0.2869215330014215, "loss_box_reg": 0.1289393709269049, "loss_mask": 0.3055955731251536, "loss_objectness": 0.057306481905986924, "loss_rpn_box_reg": 0.06278153000013716, "time": 0.6888405051598182, "data": 0.01770062768247706, "throughput": 185.8195025426135}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 8450}}
:::MLLOG {"namespace": "", "time_ms": 1634390131466, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 185.8195025426135, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:49:00  iter: 8500  loss: 0.6688 (0.8368)  loss_classifier: 0.2281 (0.2848)  loss_box_reg: 0.1103 (0.1277)  loss_mask: 0.2704 (0.3052)  loss_objectness: 0.0378 (0.0569)  loss_rpn_box_reg: 0.0511 (0.0622)  time: 0.6240 (0.6885)  data: 0.0003 (0.0174)  lr: 0.160000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 1:49:00  iter: 8500  loss: 0.6760 (0.8371)  loss_classifier: 0.2216 (0.2851)  loss_box_reg: 0.1038 (0.1281)  loss_mask: 0.2619 (0.3050)  loss_objectness: 0.0393 (0.0568)  loss_rpn_box_reg: 0.0529 (0.0621)  time: 0.6238 (0.6885)  data: 0.0004 (0.0174)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:49:00  iter: 8500  loss: 0.7105 (0.8385)  loss_classifier: 0.2281 (0.2854)  loss_box_reg: 0.0963 (0.1285)  loss_mask: 0.2680 (0.3055)  loss_objectness: 0.0324 (0.0569)  loss_rpn_box_reg: 0.0470 (0.0624)  time: 0.6229 (0.6885)  data: 0.0004 (0.0174)  lr: 0.160000  max mem: 14843
2021-10-16 13:16:02,739 maskrcnn_benchmark.trainer INFO: eta: 1:49:00  iter: 8500  loss: 0.6664 (0.8409)  loss_classifier: 0.2091 (0.2867)  loss_box_reg: 0.1070 (0.1289)  loss_mask: 0.2631 (0.3054)  loss_objectness: 0.0369 (0.0572)  loss_rpn_box_reg: 0.0465 (0.0627)  time: 0.6226 (0.6885)  data: 0.0003 (0.0176)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:49:00  iter: 8500  loss: 0.7573 (0.8400)  loss_classifier: 0.2495 (0.2860)  loss_box_reg: 0.1220 (0.1284)  loss_mask: 0.2759 (0.3059)  loss_objectness: 0.0432 (0.0571)  loss_rpn_box_reg: 0.0634 (0.0626)  time: 0.6227 (0.6885)  data: 0.0004 (0.0174)  lr: 0.160000  max mem: 14714
INFO:maskrcnn_benchmark.trainer:eta: 1:49:00  iter: 8500  loss: 0.6664 (0.8409)  loss_classifier: 0.2091 (0.2867)  loss_box_reg: 0.1070 (0.1289)  loss_mask: 0.2631 (0.3054)  loss_objectness: 0.0369 (0.0572)  loss_rpn_box_reg: 0.0465 (0.0627)  time: 0.6226 (0.6885)  data: 0.0003 (0.0176)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:49:00  iter: 8500  loss: 0.7467 (0.8373)  loss_classifier: 0.2378 (0.2851)  loss_box_reg: 0.1192 (0.1279)  loss_mask: 0.2770 (0.3055)  loss_objectness: 0.0363 (0.0566)  loss_rpn_box_reg: 0.0518 (0.0621)  time: 0.6237 (0.6885)  data: 0.0004 (0.0174)  lr: 0.160000  max mem: 15034
:::MLLOG {"namespace": "", "time_ms": 1634390162740, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8409388751457719, "loss_classifier": 0.28667680120731104, "loss_box_reg": 0.1288715358463883, "loss_mask": 0.30542518034226757, "loss_objectness": 0.057217364396680806, "loss_rpn_box_reg": 0.06274799378829844, "time": 0.6884677479407366, "data": 0.01759945389803718, "throughput": 185.92011082996768}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 8500}}
INFO:maskrcnn_benchmark.trainer:eta: 1:49:00  iter: 8500  loss: 0.6978 (0.8401)  loss_classifier: 0.2337 (0.2861)  loss_box_reg: 0.1082 (0.1287)  loss_mask: 0.2577 (0.3054)  loss_objectness: 0.0400 (0.0574)  loss_rpn_box_reg: 0.0492 (0.0625)  time: 0.6235 (0.6885)  data: 0.0004 (0.0174)  lr: 0.160000  max mem: 14796
INFO:maskrcnn_benchmark.trainer:eta: 1:49:00  iter: 8500  loss: 0.7567 (0.8384)  loss_classifier: 0.2411 (0.2857)  loss_box_reg: 0.1075 (0.1285)  loss_mask: 0.2667 (0.3052)  loss_objectness: 0.0437 (0.0567)  loss_rpn_box_reg: 0.0566 (0.0622)  time: 0.6240 (0.6885)  data: 0.0004 (0.0174)  lr: 0.160000  max mem: 14803
:::MLLOG {"namespace": "", "time_ms": 1634390162740, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 185.92011082996768, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:48:22  iter: 8550  loss: 0.7033 (0.8365)  loss_classifier: 0.2377 (0.2849)  loss_box_reg: 0.1110 (0.1281)  loss_mask: 0.2722 (0.3048)  loss_objectness: 0.0407 (0.0567)  loss_rpn_box_reg: 0.0483 (0.0621)  time: 0.6243 (0.6881)  data: 0.0004 (0.0173)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:48:22  iter: 8550  loss: 0.7064 (0.8366)  loss_classifier: 0.2320 (0.2849)  loss_box_reg: 0.1087 (0.1278)  loss_mask: 0.2685 (0.3053)  loss_objectness: 0.0367 (0.0565)  loss_rpn_box_reg: 0.0473 (0.0621)  time: 0.6244 (0.6881)  data: 0.0003 (0.0173)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:48:22  iter: 8550  loss: 0.7615 (0.8378)  loss_classifier: 0.2479 (0.2855)  loss_box_reg: 0.1237 (0.1285)  loss_mask: 0.2723 (0.3051)  loss_objectness: 0.0466 (0.0566)  loss_rpn_box_reg: 0.0575 (0.0622)  time: 0.6245 (0.6881)  data: 0.0004 (0.0173)  lr: 0.160000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:48:22  iter: 8550  loss: 0.6697 (0.8395)  loss_classifier: 0.2253 (0.2859)  loss_box_reg: 0.1044 (0.1286)  loss_mask: 0.2697 (0.3052)  loss_objectness: 0.0370 (0.0573)  loss_rpn_box_reg: 0.0462 (0.0624)  time: 0.6246 (0.6881)  data: 0.0003 (0.0173)  lr: 0.160000  max mem: 14796
INFO:maskrcnn_benchmark.trainer:eta: 1:48:22  iter: 8550  loss: 0.6687 (0.8361)  loss_classifier: 0.2064 (0.2845)  loss_box_reg: 0.0974 (0.1276)  loss_mask: 0.2588 (0.3050)  loss_objectness: 0.0345 (0.0568)  loss_rpn_box_reg: 0.0516 (0.0622)  time: 0.6241 (0.6881)  data: 0.0004 (0.0173)  lr: 0.160000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 1:48:22  iter: 8550  loss: 0.7076 (0.8394)  loss_classifier: 0.2388 (0.2858)  loss_box_reg: 0.1088 (0.1283)  loss_mask: 0.2691 (0.3057)  loss_objectness: 0.0386 (0.0570)  loss_rpn_box_reg: 0.0477 (0.0626)  time: 0.6258 (0.6881)  data: 0.0004 (0.0173)  lr: 0.160000  max mem: 14714
2021-10-16 13:16:34,020 maskrcnn_benchmark.trainer INFO: eta: 1:48:22  iter: 8550  loss: 0.7055 (0.8403)  loss_classifier: 0.2314 (0.2864)  loss_box_reg: 0.1100 (0.1288)  loss_mask: 0.2672 (0.3052)  loss_objectness: 0.0424 (0.0571)  loss_rpn_box_reg: 0.0531 (0.0627)  time: 0.6258 (0.6881)  data: 0.0004 (0.0175)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:48:22  iter: 8550  loss: 0.7055 (0.8403)  loss_classifier: 0.2314 (0.2864)  loss_box_reg: 0.1100 (0.1288)  loss_mask: 0.2672 (0.3052)  loss_objectness: 0.0424 (0.0571)  loss_rpn_box_reg: 0.0531 (0.0627)  time: 0.6258 (0.6881)  data: 0.0004 (0.0175)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:48:22  iter: 8550  loss: 0.7402 (0.8379)  loss_classifier: 0.2296 (0.2851)  loss_box_reg: 0.1099 (0.1284)  loss_mask: 0.2750 (0.3053)  loss_objectness: 0.0366 (0.0568)  loss_rpn_box_reg: 0.0447 (0.0623)  time: 0.6258 (0.6881)  data: 0.0003 (0.0173)  lr: 0.160000  max mem: 14843
:::MLLOG {"namespace": "", "time_ms": 1634390194020, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8402801870254049, "loss_classifier": 0.2864033087643615, "loss_box_reg": 0.12878244339807057, "loss_mask": 0.3052408650482607, "loss_objectness": 0.05713798397705395, "loss_rpn_box_reg": 0.06271558629599405, "time": 0.6881001887405128, "data": 0.017499228694982695, "throughput": 186.01942288998507}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 8550}}
:::MLLOG {"namespace": "", "time_ms": 1634390194021, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 186.01942288998507, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:47:44  iter: 8600  loss: 0.6960 (0.8358)  loss_classifier: 0.2228 (0.2846)  loss_box_reg: 0.1121 (0.1280)  loss_mask: 0.2717 (0.3046)  loss_objectness: 0.0405 (0.0566)  loss_rpn_box_reg: 0.0563 (0.0621)  time: 0.6254 (0.6877)  data: 0.0004 (0.0172)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:47:44  iter: 8600  loss: 0.7319 (0.8387)  loss_classifier: 0.2315 (0.2855)  loss_box_reg: 0.1143 (0.1283)  loss_mask: 0.2665 (0.3055)  loss_objectness: 0.0363 (0.0569)  loss_rpn_box_reg: 0.0552 (0.0625)  time: 0.6257 (0.6877)  data: 0.0004 (0.0172)  lr: 0.160000  max mem: 14714
INFO:maskrcnn_benchmark.trainer:eta: 1:47:44  iter: 8600  loss: 0.7421 (0.8374)  loss_classifier: 0.2544 (0.2849)  loss_box_reg: 0.1083 (0.1283)  loss_mask: 0.2850 (0.3051)  loss_objectness: 0.0470 (0.0567)  loss_rpn_box_reg: 0.0632 (0.0623)  time: 0.6257 (0.6877)  data: 0.0003 (0.0172)  lr: 0.160000  max mem: 14843
2021-10-16 13:17:05,200 maskrcnn_benchmark.trainer INFO: eta: 1:47:44  iter: 8600  loss: 0.7531 (0.8397)  loss_classifier: 0.2488 (0.2862)  loss_box_reg: 0.1112 (0.1287)  loss_mask: 0.2900 (0.3051)  loss_objectness: 0.0376 (0.0571)  loss_rpn_box_reg: 0.0591 (0.0627)  time: 0.6256 (0.6877)  data: 0.0004 (0.0174)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:47:44  iter: 8600  loss: 0.7531 (0.8397)  loss_classifier: 0.2488 (0.2862)  loss_box_reg: 0.1112 (0.1287)  loss_mask: 0.2900 (0.3051)  loss_objectness: 0.0376 (0.0571)  loss_rpn_box_reg: 0.0591 (0.0627)  time: 0.6256 (0.6877)  data: 0.0004 (0.0174)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:47:44  iter: 8600  loss: 0.7369 (0.8354)  loss_classifier: 0.2466 (0.2842)  loss_box_reg: 0.1193 (0.1275)  loss_mask: 0.2755 (0.3048)  loss_objectness: 0.0385 (0.0567)  loss_rpn_box_reg: 0.0494 (0.0621)  time: 0.6255 (0.6877)  data: 0.0004 (0.0172)  lr: 0.160000  max mem: 14673
:::MLLOG {"namespace": "", "time_ms": 1634390225200, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8396947150278923, "loss_classifier": 0.2861557206537488, "loss_box_reg": 0.12870590787291591, "loss_mask": 0.3050661668805189, "loss_objectness": 0.05706353655669751, "loss_rpn_box_reg": 0.06270338352737126, "time": 0.68772516175758, "data": 0.017400333216024, "throughput": 186.12086210845868}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 8600}}
:::MLLOG {"namespace": "", "time_ms": 1634390225200, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 186.12086210845868, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:47:44  iter: 8600  loss: 0.7160 (0.8358)  loss_classifier: 0.2301 (0.2845)  loss_box_reg: 0.1127 (0.1277)  loss_mask: 0.2760 (0.3051)  loss_objectness: 0.0393 (0.0564)  loss_rpn_box_reg: 0.0470 (0.0620)  time: 0.6256 (0.6877)  data: 0.0004 (0.0172)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:47:44  iter: 8600  loss: 0.7037 (0.8373)  loss_classifier: 0.2265 (0.2853)  loss_box_reg: 0.1128 (0.1284)  loss_mask: 0.2819 (0.3049)  loss_objectness: 0.0378 (0.0565)  loss_rpn_box_reg: 0.0452 (0.0622)  time: 0.6251 (0.6877)  data: 0.0003 (0.0172)  lr: 0.160000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:47:44  iter: 8600  loss: 0.7652 (0.8390)  loss_classifier: 0.2616 (0.2856)  loss_box_reg: 0.1193 (0.1285)  loss_mask: 0.2840 (0.3051)  loss_objectness: 0.0404 (0.0573)  loss_rpn_box_reg: 0.0610 (0.0624)  time: 0.6252 (0.6877)  data: 0.0004 (0.0172)  lr: 0.160000  max mem: 14796
INFO:maskrcnn_benchmark.trainer:eta: 1:47:06  iter: 8650  loss: 0.7677 (0.8353)  loss_classifier: 0.2616 (0.2844)  loss_box_reg: 0.1193 (0.1279)  loss_mask: 0.2803 (0.3044)  loss_objectness: 0.0384 (0.0565)  loss_rpn_box_reg: 0.0547 (0.0621)  time: 0.6222 (0.6874)  data: 0.0004 (0.0171)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:47:06  iter: 8650  loss: 0.7412 (0.8352)  loss_classifier: 0.2494 (0.2843)  loss_box_reg: 0.1147 (0.1276)  loss_mask: 0.2739 (0.3049)  loss_objectness: 0.0398 (0.0563)  loss_rpn_box_reg: 0.0525 (0.0620)  time: 0.6223 (0.6874)  data: 0.0003 (0.0171)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:47:06  iter: 8650  loss: 0.6893 (0.8366)  loss_classifier: 0.2234 (0.2850)  loss_box_reg: 0.1001 (0.1283)  loss_mask: 0.2577 (0.3047)  loss_objectness: 0.0315 (0.0565)  loss_rpn_box_reg: 0.0455 (0.0621)  time: 0.6224 (0.6874)  data: 0.0003 (0.0171)  lr: 0.160000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:47:06  iter: 8650  loss: 0.6899 (0.8382)  loss_classifier: 0.2223 (0.2854)  loss_box_reg: 0.1013 (0.1284)  loss_mask: 0.2595 (0.3049)  loss_objectness: 0.0405 (0.0572)  loss_rpn_box_reg: 0.0511 (0.0623)  time: 0.6222 (0.6874)  data: 0.0004 (0.0171)  lr: 0.160000  max mem: 14796
INFO:maskrcnn_benchmark.trainer:eta: 1:47:06  iter: 8650  loss: 0.7286 (0.8349)  loss_classifier: 0.2372 (0.2840)  loss_box_reg: 0.1067 (0.1275)  loss_mask: 0.2715 (0.3046)  loss_objectness: 0.0422 (0.0567)  loss_rpn_box_reg: 0.0545 (0.0621)  time: 0.6223 (0.6874)  data: 0.0004 (0.0171)  lr: 0.160000  max mem: 14673
2021-10-16 13:17:36,478 maskrcnn_benchmark.trainer INFO: eta: 1:47:06  iter: 8650  loss: 0.7546 (0.8392)  loss_classifier: 0.2659 (0.2860)  loss_box_reg: 0.1157 (0.1286)  loss_mask: 0.2783 (0.3049)  loss_objectness: 0.0460 (0.0570)  loss_rpn_box_reg: 0.0565 (0.0627)  time: 0.6238 (0.6874)  data: 0.0004 (0.0173)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:47:06  iter: 8650  loss: 0.7394 (0.8381)  loss_classifier: 0.2591 (0.2853)  loss_box_reg: 0.1168 (0.1282)  loss_mask: 0.2707 (0.3053)  loss_objectness: 0.0451 (0.0568)  loss_rpn_box_reg: 0.0594 (0.0625)  time: 0.6233 (0.6874)  data: 0.0004 (0.0171)  lr: 0.160000  max mem: 14714
INFO:maskrcnn_benchmark.trainer:eta: 1:47:06  iter: 8650  loss: 0.7546 (0.8392)  loss_classifier: 0.2659 (0.2860)  loss_box_reg: 0.1157 (0.1286)  loss_mask: 0.2783 (0.3049)  loss_objectness: 0.0460 (0.0570)  loss_rpn_box_reg: 0.0565 (0.0627)  time: 0.6238 (0.6874)  data: 0.0004 (0.0173)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:47:06  iter: 8650  loss: 0.7135 (0.8368)  loss_classifier: 0.2392 (0.2847)  loss_box_reg: 0.1117 (0.1282)  loss_mask: 0.2726 (0.3049)  loss_objectness: 0.0411 (0.0566)  loss_rpn_box_reg: 0.0460 (0.0623)  time: 0.6242 (0.6874)  data: 0.0004 (0.0171)  lr: 0.160000  max mem: 14843
:::MLLOG {"namespace": "", "time_ms": 1634390256478, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8391653805764424, "loss_classifier": 0.2859580238077337, "loss_box_reg": 0.12862617070703214, "loss_mask": 0.30488226185127487, "loss_objectness": 0.05700346228122884, "loss_rpn_box_reg": 0.06269546246543699, "time": 0.6873658054825887, "data": 0.017302546225531252, "throughput": 186.21816648288637}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 8650}}
:::MLLOG {"namespace": "", "time_ms": 1634390256478, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 186.21816648288637, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:46:29  iter: 8700  loss: 0.7448 (0.8362)  loss_classifier: 0.2547 (0.2845)  loss_box_reg: 0.1179 (0.1282)  loss_mask: 0.2616 (0.3047)  loss_objectness: 0.0394 (0.0566)  loss_rpn_box_reg: 0.0568 (0.0623)  time: 0.6239 (0.6870)  data: 0.0004 (0.0170)  lr: 0.160000  max mem: 14843
INFO:maskrcnn_benchmark.trainer:eta: 1:46:29  iter: 8700  loss: 0.7524 (0.8377)  loss_classifier: 0.2675 (0.2851)  loss_box_reg: 0.1191 (0.1281)  loss_mask: 0.2736 (0.3051)  loss_objectness: 0.0403 (0.0568)  loss_rpn_box_reg: 0.0507 (0.0625)  time: 0.6239 (0.6870)  data: 0.0004 (0.0170)  lr: 0.160000  max mem: 14714
2021-10-16 13:18:07,766 maskrcnn_benchmark.trainer INFO: eta: 1:46:29  iter: 8700  loss: 0.6431 (0.8384)  loss_classifier: 0.2212 (0.2857)  loss_box_reg: 0.1010 (0.1285)  loss_mask: 0.2504 (0.3047)  loss_objectness: 0.0387 (0.0569)  loss_rpn_box_reg: 0.0460 (0.0626)  time: 0.6240 (0.6870)  data: 0.0003 (0.0172)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:46:29  iter: 8700  loss: 0.6431 (0.8384)  loss_classifier: 0.2212 (0.2857)  loss_box_reg: 0.1010 (0.1285)  loss_mask: 0.2504 (0.3047)  loss_objectness: 0.0387 (0.0569)  loss_rpn_box_reg: 0.0460 (0.0626)  time: 0.6240 (0.6870)  data: 0.0003 (0.0172)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634390287766, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.838444678920439, "loss_classifier": 0.2856878756397757, "loss_box_reg": 0.12853400823197209, "loss_mask": 0.3046648349313215, "loss_objectness": 0.05691349616788071, "loss_rpn_box_reg": 0.06264446449658737, "time": 0.6870117641591478, "data": 0.017205897555954155, "throughput": 186.31413125314185}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 8700}}
:::MLLOG {"namespace": "", "time_ms": 1634390287766, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 186.31413125314185, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:46:29  iter: 8700  loss: 0.7351 (0.8343)  loss_classifier: 0.2494 (0.2838)  loss_box_reg: 0.1179 (0.1274)  loss_mask: 0.2739 (0.3044)  loss_objectness: 0.0417 (0.0566)  loss_rpn_box_reg: 0.0532 (0.0621)  time: 0.6237 (0.6870)  data: 0.0004 (0.0170)  lr: 0.160000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 1:46:29  iter: 8700  loss: 0.7269 (0.8347)  loss_classifier: 0.2462 (0.2841)  loss_box_reg: 0.1119 (0.1278)  loss_mask: 0.2717 (0.3042)  loss_objectness: 0.0398 (0.0565)  loss_rpn_box_reg: 0.0685 (0.0620)  time: 0.6243 (0.6870)  data: 0.0004 (0.0170)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:46:29  iter: 8700  loss: 0.7735 (0.8347)  loss_classifier: 0.2433 (0.2841)  loss_box_reg: 0.1201 (0.1276)  loss_mask: 0.2830 (0.3048)  loss_objectness: 0.0378 (0.0563)  loss_rpn_box_reg: 0.0497 (0.0620)  time: 0.6257 (0.6870)  data: 0.0004 (0.0170)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:46:29  iter: 8700  loss: 0.7184 (0.8375)  loss_classifier: 0.2321 (0.2851)  loss_box_reg: 0.1085 (0.1283)  loss_mask: 0.2618 (0.3047)  loss_objectness: 0.0409 (0.0571)  loss_rpn_box_reg: 0.0459 (0.0623)  time: 0.6255 (0.6870)  data: 0.0004 (0.0170)  lr: 0.160000  max mem: 14796
INFO:maskrcnn_benchmark.trainer:eta: 1:46:29  iter: 8700  loss: 0.7573 (0.8361)  loss_classifier: 0.2599 (0.2849)  loss_box_reg: 0.1190 (0.1282)  loss_mask: 0.2756 (0.3045)  loss_objectness: 0.0409 (0.0564)  loss_rpn_box_reg: 0.0627 (0.0621)  time: 0.6254 (0.6870)  data: 0.0004 (0.0170)  lr: 0.160000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:45:51  iter: 8750  loss: 0.7200 (0.8355)  loss_classifier: 0.2309 (0.2846)  loss_box_reg: 0.1091 (0.1281)  loss_mask: 0.2693 (0.3043)  loss_objectness: 0.0385 (0.0563)  loss_rpn_box_reg: 0.0519 (0.0621)  time: 0.6250 (0.6866)  data: 0.0004 (0.0169)  lr: 0.160000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:45:51  iter: 8750  loss: 0.6884 (0.8340)  loss_classifier: 0.2311 (0.2838)  loss_box_reg: 0.1042 (0.1275)  loss_mask: 0.2683 (0.3046)  loss_objectness: 0.0351 (0.0562)  loss_rpn_box_reg: 0.0452 (0.0619)  time: 0.6248 (0.6866)  data: 0.0003 (0.0169)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:45:51  iter: 8750  loss: 0.7167 (0.8370)  loss_classifier: 0.2472 (0.2849)  loss_box_reg: 0.1161 (0.1283)  loss_mask: 0.2681 (0.3045)  loss_objectness: 0.0403 (0.0571)  loss_rpn_box_reg: 0.0492 (0.0623)  time: 0.6250 (0.6866)  data: 0.0004 (0.0169)  lr: 0.160000  max mem: 14796
INFO:maskrcnn_benchmark.trainer:eta: 1:45:51  iter: 8750  loss: 0.7148 (0.8341)  loss_classifier: 0.2358 (0.2839)  loss_box_reg: 0.1013 (0.1277)  loss_mask: 0.2738 (0.3041)  loss_objectness: 0.0422 (0.0564)  loss_rpn_box_reg: 0.0575 (0.0620)  time: 0.6253 (0.6866)  data: 0.0004 (0.0169)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:45:51  iter: 8750  loss: 0.7761 (0.8338)  loss_classifier: 0.2566 (0.2836)  loss_box_reg: 0.1276 (0.1273)  loss_mask: 0.2781 (0.3043)  loss_objectness: 0.0398 (0.0565)  loss_rpn_box_reg: 0.0571 (0.0621)  time: 0.6255 (0.6866)  data: 0.0004 (0.0169)  lr: 0.160000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 1:45:51  iter: 8750  loss: 0.7276 (0.8357)  loss_classifier: 0.2549 (0.2843)  loss_box_reg: 0.1190 (0.1281)  loss_mask: 0.2818 (0.3046)  loss_objectness: 0.0413 (0.0565)  loss_rpn_box_reg: 0.0513 (0.0622)  time: 0.6251 (0.6866)  data: 0.0004 (0.0169)  lr: 0.160000  max mem: 14843
2021-10-16 13:18:38,895 maskrcnn_benchmark.trainer INFO: eta: 1:45:51  iter: 8750  loss: 0.7455 (0.8378)  loss_classifier: 0.2555 (0.2855)  loss_box_reg: 0.1191 (0.1284)  loss_mask: 0.2746 (0.3045)  loss_objectness: 0.0386 (0.0568)  loss_rpn_box_reg: 0.0546 (0.0626)  time: 0.6251 (0.6866)  data: 0.0004 (0.0171)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:45:51  iter: 8750  loss: 0.7476 (0.8371)  loss_classifier: 0.2436 (0.2849)  loss_box_reg: 0.1132 (0.1281)  loss_mask: 0.2734 (0.3050)  loss_objectness: 0.0354 (0.0567)  loss_rpn_box_reg: 0.0409 (0.0624)  time: 0.6252 (0.6867)  data: 0.0004 (0.0169)  lr: 0.160000  max mem: 14714
INFO:maskrcnn_benchmark.trainer:eta: 1:45:51  iter: 8750  loss: 0.7455 (0.8378)  loss_classifier: 0.2555 (0.2855)  loss_box_reg: 0.1191 (0.1284)  loss_mask: 0.2746 (0.3045)  loss_objectness: 0.0386 (0.0568)  loss_rpn_box_reg: 0.0546 (0.0626)  time: 0.6251 (0.6866)  data: 0.0004 (0.0171)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634390318895, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8378484363555908, "loss_classifier": 0.2854505371621677, "loss_box_reg": 0.12844761276412756, "loss_mask": 0.304496163884231, "loss_objectness": 0.056839719393423624, "loss_rpn_box_reg": 0.06261440369348441, "time": 0.6866435667310442, "data": 0.017110471561976842, "throughput": 186.41403808584306}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 8750}}
:::MLLOG {"namespace": "", "time_ms": 1634390318895, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 186.41403808584306, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:45:13  iter: 8800  loss: 0.7448 (0.8352)  loss_classifier: 0.2508 (0.2841)  loss_box_reg: 0.1153 (0.1280)  loss_mask: 0.2719 (0.3044)  loss_objectness: 0.0435 (0.0564)  loss_rpn_box_reg: 0.0555 (0.0622)  time: 0.6242 (0.6863)  data: 0.0004 (0.0168)  lr: 0.160000  max mem: 14843
2021-10-16 13:19:10,152 maskrcnn_benchmark.trainer INFO: eta: 1:45:13  iter: 8800  loss: 0.7516 (0.8373)  loss_classifier: 0.2426 (0.2853)  loss_box_reg: 0.1121 (0.1284)  loss_mask: 0.2702 (0.3043)  loss_objectness: 0.0423 (0.0568)  loss_rpn_box_reg: 0.0577 (0.0626)  time: 0.6245 (0.6863)  data: 0.0004 (0.0170)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:45:13  iter: 8800  loss: 0.7113 (0.8333)  loss_classifier: 0.2469 (0.2836)  loss_box_reg: 0.1082 (0.1276)  loss_mask: 0.2758 (0.3039)  loss_objectness: 0.0371 (0.0563)  loss_rpn_box_reg: 0.0495 (0.0619)  time: 0.6237 (0.6863)  data: 0.0004 (0.0168)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:45:13  iter: 8800  loss: 0.7516 (0.8373)  loss_classifier: 0.2426 (0.2853)  loss_box_reg: 0.1121 (0.1284)  loss_mask: 0.2702 (0.3043)  loss_objectness: 0.0423 (0.0568)  loss_rpn_box_reg: 0.0577 (0.0626)  time: 0.6245 (0.6863)  data: 0.0004 (0.0170)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:45:13  iter: 8800  loss: 0.6692 (0.8331)  loss_classifier: 0.2046 (0.2833)  loss_box_reg: 0.0952 (0.1272)  loss_mask: 0.2690 (0.3041)  loss_objectness: 0.0439 (0.0565)  loss_rpn_box_reg: 0.0450 (0.0620)  time: 0.6238 (0.6863)  data: 0.0003 (0.0168)  lr: 0.160000  max mem: 14673
:::MLLOG {"namespace": "", "time_ms": 1634390350152, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8373180120031942, "loss_classifier": 0.28525575893677096, "loss_box_reg": 0.12837768591472096, "loss_mask": 0.3043413000215184, "loss_objectness": 0.05676517415643585, "loss_rpn_box_reg": 0.06257809348330325, "time": 0.6862941190058535, "data": 0.017015946886756204, "throughput": 186.50895651767675}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 8800}}
INFO:maskrcnn_benchmark.trainer:eta: 1:45:13  iter: 8800  loss: 0.7227 (0.8365)  loss_classifier: 0.2486 (0.2847)  loss_box_reg: 0.1111 (0.1280)  loss_mask: 0.2733 (0.3048)  loss_objectness: 0.0361 (0.0566)  loss_rpn_box_reg: 0.0494 (0.0624)  time: 0.6245 (0.6863)  data: 0.0003 (0.0168)  lr: 0.160000  max mem: 14714
:::MLLOG {"namespace": "", "time_ms": 1634390350152, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 186.50895651767675, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:45:13  iter: 8800  loss: 0.7032 (0.8334)  loss_classifier: 0.2331 (0.2836)  loss_box_reg: 0.1109 (0.1274)  loss_mask: 0.2732 (0.3044)  loss_objectness: 0.0433 (0.0561)  loss_rpn_box_reg: 0.0447 (0.0619)  time: 0.6231 (0.6863)  data: 0.0004 (0.0168)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:45:13  iter: 8800  loss: 0.7216 (0.8349)  loss_classifier: 0.2313 (0.2844)  loss_box_reg: 0.1191 (0.1281)  loss_mask: 0.2693 (0.3042)  loss_objectness: 0.0424 (0.0563)  loss_rpn_box_reg: 0.0614 (0.0621)  time: 0.6232 (0.6863)  data: 0.0004 (0.0168)  lr: 0.160000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:45:13  iter: 8800  loss: 0.7144 (0.8362)  loss_classifier: 0.2365 (0.2846)  loss_box_reg: 0.1074 (0.1281)  loss_mask: 0.2591 (0.3043)  loss_objectness: 0.0403 (0.0569)  loss_rpn_box_reg: 0.0563 (0.0623)  time: 0.6231 (0.6863)  data: 0.0003 (0.0168)  lr: 0.160000  max mem: 14796
INFO:maskrcnn_benchmark.trainer:eta: 1:44:36  iter: 8850  loss: 0.7240 (0.8327)  loss_classifier: 0.2401 (0.2834)  loss_box_reg: 0.1217 (0.1275)  loss_mask: 0.2709 (0.3037)  loss_objectness: 0.0360 (0.0562)  loss_rpn_box_reg: 0.0526 (0.0619)  time: 0.6204 (0.6859)  data: 0.0004 (0.0168)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:44:36  iter: 8850  loss: 0.6868 (0.8328)  loss_classifier: 0.2212 (0.2834)  loss_box_reg: 0.1089 (0.1273)  loss_mask: 0.2628 (0.3042)  loss_objectness: 0.0340 (0.0560)  loss_rpn_box_reg: 0.0472 (0.0618)  time: 0.6205 (0.6859)  data: 0.0004 (0.0167)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:44:36  iter: 8850  loss: 0.7388 (0.8357)  loss_classifier: 0.2409 (0.2844)  loss_box_reg: 0.1181 (0.1281)  loss_mask: 0.2645 (0.3041)  loss_objectness: 0.0391 (0.0569)  loss_rpn_box_reg: 0.0457 (0.0622)  time: 0.6205 (0.6859)  data: 0.0004 (0.0167)  lr: 0.160000  max mem: 14796
INFO:maskrcnn_benchmark.trainer:eta: 1:44:36  iter: 8850  loss: 0.7806 (0.8345)  loss_classifier: 0.2620 (0.2842)  loss_box_reg: 0.1263 (0.1280)  loss_mask: 0.2701 (0.3040)  loss_objectness: 0.0431 (0.0562)  loss_rpn_box_reg: 0.0539 (0.0620)  time: 0.6207 (0.6859)  data: 0.0004 (0.0167)  lr: 0.160000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:44:36  iter: 8850  loss: 0.7755 (0.8325)  loss_classifier: 0.2551 (0.2831)  loss_box_reg: 0.1246 (0.1271)  loss_mask: 0.2800 (0.3040)  loss_objectness: 0.0379 (0.0564)  loss_rpn_box_reg: 0.0493 (0.0619)  time: 0.6204 (0.6860)  data: 0.0003 (0.0167)  lr: 0.160000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 1:44:36  iter: 8850  loss: 0.7354 (0.8346)  loss_classifier: 0.2491 (0.2839)  loss_box_reg: 0.1061 (0.1280)  loss_mask: 0.2663 (0.3042)  loss_objectness: 0.0417 (0.0564)  loss_rpn_box_reg: 0.0573 (0.0622)  time: 0.6214 (0.6859)  data: 0.0004 (0.0167)  lr: 0.160000  max mem: 14843
2021-10-16 13:19:41,382 maskrcnn_benchmark.trainer INFO: eta: 1:44:36  iter: 8850  loss: 0.7154 (0.8367)  loss_classifier: 0.2512 (0.2850)  loss_box_reg: 0.1143 (0.1283)  loss_mask: 0.2729 (0.3042)  loss_objectness: 0.0400 (0.0567)  loss_rpn_box_reg: 0.0472 (0.0625)  time: 0.6211 (0.6859)  data: 0.0004 (0.0169)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:44:36  iter: 8850  loss: 0.7219 (0.8360)  loss_classifier: 0.2512 (0.2845)  loss_box_reg: 0.1153 (0.1279)  loss_mask: 0.2775 (0.3046)  loss_objectness: 0.0377 (0.0566)  loss_rpn_box_reg: 0.0475 (0.0623)  time: 0.6206 (0.6860)  data: 0.0004 (0.0167)  lr: 0.160000  max mem: 14714
INFO:maskrcnn_benchmark.trainer:eta: 1:44:36  iter: 8850  loss: 0.7154 (0.8367)  loss_classifier: 0.2512 (0.2850)  loss_box_reg: 0.1143 (0.1283)  loss_mask: 0.2729 (0.3042)  loss_objectness: 0.0400 (0.0567)  loss_rpn_box_reg: 0.0472 (0.0625)  time: 0.6211 (0.6859)  data: 0.0004 (0.0169)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634390381383, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8366766337991435, "loss_classifier": 0.2850017181830218, "loss_box_reg": 0.12829356767234557, "loss_mask": 0.3041711803125796, "loss_objectness": 0.05668506136048312, "loss_rpn_box_reg": 0.06252510679864698, "time": 0.6859456125356383, "data": 0.016922099091912394, "throughput": 186.60371560194176}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 8850}}
:::MLLOG {"namespace": "", "time_ms": 1634390381383, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 186.60371560194176, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:43:58  iter: 8900  loss: 0.7312 (0.8322)  loss_classifier: 0.2339 (0.2832)  loss_box_reg: 0.1194 (0.1275)  loss_mask: 0.2697 (0.3035)  loss_objectness: 0.0396 (0.0562)  loss_rpn_box_reg: 0.0528 (0.0619)  time: 0.6240 (0.6856)  data: 0.0004 (0.0167)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:43:59  iter: 8900  loss: 0.7589 (0.8320)  loss_classifier: 0.2638 (0.2829)  loss_box_reg: 0.1252 (0.1271)  loss_mask: 0.2772 (0.3038)  loss_objectness: 0.0429 (0.0563)  loss_rpn_box_reg: 0.0605 (0.0619)  time: 0.6239 (0.6856)  data: 0.0004 (0.0167)  lr: 0.160000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 1:43:58  iter: 8900  loss: 0.6879 (0.8322)  loss_classifier: 0.2293 (0.2832)  loss_box_reg: 0.1088 (0.1273)  loss_mask: 0.2598 (0.3040)  loss_objectness: 0.0350 (0.0559)  loss_rpn_box_reg: 0.0504 (0.0618)  time: 0.6245 (0.6856)  data: 0.0004 (0.0166)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:43:58  iter: 8900  loss: 0.6721 (0.8349)  loss_classifier: 0.2179 (0.2841)  loss_box_reg: 0.1072 (0.1280)  loss_mask: 0.2688 (0.3039)  loss_objectness: 0.0343 (0.0568)  loss_rpn_box_reg: 0.0415 (0.0621)  time: 0.6246 (0.6856)  data: 0.0003 (0.0166)  lr: 0.160000  max mem: 14796
INFO:maskrcnn_benchmark.trainer:eta: 1:43:58  iter: 8900  loss: 0.7785 (0.8341)  loss_classifier: 0.2573 (0.2840)  loss_box_reg: 0.1225 (0.1280)  loss_mask: 0.2771 (0.3038)  loss_objectness: 0.0461 (0.0562)  loss_rpn_box_reg: 0.0574 (0.0620)  time: 0.6245 (0.6856)  data: 0.0004 (0.0166)  lr: 0.160000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:43:58  iter: 8900  loss: 0.7683 (0.8341)  loss_classifier: 0.2451 (0.2837)  loss_box_reg: 0.1242 (0.1279)  loss_mask: 0.2770 (0.3040)  loss_objectness: 0.0434 (0.0563)  loss_rpn_box_reg: 0.0546 (0.0622)  time: 0.6237 (0.6856)  data: 0.0004 (0.0166)  lr: 0.160000  max mem: 14843
2021-10-16 13:20:12,596 maskrcnn_benchmark.trainer INFO: eta: 1:43:58  iter: 8900  loss: 0.7952 (0.8362)  loss_classifier: 0.2858 (0.2848)  loss_box_reg: 0.1299 (0.1282)  loss_mask: 0.2830 (0.3040)  loss_objectness: 0.0430 (0.0566)  loss_rpn_box_reg: 0.0517 (0.0625)  time: 0.6237 (0.6856)  data: 0.0004 (0.0168)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:43:59  iter: 8900  loss: 0.7278 (0.8354)  loss_classifier: 0.2501 (0.2843)  loss_box_reg: 0.1213 (0.1278)  loss_mask: 0.2633 (0.3044)  loss_objectness: 0.0352 (0.0565)  loss_rpn_box_reg: 0.0414 (0.0623)  time: 0.6237 (0.6856)  data: 0.0003 (0.0166)  lr: 0.160000  max mem: 14714
INFO:maskrcnn_benchmark.trainer:eta: 1:43:58  iter: 8900  loss: 0.7952 (0.8362)  loss_classifier: 0.2858 (0.2848)  loss_box_reg: 0.1299 (0.1282)  loss_mask: 0.2830 (0.3040)  loss_objectness: 0.0430 (0.0566)  loss_rpn_box_reg: 0.0517 (0.0625)  time: 0.6237 (0.6856)  data: 0.0004 (0.0168)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634390412596, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.836151621438814, "loss_classifier": 0.2848162007164419, "loss_box_reg": 0.12824798328820303, "loss_mask": 0.3039965395294548, "loss_objectness": 0.0566039675233488, "loss_rpn_box_reg": 0.06248693090696097, "time": 0.6855991613730955, "data": 0.016829352191324982, "throughput": 186.69801133310287}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 8900}}
:::MLLOG {"namespace": "", "time_ms": 1634390412597, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 186.69801133310287, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:43:21  iter: 8950  loss: 0.7412 (0.8336)  loss_classifier: 0.2470 (0.2835)  loss_box_reg: 0.1226 (0.1278)  loss_mask: 0.2736 (0.3039)  loss_objectness: 0.0461 (0.0562)  loss_rpn_box_reg: 0.0598 (0.0621)  time: 0.6248 (0.6853)  data: 0.0004 (0.0166)  lr: 0.160000  max mem: 14843
INFO:maskrcnn_benchmark.trainer:eta: 1:43:21  iter: 8950  loss: 0.7814 (0.8348)  loss_classifier: 0.2786 (0.2841)  loss_box_reg: 0.1193 (0.1278)  loss_mask: 0.2775 (0.3043)  loss_objectness: 0.0406 (0.0564)  loss_rpn_box_reg: 0.0465 (0.0623)  time: 0.6248 (0.6853)  data: 0.0004 (0.0165)  lr: 0.160000  max mem: 14714
2021-10-16 13:20:43,778 maskrcnn_benchmark.trainer INFO: eta: 1:43:21  iter: 8950  loss: 0.7129 (0.8357)  loss_classifier: 0.2449 (0.2847)  loss_box_reg: 0.1136 (0.1282)  loss_mask: 0.2686 (0.3038)  loss_objectness: 0.0398 (0.0565)  loss_rpn_box_reg: 0.0449 (0.0625)  time: 0.6248 (0.6853)  data: 0.0004 (0.0167)  lr: 0.160000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:43:21  iter: 8950  loss: 0.7129 (0.8357)  loss_classifier: 0.2449 (0.2847)  loss_box_reg: 0.1136 (0.1282)  loss_mask: 0.2686 (0.3038)  loss_objectness: 0.0398 (0.0565)  loss_rpn_box_reg: 0.0449 (0.0625)  time: 0.6248 (0.6853)  data: 0.0004 (0.0167)  lr: 0.160000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634390443778, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8356962740387996, "loss_classifier": 0.2846637606737334, "loss_box_reg": 0.12818747331474142, "loss_mask": 0.30383015747176867, "loss_objectness": 0.056537418241440915, "loss_rpn_box_reg": 0.06247746487455078, "time": 0.68525295899567, "data": 0.016738079353417763, "throughput": 186.79233459655708}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 8950}}
:::MLLOG {"namespace": "", "time_ms": 1634390443778, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 186.79233459655708, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:43:21  iter: 8950  loss: 0.7374 (0.8314)  loss_classifier: 0.2489 (0.2827)  loss_box_reg: 0.1174 (0.1270)  loss_mask: 0.2728 (0.3036)  loss_objectness: 0.0414 (0.0562)  loss_rpn_box_reg: 0.0491 (0.0619)  time: 0.6250 (0.6853)  data: 0.0003 (0.0166)  lr: 0.160000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 1:43:21  iter: 8950  loss: 0.7524 (0.8317)  loss_classifier: 0.2519 (0.2830)  loss_box_reg: 0.1212 (0.1274)  loss_mask: 0.2702 (0.3033)  loss_objectness: 0.0429 (0.0561)  loss_rpn_box_reg: 0.0565 (0.0619)  time: 0.6254 (0.6853)  data: 0.0004 (0.0166)  lr: 0.160000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:43:21  iter: 8950  loss: 0.7400 (0.8318)  loss_classifier: 0.2655 (0.2831)  loss_box_reg: 0.1144 (0.1272)  loss_mask: 0.2713 (0.3038)  loss_objectness: 0.0391 (0.0559)  loss_rpn_box_reg: 0.0459 (0.0618)  time: 0.6245 (0.6853)  data: 0.0004 (0.0165)  lr: 0.160000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:43:21  iter: 8950  loss: 0.6594 (0.8343)  loss_classifier: 0.2331 (0.2839)  loss_box_reg: 0.1105 (0.1279)  loss_mask: 0.2607 (0.3037)  loss_objectness: 0.0382 (0.0567)  loss_rpn_box_reg: 0.0361 (0.0621)  time: 0.6243 (0.6853)  data: 0.0004 (0.0165)  lr: 0.160000  max mem: 14796
INFO:maskrcnn_benchmark.trainer:eta: 1:43:21  iter: 8950  loss: 0.7395 (0.8336)  loss_classifier: 0.2490 (0.2839)  loss_box_reg: 0.1151 (0.1280)  loss_mask: 0.2662 (0.3037)  loss_objectness: 0.0366 (0.0561)  loss_rpn_box_reg: 0.0461 (0.0620)  time: 0.6243 (0.6852)  data: 0.0004 (0.0165)  lr: 0.160000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:42:44  iter: 9000  loss: 0.7597 (0.8331)  loss_classifier: 0.2742 (0.2833)  loss_box_reg: 0.1141 (0.1278)  loss_mask: 0.2798 (0.3037)  loss_objectness: 0.0398 (0.0562)  loss_rpn_box_reg: 0.0437 (0.0621)  time: 0.6234 (0.6849)  data: 0.0004 (0.0165)  lr: 0.016000  max mem: 14843
INFO:maskrcnn_benchmark.trainer:eta: 1:42:44  iter: 9000  loss: 0.7717 (0.8344)  loss_classifier: 0.2631 (0.2840)  loss_box_reg: 0.1167 (0.1277)  loss_mask: 0.2774 (0.3041)  loss_objectness: 0.0468 (0.0563)  loss_rpn_box_reg: 0.0530 (0.0622)  time: 0.6238 (0.6849)  data: 0.0004 (0.0164)  lr: 0.016000  max mem: 14714
2021-10-16 13:21:15,067 maskrcnn_benchmark.trainer INFO: eta: 1:42:44  iter: 9000  loss: 0.7409 (0.8351)  loss_classifier: 0.2528 (0.2845)  loss_box_reg: 0.1213 (0.1281)  loss_mask: 0.2796 (0.3037)  loss_objectness: 0.0390 (0.0565)  loss_rpn_box_reg: 0.0470 (0.0624)  time: 0.6238 (0.6849)  data: 0.0004 (0.0166)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:42:44  iter: 9000  loss: 0.7558 (0.8310)  loss_classifier: 0.2739 (0.2826)  loss_box_reg: 0.1138 (0.1270)  loss_mask: 0.2786 (0.3034)  loss_objectness: 0.0414 (0.0561)  loss_rpn_box_reg: 0.0567 (0.0619)  time: 0.6236 (0.6849)  data: 0.0003 (0.0165)  lr: 0.016000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 1:42:44  iter: 9000  loss: 0.7409 (0.8351)  loss_classifier: 0.2528 (0.2845)  loss_box_reg: 0.1213 (0.1281)  loss_mask: 0.2796 (0.3037)  loss_objectness: 0.0390 (0.0565)  loss_rpn_box_reg: 0.0470 (0.0624)  time: 0.6238 (0.6849)  data: 0.0004 (0.0166)  lr: 0.016000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634390475068, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8351293657057816, "loss_classifier": 0.28448317713538807, "loss_box_reg": 0.1281072816182083, "loss_mask": 0.30365954207215046, "loss_objectness": 0.05647207237200604, "loss_rpn_box_reg": 0.06240729302385201, "time": 0.6849226193692949, "data": 0.01664788484573364, "throughput": 186.88242493417388}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 9000}}
:::MLLOG {"namespace": "", "time_ms": 1634390475068, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 186.88242493417388, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:42:44  iter: 9000  loss: 0.7582 (0.8312)  loss_classifier: 0.2475 (0.2828)  loss_box_reg: 0.1159 (0.1273)  loss_mask: 0.2777 (0.3032)  loss_objectness: 0.0440 (0.0560)  loss_rpn_box_reg: 0.0539 (0.0619)  time: 0.6238 (0.6849)  data: 0.0004 (0.0165)  lr: 0.016000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:42:44  iter: 9000  loss: 0.7010 (0.8312)  loss_classifier: 0.2542 (0.2829)  loss_box_reg: 0.1042 (0.1271)  loss_mask: 0.2680 (0.3037)  loss_objectness: 0.0349 (0.0558)  loss_rpn_box_reg: 0.0470 (0.0617)  time: 0.6234 (0.6849)  data: 0.0003 (0.0165)  lr: 0.016000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:42:44  iter: 9000  loss: 0.7521 (0.8338)  loss_classifier: 0.2524 (0.2838)  loss_box_reg: 0.1148 (0.1279)  loss_mask: 0.2786 (0.3036)  loss_objectness: 0.0408 (0.0566)  loss_rpn_box_reg: 0.0577 (0.0620)  time: 0.6233 (0.6849)  data: 0.0004 (0.0164)  lr: 0.016000  max mem: 14796
INFO:maskrcnn_benchmark.trainer:eta: 1:42:44  iter: 9000  loss: 0.7011 (0.8331)  loss_classifier: 0.2482 (0.2837)  loss_box_reg: 0.1095 (0.1279)  loss_mask: 0.2746 (0.3035)  loss_objectness: 0.0356 (0.0560)  loss_rpn_box_reg: 0.0616 (0.0620)  time: 0.6234 (0.6849)  data: 0.0004 (0.0164)  lr: 0.016000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:42:07  iter: 9050  loss: 0.6798 (0.8304)  loss_classifier: 0.2314 (0.2825)  loss_box_reg: 0.1057 (0.1272)  loss_mask: 0.2570 (0.3030)  loss_objectness: 0.0388 (0.0559)  loss_rpn_box_reg: 0.0454 (0.0618)  time: 0.6228 (0.6846)  data: 0.0004 (0.0164)  lr: 0.016000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:42:07  iter: 9050  loss: 0.6537 (0.8303)  loss_classifier: 0.2253 (0.2823)  loss_box_reg: 0.1038 (0.1269)  loss_mask: 0.2502 (0.3032)  loss_objectness: 0.0309 (0.0561)  loss_rpn_box_reg: 0.0394 (0.0619)  time: 0.6241 (0.6846)  data: 0.0003 (0.0164)  lr: 0.016000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 1:42:07  iter: 9050  loss: 0.7292 (0.8305)  loss_classifier: 0.2377 (0.2826)  loss_box_reg: 0.1129 (0.1270)  loss_mask: 0.2696 (0.3035)  loss_objectness: 0.0365 (0.0557)  loss_rpn_box_reg: 0.0509 (0.0617)  time: 0.6230 (0.6846)  data: 0.0004 (0.0164)  lr: 0.016000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:42:07  iter: 9050  loss: 0.6651 (0.8324)  loss_classifier: 0.2317 (0.2834)  loss_box_reg: 0.1072 (0.1278)  loss_mask: 0.2576 (0.3033)  loss_objectness: 0.0411 (0.0560)  loss_rpn_box_reg: 0.0484 (0.0619)  time: 0.6229 (0.6846)  data: 0.0004 (0.0164)  lr: 0.016000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:42:07  iter: 9050  loss: 0.6715 (0.8330)  loss_classifier: 0.2145 (0.2834)  loss_box_reg: 0.1085 (0.1277)  loss_mask: 0.2650 (0.3033)  loss_objectness: 0.0352 (0.0565)  loss_rpn_box_reg: 0.0395 (0.0620)  time: 0.6231 (0.6846)  data: 0.0004 (0.0164)  lr: 0.016000  max mem: 14796
INFO:maskrcnn_benchmark.trainer:eta: 1:42:07  iter: 9050  loss: 0.7194 (0.8323)  loss_classifier: 0.2405 (0.2830)  loss_box_reg: 0.1198 (0.1277)  loss_mask: 0.2711 (0.3035)  loss_objectness: 0.0337 (0.0561)  loss_rpn_box_reg: 0.0457 (0.0620)  time: 0.6238 (0.6846)  data: 0.0004 (0.0164)  lr: 0.016000  max mem: 14843
2021-10-16 13:21:46,430 maskrcnn_benchmark.trainer INFO: eta: 1:42:07  iter: 9050  loss: 0.6308 (0.8342)  loss_classifier: 0.2175 (0.2841)  loss_box_reg: 0.1037 (0.1280)  loss_mask: 0.2578 (0.3034)  loss_objectness: 0.0348 (0.0564)  loss_rpn_box_reg: 0.0390 (0.0623)  time: 0.6234 (0.6846)  data: 0.0003 (0.0166)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:42:07  iter: 9050  loss: 0.6647 (0.8336)  loss_classifier: 0.2215 (0.2837)  loss_box_reg: 0.1025 (0.1276)  loss_mask: 0.2505 (0.3039)  loss_objectness: 0.0368 (0.0562)  loss_rpn_box_reg: 0.0430 (0.0622)  time: 0.6235 (0.6846)  data: 0.0003 (0.0164)  lr: 0.016000  max mem: 14714
INFO:maskrcnn_benchmark.trainer:eta: 1:42:07  iter: 9050  loss: 0.6308 (0.8342)  loss_classifier: 0.2175 (0.2841)  loss_box_reg: 0.1037 (0.1280)  loss_mask: 0.2578 (0.3034)  loss_objectness: 0.0348 (0.0564)  loss_rpn_box_reg: 0.0390 (0.0623)  time: 0.6234 (0.6846)  data: 0.0003 (0.0166)  lr: 0.016000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634390506430, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8342247050868872, "loss_classifier": 0.28412536848892167, "loss_box_reg": 0.12797220134847792, "loss_mask": 0.3034242044858511, "loss_objectness": 0.05637139883468658, "loss_rpn_box_reg": 0.062331532460241194, "time": 0.6846039742000853, "data": 0.01655849712329675, "throughput": 186.96940833502987}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 9050}}
:::MLLOG {"namespace": "", "time_ms": 1634390506430, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 186.96940833502987, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:41:30  iter: 9100  loss: 0.6335 (0.8315)  loss_classifier: 0.2181 (0.2827)  loss_box_reg: 0.1022 (0.1276)  loss_mask: 0.2570 (0.3033)  loss_objectness: 0.0293 (0.0559)  loss_rpn_box_reg: 0.0487 (0.0620)  time: 0.6287 (0.6843)  data: 0.0004 (0.0163)  lr: 0.016000  max mem: 14843
INFO:maskrcnn_benchmark.trainer:eta: 1:41:30  iter: 9100  loss: 0.6527 (0.8327)  loss_classifier: 0.2120 (0.2833)  loss_box_reg: 0.1059 (0.1275)  loss_mask: 0.2603 (0.3037)  loss_objectness: 0.0335 (0.0561)  loss_rpn_box_reg: 0.0428 (0.0621)  time: 0.6287 (0.6843)  data: 0.0004 (0.0163)  lr: 0.016000  max mem: 14714
2021-10-16 13:22:17,696 maskrcnn_benchmark.trainer INFO: eta: 1:41:30  iter: 9100  loss: 0.6874 (0.8335)  loss_classifier: 0.2119 (0.2838)  loss_box_reg: 0.1119 (0.1279)  loss_mask: 0.2573 (0.3032)  loss_objectness: 0.0377 (0.0563)  loss_rpn_box_reg: 0.0481 (0.0623)  time: 0.6287 (0.6843)  data: 0.0004 (0.0165)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:41:30  iter: 9100  loss: 0.6874 (0.8335)  loss_classifier: 0.2119 (0.2838)  loss_box_reg: 0.1119 (0.1279)  loss_mask: 0.2573 (0.3032)  loss_objectness: 0.0377 (0.0563)  loss_rpn_box_reg: 0.0481 (0.0623)  time: 0.6287 (0.6843)  data: 0.0004 (0.0165)  lr: 0.016000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634390537696, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8335057608439372, "loss_classifier": 0.2838215886899731, "loss_box_reg": 0.1279084248021808, "loss_mask": 0.30321220809778016, "loss_objectness": 0.05628380979308961, "loss_rpn_box_reg": 0.06227972996196003, "time": 0.6842782710672735, "data": 0.016469838514432802, "throughput": 187.05840213274277}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 9100}}
:::MLLOG {"namespace": "", "time_ms": 1634390537696, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 187.05840213274277, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:41:30  iter: 9100  loss: 0.6420 (0.8295)  loss_classifier: 0.2028 (0.2820)  loss_box_reg: 0.1037 (0.1268)  loss_mask: 0.2489 (0.3030)  loss_objectness: 0.0340 (0.0559)  loss_rpn_box_reg: 0.0490 (0.0618)  time: 0.6273 (0.6843)  data: 0.0004 (0.0163)  lr: 0.016000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 1:41:30  iter: 9100  loss: 0.6509 (0.8296)  loss_classifier: 0.2091 (0.2821)  loss_box_reg: 0.1000 (0.1271)  loss_mask: 0.2462 (0.3027)  loss_objectness: 0.0367 (0.0558)  loss_rpn_box_reg: 0.0416 (0.0618)  time: 0.6264 (0.6843)  data: 0.0003 (0.0163)  lr: 0.016000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:41:30  iter: 9100  loss: 0.6466 (0.8297)  loss_classifier: 0.1997 (0.2823)  loss_box_reg: 0.1021 (0.1269)  loss_mask: 0.2592 (0.3033)  loss_objectness: 0.0329 (0.0556)  loss_rpn_box_reg: 0.0446 (0.0616)  time: 0.6267 (0.6843)  data: 0.0004 (0.0163)  lr: 0.016000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:41:30  iter: 9100  loss: 0.6375 (0.8321)  loss_classifier: 0.2086 (0.2831)  loss_box_reg: 0.0956 (0.1276)  loss_mask: 0.2625 (0.3031)  loss_objectness: 0.0316 (0.0564)  loss_rpn_box_reg: 0.0377 (0.0619)  time: 0.6271 (0.6843)  data: 0.0004 (0.0163)  lr: 0.016000  max mem: 14796
INFO:maskrcnn_benchmark.trainer:eta: 1:41:30  iter: 9100  loss: 0.6693 (0.8315)  loss_classifier: 0.2241 (0.2831)  loss_box_reg: 0.0990 (0.1277)  loss_mask: 0.2580 (0.3031)  loss_objectness: 0.0361 (0.0558)  loss_rpn_box_reg: 0.0433 (0.0618)  time: 0.6268 (0.6843)  data: 0.0003 (0.0163)  lr: 0.016000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:40:53  iter: 9150  loss: 0.7118 (0.8319)  loss_classifier: 0.2360 (0.2830)  loss_box_reg: 0.1166 (0.1274)  loss_mask: 0.2553 (0.3034)  loss_objectness: 0.0374 (0.0560)  loss_rpn_box_reg: 0.0477 (0.0620)  time: 0.6287 (0.6840)  data: 0.0004 (0.0162)  lr: 0.016000  max mem: 14714
INFO:maskrcnn_benchmark.trainer:eta: 1:40:53  iter: 9150  loss: 0.6873 (0.8307)  loss_classifier: 0.2379 (0.2824)  loss_box_reg: 0.1103 (0.1275)  loss_mask: 0.2604 (0.3030)  loss_objectness: 0.0365 (0.0558)  loss_rpn_box_reg: 0.0515 (0.0619)  time: 0.6286 (0.6840)  data: 0.0004 (0.0162)  lr: 0.016000  max mem: 14843
2021-10-16 13:22:49,022 maskrcnn_benchmark.trainer INFO: eta: 1:40:53  iter: 9150  loss: 0.6709 (0.8326)  loss_classifier: 0.2298 (0.2835)  loss_box_reg: 0.1064 (0.1278)  loss_mask: 0.2494 (0.3030)  loss_objectness: 0.0291 (0.0562)  loss_rpn_box_reg: 0.0411 (0.0622)  time: 0.6286 (0.6840)  data: 0.0004 (0.0164)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:40:53  iter: 9150  loss: 0.6709 (0.8326)  loss_classifier: 0.2298 (0.2835)  loss_box_reg: 0.1064 (0.1278)  loss_mask: 0.2494 (0.3030)  loss_objectness: 0.0291 (0.0562)  loss_rpn_box_reg: 0.0411 (0.0622)  time: 0.6286 (0.6840)  data: 0.0004 (0.0164)  lr: 0.016000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634390569022, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8325784347226711, "loss_classifier": 0.2834502450299393, "loss_box_reg": 0.1277973955991561, "loss_mask": 0.3029721586316661, "loss_objectness": 0.05615089673162158, "loss_rpn_box_reg": 0.06220773921302352, "time": 0.6839626591322852, "data": 0.01638228465950554, "throughput": 187.14471951200997}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 9150}}
:::MLLOG {"namespace": "", "time_ms": 1634390569023, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 187.14471951200997, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:40:53  iter: 9150  loss: 0.6638 (0.8288)  loss_classifier: 0.2149 (0.2818)  loss_box_reg: 0.1103 (0.1271)  loss_mask: 0.2671 (0.3025)  loss_objectness: 0.0317 (0.0557)  loss_rpn_box_reg: 0.0488 (0.0617)  time: 0.6283 (0.6840)  data: 0.0004 (0.0162)  lr: 0.016000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:40:53  iter: 9150  loss: 0.6873 (0.8287)  loss_classifier: 0.2223 (0.2817)  loss_box_reg: 0.1132 (0.1267)  loss_mask: 0.2632 (0.3028)  loss_objectness: 0.0299 (0.0558)  loss_rpn_box_reg: 0.0415 (0.0617)  time: 0.6279 (0.6840)  data: 0.0003 (0.0162)  lr: 0.016000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 1:40:53  iter: 9150  loss: 0.6527 (0.8289)  loss_classifier: 0.2116 (0.2820)  loss_box_reg: 0.1097 (0.1269)  loss_mask: 0.2662 (0.3031)  loss_objectness: 0.0280 (0.0555)  loss_rpn_box_reg: 0.0322 (0.0615)  time: 0.6267 (0.6840)  data: 0.0003 (0.0162)  lr: 0.016000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:40:53  iter: 9150  loss: 0.6263 (0.8311)  loss_classifier: 0.1934 (0.2827)  loss_box_reg: 0.0925 (0.1275)  loss_mask: 0.2576 (0.3029)  loss_objectness: 0.0310 (0.0562)  loss_rpn_box_reg: 0.0450 (0.0618)  time: 0.6267 (0.6840)  data: 0.0003 (0.0162)  lr: 0.016000  max mem: 14796
INFO:maskrcnn_benchmark.trainer:eta: 1:40:53  iter: 9150  loss: 0.6550 (0.8306)  loss_classifier: 0.2097 (0.2827)  loss_box_reg: 0.1113 (0.1276)  loss_mask: 0.2533 (0.3028)  loss_objectness: 0.0368 (0.0557)  loss_rpn_box_reg: 0.0410 (0.0618)  time: 0.6267 (0.6840)  data: 0.0004 (0.0162)  lr: 0.016000  max mem: 14803
:::MLLOG {"namespace": "", "time_ms": 1634390581562, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 111, "epoch_num": 10}}
:::MLLOG {"namespace": "", "time_ms": 1634390581563, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 112, "first_epoch_num": 10}}
:::MLLOG {"namespace": "", "time_ms": 1634390581563, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 113, "epoch_num": 10}}
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
2021-10-16 13:23:01,943 maskrcnn_benchmark.data.build WARNING: When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
Done (t=0.55s)
creating index...
Done (t=0.55s)
creating index...
Done (t=0.55s)
creating index...
Done (t=0.55s)
creating index...
index created!
index created!
shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
index created!
  0% 0/40 [00:00<?, ?it/s]shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]index created!
Done (t=0.55s)
creating index...
shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]Done (t=0.55s)
creating index...
index created!
Done (t=0.56s)
creating index...
shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
index created!
  0% 0/40 [00:00<?, ?it/s]shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
Done (t=0.55s)
creating index...
  0% 0/40 [00:00<?, ?it/s]index created!
shapes=None
passthrough=True
creating index...
GT annotations already exist!
2021-10-16 13:23:02,531 maskrcnn_benchmark.inference INFO: Start evaluation on coco_2017_val dataset(5000 images).
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]index created!
shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]  2% 1/40 [00:00<00:11,  3.41it/s]  2% 1/40 [00:00<00:11,  3.48it/s]  2% 1/40 [00:00<00:11,  3.44it/s]  2% 1/40 [00:00<00:11,  3.45it/s]  2% 1/40 [00:00<00:11,  3.33it/s]  2% 1/40 [00:00<00:11,  3.32it/s]  2% 1/40 [00:00<00:11,  3.27it/s]  2% 1/40 [00:00<00:11,  3.32it/s]  5% 2/40 [00:00<00:10,  3.55it/s]  5% 2/40 [00:00<00:11,  3.43it/s]  5% 2/40 [00:00<00:10,  3.46it/s]  5% 2/40 [00:00<00:11,  3.44it/s]  5% 2/40 [00:00<00:11,  3.45it/s]  5% 2/40 [00:00<00:11,  3.39it/s]  5% 2/40 [00:00<00:11,  3.39it/s]  5% 2/40 [00:00<00:11,  3.38it/s]  8% 3/40 [00:00<00:10,  3.59it/s]  8% 3/40 [00:00<00:10,  3.51it/s]  8% 3/40 [00:00<00:10,  3.46it/s]  8% 3/40 [00:00<00:10,  3.43it/s]  8% 3/40 [00:00<00:10,  3.45it/s]  8% 3/40 [00:00<00:10,  3.44it/s]  8% 3/40 [00:00<00:10,  3.44it/s]  8% 3/40 [00:00<00:10,  3.41it/s] 10% 4/40 [00:01<00:10,  3.54it/s] 10% 4/40 [00:01<00:10,  3.50it/s] 10% 4/40 [00:01<00:10,  3.48it/s] 10% 4/40 [00:01<00:10,  3.44it/s] 10% 4/40 [00:01<00:10,  3.45it/s] 10% 4/40 [00:01<00:10,  3.44it/s] 10% 4/40 [00:01<00:10,  3.49it/s] 10% 4/40 [00:01<00:10,  3.41it/s] 12% 5/40 [00:01<00:09,  3.53it/s] 12% 5/40 [00:01<00:09,  3.50it/s] 12% 5/40 [00:01<00:10,  3.47it/s] 12% 5/40 [00:01<00:10,  3.49it/s] 12% 5/40 [00:01<00:10,  3.49it/s] 12% 5/40 [00:01<00:09,  3.51it/s] 12% 5/40 [00:01<00:09,  3.51it/s] 12% 5/40 [00:01<00:10,  3.48it/s] 15% 6/40 [00:01<00:09,  3.53it/s] 15% 6/40 [00:01<00:09,  3.52it/s] 15% 6/40 [00:01<00:09,  3.46it/s] 15% 6/40 [00:01<00:09,  3.52it/s] 15% 6/40 [00:01<00:09,  3.47it/s] 15% 6/40 [00:01<00:09,  3.53it/s] 15% 6/40 [00:01<00:09,  3.57it/s] 15% 6/40 [00:01<00:09,  3.49it/s] 18% 7/40 [00:01<00:09,  3.55it/s] 18% 7/40 [00:01<00:09,  3.48it/s] 18% 7/40 [00:02<00:09,  3.47it/s] 18% 7/40 [00:01<00:09,  3.53it/s] 18% 7/40 [00:02<00:09,  3.50it/s] 18% 7/40 [00:01<00:09,  3.52it/s] 18% 7/40 [00:01<00:09,  3.55it/s] 18% 7/40 [00:01<00:09,  3.56it/s] 20% 8/40 [00:02<00:09,  3.49it/s] 20% 8/40 [00:02<00:09,  3.48it/s] 20% 8/40 [00:02<00:08,  3.60it/s] 20% 8/40 [00:02<00:09,  3.47it/s] 20% 8/40 [00:02<00:09,  3.53it/s] 20% 8/40 [00:02<00:09,  3.55it/s] 20% 8/40 [00:02<00:09,  3.44it/s] 20% 8/40 [00:02<00:09,  3.55it/s] 22% 9/40 [00:02<00:08,  3.51it/s] 22% 9/40 [00:02<00:08,  3.47it/s] 22% 9/40 [00:02<00:08,  3.50it/s] 22% 9/40 [00:02<00:08,  3.56it/s] 22% 9/40 [00:02<00:08,  3.55it/s] 22% 9/40 [00:02<00:08,  3.52it/s] 22% 9/40 [00:02<00:08,  3.47it/s] 22% 9/40 [00:02<00:08,  3.59it/s] 25% 10/40 [00:02<00:08,  3.53it/s] 25% 10/40 [00:02<00:08,  3.59it/s] 25% 10/40 [00:02<00:08,  3.47it/s] 25% 10/40 [00:02<00:08,  3.45it/s] 25% 10/40 [00:02<00:08,  3.62it/s] 25% 10/40 [00:02<00:08,  3.53it/s] 25% 10/40 [00:02<00:08,  3.51it/s] 25% 10/40 [00:02<00:08,  3.57it/s] 28% 11/40 [00:03<00:08,  3.55it/s] 28% 11/40 [00:03<00:08,  3.57it/s] 28% 11/40 [00:03<00:08,  3.60it/s] 28% 11/40 [00:03<00:08,  3.46it/s] 28% 11/40 [00:03<00:08,  3.58it/s] 28% 11/40 [00:03<00:08,  3.46it/s] 28% 11/40 [00:03<00:08,  3.51it/s] 28% 11/40 [00:03<00:08,  3.57it/s] 30% 12/40 [00:03<00:07,  3.51it/s] 30% 12/40 [00:03<00:07,  3.60it/s] 30% 12/40 [00:03<00:07,  3.61it/s] 30% 12/40 [00:03<00:07,  3.50it/s] 30% 12/40 [00:03<00:07,  3.58it/s] 30% 12/40 [00:03<00:08,  3.47it/s] 30% 12/40 [00:03<00:07,  3.54it/s] 30% 12/40 [00:03<00:07,  3.59it/s] 32% 13/40 [00:03<00:07,  3.56it/s] 32% 13/40 [00:03<00:07,  3.67it/s] 32% 13/40 [00:03<00:07,  3.56it/s] 32% 13/40 [00:03<00:07,  3.52it/s] 32% 13/40 [00:03<00:07,  3.55it/s] 32% 13/40 [00:03<00:07,  3.48it/s] 32% 13/40 [00:03<00:07,  3.52it/s] 32% 13/40 [00:03<00:07,  3.56it/s] 35% 14/40 [00:03<00:07,  3.57it/s] 35% 14/40 [00:03<00:07,  3.59it/s] 35% 14/40 [00:03<00:07,  3.61it/s] 35% 14/40 [00:04<00:07,  3.56it/s] 35% 14/40 [00:03<00:07,  3.52it/s] 35% 14/40 [00:04<00:07,  3.49it/s] 35% 14/40 [00:03<00:07,  3.58it/s] 35% 14/40 [00:03<00:07,  3.52it/s] 38% 15/40 [00:04<00:06,  3.61it/s] 38% 15/40 [00:04<00:07,  3.56it/s] 38% 15/40 [00:04<00:06,  3.67it/s] 38% 15/40 [00:04<00:07,  3.55it/s] 38% 15/40 [00:04<00:07,  3.52it/s] 38% 15/40 [00:04<00:07,  3.53it/s] 38% 15/40 [00:04<00:07,  3.54it/s] 38% 15/40 [00:04<00:07,  3.48it/s] 40% 16/40 [00:04<00:06,  3.59it/s] 40% 16/40 [00:04<00:06,  3.58it/s] 40% 16/40 [00:04<00:06,  3.61it/s] 40% 16/40 [00:04<00:06,  3.56it/s] 40% 16/40 [00:04<00:06,  3.49it/s] 40% 16/40 [00:04<00:06,  3.51it/s] 40% 16/40 [00:04<00:06,  3.52it/s] 40% 16/40 [00:04<00:06,  3.50it/s] 42% 17/40 [00:04<00:06,  3.65it/s] 42% 17/40 [00:04<00:06,  3.67it/s] 42% 17/40 [00:04<00:06,  3.55it/s] 42% 17/40 [00:04<00:06,  3.59it/s] 42% 17/40 [00:04<00:06,  3.60it/s] 42% 17/40 [00:04<00:06,  3.47it/s] 42% 17/40 [00:04<00:06,  3.50it/s] 42% 17/40 [00:04<00:06,  3.54it/s] 45% 18/40 [00:05<00:06,  3.61it/s] 45% 18/40 [00:04<00:05,  3.70it/s] 45% 18/40 [00:05<00:06,  3.55it/s] 45% 18/40 [00:05<00:06,  3.54it/s] 45% 18/40 [00:05<00:06,  3.57it/s] 45% 18/40 [00:05<00:06,  3.48it/s] 45% 18/40 [00:05<00:06,  3.49it/s] 45% 18/40 [00:05<00:06,  3.53it/s] 48% 19/40 [00:05<00:05,  3.63it/s] 48% 19/40 [00:05<00:05,  3.66it/s] 48% 19/40 [00:05<00:05,  3.54it/s] 48% 19/40 [00:05<00:05,  3.51it/s] 48% 19/40 [00:05<00:05,  3.55it/s] 48% 19/40 [00:05<00:05,  3.52it/s] 48% 19/40 [00:05<00:05,  3.50it/s] 48% 19/40 [00:05<00:05,  3.55it/s] 50% 20/40 [00:05<00:05,  3.61it/s] 50% 20/40 [00:05<00:05,  3.64it/s] 50% 20/40 [00:05<00:05,  3.55it/s] 50% 20/40 [00:05<00:05,  3.48it/s] 50% 20/40 [00:05<00:05,  3.54it/s] 50% 20/40 [00:05<00:05,  3.53it/s] 50% 20/40 [00:05<00:05,  3.54it/s] 50% 20/40 [00:05<00:05,  3.56it/s] 52% 21/40 [00:05<00:05,  3.63it/s] 52% 21/40 [00:05<00:05,  3.61it/s] 52% 21/40 [00:05<00:05,  3.54it/s] 52% 21/40 [00:05<00:05,  3.60it/s] 52% 21/40 [00:05<00:05,  3.57it/s] 52% 21/40 [00:05<00:05,  3.51it/s] 52% 21/40 [00:05<00:05,  3.52it/s] 52% 21/40 [00:05<00:05,  3.57it/s] 55% 22/40 [00:06<00:05,  3.59it/s] 55% 22/40 [00:06<00:04,  3.66it/s] 55% 22/40 [00:06<00:05,  3.57it/s] 55% 22/40 [00:06<00:05,  3.55it/s] 55% 22/40 [00:06<00:05,  3.52it/s] 55% 22/40 [00:06<00:05,  3.47it/s] 55% 22/40 [00:06<00:04,  3.62it/s] 55% 22/40 [00:06<00:05,  3.49it/s] 57% 23/40 [00:06<00:04,  3.63it/s] 57% 23/40 [00:06<00:04,  3.65it/s] 57% 23/40 [00:06<00:04,  3.60it/s] 57% 23/40 [00:06<00:04,  3.53it/s] 57% 23/40 [00:06<00:04,  3.53it/s] 57% 23/40 [00:06<00:04,  3.49it/s] 57% 23/40 [00:06<00:04,  3.58it/s] 57% 23/40 [00:06<00:04,  3.46it/s] 60% 24/40 [00:06<00:04,  3.65it/s] 60% 24/40 [00:06<00:04,  3.64it/s] 60% 24/40 [00:06<00:04,  3.61it/s] 60% 24/40 [00:06<00:04,  3.56it/s] 60% 24/40 [00:06<00:04,  3.61it/s] 60% 24/40 [00:06<00:04,  3.53it/s] 60% 24/40 [00:06<00:04,  3.54it/s] 60% 24/40 [00:06<00:04,  3.47it/s] 62% 25/40 [00:06<00:04,  3.65it/s] 62% 25/40 [00:06<00:04,  3.59it/s] 62% 25/40 [00:06<00:04,  3.64it/s] 62% 25/40 [00:07<00:04,  3.51it/s] 62% 25/40 [00:07<00:04,  3.60it/s] 62% 25/40 [00:07<00:04,  3.51it/s] 62% 25/40 [00:07<00:04,  3.50it/s] 62% 25/40 [00:07<00:04,  3.48it/s] 65% 26/40 [00:07<00:03,  3.61it/s] 65% 26/40 [00:07<00:03,  3.55it/s] 65% 26/40 [00:07<00:03,  3.65it/s] 65% 26/40 [00:07<00:03,  3.57it/s] 65% 26/40 [00:07<00:03,  3.58it/s] 65% 26/40 [00:07<00:03,  3.55it/s] 65% 26/40 [00:07<00:03,  3.50it/s] 65% 26/40 [00:07<00:04,  3.47it/s] 68% 27/40 [00:07<00:03,  3.62it/s] 68% 27/40 [00:07<00:03,  3.64it/s] 68% 27/40 [00:07<00:03,  3.62it/s] 68% 27/40 [00:07<00:03,  3.55it/s] 68% 27/40 [00:07<00:03,  3.56it/s] 68% 27/40 [00:07<00:03,  3.54it/s] 68% 27/40 [00:07<00:03,  3.54it/s] 68% 27/40 [00:07<00:03,  3.50it/s] 70% 28/40 [00:07<00:03,  3.68it/s] 70% 28/40 [00:07<00:03,  3.63it/s] 70% 28/40 [00:07<00:03,  3.60it/s] 70% 28/40 [00:07<00:03,  3.51it/s] 70% 28/40 [00:07<00:03,  3.57it/s] 70% 28/40 [00:07<00:03,  3.55it/s] 70% 28/40 [00:07<00:03,  3.53it/s] 70% 28/40 [00:08<00:03,  3.48it/s] 72% 29/40 [00:08<00:03,  3.63it/s] 72% 29/40 [00:08<00:03,  3.62it/s] 72% 29/40 [00:08<00:03,  3.60it/s] 72% 29/40 [00:08<00:03,  3.58it/s] 72% 29/40 [00:08<00:03,  3.56it/s] 72% 29/40 [00:08<00:03,  3.53it/s] 72% 29/40 [00:08<00:03,  3.55it/s] 72% 29/40 [00:08<00:03,  3.46it/s] 75% 30/40 [00:08<00:02,  3.56it/s] 75% 30/40 [00:08<00:02,  3.67it/s] 75% 30/40 [00:08<00:02,  3.60it/s] 75% 30/40 [00:08<00:02,  3.54it/s] 75% 30/40 [00:08<00:02,  3.56it/s] 75% 30/40 [00:08<00:02,  3.56it/s] 75% 30/40 [00:08<00:02,  3.53it/s] 75% 30/40 [00:08<00:02,  3.43it/s] 78% 31/40 [00:08<00:02,  3.54it/s] 78% 31/40 [00:08<00:02,  3.65it/s] 78% 31/40 [00:08<00:02,  3.56it/s] 78% 31/40 [00:08<00:02,  3.53it/s] 78% 31/40 [00:08<00:02,  3.58it/s] 78% 31/40 [00:08<00:02,  3.56it/s] 78% 31/40 [00:08<00:02,  3.52it/s] 78% 31/40 [00:08<00:02,  3.48it/s] 80% 32/40 [00:08<00:02,  3.58it/s] 80% 32/40 [00:08<00:02,  3.64it/s] 80% 32/40 [00:08<00:02,  3.53it/s] 80% 32/40 [00:09<00:02,  3.53it/s] 80% 32/40 [00:09<00:02,  3.53it/s] 80% 32/40 [00:09<00:02,  3.53it/s] 80% 32/40 [00:09<00:02,  3.52it/s] 80% 32/40 [00:09<00:02,  3.51it/s] 82% 33/40 [00:09<00:01,  3.64it/s] 82% 33/40 [00:09<00:01,  3.61it/s] 82% 33/40 [00:09<00:01,  3.51it/s] 82% 33/40 [00:09<00:01,  3.60it/s] 82% 33/40 [00:09<00:01,  3.58it/s] 82% 33/40 [00:09<00:01,  3.54it/s] 82% 33/40 [00:09<00:02,  3.47it/s] 82% 33/40 [00:09<00:02,  3.48it/s] 85% 34/40 [00:09<00:01,  3.57it/s] 85% 34/40 [00:09<00:01,  3.63it/s] 85% 34/40 [00:09<00:01,  3.53it/s] 85% 34/40 [00:09<00:01,  3.65it/s] 85% 34/40 [00:09<00:01,  3.57it/s] 85% 34/40 [00:09<00:01,  3.55it/s] 85% 34/40 [00:09<00:01,  3.51it/s] 85% 34/40 [00:09<00:01,  3.48it/s] 88% 35/40 [00:09<00:01,  3.62it/s] 88% 35/40 [00:09<00:01,  3.59it/s] 88% 35/40 [00:09<00:01,  3.52it/s] 88% 35/40 [00:09<00:01,  3.57it/s] 88% 35/40 [00:09<00:01,  3.54it/s] 88% 35/40 [00:09<00:01,  3.53it/s] 88% 35/40 [00:09<00:01,  3.47it/s] 90% 36/40 [00:10<00:01,  3.66it/s] 88% 35/40 [00:10<00:01,  3.47it/s] 90% 36/40 [00:09<00:01,  3.58it/s] 90% 36/40 [00:10<00:01,  3.54it/s] 90% 36/40 [00:10<00:01,  3.57it/s] 90% 36/40 [00:10<00:01,  3.50it/s] 90% 36/40 [00:10<00:01,  3.52it/s] 90% 36/40 [00:10<00:01,  3.47it/s] 92% 37/40 [00:10<00:00,  3.63it/s] 90% 36/40 [00:10<00:01,  3.45it/s] 92% 37/40 [00:10<00:00,  3.58it/s] 92% 37/40 [00:10<00:00,  3.49it/s] 92% 37/40 [00:10<00:00,  3.60it/s] 92% 37/40 [00:10<00:00,  3.56it/s] 92% 37/40 [00:10<00:00,  3.47it/s] 92% 37/40 [00:10<00:00,  3.51it/s] 95% 38/40 [00:10<00:00,  3.61it/s] 95% 38/40 [00:10<00:00,  3.60it/s] 92% 37/40 [00:10<00:00,  3.45it/s] 98% 39/40 [00:10<00:00,  4.45it/s] 95% 38/40 [00:10<00:00,  3.51it/s] 95% 38/40 [00:10<00:00,  3.63it/s] 95% 38/40 [00:10<00:00,  3.65it/s] 98% 39/40 [00:10<00:00,  3.88it/s] 95% 38/40 [00:10<00:00,  3.88it/s] 95% 38/40 [00:10<00:00,  3.51it/s] 98% 39/40 [00:10<00:00,  4.33it/s] 95% 38/40 [00:10<00:00,  3.53it/s]100% 40/40 [00:10<00:00,  3.68it/s]
100% 40/40 [00:10<00:00,  4.72it/s]100% 40/40 [00:10<00:00,  3.70it/s]
 98% 39/40 [00:10<00:00,  4.26it/s]100% 40/40 [00:10<00:00,  4.53it/s]100% 40/40 [00:10<00:00,  3.65it/s]
 98% 39/40 [00:10<00:00,  3.63it/s]100% 40/40 [00:11<00:00,  4.75it/s]100% 40/40 [00:11<00:00,  3.62it/s]
 98% 39/40 [00:11<00:00,  3.57it/s]100% 40/40 [00:10<00:00,  3.64it/s]
 98% 39/40 [00:11<00:00,  3.74it/s] 98% 39/40 [00:11<00:00,  3.56it/s]100% 40/40 [00:11<00:00,  3.62it/s]
100% 40/40 [00:11<00:00,  3.59it/s]
100% 40/40 [00:11<00:00,  4.42it/s]100% 40/40 [00:11<00:00,  3.57it/s]
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.200359 (0.017920574569702148 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.169741 (0.01787158508300781 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.222333 (0.017955732345581055 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.129963 (0.017807941436767578 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.214476 (0.017943162155151366 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.216797 (0.017946875381469725 s / img per device, on 8 devices)
2021-10-16 13:23:13,670 maskrcnn_benchmark.inference INFO: Total inference time: 0:00:11.138481 (0.017821569061279297 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.162445 (0.017859912109375 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.138481 (0.017821569061279297 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.026s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.026s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.026s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.026s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.026s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.026s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.027s
2021-10-16 13:23:13,838 maskrcnn_benchmark.timed_section INFO: EXPOSED: Launching evaluation preparation tasks took 0.032s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.032s
:::MLLOG {"namespace": "", "time_ms": 1634390593841, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 168, "first_epoch_num": 11, "epoch_count": 1}}
:::MLLOG {"namespace": "", "time_ms": 1634390593841, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 169, "epoch_num": 11}}

Grad overflow on iteration  9171
Using dynamic loss scale of  262144.0

Grad overflow on iteration  9171
Using dynamic loss scale of  262144.0

Grad overflow on iteration  9171
Using dynamic loss scale of  262144.0

Grad overflow on iteration  9171
Using dynamic loss scale of  262144.0

Grad overflow on iteration  9171
Using dynamic loss scale of  262144.0

Grad overflow on iteration  9171
Using dynamic loss scale of  262144.0

Grad overflow on iteration  9171
Using dynamic loss scale of  
Grad overflow on iteration 262144.0
 9171
Using dynamic loss scale of  262144.0
INFO:maskrcnn_benchmark.timed_section:Prepping took 7.360 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 7.436 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 7.445 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 7.534 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 7.545 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 7.641 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 8.005 seconds total
2021-10-16 13:23:23,086 maskrcnn_benchmark.timed_section INFO: Prepping took 8.131 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 8.131 seconds total
INFO:maskrcnn_benchmark.trainer:eta: 1:40:29  iter: 9200  loss: 0.5811 (0.8278)  loss_classifier: 0.1884 (0.2815)  loss_box_reg: 0.0935 (0.1267)  loss_mask: 0.2429 (0.3028)  loss_objectness: 0.0251 (0.0554)  loss_rpn_box_reg: 0.0378 (0.0615)  time: 0.6286 (0.6851)  data: 0.0004 (0.0174)  lr: 0.016000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:40:29  iter: 9200  loss: 0.5818 (0.8300)  loss_classifier: 0.1826 (0.2822)  loss_box_reg: 0.0888 (0.1273)  loss_mask: 0.2528 (0.3026)  loss_objectness: 0.0214 (0.0561)  loss_rpn_box_reg: 0.0390 (0.0617)  time: 0.6285 (0.6851)  data: 0.0004 (0.0174)  lr: 0.016000  max mem: 14796
INFO:maskrcnn_benchmark.trainer:eta: 1:40:29  iter: 9200  loss: 0.6113 (0.8295)  loss_classifier: 0.2048 (0.2823)  loss_box_reg: 0.1097 (0.1274)  loss_mask: 0.2512 (0.3026)  loss_objectness: 0.0231 (0.0556)  loss_rpn_box_reg: 0.0415 (0.0617)  time: 0.6287 (0.6851)  data: 0.0004 (0.0174)  lr: 0.016000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:40:29  iter: 9200  loss: 0.6747 (0.8278)  loss_classifier: 0.2134 (0.2813)  loss_box_reg: 0.1075 (0.1266)  loss_mask: 0.2573 (0.3025)  loss_objectness: 0.0388 (0.0557)  loss_rpn_box_reg: 0.0588 (0.0617)  time: 0.6277 (0.6851)  data: 0.0004 (0.0174)  lr: 0.016000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 1:40:29  iter: 9200  loss: 0.6599 (0.8279)  loss_classifier: 0.2181 (0.2814)  loss_box_reg: 0.1104 (0.1270)  loss_mask: 0.2643 (0.3023)  loss_objectness: 0.0315 (0.0556)  loss_rpn_box_reg: 0.0488 (0.0616)  time: 0.6281 (0.6851)  data: 0.0004 (0.0175)  lr: 0.016000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:40:29  iter: 9200  loss: 0.6165 (0.8310)  loss_classifier: 0.2035 (0.2826)  loss_box_reg: 0.0963 (0.1273)  loss_mask: 0.2491 (0.3032)  loss_objectness: 0.0272 (0.0559)  loss_rpn_box_reg: 0.0411 (0.0620)  time: 0.6269 (0.6851)  data: 0.0004 (0.0174)  lr: 0.016000  max mem: 14714
INFO:maskrcnn_benchmark.trainer:eta: 1:40:29  iter: 9200  loss: 0.6441 (0.8298)  loss_classifier: 0.2217 (0.2821)  loss_box_reg: 0.1090 (0.1274)  loss_mask: 0.2460 (0.3028)  loss_objectness: 0.0316 (0.0557)  loss_rpn_box_reg: 0.0429 (0.0618)  time: 0.6268 (0.6851)  data: 0.0004 (0.0174)  lr: 0.016000  max mem: 14843
2021-10-16 13:23:34,011 maskrcnn_benchmark.trainer INFO: eta: 1:40:29  iter: 9200  loss: 0.5994 (0.8316)  loss_classifier: 0.1952 (0.2831)  loss_box_reg: 0.0967 (0.1277)  loss_mask: 0.2517 (0.3027)  loss_objectness: 0.0269 (0.0560)  loss_rpn_box_reg: 0.0365 (0.0622)  time: 0.6270 (0.6851)  data: 0.0004 (0.0176)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:40:29  iter: 9200  loss: 0.5994 (0.8316)  loss_classifier: 0.1952 (0.2831)  loss_box_reg: 0.0967 (0.1277)  loss_mask: 0.2517 (0.3027)  loss_objectness: 0.0269 (0.0560)  loss_rpn_box_reg: 0.0365 (0.0622)  time: 0.6270 (0.6851)  data: 0.0004 (0.0176)  lr: 0.016000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634390614012, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8316264666066222, "loss_classifier": 0.2830608009749457, "loss_box_reg": 0.12767182773260055, "loss_mask": 0.30272342859564916, "loss_objectness": 0.056019980189815646, "loss_rpn_box_reg": 0.062150429609818786, "time": 0.6851356117880862, "data": 0.01763213600801385, "throughput": 186.82432761879357}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 9200}}
:::MLLOG {"namespace": "", "time_ms": 1634390614012, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 186.82432761879357, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.145s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.146s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.147s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.147s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.147s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.147s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.150s
2021-10-16 13:23:34,162 maskrcnn_benchmark.timed_section INFO: EXPOSED: Launching evaluation task took 0.150s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.150s
Evaluating predictions
Loading and preparing results...
resFile is ./inference/coco_2017_val/segm.json
Loading and preparing results...
resFile is ./inference/coco_2017_val/bbox.json
DONE (t=1.63s)
DONE (t=0.76s)
Running per image evaluation...
Evaluate annotation type *segm*
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=1.75s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.35336
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.56534
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.38426
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.20315
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.38048
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.45210
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.30036
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.47743
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.50179
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.32119
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.53523
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.62783
DONE (t=2.58s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.32282
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.53326
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.34121
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.14468
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.34771
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.47402
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.28389
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.43866
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.45933
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.27047
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.49834
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.60130
2021-10-16 13:23:46,926 maskrcnn_benchmark.trainer INFO: bbox mAP: 0.3533629801096445, segm mAP: 0.3228214962507477
INFO:maskrcnn_benchmark.trainer:bbox mAP: 0.3533629801096445, segm mAP: 0.3228214962507477
:::MLLOG {"namespace": "", "time_ms": 1634390626926, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": {"BBOX": 0.3533629801096445, "SEGM": 0.3228214962507477}, "metadata": {"file": "tools/train_mlperf.py", "lineno": 133, "epoch_num": 10}}
:::MLLOG {"namespace": "", "time_ms": 1634390626926, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 134, "epoch_num": 10}}
INFO:maskrcnn_benchmark.trainer:eta: 1:39:52  iter: 9250  loss: 0.6535 (0.8269)  loss_classifier: 0.1992 (0.2812)  loss_box_reg: 0.0963 (0.1266)  loss_mask: 0.2587 (0.3025)  loss_objectness: 0.0291 (0.0552)  loss_rpn_box_reg: 0.0473 (0.0614)  time: 0.6249 (0.6849)  data: 0.0004 (0.0174)  lr: 0.016000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:39:52  iter: 9250  loss: 0.6609 (0.8291)  loss_classifier: 0.2073 (0.2819)  loss_box_reg: 0.1103 (0.1272)  loss_mask: 0.2537 (0.3024)  loss_objectness: 0.0284 (0.0560)  loss_rpn_box_reg: 0.0456 (0.0617)  time: 0.6250 (0.6849)  data: 0.0004 (0.0173)  lr: 0.016000  max mem: 14796
INFO:maskrcnn_benchmark.trainer:eta: 1:39:52  iter: 9250  loss: 0.6173 (0.8284)  loss_classifier: 0.2076 (0.2818)  loss_box_reg: 0.1014 (0.1273)  loss_mask: 0.2545 (0.3023)  loss_objectness: 0.0306 (0.0555)  loss_rpn_box_reg: 0.0366 (0.0616)  time: 0.6250 (0.6849)  data: 0.0004 (0.0173)  lr: 0.016000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:39:52  iter: 9250  loss: 0.6372 (0.8269)  loss_classifier: 0.1965 (0.2810)  loss_box_reg: 0.1024 (0.1269)  loss_mask: 0.2520 (0.3020)  loss_objectness: 0.0254 (0.0555)  loss_rpn_box_reg: 0.0444 (0.0616)  time: 0.6250 (0.6849)  data: 0.0004 (0.0174)  lr: 0.016000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:39:52  iter: 9250  loss: 0.6477 (0.8269)  loss_classifier: 0.2079 (0.2809)  loss_box_reg: 0.1071 (0.1265)  loss_mask: 0.2611 (0.3023)  loss_objectness: 0.0263 (0.0556)  loss_rpn_box_reg: 0.0409 (0.0616)  time: 0.6249 (0.6849)  data: 0.0004 (0.0174)  lr: 0.016000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 1:39:52  iter: 9250  loss: 0.6447 (0.8288)  loss_classifier: 0.2115 (0.2816)  loss_box_reg: 0.0978 (0.1272)  loss_mask: 0.2510 (0.3025)  loss_objectness: 0.0289 (0.0556)  loss_rpn_box_reg: 0.0414 (0.0618)  time: 0.6237 (0.6849)  data: 0.0004 (0.0174)  lr: 0.016000  max mem: 14843
2021-10-16 13:24:05,693 maskrcnn_benchmark.trainer INFO: eta: 1:39:52  iter: 9250  loss: 0.6778 (0.8308)  loss_classifier: 0.2239 (0.2827)  loss_box_reg: 0.1193 (0.1276)  loss_mask: 0.2613 (0.3025)  loss_objectness: 0.0319 (0.0559)  loss_rpn_box_reg: 0.0424 (0.0621)  time: 0.6236 (0.6849)  data: 0.0004 (0.0176)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:39:52  iter: 9250  loss: 0.5970 (0.8298)  loss_classifier: 0.1832 (0.2822)  loss_box_reg: 0.1002 (0.1271)  loss_mask: 0.2556 (0.3029)  loss_objectness: 0.0257 (0.0557)  loss_rpn_box_reg: 0.0420 (0.0619)  time: 0.6230 (0.6849)  data: 0.0004 (0.0173)  lr: 0.016000  max mem: 14714
INFO:maskrcnn_benchmark.trainer:eta: 1:39:52  iter: 9250  loss: 0.6778 (0.8308)  loss_classifier: 0.2239 (0.2827)  loss_box_reg: 0.1193 (0.1276)  loss_mask: 0.2613 (0.3025)  loss_objectness: 0.0319 (0.0559)  loss_rpn_box_reg: 0.0424 (0.0621)  time: 0.6236 (0.6849)  data: 0.0004 (0.0176)  lr: 0.016000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634390645694, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8307627943947509, "loss_classifier": 0.2827101747901053, "loss_box_reg": 0.12758334728066079, "loss_mask": 0.30250228405320967, "loss_objectness": 0.055895026215729685, "loss_rpn_box_reg": 0.062071962573741736, "time": 0.6848572532292959, "data": 0.017566024445198676, "throughput": 186.9002619107029}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 9250}}
:::MLLOG {"namespace": "", "time_ms": 1634390645694, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 186.9002619107029, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:39:15  iter: 9300  loss: 0.6088 (0.8287)  loss_classifier: 0.1901 (0.2817)  loss_box_reg: 0.0919 (0.1270)  loss_mask: 0.2519 (0.3026)  loss_objectness: 0.0261 (0.0556)  loss_rpn_box_reg: 0.0423 (0.0618)  time: 0.6251 (0.6846)  data: 0.0004 (0.0173)  lr: 0.016000  max mem: 14714
INFO:maskrcnn_benchmark.trainer:eta: 1:39:15  iter: 9300  loss: 0.5528 (0.8276)  loss_classifier: 0.1862 (0.2812)  loss_box_reg: 0.0851 (0.1271)  loss_mask: 0.2402 (0.3022)  loss_objectness: 0.0254 (0.0554)  loss_rpn_box_reg: 0.0354 (0.0616)  time: 0.6254 (0.6846)  data: 0.0003 (0.0173)  lr: 0.016000  max mem: 14843
2021-10-16 13:24:37,113 maskrcnn_benchmark.trainer INFO: eta: 1:39:15  iter: 9300  loss: 0.6101 (0.8296)  loss_classifier: 0.1903 (0.2822)  loss_box_reg: 0.0941 (0.1274)  loss_mask: 0.2481 (0.3022)  loss_objectness: 0.0276 (0.0557)  loss_rpn_box_reg: 0.0442 (0.0620)  time: 0.6257 (0.6846)  data: 0.0004 (0.0175)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:39:15  iter: 9300  loss: 0.6101 (0.8296)  loss_classifier: 0.1903 (0.2822)  loss_box_reg: 0.0941 (0.1274)  loss_mask: 0.2481 (0.3022)  loss_objectness: 0.0276 (0.0557)  loss_rpn_box_reg: 0.0442 (0.0620)  time: 0.6257 (0.6846)  data: 0.0004 (0.0175)  lr: 0.016000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634390677113, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8296179086514699, "loss_classifier": 0.2822217981028621, "loss_box_reg": 0.12742376706850844, "loss_mask": 0.3022416262104306, "loss_objectness": 0.055741011325309994, "loss_rpn_box_reg": 0.061989706480194647, "time": 0.6845536349665734, "data": 0.017474076414621006, "throughput": 186.98315728942146}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 9300}}
:::MLLOG {"namespace": "", "time_ms": 1634390677113, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 186.98315728942146, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:39:15  iter: 9300  loss: 0.6289 (0.8258)  loss_classifier: 0.2066 (0.2805)  loss_box_reg: 0.1015 (0.1264)  loss_mask: 0.2514 (0.3020)  loss_objectness: 0.0257 (0.0554)  loss_rpn_box_reg: 0.0388 (0.0615)  time: 0.6262 (0.6846)  data: 0.0004 (0.0173)  lr: 0.016000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 1:39:15  iter: 9300  loss: 0.6312 (0.8258)  loss_classifier: 0.2013 (0.2806)  loss_box_reg: 0.0995 (0.1267)  loss_mask: 0.2499 (0.3018)  loss_objectness: 0.0273 (0.0553)  loss_rpn_box_reg: 0.0404 (0.0615)  time: 0.6267 (0.6846)  data: 0.0004 (0.0173)  lr: 0.016000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:39:15  iter: 9300  loss: 0.6409 (0.8258)  loss_classifier: 0.2027 (0.2807)  loss_box_reg: 0.1051 (0.1265)  loss_mask: 0.2516 (0.3023)  loss_objectness: 0.0275 (0.0551)  loss_rpn_box_reg: 0.0326 (0.0613)  time: 0.6264 (0.6846)  data: 0.0004 (0.0173)  lr: 0.016000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:39:15  iter: 9300  loss: 0.6127 (0.8282)  loss_classifier: 0.1960 (0.2815)  loss_box_reg: 0.0964 (0.1271)  loss_mask: 0.2501 (0.3021)  loss_objectness: 0.0290 (0.0558)  loss_rpn_box_reg: 0.0485 (0.0616)  time: 0.6264 (0.6846)  data: 0.0004 (0.0173)  lr: 0.016000  max mem: 14796
INFO:maskrcnn_benchmark.trainer:eta: 1:39:15  iter: 9300  loss: 0.6356 (0.8276)  loss_classifier: 0.1985 (0.2814)  loss_box_reg: 0.1061 (0.1272)  loss_mask: 0.2584 (0.3021)  loss_objectness: 0.0301 (0.0553)  loss_rpn_box_reg: 0.0425 (0.0615)  time: 0.6264 (0.6845)  data: 0.0004 (0.0173)  lr: 0.016000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:38:38  iter: 9350  loss: 0.6413 (0.8248)  loss_classifier: 0.2150 (0.2802)  loss_box_reg: 0.1033 (0.1266)  loss_mask: 0.2513 (0.3015)  loss_objectness: 0.0283 (0.0552)  loss_rpn_box_reg: 0.0421 (0.0614)  time: 0.6309 (0.6843)  data: 0.0004 (0.0172)  lr: 0.016000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:38:38  iter: 9350  loss: 0.5545 (0.8248)  loss_classifier: 0.1812 (0.2801)  loss_box_reg: 0.0864 (0.1262)  loss_mask: 0.2447 (0.3018)  loss_objectness: 0.0240 (0.0553)  loss_rpn_box_reg: 0.0309 (0.0614)  time: 0.6305 (0.6843)  data: 0.0003 (0.0172)  lr: 0.016000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 1:38:38  iter: 9350  loss: 0.6913 (0.8249)  loss_classifier: 0.2116 (0.2804)  loss_box_reg: 0.1036 (0.1264)  loss_mask: 0.2604 (0.3020)  loss_objectness: 0.0320 (0.0550)  loss_rpn_box_reg: 0.0386 (0.0612)  time: 0.6305 (0.6843)  data: 0.0004 (0.0172)  lr: 0.016000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:38:38  iter: 9350  loss: 0.6328 (0.8272)  loss_classifier: 0.2166 (0.2811)  loss_box_reg: 0.1051 (0.1270)  loss_mask: 0.2458 (0.3019)  loss_objectness: 0.0289 (0.0557)  loss_rpn_box_reg: 0.0418 (0.0616)  time: 0.6305 (0.6843)  data: 0.0004 (0.0172)  lr: 0.016000  max mem: 14796
INFO:maskrcnn_benchmark.trainer:eta: 1:38:38  iter: 9350  loss: 0.6322 (0.8265)  loss_classifier: 0.2120 (0.2810)  loss_box_reg: 0.0966 (0.1271)  loss_mask: 0.2373 (0.3018)  loss_objectness: 0.0286 (0.0552)  loss_rpn_box_reg: 0.0360 (0.0614)  time: 0.6304 (0.6843)  data: 0.0004 (0.0172)  lr: 0.016000  max mem: 14803
2021-10-16 13:25:08,619 maskrcnn_benchmark.trainer INFO: eta: 1:38:38  iter: 9350  loss: 0.6467 (0.8286)  loss_classifier: 0.2111 (0.2818)  loss_box_reg: 0.1030 (0.1273)  loss_mask: 0.2528 (0.3020)  loss_objectness: 0.0289 (0.0556)  loss_rpn_box_reg: 0.0383 (0.0619)  time: 0.6312 (0.6843)  data: 0.0004 (0.0174)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:38:38  iter: 9350  loss: 0.6074 (0.8277)  loss_classifier: 0.1794 (0.2813)  loss_box_reg: 0.1007 (0.1269)  loss_mask: 0.2568 (0.3024)  loss_objectness: 0.0259 (0.0555)  loss_rpn_box_reg: 0.0442 (0.0617)  time: 0.6312 (0.6843)  data: 0.0003 (0.0172)  lr: 0.016000  max mem: 14714
INFO:maskrcnn_benchmark.trainer:eta: 1:38:38  iter: 9350  loss: 0.6467 (0.8286)  loss_classifier: 0.2111 (0.2818)  loss_box_reg: 0.1030 (0.1273)  loss_mask: 0.2528 (0.3020)  loss_objectness: 0.0289 (0.0556)  loss_rpn_box_reg: 0.0383 (0.0619)  time: 0.6312 (0.6843)  data: 0.0004 (0.0174)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:38:38  iter: 9350  loss: 0.6669 (0.8266)  loss_classifier: 0.2159 (0.2808)  loss_box_reg: 0.1090 (0.1270)  loss_mask: 0.2519 (0.3020)  loss_objectness: 0.0314 (0.0553)  loss_rpn_box_reg: 0.0405 (0.0616)  time: 0.6311 (0.6843)  data: 0.0004 (0.0172)  lr: 0.016000  max mem: 14843
:::MLLOG {"namespace": "", "time_ms": 1634390708619, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8285974145190601, "loss_classifier": 0.28179810303736497, "loss_box_reg": 0.12729920066532027, "loss_mask": 0.30199566192646077, "loss_objectness": 0.05560446083356432, "loss_rpn_box_reg": 0.061899988611532564, "time": 0.684262581764058, "data": 0.017383059664843555, "throughput": 187.06269115287668}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 9350}}
:::MLLOG {"namespace": "", "time_ms": 1634390708619, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 187.06269115287668, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:38:02  iter: 9400  loss: 0.5809 (0.8238)  loss_classifier: 0.1717 (0.2799)  loss_box_reg: 0.0974 (0.1262)  loss_mask: 0.2522 (0.3018)  loss_objectness: 0.0255 (0.0548)  loss_rpn_box_reg: 0.0355 (0.0611)  time: 0.6231 (0.6840)  data: 0.0003 (0.0171)  lr: 0.016000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:38:01  iter: 9400  loss: 0.6697 (0.8255)  loss_classifier: 0.2056 (0.2806)  loss_box_reg: 0.1059 (0.1269)  loss_mask: 0.2534 (0.3016)  loss_objectness: 0.0273 (0.0550)  loss_rpn_box_reg: 0.0431 (0.0613)  time: 0.6231 (0.6840)  data: 0.0004 (0.0171)  lr: 0.016000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:38:01  iter: 9400  loss: 0.6194 (0.8261)  loss_classifier: 0.1960 (0.2807)  loss_box_reg: 0.1012 (0.1268)  loss_mask: 0.2517 (0.3016)  loss_objectness: 0.0316 (0.0555)  loss_rpn_box_reg: 0.0392 (0.0615)  time: 0.6232 (0.6840)  data: 0.0004 (0.0171)  lr: 0.016000  max mem: 14796
INFO:maskrcnn_benchmark.trainer:eta: 1:38:02  iter: 9400  loss: 0.5830 (0.8238)  loss_classifier: 0.1702 (0.2798)  loss_box_reg: 0.0882 (0.1264)  loss_mask: 0.2429 (0.3012)  loss_objectness: 0.0251 (0.0551)  loss_rpn_box_reg: 0.0372 (0.0613)  time: 0.6231 (0.6840)  data: 0.0004 (0.0171)  lr: 0.016000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:38:02  iter: 9400  loss: 0.6159 (0.8237)  loss_classifier: 0.1914 (0.2797)  loss_box_reg: 0.0984 (0.1261)  loss_mask: 0.2564 (0.3015)  loss_objectness: 0.0231 (0.0552)  loss_rpn_box_reg: 0.0393 (0.0613)  time: 0.6238 (0.6840)  data: 0.0004 (0.0171)  lr: 0.016000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 1:38:02  iter: 9400  loss: 0.5762 (0.8256)  loss_classifier: 0.1853 (0.2804)  loss_box_reg: 0.0965 (0.1268)  loss_mask: 0.2525 (0.3018)  loss_objectness: 0.0283 (0.0552)  loss_rpn_box_reg: 0.0417 (0.0615)  time: 0.6237 (0.6840)  data: 0.0003 (0.0171)  lr: 0.016000  max mem: 14843
2021-10-16 13:25:39,947 maskrcnn_benchmark.trainer INFO: eta: 1:38:02  iter: 9400  loss: 0.6793 (0.8278)  loss_classifier: 0.2174 (0.2815)  loss_box_reg: 0.1121 (0.1272)  loss_mask: 0.2630 (0.3018)  loss_objectness: 0.0265 (0.0555)  loss_rpn_box_reg: 0.0425 (0.0618)  time: 0.6236 (0.6840)  data: 0.0004 (0.0173)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:38:02  iter: 9400  loss: 0.6156 (0.8267)  loss_classifier: 0.1984 (0.2809)  loss_box_reg: 0.1001 (0.1267)  loss_mask: 0.2567 (0.3022)  loss_objectness: 0.0242 (0.0553)  loss_rpn_box_reg: 0.0403 (0.0616)  time: 0.6239 (0.6840)  data: 0.0004 (0.0171)  lr: 0.016000  max mem: 14714
INFO:maskrcnn_benchmark.trainer:eta: 1:38:02  iter: 9400  loss: 0.6793 (0.8278)  loss_classifier: 0.2174 (0.2815)  loss_box_reg: 0.1121 (0.1272)  loss_mask: 0.2630 (0.3018)  loss_objectness: 0.0265 (0.0555)  loss_rpn_box_reg: 0.0425 (0.0618)  time: 0.6236 (0.6840)  data: 0.0004 (0.0173)  lr: 0.016000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634390739947, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8277655769535835, "loss_classifier": 0.281466782099389, "loss_box_reg": 0.12721674090447002, "loss_mask": 0.3017842605694177, "loss_objectness": 0.05547313498016051, "loss_rpn_box_reg": 0.06182465889481233, "time": 0.6839556050300598, "data": 0.017293184260104566, "throughput": 187.14664966357634}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 9400}}
:::MLLOG {"namespace": "", "time_ms": 1634390739947, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 187.14664966357634, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:37:25  iter: 9450  loss: 0.5947 (0.8228)  loss_classifier: 0.1853 (0.2795)  loss_box_reg: 0.0957 (0.1261)  loss_mask: 0.2533 (0.3015)  loss_objectness: 0.0268 (0.0547)  loss_rpn_box_reg: 0.0421 (0.0610)  time: 0.6253 (0.6837)  data: 0.0004 (0.0170)  lr: 0.016000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:37:25  iter: 9450  loss: 0.6018 (0.8244)  loss_classifier: 0.1924 (0.2802)  loss_box_reg: 0.0989 (0.1268)  loss_mask: 0.2596 (0.3013)  loss_objectness: 0.0257 (0.0549)  loss_rpn_box_reg: 0.0394 (0.0613)  time: 0.6253 (0.6836)  data: 0.0003 (0.0170)  lr: 0.016000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:37:25  iter: 9450  loss: 0.6093 (0.8252)  loss_classifier: 0.1991 (0.2803)  loss_box_reg: 0.0958 (0.1267)  loss_mask: 0.2505 (0.3014)  loss_objectness: 0.0286 (0.0554)  loss_rpn_box_reg: 0.0389 (0.0614)  time: 0.6253 (0.6836)  data: 0.0004 (0.0170)  lr: 0.016000  max mem: 14796
INFO:maskrcnn_benchmark.trainer:eta: 1:37:25  iter: 9450  loss: 0.6145 (0.8230)  loss_classifier: 0.1982 (0.2794)  loss_box_reg: 0.1027 (0.1263)  loss_mask: 0.2562 (0.3010)  loss_objectness: 0.0249 (0.0549)  loss_rpn_box_reg: 0.0478 (0.0613)  time: 0.6248 (0.6837)  data: 0.0004 (0.0170)  lr: 0.016000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:37:25  iter: 9450  loss: 0.6093 (0.8226)  loss_classifier: 0.1923 (0.2792)  loss_box_reg: 0.0966 (0.1260)  loss_mask: 0.2422 (0.3012)  loss_objectness: 0.0265 (0.0550)  loss_rpn_box_reg: 0.0426 (0.0612)  time: 0.6252 (0.6837)  data: 0.0004 (0.0170)  lr: 0.016000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 1:37:25  iter: 9450  loss: 0.6877 (0.8247)  loss_classifier: 0.2103 (0.2800)  loss_box_reg: 0.1121 (0.1267)  loss_mask: 0.2672 (0.3015)  loss_objectness: 0.0335 (0.0550)  loss_rpn_box_reg: 0.0447 (0.0614)  time: 0.6241 (0.6837)  data: 0.0004 (0.0170)  lr: 0.016000  max mem: 14843
2021-10-16 13:26:11,260 maskrcnn_benchmark.trainer INFO: eta: 1:37:25  iter: 9450  loss: 0.6113 (0.8267)  loss_classifier: 0.1812 (0.2810)  loss_box_reg: 0.1020 (0.1271)  loss_mask: 0.2517 (0.3015)  loss_objectness: 0.0239 (0.0553)  loss_rpn_box_reg: 0.0439 (0.0617)  time: 0.6241 (0.6837)  data: 0.0003 (0.0172)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:37:25  iter: 9450  loss: 0.6113 (0.8267)  loss_classifier: 0.1812 (0.2810)  loss_box_reg: 0.1020 (0.1271)  loss_mask: 0.2517 (0.3015)  loss_objectness: 0.0239 (0.0553)  loss_rpn_box_reg: 0.0439 (0.0617)  time: 0.6241 (0.6837)  data: 0.0003 (0.0172)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:37:25  iter: 9450  loss: 0.6395 (0.8258)  loss_classifier: 0.1986 (0.2805)  loss_box_reg: 0.0948 (0.1266)  loss_mask: 0.2541 (0.3019)  loss_objectness: 0.0288 (0.0552)  loss_rpn_box_reg: 0.0467 (0.0616)  time: 0.6241 (0.6837)  data: 0.0004 (0.0170)  lr: 0.016000  max mem: 14714
:::MLLOG {"namespace": "", "time_ms": 1634390771260, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8266851901408857, "loss_classifier": 0.28102267919078705, "loss_box_reg": 0.1270717538837787, "loss_mask": 0.30152257921519104, "loss_objectness": 0.05533087394224904, "loss_rpn_box_reg": 0.061737304397972016, "time": 0.6836503583665878, "data": 0.017204059721931578, "throughput": 187.23020976076734}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 9450}}
:::MLLOG {"namespace": "", "time_ms": 1634390771260, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 187.23020976076734, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:36:48  iter: 9500  loss: 0.6025 (0.8248)  loss_classifier: 0.1892 (0.2801)  loss_box_reg: 0.0924 (0.1265)  loss_mask: 0.2452 (0.3017)  loss_objectness: 0.0253 (0.0551)  loss_rpn_box_reg: 0.0442 (0.0615)  time: 0.6303 (0.6834)  data: 0.0004 (0.0169)  lr: 0.016000  max mem: 14714
2021-10-16 13:26:42,744 maskrcnn_benchmark.trainer INFO: eta: 1:36:48  iter: 9500  loss: 0.6367 (0.8256)  loss_classifier: 0.1898 (0.2805)  loss_box_reg: 0.1078 (0.1269)  loss_mask: 0.2684 (0.3013)  loss_objectness: 0.0274 (0.0552)  loss_rpn_box_reg: 0.0393 (0.0616)  time: 0.6302 (0.6834)  data: 0.0004 (0.0171)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:36:48  iter: 9500  loss: 0.6367 (0.8256)  loss_classifier: 0.1898 (0.2805)  loss_box_reg: 0.1078 (0.1269)  loss_mask: 0.2684 (0.3013)  loss_objectness: 0.0274 (0.0552)  loss_rpn_box_reg: 0.0393 (0.0616)  time: 0.6302 (0.6834)  data: 0.0004 (0.0171)  lr: 0.016000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634390802744, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8255850728342408, "loss_classifier": 0.2805279102921486, "loss_box_reg": 0.1269262008851051, "loss_mask": 0.3013009963129696, "loss_objectness": 0.055195030729041285, "loss_rpn_box_reg": 0.06163493511208186, "time": 0.6833662897160179, "data": 0.017115611327321905, "throughput": 187.30803951888254}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 9500}}
:::MLLOG {"namespace": "", "time_ms": 1634390802744, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 187.30803951888254, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:36:48  iter: 9500  loss: 0.6146 (0.8235)  loss_classifier: 0.1927 (0.2795)  loss_box_reg: 0.0946 (0.1265)  loss_mask: 0.2564 (0.3013)  loss_objectness: 0.0271 (0.0549)  loss_rpn_box_reg: 0.0461 (0.0613)  time: 0.6302 (0.6834)  data: 0.0003 (0.0169)  lr: 0.016000  max mem: 14843
INFO:maskrcnn_benchmark.trainer:eta: 1:36:48  iter: 9500  loss: 0.6485 (0.8221)  loss_classifier: 0.1983 (0.2790)  loss_box_reg: 0.1041 (0.1262)  loss_mask: 0.2545 (0.3008)  loss_objectness: 0.0291 (0.0548)  loss_rpn_box_reg: 0.0446 (0.0612)  time: 0.6295 (0.6834)  data: 0.0004 (0.0169)  lr: 0.016000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:36:48  iter: 9500  loss: 0.6591 (0.8217)  loss_classifier: 0.2069 (0.2788)  loss_box_reg: 0.1110 (0.1259)  loss_mask: 0.2563 (0.3009)  loss_objectness: 0.0341 (0.0549)  loss_rpn_box_reg: 0.0491 (0.0611)  time: 0.6292 (0.6834)  data: 0.0004 (0.0169)  lr: 0.016000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 1:36:48  iter: 9500  loss: 0.6485 (0.8218)  loss_classifier: 0.2023 (0.2791)  loss_box_reg: 0.1081 (0.1259)  loss_mask: 0.2529 (0.3012)  loss_objectness: 0.0304 (0.0546)  loss_rpn_box_reg: 0.0479 (0.0610)  time: 0.6298 (0.6834)  data: 0.0004 (0.0169)  lr: 0.016000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:36:48  iter: 9500  loss: 0.6344 (0.8242)  loss_classifier: 0.1924 (0.2799)  loss_box_reg: 0.1046 (0.1266)  loss_mask: 0.2448 (0.3011)  loss_objectness: 0.0276 (0.0553)  loss_rpn_box_reg: 0.0473 (0.0613)  time: 0.6295 (0.6834)  data: 0.0004 (0.0169)  lr: 0.016000  max mem: 14796
INFO:maskrcnn_benchmark.trainer:eta: 1:36:48  iter: 9500  loss: 0.6489 (0.8235)  loss_classifier: 0.2147 (0.2798)  loss_box_reg: 0.1137 (0.1267)  loss_mask: 0.2579 (0.3010)  loss_objectness: 0.0308 (0.0548)  loss_rpn_box_reg: 0.0380 (0.0612)  time: 0.6295 (0.6834)  data: 0.0004 (0.0169)  lr: 0.016000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:36:12  iter: 9550  loss: 0.6657 (0.8227)  loss_classifier: 0.2160 (0.2791)  loss_box_reg: 0.1026 (0.1265)  loss_mask: 0.2645 (0.3011)  loss_objectness: 0.0338 (0.0548)  loss_rpn_box_reg: 0.0375 (0.0612)  time: 0.6262 (0.6831)  data: 0.0004 (0.0168)  lr: 0.016000  max mem: 14843
2021-10-16 13:27:14,210 maskrcnn_benchmark.trainer INFO: eta: 1:36:12  iter: 9550  loss: 0.6414 (0.8245)  loss_classifier: 0.1952 (0.2801)  loss_box_reg: 0.0992 (0.1268)  loss_mask: 0.2535 (0.3010)  loss_objectness: 0.0293 (0.0551)  loss_rpn_box_reg: 0.0465 (0.0616)  time: 0.6264 (0.6831)  data: 0.0004 (0.0170)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:36:12  iter: 9550  loss: 0.6105 (0.8238)  loss_classifier: 0.1893 (0.2797)  loss_box_reg: 0.1114 (0.1264)  loss_mask: 0.2530 (0.3014)  loss_objectness: 0.0252 (0.0549)  loss_rpn_box_reg: 0.0422 (0.0614)  time: 0.6255 (0.6831)  data: 0.0004 (0.0168)  lr: 0.016000  max mem: 14714
INFO:maskrcnn_benchmark.trainer:eta: 1:36:12  iter: 9550  loss: 0.6414 (0.8245)  loss_classifier: 0.1952 (0.2801)  loss_box_reg: 0.0992 (0.1268)  loss_mask: 0.2535 (0.3010)  loss_objectness: 0.0293 (0.0551)  loss_rpn_box_reg: 0.0465 (0.0616)  time: 0.6264 (0.6831)  data: 0.0004 (0.0170)  lr: 0.016000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634390834211, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8245373837142714, "loss_classifier": 0.2800863806365048, "loss_box_reg": 0.12678701453805652, "loss_mask": 0.30104940919195794, "loss_objectness": 0.05506026014617366, "loss_rpn_box_reg": 0.06155431969988487, "time": 0.6830834051202105, "data": 0.017028190103500925, "throughput": 187.38560919581158}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 9550}}
INFO:maskrcnn_benchmark.trainer:eta: 1:36:12  iter: 9550  loss: 0.6680 (0.8212)  loss_classifier: 0.2024 (0.2787)  loss_box_reg: 0.1091 (0.1261)  loss_mask: 0.2645 (0.3006)  loss_objectness: 0.0281 (0.0547)  loss_rpn_box_reg: 0.0452 (0.0611)  time: 0.6275 (0.6831)  data: 0.0004 (0.0169)  lr: 0.016000  max mem: 14996
:::MLLOG {"namespace": "", "time_ms": 1634390834211, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 187.38560919581158, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:36:12  iter: 9550  loss: 0.6547 (0.8207)  loss_classifier: 0.2087 (0.2785)  loss_box_reg: 0.1091 (0.1257)  loss_mask: 0.2585 (0.3007)  loss_objectness: 0.0317 (0.0548)  loss_rpn_box_reg: 0.0527 (0.0611)  time: 0.6273 (0.6831)  data: 0.0004 (0.0168)  lr: 0.016000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 1:36:12  iter: 9550  loss: 0.5853 (0.8208)  loss_classifier: 0.1723 (0.2787)  loss_box_reg: 0.0922 (0.1258)  loss_mask: 0.2545 (0.3010)  loss_objectness: 0.0230 (0.0544)  loss_rpn_box_reg: 0.0375 (0.0609)  time: 0.6277 (0.6831)  data: 0.0003 (0.0168)  lr: 0.016000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:36:12  iter: 9550  loss: 0.6217 (0.8233)  loss_classifier: 0.2002 (0.2795)  loss_box_reg: 0.1012 (0.1265)  loss_mask: 0.2482 (0.3009)  loss_objectness: 0.0247 (0.0551)  loss_rpn_box_reg: 0.0433 (0.0613)  time: 0.6276 (0.6831)  data: 0.0004 (0.0168)  lr: 0.016000  max mem: 14796
INFO:maskrcnn_benchmark.trainer:eta: 1:36:12  iter: 9550  loss: 0.6052 (0.8225)  loss_classifier: 0.1786 (0.2794)  loss_box_reg: 0.0951 (0.1266)  loss_mask: 0.2518 (0.3008)  loss_objectness: 0.0249 (0.0546)  loss_rpn_box_reg: 0.0398 (0.0611)  time: 0.6277 (0.6831)  data: 0.0004 (0.0168)  lr: 0.016000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:35:35  iter: 9600  loss: 0.5906 (0.8196)  loss_classifier: 0.1965 (0.2780)  loss_box_reg: 0.0931 (0.1256)  loss_mask: 0.2454 (0.3004)  loss_objectness: 0.0240 (0.0546)  loss_rpn_box_reg: 0.0356 (0.0610)  time: 0.6282 (0.6828)  data: 0.0003 (0.0168)  lr: 0.016000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 1:35:35  iter: 9600  loss: 0.6881 (0.8203)  loss_classifier: 0.2132 (0.2783)  loss_box_reg: 0.1084 (0.1260)  loss_mask: 0.2627 (0.3004)  loss_objectness: 0.0305 (0.0545)  loss_rpn_box_reg: 0.0539 (0.0611)  time: 0.6280 (0.6828)  data: 0.0004 (0.0168)  lr: 0.016000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:35:35  iter: 9600  loss: 0.6329 (0.8217)  loss_classifier: 0.1942 (0.2787)  loss_box_reg: 0.0947 (0.1263)  loss_mask: 0.2496 (0.3008)  loss_objectness: 0.0266 (0.0547)  loss_rpn_box_reg: 0.0483 (0.0612)  time: 0.6281 (0.6828)  data: 0.0003 (0.0168)  lr: 0.016000  max mem: 14843
2021-10-16 13:27:45,590 maskrcnn_benchmark.trainer INFO: eta: 1:35:35  iter: 9600  loss: 0.6442 (0.8236)  loss_classifier: 0.2018 (0.2797)  loss_box_reg: 0.0927 (0.1267)  loss_mask: 0.2502 (0.3008)  loss_objectness: 0.0287 (0.0549)  loss_rpn_box_reg: 0.0429 (0.0615)  time: 0.6274 (0.6828)  data: 0.0003 (0.0169)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:35:35  iter: 9600  loss: 0.5893 (0.8198)  loss_classifier: 0.1667 (0.2782)  loss_box_reg: 0.0904 (0.1257)  loss_mask: 0.2491 (0.3008)  loss_objectness: 0.0264 (0.0543)  loss_rpn_box_reg: 0.0326 (0.0608)  time: 0.6280 (0.6828)  data: 0.0004 (0.0168)  lr: 0.016000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:35:35  iter: 9600  loss: 0.6442 (0.8236)  loss_classifier: 0.2018 (0.2797)  loss_box_reg: 0.0927 (0.1267)  loss_mask: 0.2502 (0.3008)  loss_objectness: 0.0287 (0.0549)  loss_rpn_box_reg: 0.0429 (0.0615)  time: 0.6274 (0.6828)  data: 0.0003 (0.0169)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:35:35  iter: 9600  loss: 0.6025 (0.8228)  loss_classifier: 0.1865 (0.2792)  loss_box_reg: 0.0970 (0.1262)  loss_mask: 0.2587 (0.3012)  loss_objectness: 0.0318 (0.0548)  loss_rpn_box_reg: 0.0389 (0.0614)  time: 0.6272 (0.6828)  data: 0.0004 (0.0167)  lr: 0.016000  max mem: 14714
INFO:maskrcnn_benchmark.trainer:eta: 1:35:35  iter: 9600  loss: 0.5670 (0.8221)  loss_classifier: 0.1645 (0.2790)  loss_box_reg: 0.0899 (0.1263)  loss_mask: 0.2531 (0.3006)  loss_objectness: 0.0253 (0.0550)  loss_rpn_box_reg: 0.0346 (0.0612)  time: 0.6285 (0.6828)  data: 0.0003 (0.0167)  lr: 0.016000  max mem: 14796
INFO:maskrcnn_benchmark.trainer:eta: 1:35:35  iter: 9600  loss: 0.5966 (0.8215)  loss_classifier: 0.1789 (0.2790)  loss_box_reg: 0.0885 (0.1264)  loss_mask: 0.2461 (0.3005)  loss_objectness: 0.0350 (0.0545)  loss_rpn_box_reg: 0.0373 (0.0610)  time: 0.6288 (0.6828)  data: 0.0004 (0.0167)  lr: 0.016000  max mem: 14803
:::MLLOG {"namespace": "", "time_ms": 1634390865590, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8235899451219787, "loss_classifier": 0.27968492353878294, "loss_box_reg": 0.1266572185834472, "loss_mask": 0.30081407179900754, "loss_objectness": 0.05493005601039234, "loss_rpn_box_reg": 0.06150367567199282, "time": 0.6827943698565165, "data": 0.016941900278131167, "throughput": 187.46493183137716}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 9600}}
:::MLLOG {"namespace": "", "time_ms": 1634390865590, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 187.46493183137716, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:34:59  iter: 9650  loss: 0.6388 (0.8188)  loss_classifier: 0.1971 (0.2778)  loss_box_reg: 0.0933 (0.1255)  loss_mask: 0.2598 (0.3005)  loss_objectness: 0.0299 (0.0542)  loss_rpn_box_reg: 0.0430 (0.0608)  time: 0.6292 (0.6825)  data: 0.0004 (0.0167)  lr: 0.016000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:34:58  iter: 9650  loss: 0.5569 (0.8205)  loss_classifier: 0.1823 (0.2785)  loss_box_reg: 0.0862 (0.1263)  loss_mask: 0.2390 (0.3003)  loss_objectness: 0.0262 (0.0544)  loss_rpn_box_reg: 0.0377 (0.0610)  time: 0.6292 (0.6825)  data: 0.0003 (0.0167)  lr: 0.016000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:34:59  iter: 9650  loss: 0.6048 (0.8210)  loss_classifier: 0.1918 (0.2786)  loss_box_reg: 0.0937 (0.1262)  loss_mask: 0.2457 (0.3003)  loss_objectness: 0.0225 (0.0549)  loss_rpn_box_reg: 0.0396 (0.0611)  time: 0.6292 (0.6825)  data: 0.0004 (0.0166)  lr: 0.016000  max mem: 14796
INFO:maskrcnn_benchmark.trainer:eta: 1:34:59  iter: 9650  loss: 0.6237 (0.8194)  loss_classifier: 0.1971 (0.2779)  loss_box_reg: 0.0975 (0.1259)  loss_mask: 0.2465 (0.3001)  loss_objectness: 0.0253 (0.0544)  loss_rpn_box_reg: 0.0444 (0.0610)  time: 0.6287 (0.6825)  data: 0.0004 (0.0167)  lr: 0.016000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:34:59  iter: 9650  loss: 0.6301 (0.8187)  loss_classifier: 0.1928 (0.2776)  loss_box_reg: 0.1018 (0.1255)  loss_mask: 0.2538 (0.3002)  loss_objectness: 0.0267 (0.0545)  loss_rpn_box_reg: 0.0489 (0.0609)  time: 0.6284 (0.6825)  data: 0.0003 (0.0167)  lr: 0.016000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 1:34:59  iter: 9650  loss: 0.5739 (0.8207)  loss_classifier: 0.1772 (0.2783)  loss_box_reg: 0.0944 (0.1262)  loss_mask: 0.2435 (0.3006)  loss_objectness: 0.0286 (0.0545)  loss_rpn_box_reg: 0.0468 (0.0611)  time: 0.6284 (0.6825)  data: 0.0004 (0.0167)  lr: 0.016000  max mem: 14843
2021-10-16 13:28:17,077 maskrcnn_benchmark.trainer INFO: eta: 1:34:59  iter: 9650  loss: 0.6281 (0.8225)  loss_classifier: 0.2109 (0.2793)  loss_box_reg: 0.0959 (0.1265)  loss_mask: 0.2423 (0.3006)  loss_objectness: 0.0260 (0.0548)  loss_rpn_box_reg: 0.0375 (0.0614)  time: 0.6284 (0.6825)  data: 0.0004 (0.0169)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:34:59  iter: 9650  loss: 0.6188 (0.8219)  loss_classifier: 0.1897 (0.2788)  loss_box_reg: 0.0960 (0.1261)  loss_mask: 0.2510 (0.3010)  loss_objectness: 0.0277 (0.0547)  loss_rpn_box_reg: 0.0427 (0.0613)  time: 0.6284 (0.6825)  data: 0.0004 (0.0166)  lr: 0.016000  max mem: 14714
INFO:maskrcnn_benchmark.trainer:eta: 1:34:59  iter: 9650  loss: 0.6281 (0.8225)  loss_classifier: 0.2109 (0.2793)  loss_box_reg: 0.0959 (0.1265)  loss_mask: 0.2423 (0.3006)  loss_objectness: 0.0260 (0.0548)  loss_rpn_box_reg: 0.0375 (0.0614)  time: 0.6284 (0.6825)  data: 0.0004 (0.0169)  lr: 0.016000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634390897077, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8224858374700645, "loss_classifier": 0.27926057798720394, "loss_box_reg": 0.1264995786408445, "loss_mask": 0.30055098711672223, "loss_objectness": 0.054787037660575286, "loss_rpn_box_reg": 0.06138765651539663, "time": 0.6825194692364629, "data": 0.01685668115171126, "throughput": 187.5404377009114}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 9650}}
:::MLLOG {"namespace": "", "time_ms": 1634390897077, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 187.5404377009114, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:34:22  iter: 9700  loss: 0.5580 (0.8199)  loss_classifier: 0.1811 (0.2781)  loss_box_reg: 0.0881 (0.1260)  loss_mask: 0.2405 (0.3001)  loss_objectness: 0.0216 (0.0547)  loss_rpn_box_reg: 0.0389 (0.0610)  time: 0.6265 (0.6822)  data: 0.0004 (0.0166)  lr: 0.016000  max mem: 14796
INFO:maskrcnn_benchmark.trainer:eta: 1:34:22  iter: 9700  loss: 0.6650 (0.8179)  loss_classifier: 0.2153 (0.2774)  loss_box_reg: 0.1079 (0.1254)  loss_mask: 0.2556 (0.3003)  loss_objectness: 0.0325 (0.0541)  loss_rpn_box_reg: 0.0506 (0.0607)  time: 0.6267 (0.6822)  data: 0.0004 (0.0166)  lr: 0.016000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:34:22  iter: 9700  loss: 0.5988 (0.8195)  loss_classifier: 0.1734 (0.2781)  loss_box_reg: 0.0909 (0.1262)  loss_mask: 0.2510 (0.3000)  loss_objectness: 0.0278 (0.0543)  loss_rpn_box_reg: 0.0375 (0.0609)  time: 0.6265 (0.6822)  data: 0.0003 (0.0166)  lr: 0.016000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:34:22  iter: 9700  loss: 0.6281 (0.8177)  loss_classifier: 0.1850 (0.2772)  loss_box_reg: 0.0933 (0.1254)  loss_mask: 0.2433 (0.2999)  loss_objectness: 0.0288 (0.0544)  loss_rpn_box_reg: 0.0393 (0.0608)  time: 0.6252 (0.6822)  data: 0.0004 (0.0166)  lr: 0.016000  max mem: 14673
INFO:maskrcnn_benchmark.trainer:eta: 1:34:22  iter: 9700  loss: 0.6536 (0.8184)  loss_classifier: 0.2039 (0.2775)  loss_box_reg: 0.0999 (0.1258)  loss_mask: 0.2495 (0.2999)  loss_objectness: 0.0297 (0.0543)  loss_rpn_box_reg: 0.0448 (0.0609)  time: 0.6251 (0.6822)  data: 0.0004 (0.0166)  lr: 0.016000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:34:22  iter: 9700  loss: 0.6239 (0.8198)  loss_classifier: 0.1897 (0.2779)  loss_box_reg: 0.0992 (0.1261)  loss_mask: 0.2608 (0.3004)  loss_objectness: 0.0296 (0.0544)  loss_rpn_box_reg: 0.0460 (0.0610)  time: 0.6258 (0.6822)  data: 0.0004 (0.0166)  lr: 0.016000  max mem: 14843
INFO:maskrcnn_benchmark.trainer:eta: 1:34:22  iter: 9700  loss: 0.6548 (0.8209)  loss_classifier: 0.1977 (0.2784)  loss_box_reg: 0.0972 (0.1260)  loss_mask: 0.2562 (0.3007)  loss_objectness: 0.0253 (0.0546)  loss_rpn_box_reg: 0.0525 (0.0613)  time: 0.6257 (0.6822)  data: 0.0004 (0.0166)  lr: 0.016000  max mem: 14714
2021-10-16 13:28:48,458 maskrcnn_benchmark.trainer INFO: eta: 1:34:22  iter: 9700  loss: 0.6291 (0.8216)  loss_classifier: 0.1885 (0.2789)  loss_box_reg: 0.1009 (0.1264)  loss_mask: 0.2527 (0.3003)  loss_objectness: 0.0276 (0.0547)  loss_rpn_box_reg: 0.0429 (0.0613)  time: 0.6257 (0.6822)  data: 0.0004 (0.0168)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:34:22  iter: 9700  loss: 0.6291 (0.8216)  loss_classifier: 0.1885 (0.2789)  loss_box_reg: 0.1009 (0.1264)  loss_mask: 0.2527 (0.3003)  loss_objectness: 0.0276 (0.0547)  loss_rpn_box_reg: 0.0429 (0.0613)  time: 0.6257 (0.6822)  data: 0.0004 (0.0168)  lr: 0.016000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634390928458, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.821564583532589, "loss_classifier": 0.2788756664896134, "loss_box_reg": 0.12639845881877543, "loss_mask": 0.3003253911450966, "loss_objectness": 0.05465133654116893, "loss_rpn_box_reg": 0.06131373100155561, "time": 0.6822364574117759, "data": 0.0167722618948553, "throughput": 187.61823501135962}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 9700}}
:::MLLOG {"namespace": "", "time_ms": 1634390928458, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 187.61823501135962, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:33:46  iter: 9750  loss: 0.6203 (0.8170)  loss_classifier: 0.2030 (0.2770)  loss_box_reg: 0.0918 (0.1253)  loss_mask: 0.2555 (0.3001)  loss_objectness: 0.0297 (0.0539)  loss_rpn_box_reg: 0.0350 (0.0606)  time: 0.6286 (0.6820)  data: 0.0004 (0.0165)  lr: 0.016000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:33:46  iter: 9750  loss: 0.6420 (0.8191)  loss_classifier: 0.1991 (0.2778)  loss_box_reg: 0.1092 (0.1259)  loss_mask: 0.2586 (0.2999)  loss_objectness: 0.0316 (0.0546)  loss_rpn_box_reg: 0.0470 (0.0609)  time: 0.6286 (0.6820)  data: 0.0004 (0.0165)  lr: 0.016000  max mem: 14796
INFO:maskrcnn_benchmark.trainer:eta: 1:33:46  iter: 9750  loss: 0.6576 (0.8186)  loss_classifier: 0.2059 (0.2778)  loss_box_reg: 0.0972 (0.1260)  loss_mask: 0.2540 (0.2998)  loss_objectness: 0.0303 (0.0541)  loss_rpn_box_reg: 0.0489 (0.0608)  time: 0.6284 (0.6820)  data: 0.0004 (0.0165)  lr: 0.016000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:33:46  iter: 9750  loss: 0.5784 (0.8168)  loss_classifier: 0.1745 (0.2769)  loss_box_reg: 0.0931 (0.1253)  loss_mask: 0.2460 (0.2997)  loss_objectness: 0.0264 (0.0542)  loss_rpn_box_reg: 0.0349 (0.0607)  time: 0.6275 (0.6820)  data: 0.0004 (0.0165)  lr: 0.016000  max mem: 14790
INFO:maskrcnn_benchmark.trainer:eta: 1:33:46  iter: 9750  loss: 0.6228 (0.8175)  loss_classifier: 0.1971 (0.2771)  loss_box_reg: 0.0911 (0.1257)  loss_mask: 0.2511 (0.2997)  loss_objectness: 0.0260 (0.0542)  loss_rpn_box_reg: 0.0433 (0.0608)  time: 0.6281 (0.6820)  data: 0.0004 (0.0165)  lr: 0.016000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:33:46  iter: 9750  loss: 0.5846 (0.8188)  loss_classifier: 0.1878 (0.2775)  loss_box_reg: 0.1041 (0.1260)  loss_mask: 0.2503 (0.3001)  loss_objectness: 0.0212 (0.0543)  loss_rpn_box_reg: 0.0344 (0.0609)  time: 0.6285 (0.6820)  data: 0.0003 (0.0165)  lr: 0.016000  max mem: 14843
INFO:maskrcnn_benchmark.trainer:eta: 1:33:46  iter: 9750  loss: 0.6560 (0.8199)  loss_classifier: 0.2014 (0.2780)  loss_box_reg: 0.1081 (0.1258)  loss_mask: 0.2535 (0.3005)  loss_objectness: 0.0313 (0.0544)  loss_rpn_box_reg: 0.0443 (0.0612)  time: 0.6283 (0.6820)  data: 0.0004 (0.0165)  lr: 0.016000  max mem: 14714
2021-10-16 13:29:19,938 maskrcnn_benchmark.trainer INFO: eta: 1:33:46  iter: 9750  loss: 0.6377 (0.8206)  loss_classifier: 0.1963 (0.2785)  loss_box_reg: 0.0937 (0.1263)  loss_mask: 0.2498 (0.3001)  loss_objectness: 0.0289 (0.0545)  loss_rpn_box_reg: 0.0464 (0.0613)  time: 0.6282 (0.6820)  data: 0.0004 (0.0167)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:33:46  iter: 9750  loss: 0.6377 (0.8206)  loss_classifier: 0.1963 (0.2785)  loss_box_reg: 0.0937 (0.1263)  loss_mask: 0.2498 (0.3001)  loss_objectness: 0.0289 (0.0545)  loss_rpn_box_reg: 0.0464 (0.0613)  time: 0.6282 (0.6820)  data: 0.0004 (0.0167)  lr: 0.016000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634390959938, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8206164135994055, "loss_classifier": 0.2784717602936121, "loss_box_reg": 0.12627537605622544, "loss_mask": 0.3000936126235204, "loss_objectness": 0.05452272436968409, "loss_rpn_box_reg": 0.061252940710729516, "time": 0.6819665885827481, "data": 0.016688873975704878, "throughput": 187.69247957734635}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 9750}}
:::MLLOG {"namespace": "", "time_ms": 1634390959939, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 187.69247957734635, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:33:09  iter: 9800  loss: 0.5993 (0.8159)  loss_classifier: 0.1961 (0.2766)  loss_box_reg: 0.0894 (0.1251)  loss_mask: 0.2531 (0.2998)  loss_objectness: 0.0239 (0.0538)  loss_rpn_box_reg: 0.0360 (0.0605)  time: 0.6249 (0.6817)  data: 0.0004 (0.0164)  lr: 0.016000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:33:09  iter: 9800  loss: 0.6607 (0.8176)  loss_classifier: 0.1971 (0.2774)  loss_box_reg: 0.1026 (0.1259)  loss_mask: 0.2572 (0.2996)  loss_objectness: 0.0269 (0.0540)  loss_rpn_box_reg: 0.0469 (0.0608)  time: 0.6251 (0.6817)  data: 0.0004 (0.0164)  lr: 0.016000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:33:09  iter: 9800  loss: 0.6270 (0.8181)  loss_classifier: 0.2161 (0.2774)  loss_box_reg: 0.1058 (0.1258)  loss_mask: 0.2574 (0.2996)  loss_objectness: 0.0284 (0.0545)  loss_rpn_box_reg: 0.0405 (0.0608)  time: 0.6250 (0.6817)  data: 0.0004 (0.0164)  lr: 0.016000  max mem: 14796
INFO:maskrcnn_benchmark.trainer:eta: 1:33:09  iter: 9800  loss: 0.6616 (0.8166)  loss_classifier: 0.2179 (0.2768)  loss_box_reg: 0.1079 (0.1256)  loss_mask: 0.2564 (0.2995)  loss_objectness: 0.0285 (0.0540)  loss_rpn_box_reg: 0.0403 (0.0607)  time: 0.6249 (0.6817)  data: 0.0004 (0.0164)  lr: 0.016000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:33:09  iter: 9800  loss: 0.5644 (0.8157)  loss_classifier: 0.1669 (0.2764)  loss_box_reg: 0.0874 (0.1251)  loss_mask: 0.2534 (0.2994)  loss_objectness: 0.0245 (0.0541)  loss_rpn_box_reg: 0.0386 (0.0607)  time: 0.6246 (0.6817)  data: 0.0004 (0.0164)  lr: 0.016000  max mem: 14790
INFO:maskrcnn_benchmark.trainer:eta: 1:33:09  iter: 9800  loss: 0.6209 (0.8177)  loss_classifier: 0.1815 (0.2770)  loss_box_reg: 0.0925 (0.1258)  loss_mask: 0.2599 (0.2999)  loss_objectness: 0.0224 (0.0541)  loss_rpn_box_reg: 0.0456 (0.0609)  time: 0.6257 (0.6817)  data: 0.0003 (0.0164)  lr: 0.016000  max mem: 14843
2021-10-16 13:29:51,374 maskrcnn_benchmark.trainer INFO: eta: 1:33:09  iter: 9800  loss: 0.6400 (0.8195)  loss_classifier: 0.1954 (0.2780)  loss_box_reg: 0.0933 (0.1261)  loss_mask: 0.2562 (0.2998)  loss_objectness: 0.0245 (0.0544)  loss_rpn_box_reg: 0.0405 (0.0612)  time: 0.6257 (0.6817)  data: 0.0004 (0.0166)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:33:09  iter: 9800  loss: 0.6078 (0.8190)  loss_classifier: 0.1937 (0.2776)  loss_box_reg: 0.1006 (0.1257)  loss_mask: 0.2560 (0.3003)  loss_objectness: 0.0306 (0.0543)  loss_rpn_box_reg: 0.0393 (0.0611)  time: 0.6257 (0.6817)  data: 0.0004 (0.0164)  lr: 0.016000  max mem: 14714
INFO:maskrcnn_benchmark.trainer:eta: 1:33:09  iter: 9800  loss: 0.6400 (0.8195)  loss_classifier: 0.1954 (0.2780)  loss_box_reg: 0.0933 (0.1261)  loss_mask: 0.2562 (0.2998)  loss_objectness: 0.0245 (0.0544)  loss_rpn_box_reg: 0.0405 (0.0612)  time: 0.6257 (0.6817)  data: 0.0004 (0.0166)  lr: 0.016000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634390991374, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8195113643274016, "loss_classifier": 0.27800233378778305, "loss_box_reg": 0.1261297075883533, "loss_mask": 0.29983801499161183, "loss_objectness": 0.05437343496401623, "loss_rpn_box_reg": 0.06116787345737827, "time": 0.6816949238825818, "data": 0.01660575584489472, "throughput": 187.767277583612}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 9800}}
:::MLLOG {"namespace": "", "time_ms": 1634390991375, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 187.767277583612, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:32:33  iter: 9850  loss: 0.6473 (0.8181)  loss_classifier: 0.2164 (0.2773)  loss_box_reg: 0.1053 (0.1256)  loss_mask: 0.2558 (0.3000)  loss_objectness: 0.0266 (0.0542)  loss_rpn_box_reg: 0.0391 (0.0610)  time: 0.6311 (0.6814)  data: 0.0004 (0.0163)  lr: 0.016000  max mem: 14714
INFO:maskrcnn_benchmark.trainer:eta: 1:32:33  iter: 9850  loss: 0.6425 (0.8168)  loss_classifier: 0.2004 (0.2766)  loss_box_reg: 0.1090 (0.1257)  loss_mask: 0.2538 (0.2997)  loss_objectness: 0.0271 (0.0540)  loss_rpn_box_reg: 0.0464 (0.0608)  time: 0.6311 (0.6814)  data: 0.0004 (0.0163)  lr: 0.016000  max mem: 14843
2021-10-16 13:30:22,767 maskrcnn_benchmark.trainer INFO: eta: 1:32:33  iter: 9850  loss: 0.5640 (0.8186)  loss_classifier: 0.1788 (0.2776)  loss_box_reg: 0.0957 (0.1260)  loss_mask: 0.2531 (0.2996)  loss_objectness: 0.0223 (0.0542)  loss_rpn_box_reg: 0.0387 (0.0611)  time: 0.6311 (0.6814)  data: 0.0003 (0.0165)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:32:33  iter: 9850  loss: 0.5640 (0.8186)  loss_classifier: 0.1788 (0.2776)  loss_box_reg: 0.0957 (0.1260)  loss_mask: 0.2531 (0.2996)  loss_objectness: 0.0223 (0.0542)  loss_rpn_box_reg: 0.0387 (0.0611)  time: 0.6311 (0.6814)  data: 0.0003 (0.0165)  lr: 0.016000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634391022767, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8186411058509411, "loss_classifier": 0.2776304680782224, "loss_box_reg": 0.1260306862828459, "loss_mask": 0.2996268326982024, "loss_objectness": 0.05424816948262417, "loss_rpn_box_reg": 0.061104949750762604, "time": 0.6814216054635605, "data": 0.01652401669981516, "throughput": 187.8425910973627}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 9850}}
:::MLLOG {"namespace": "", "time_ms": 1634391022767, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 187.8425910973627, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:32:33  iter: 9850  loss: 0.6250 (0.8155)  loss_classifier: 0.1835 (0.2763)  loss_box_reg: 0.0956 (0.1254)  loss_mask: 0.2542 (0.2992)  loss_objectness: 0.0308 (0.0539)  loss_rpn_box_reg: 0.0478 (0.0607)  time: 0.6312 (0.6814)  data: 0.0004 (0.0164)  lr: 0.016000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:32:33  iter: 9850  loss: 0.5993 (0.8148)  loss_classifier: 0.1859 (0.2760)  loss_box_reg: 0.0958 (0.1250)  loss_mask: 0.2521 (0.2992)  loss_objectness: 0.0228 (0.0540)  loss_rpn_box_reg: 0.0466 (0.0606)  time: 0.6311 (0.6814)  data: 0.0004 (0.0164)  lr: 0.016000  max mem: 14790
INFO:maskrcnn_benchmark.trainer:eta: 1:32:33  iter: 9850  loss: 0.6415 (0.8149)  loss_classifier: 0.1887 (0.2761)  loss_box_reg: 0.1059 (0.1250)  loss_mask: 0.2509 (0.2996)  loss_objectness: 0.0260 (0.0537)  loss_rpn_box_reg: 0.0389 (0.0605)  time: 0.6301 (0.6814)  data: 0.0004 (0.0163)  lr: 0.016000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:32:33  iter: 9850  loss: 0.6345 (0.8171)  loss_classifier: 0.1837 (0.2769)  loss_box_reg: 0.1016 (0.1256)  loss_mask: 0.2669 (0.2994)  loss_objectness: 0.0281 (0.0543)  loss_rpn_box_reg: 0.0516 (0.0608)  time: 0.6302 (0.6814)  data: 0.0004 (0.0163)  lr: 0.016000  max mem: 14796
INFO:maskrcnn_benchmark.trainer:eta: 1:32:33  iter: 9850  loss: 0.6169 (0.8166)  loss_classifier: 0.2086 (0.2769)  loss_box_reg: 0.1034 (0.1258)  loss_mask: 0.2590 (0.2993)  loss_objectness: 0.0257 (0.0539)  loss_rpn_box_reg: 0.0328 (0.0607)  time: 0.6299 (0.6814)  data: 0.0003 (0.0163)  lr: 0.016000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:31:57  iter: 9900  loss: 0.6190 (0.8139)  loss_classifier: 0.2030 (0.2757)  loss_box_reg: 0.0994 (0.1249)  loss_mask: 0.2551 (0.2994)  loss_objectness: 0.0233 (0.0535)  loss_rpn_box_reg: 0.0433 (0.0604)  time: 0.6288 (0.6812)  data: 0.0003 (0.0163)  lr: 0.016000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:31:57  iter: 9900  loss: 0.6619 (0.8157)  loss_classifier: 0.2027 (0.2766)  loss_box_reg: 0.1054 (0.1257)  loss_mask: 0.2565 (0.2991)  loss_objectness: 0.0293 (0.0538)  loss_rpn_box_reg: 0.0449 (0.0606)  time: 0.6286 (0.6811)  data: 0.0004 (0.0162)  lr: 0.016000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:31:57  iter: 9900  loss: 0.6296 (0.8161)  loss_classifier: 0.1952 (0.2765)  loss_box_reg: 0.1048 (0.1255)  loss_mask: 0.2537 (0.2992)  loss_objectness: 0.0278 (0.0542)  loss_rpn_box_reg: 0.0479 (0.0607)  time: 0.6285 (0.6811)  data: 0.0004 (0.0162)  lr: 0.016000  max mem: 14796
INFO:maskrcnn_benchmark.trainer:eta: 1:31:57  iter: 9900  loss: 0.6097 (0.8146)  loss_classifier: 0.1924 (0.2759)  loss_box_reg: 0.1003 (0.1253)  loss_mask: 0.2562 (0.2990)  loss_objectness: 0.0254 (0.0538)  loss_rpn_box_reg: 0.0425 (0.0606)  time: 0.6282 (0.6812)  data: 0.0004 (0.0163)  lr: 0.016000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:31:57  iter: 9900  loss: 0.5796 (0.8138)  loss_classifier: 0.1804 (0.2756)  loss_box_reg: 0.0895 (0.1249)  loss_mask: 0.2469 (0.2990)  loss_objectness: 0.0248 (0.0538)  loss_rpn_box_reg: 0.0412 (0.0605)  time: 0.6277 (0.6812)  data: 0.0003 (0.0163)  lr: 0.016000  max mem: 14790
INFO:maskrcnn_benchmark.trainer:eta: 1:31:57  iter: 9900  loss: 0.6591 (0.8158)  loss_classifier: 0.2071 (0.2762)  loss_box_reg: 0.1078 (0.1256)  loss_mask: 0.2631 (0.2994)  loss_objectness: 0.0309 (0.0539)  loss_rpn_box_reg: 0.0400 (0.0607)  time: 0.6260 (0.6812)  data: 0.0004 (0.0163)  lr: 0.016000  max mem: 14843
2021-10-16 13:30:54,168 maskrcnn_benchmark.trainer INFO: eta: 1:31:57  iter: 9900  loss: 0.6673 (0.8178)  loss_classifier: 0.2126 (0.2773)  loss_box_reg: 0.1074 (0.1259)  loss_mask: 0.2597 (0.2994)  loss_objectness: 0.0309 (0.0541)  loss_rpn_box_reg: 0.0499 (0.0610)  time: 0.6260 (0.6812)  data: 0.0004 (0.0164)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:31:57  iter: 9900  loss: 0.6673 (0.8178)  loss_classifier: 0.2126 (0.2773)  loss_box_reg: 0.1074 (0.1259)  loss_mask: 0.2597 (0.2994)  loss_objectness: 0.0309 (0.0541)  loss_rpn_box_reg: 0.0499 (0.0610)  time: 0.6260 (0.6812)  data: 0.0004 (0.0164)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:31:57  iter: 9900  loss: 0.6608 (0.8173)  loss_classifier: 0.2034 (0.2769)  loss_box_reg: 0.1081 (0.1255)  loss_mask: 0.2560 (0.2998)  loss_objectness: 0.0324 (0.0541)  loss_rpn_box_reg: 0.0469 (0.0610)  time: 0.6258 (0.6812)  data: 0.0004 (0.0162)  lr: 0.016000  max mem: 14714
:::MLLOG {"namespace": "", "time_ms": 1634391054169, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8177591914661003, "loss_classifier": 0.2772654586736903, "loss_box_reg": 0.12592670156947347, "loss_mask": 0.29940720011790595, "loss_objectness": 0.054119559150527824, "loss_rpn_box_reg": 0.06104027241317913, "time": 0.681151965362857, "data": 0.01644336471653948, "throughput": 187.91695026793766}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 9900}}
:::MLLOG {"namespace": "", "time_ms": 1634391054169, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 187.91695026793766, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:31:21  iter: 9950  loss: 0.5670 (0.8135)  loss_classifier: 0.1921 (0.2755)  loss_box_reg: 0.0942 (0.1252)  loss_mask: 0.2409 (0.2987)  loss_objectness: 0.0252 (0.0536)  loss_rpn_box_reg: 0.0330 (0.0605)  time: 0.6248 (0.6809)  data: 0.0004 (0.0162)  lr: 0.016000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:31:21  iter: 9950  loss: 0.5896 (0.8129)  loss_classifier: 0.1924 (0.2753)  loss_box_reg: 0.0960 (0.1248)  loss_mask: 0.2532 (0.2991)  loss_objectness: 0.0243 (0.0534)  loss_rpn_box_reg: 0.0380 (0.0603)  time: 0.6251 (0.6809)  data: 0.0003 (0.0162)  lr: 0.016000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:31:21  iter: 9950  loss: 0.5923 (0.8152)  loss_classifier: 0.1915 (0.2761)  loss_box_reg: 0.0995 (0.1254)  loss_mask: 0.2405 (0.2990)  loss_objectness: 0.0275 (0.0541)  loss_rpn_box_reg: 0.0426 (0.0606)  time: 0.6249 (0.6809)  data: 0.0003 (0.0162)  lr: 0.016000  max mem: 14796
INFO:maskrcnn_benchmark.trainer:eta: 1:31:21  iter: 9950  loss: 0.6367 (0.8148)  loss_classifier: 0.1905 (0.2762)  loss_box_reg: 0.1031 (0.1256)  loss_mask: 0.2552 (0.2989)  loss_objectness: 0.0317 (0.0536)  loss_rpn_box_reg: 0.0478 (0.0605)  time: 0.6250 (0.6809)  data: 0.0004 (0.0162)  lr: 0.016000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:31:21  iter: 9950  loss: 0.5716 (0.8128)  loss_classifier: 0.1745 (0.2752)  loss_box_reg: 0.0914 (0.1248)  loss_mask: 0.2464 (0.2987)  loss_objectness: 0.0240 (0.0537)  loss_rpn_box_reg: 0.0446 (0.0604)  time: 0.6243 (0.6809)  data: 0.0003 (0.0162)  lr: 0.016000  max mem: 14790
INFO:maskrcnn_benchmark.trainer:eta: 1:31:21  iter: 9950  loss: 0.5929 (0.8147)  loss_classifier: 0.1919 (0.2757)  loss_box_reg: 0.0962 (0.1254)  loss_mask: 0.2526 (0.2992)  loss_objectness: 0.0304 (0.0538)  loss_rpn_box_reg: 0.0382 (0.0606)  time: 0.6239 (0.6809)  data: 0.0003 (0.0162)  lr: 0.016000  max mem: 14843
2021-10-16 13:31:25,499 maskrcnn_benchmark.trainer INFO: eta: 1:31:21  iter: 9950  loss: 0.6066 (0.8168)  loss_classifier: 0.1893 (0.2769)  loss_box_reg: 0.1018 (0.1258)  loss_mask: 0.2539 (0.2992)  loss_objectness: 0.0243 (0.0540)  loss_rpn_box_reg: 0.0340 (0.0610)  time: 0.6239 (0.6809)  data: 0.0004 (0.0164)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:31:21  iter: 9950  loss: 0.6304 (0.8164)  loss_classifier: 0.1940 (0.2765)  loss_box_reg: 0.0963 (0.1254)  loss_mask: 0.2543 (0.2996)  loss_objectness: 0.0272 (0.0540)  loss_rpn_box_reg: 0.0455 (0.0609)  time: 0.6240 (0.6809)  data: 0.0004 (0.0162)  lr: 0.016000  max mem: 14714
INFO:maskrcnn_benchmark.trainer:eta: 1:31:21  iter: 9950  loss: 0.6066 (0.8168)  loss_classifier: 0.1893 (0.2769)  loss_box_reg: 0.1018 (0.1258)  loss_mask: 0.2539 (0.2992)  loss_objectness: 0.0243 (0.0540)  loss_rpn_box_reg: 0.0340 (0.0610)  time: 0.6239 (0.6809)  data: 0.0004 (0.0164)  lr: 0.016000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634391085499, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8167650756494483, "loss_classifier": 0.27685188411543116, "loss_box_reg": 0.12579147760290652, "loss_mask": 0.29917951573079554, "loss_objectness": 0.053981806760344975, "loss_rpn_box_reg": 0.060960391898775224, "time": 0.6808779157705642, "data": 0.01636292567804231, "throughput": 187.99258580026}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 9950}}
:::MLLOG {"namespace": "", "time_ms": 1634391085500, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 187.99258580026, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:30:44  iter: 10000  loss: 0.6156 (0.8118)  loss_classifier: 0.1807 (0.2748)  loss_box_reg: 0.0951 (0.1246)  loss_mask: 0.2530 (0.2985)  loss_objectness: 0.0260 (0.0536)  loss_rpn_box_reg: 0.0381 (0.0603)  time: 0.6267 (0.6806)  data: 0.0004 (0.0161)  lr: 0.016000  max mem: 14790
INFO:maskrcnn_benchmark.trainer:eta: 1:30:44  iter: 10000  loss: 0.5669 (0.8125)  loss_classifier: 0.1812 (0.2751)  loss_box_reg: 0.0890 (0.1250)  loss_mask: 0.2422 (0.2985)  loss_objectness: 0.0218 (0.0535)  loss_rpn_box_reg: 0.0317 (0.0604)  time: 0.6266 (0.6806)  data: 0.0003 (0.0161)  lr: 0.016000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:30:44  iter: 10000  loss: 0.5714 (0.8138)  loss_classifier: 0.1879 (0.2753)  loss_box_reg: 0.0891 (0.1253)  loss_mask: 0.2499 (0.2990)  loss_objectness: 0.0232 (0.0536)  loss_rpn_box_reg: 0.0373 (0.0606)  time: 0.6249 (0.6806)  data: 0.0003 (0.0161)  lr: 0.016000  max mem: 14843
2021-10-16 13:31:56,783 maskrcnn_benchmark.trainer INFO: eta: 1:30:44  iter: 10000  loss: 0.6351 (0.8158)  loss_classifier: 0.1942 (0.2765)  loss_box_reg: 0.0995 (0.1257)  loss_mask: 0.2486 (0.2989)  loss_objectness: 0.0270 (0.0539)  loss_rpn_box_reg: 0.0406 (0.0609)  time: 0.6247 (0.6806)  data: 0.0004 (0.0163)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:30:44  iter: 10000  loss: 0.6351 (0.8158)  loss_classifier: 0.1942 (0.2765)  loss_box_reg: 0.0995 (0.1257)  loss_mask: 0.2486 (0.2989)  loss_objectness: 0.0270 (0.0539)  loss_rpn_box_reg: 0.0406 (0.0609)  time: 0.6247 (0.6806)  data: 0.0004 (0.0163)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:30:44  iter: 10000  loss: 0.6358 (0.8118)  loss_classifier: 0.1904 (0.2749)  loss_box_reg: 0.1014 (0.1246)  loss_mask: 0.2489 (0.2989)  loss_objectness: 0.0250 (0.0533)  loss_rpn_box_reg: 0.0430 (0.0602)  time: 0.6264 (0.6806)  data: 0.0004 (0.0161)  lr: 0.016000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:30:44  iter: 10000  loss: 0.5887 (0.8154)  loss_classifier: 0.1844 (0.2761)  loss_box_reg: 0.0900 (0.1253)  loss_mask: 0.2466 (0.2994)  loss_objectness: 0.0248 (0.0538)  loss_rpn_box_reg: 0.0391 (0.0608)  time: 0.6248 (0.6806)  data: 0.0003 (0.0161)  lr: 0.016000  max mem: 14714
INFO:maskrcnn_benchmark.trainer:eta: 1:30:44  iter: 10000  loss: 0.6161 (0.8144)  loss_classifier: 0.1903 (0.2758)  loss_box_reg: 0.0955 (0.1253)  loss_mask: 0.2569 (0.2987)  loss_objectness: 0.0291 (0.0539)  loss_rpn_box_reg: 0.0506 (0.0606)  time: 0.6265 (0.6806)  data: 0.0004 (0.0161)  lr: 0.016000  max mem: 14796
INFO:maskrcnn_benchmark.trainer:eta: 1:30:44  iter: 10000  loss: 0.6031 (0.8139)  loss_classifier: 0.1904 (0.2758)  loss_box_reg: 0.0961 (0.1255)  loss_mask: 0.2454 (0.2986)  loss_objectness: 0.0250 (0.0535)  loss_rpn_box_reg: 0.0408 (0.0605)  time: 0.6265 (0.6806)  data: 0.0004 (0.0161)  lr: 0.016000  max mem: 14803
:::MLLOG {"namespace": "", "time_ms": 1634391116783, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8158388131916523, "loss_classifier": 0.27649603635147213, "loss_box_reg": 0.12567885244598145, "loss_mask": 0.29893950745016334, "loss_objectness": 0.05386056462656707, "loss_rpn_box_reg": 0.060863852754794064, "time": 0.6806018459558487, "data": 0.01628341109752655, "throughput": 188.06884048372604}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 10000}}
:::MLLOG {"namespace": "", "time_ms": 1634391116783, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 188.06884048372604, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:30:08  iter: 10050  loss: 0.6400 (0.8109)  loss_classifier: 0.1958 (0.2744)  loss_box_reg: 0.1052 (0.1245)  loss_mask: 0.2497 (0.2983)  loss_objectness: 0.0292 (0.0534)  loss_rpn_box_reg: 0.0445 (0.0603)  time: 0.6259 (0.6803)  data: 0.0004 (0.0160)  lr: 0.016000  max mem: 14790
INFO:maskrcnn_benchmark.trainer:eta: 1:30:08  iter: 10050  loss: 0.6238 (0.8116)  loss_classifier: 0.2020 (0.2747)  loss_box_reg: 0.1037 (0.1249)  loss_mask: 0.2523 (0.2982)  loss_objectness: 0.0266 (0.0534)  loss_rpn_box_reg: 0.0402 (0.0603)  time: 0.6260 (0.6803)  data: 0.0004 (0.0160)  lr: 0.016000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:30:08  iter: 10050  loss: 0.5675 (0.8128)  loss_classifier: 0.1707 (0.2749)  loss_box_reg: 0.0879 (0.1252)  loss_mask: 0.2466 (0.2987)  loss_objectness: 0.0243 (0.0535)  loss_rpn_box_reg: 0.0342 (0.0605)  time: 0.6257 (0.6803)  data: 0.0003 (0.0160)  lr: 0.016000  max mem: 14843
INFO:maskrcnn_benchmark.trainer:eta: 1:30:08  iter: 10050  loss: 0.5883 (0.8144)  loss_classifier: 0.1760 (0.2757)  loss_box_reg: 0.0932 (0.1251)  loss_mask: 0.2536 (0.2991)  loss_objectness: 0.0232 (0.0537)  loss_rpn_box_reg: 0.0392 (0.0608)  time: 0.6255 (0.6803)  data: 0.0004 (0.0160)  lr: 0.016000  max mem: 14714
INFO:maskrcnn_benchmark.trainer:eta: 1:30:08  iter: 10050  loss: 0.6397 (0.8110)  loss_classifier: 0.1990 (0.2745)  loss_box_reg: 0.1083 (0.1245)  loss_mask: 0.2573 (0.2987)  loss_objectness: 0.0319 (0.0532)  loss_rpn_box_reg: 0.0375 (0.0601)  time: 0.6257 (0.6803)  data: 0.0004 (0.0160)  lr: 0.016000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:30:08  iter: 10050  loss: 0.6345 (0.8135)  loss_classifier: 0.1904 (0.2754)  loss_box_reg: 0.0996 (0.1252)  loss_mask: 0.2575 (0.2985)  loss_objectness: 0.0257 (0.0538)  loss_rpn_box_reg: 0.0472 (0.0605)  time: 0.6256 (0.6803)  data: 0.0003 (0.0160)  lr: 0.016000  max mem: 14796
2021-10-16 13:32:28,171 maskrcnn_benchmark.trainer INFO: eta: 1:30:08  iter: 10050  loss: 0.6456 (0.8150)  loss_classifier: 0.2109 (0.2762)  loss_box_reg: 0.1077 (0.1256)  loss_mask: 0.2578 (0.2987)  loss_objectness: 0.0269 (0.0537)  loss_rpn_box_reg: 0.0353 (0.0608)  time: 0.6255 (0.6803)  data: 0.0003 (0.0162)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:30:08  iter: 10050  loss: 0.6509 (0.8129)  loss_classifier: 0.2037 (0.2754)  loss_box_reg: 0.1045 (0.1253)  loss_mask: 0.2501 (0.2984)  loss_objectness: 0.0255 (0.0534)  loss_rpn_box_reg: 0.0405 (0.0604)  time: 0.6251 (0.6803)  data: 0.0004 (0.0160)  lr: 0.016000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:30:08  iter: 10050  loss: 0.6456 (0.8150)  loss_classifier: 0.2109 (0.2762)  loss_box_reg: 0.1077 (0.1256)  loss_mask: 0.2578 (0.2987)  loss_objectness: 0.0269 (0.0537)  loss_rpn_box_reg: 0.0353 (0.0608)  time: 0.6255 (0.6803)  data: 0.0003 (0.0162)  lr: 0.016000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634391148171, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8149885806218902, "loss_classifier": 0.2761512708478603, "loss_box_reg": 0.12557300362196192, "loss_mask": 0.29873107328195475, "loss_objectness": 0.053747320901880516, "loss_rpn_box_reg": 0.06078591244007966, "time": 0.6803390129051399, "data": 0.01620450385174348, "throughput": 188.14149647750264}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 10050}}
:::MLLOG {"namespace": "", "time_ms": 1634391148172, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 188.14149647750264, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
:::MLLOG {"namespace": "", "time_ms": 1634391171416, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 111, "epoch_num": 11}}
:::MLLOG {"namespace": "", "time_ms": 1634391171416, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 112, "first_epoch_num": 11}}
:::MLLOG {"namespace": "", "time_ms": 1634391171417, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 113, "epoch_num": 11}}
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
2021-10-16 13:32:51,775 maskrcnn_benchmark.data.build WARNING: When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
Done (t=0.56s)
creating index...
Done (t=0.56s)
creating index...
index created!
shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]Done (t=0.56s)
creating index...
Done (t=0.56s)
creating index...
index created!
shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]Done (t=0.56s)
creating index...
index created!
index created!
shapes=None
passthrough=True
shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]  0% 0/40 [00:00<?, ?it/s]Done (t=0.56s)
creating index...
index created!
Done (t=0.56s)
creating index...
shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]index created!
shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]Done (t=0.55s)
creating index...
index created!
shapes=None
passthrough=True
creating index...
GT annotations already exist!
2021-10-16 13:32:52,364 maskrcnn_benchmark.inference INFO: Start evaluation on coco_2017_val dataset(5000 images).
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]index created!
shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]  2% 1/40 [00:00<00:11,  3.53it/s]  2% 1/40 [00:00<00:11,  3.48it/s]  2% 1/40 [00:00<00:11,  3.52it/s]  2% 1/40 [00:00<00:11,  3.49it/s]  2% 1/40 [00:00<00:11,  3.34it/s]  2% 1/40 [00:00<00:11,  3.37it/s]  2% 1/40 [00:00<00:11,  3.37it/s]  2% 1/40 [00:00<00:12,  3.16it/s]  5% 2/40 [00:00<00:10,  3.52it/s]  5% 2/40 [00:00<00:10,  3.59it/s]  5% 2/40 [00:00<00:10,  3.46it/s]  5% 2/40 [00:00<00:10,  3.49it/s]  5% 2/40 [00:00<00:10,  3.49it/s]  5% 2/40 [00:00<00:11,  3.41it/s]  5% 2/40 [00:00<00:11,  3.31it/s]  5% 2/40 [00:00<00:11,  3.42it/s]  8% 3/40 [00:00<00:10,  3.57it/s]  8% 3/40 [00:00<00:10,  3.62it/s]  8% 3/40 [00:00<00:10,  3.46it/s]  8% 3/40 [00:00<00:10,  3.51it/s]  8% 3/40 [00:00<00:10,  3.48it/s]  8% 3/40 [00:00<00:10,  3.45it/s]  8% 3/40 [00:00<00:10,  3.39it/s]  8% 3/40 [00:00<00:10,  3.45it/s] 10% 4/40 [00:01<00:10,  3.54it/s] 10% 4/40 [00:01<00:10,  3.57it/s] 10% 4/40 [00:01<00:10,  3.52it/s] 10% 4/40 [00:01<00:10,  3.46it/s] 10% 4/40 [00:01<00:10,  3.46it/s] 10% 4/40 [00:01<00:10,  3.48it/s] 10% 4/40 [00:01<00:10,  3.46it/s] 10% 4/40 [00:01<00:10,  3.44it/s] 12% 5/40 [00:01<00:09,  3.54it/s] 12% 5/40 [00:01<00:09,  3.55it/s] 12% 5/40 [00:01<00:09,  3.51it/s] 12% 5/40 [00:01<00:09,  3.50it/s] 12% 5/40 [00:01<00:09,  3.53it/s] 12% 5/40 [00:01<00:09,  3.51it/s] 12% 5/40 [00:01<00:10,  3.49it/s] 12% 5/40 [00:01<00:09,  3.51it/s] 15% 6/40 [00:01<00:09,  3.55it/s] 15% 6/40 [00:01<00:09,  3.55it/s] 15% 6/40 [00:01<00:09,  3.49it/s] 15% 6/40 [00:01<00:09,  3.49it/s] 15% 6/40 [00:01<00:09,  3.55it/s] 15% 6/40 [00:01<00:09,  3.54it/s] 15% 6/40 [00:01<00:09,  3.57it/s] 15% 6/40 [00:01<00:09,  3.52it/s] 18% 7/40 [00:01<00:09,  3.52it/s] 18% 7/40 [00:01<00:09,  3.57it/s] 18% 7/40 [00:02<00:09,  3.52it/s] 18% 7/40 [00:01<00:09,  3.50it/s] 18% 7/40 [00:01<00:09,  3.54it/s] 18% 7/40 [00:01<00:09,  3.55it/s] 18% 7/40 [00:01<00:09,  3.55it/s] 18% 7/40 [00:01<00:09,  3.57it/s] 20% 8/40 [00:02<00:09,  3.52it/s] 20% 8/40 [00:02<00:09,  3.51it/s] 20% 8/40 [00:02<00:08,  3.62it/s] 20% 8/40 [00:02<00:09,  3.54it/s] 20% 8/40 [00:02<00:09,  3.50it/s] 20% 8/40 [00:02<00:09,  3.46it/s] 20% 8/40 [00:02<00:09,  3.55it/s] 20% 8/40 [00:02<00:08,  3.56it/s] 22% 9/40 [00:02<00:08,  3.51it/s] 22% 9/40 [00:02<00:08,  3.52it/s] 22% 9/40 [00:02<00:08,  3.58it/s] 22% 9/40 [00:02<00:08,  3.53it/s] 22% 9/40 [00:02<00:08,  3.54it/s] 22% 9/40 [00:02<00:08,  3.48it/s] 22% 9/40 [00:02<00:08,  3.55it/s] 22% 9/40 [00:02<00:08,  3.61it/s] 25% 10/40 [00:02<00:08,  3.49it/s] 25% 10/40 [00:02<00:08,  3.54it/s] 25% 10/40 [00:02<00:08,  3.61it/s] 25% 10/40 [00:02<00:08,  3.55it/s] 25% 10/40 [00:02<00:08,  3.62it/s] 25% 10/40 [00:02<00:08,  3.53it/s] 25% 10/40 [00:02<00:08,  3.50it/s] 25% 10/40 [00:02<00:08,  3.58it/s] 28% 11/40 [00:03<00:08,  3.50it/s] 28% 11/40 [00:03<00:08,  3.56it/s] 28% 11/40 [00:03<00:08,  3.59it/s] 28% 11/40 [00:03<00:08,  3.58it/s] 28% 11/40 [00:03<00:08,  3.61it/s] 28% 11/40 [00:03<00:08,  3.52it/s] 28% 11/40 [00:03<00:08,  3.49it/s] 28% 11/40 [00:03<00:08,  3.57it/s] 30% 12/40 [00:03<00:07,  3.54it/s] 30% 12/40 [00:03<00:07,  3.52it/s] 30% 12/40 [00:03<00:07,  3.62it/s] 30% 12/40 [00:03<00:07,  3.62it/s] 30% 12/40 [00:03<00:07,  3.59it/s] 30% 12/40 [00:03<00:07,  3.55it/s] 30% 12/40 [00:03<00:08,  3.49it/s] 30% 12/40 [00:03<00:07,  3.60it/s] 32% 13/40 [00:03<00:07,  3.68it/s] 32% 13/40 [00:03<00:07,  3.58it/s] 32% 13/40 [00:03<00:07,  3.51it/s] 32% 13/40 [00:03<00:07,  3.56it/s] 32% 13/40 [00:03<00:07,  3.56it/s] 32% 13/40 [00:03<00:07,  3.54it/s] 32% 13/40 [00:03<00:07,  3.52it/s] 32% 13/40 [00:03<00:07,  3.58it/s] 35% 14/40 [00:03<00:07,  3.59it/s] 35% 14/40 [00:03<00:07,  3.62it/s] 35% 14/40 [00:03<00:07,  3.52it/s] 35% 14/40 [00:03<00:07,  3.62it/s] 35% 14/40 [00:03<00:07,  3.52it/s] 35% 14/40 [00:03<00:07,  3.59it/s] 35% 14/40 [00:03<00:07,  3.59it/s] 35% 14/40 [00:03<00:07,  3.54it/s] 38% 15/40 [00:04<00:06,  3.63it/s] 38% 15/40 [00:04<00:07,  3.56it/s] 38% 15/40 [00:04<00:06,  3.59it/s] 38% 15/40 [00:04<00:06,  3.68it/s] 38% 15/40 [00:04<00:07,  3.53it/s] 38% 15/40 [00:04<00:07,  3.57it/s] 38% 15/40 [00:04<00:07,  3.55it/s] 38% 15/40 [00:04<00:07,  3.50it/s] 40% 16/40 [00:04<00:06,  3.61it/s] 40% 16/40 [00:04<00:06,  3.59it/s] 40% 16/40 [00:04<00:06,  3.60it/s] 40% 16/40 [00:04<00:06,  3.62it/s] 40% 16/40 [00:04<00:06,  3.51it/s] 40% 16/40 [00:04<00:06,  3.53it/s] 40% 16/40 [00:04<00:06,  3.51it/s] 40% 16/40 [00:04<00:06,  3.52it/s] 42% 17/40 [00:04<00:06,  3.67it/s] 42% 17/40 [00:04<00:06,  3.63it/s] 42% 17/40 [00:04<00:06,  3.69it/s] 42% 17/40 [00:04<00:06,  3.57it/s] 42% 17/40 [00:04<00:06,  3.61it/s] 42% 17/40 [00:04<00:06,  3.50it/s] 42% 17/40 [00:04<00:06,  3.49it/s] 42% 17/40 [00:04<00:06,  3.56it/s] 45% 18/40 [00:05<00:06,  3.63it/s] 45% 18/40 [00:04<00:05,  3.71it/s] 45% 18/40 [00:05<00:06,  3.58it/s] 45% 18/40 [00:05<00:06,  3.56it/s] 45% 18/40 [00:05<00:06,  3.58it/s] 45% 18/40 [00:05<00:06,  3.50it/s] 45% 18/40 [00:05<00:06,  3.50it/s] 45% 18/40 [00:05<00:06,  3.54it/s] 48% 19/40 [00:05<00:05,  3.65it/s] 48% 19/40 [00:05<00:05,  3.68it/s] 48% 19/40 [00:05<00:05,  3.54it/s] 48% 19/40 [00:05<00:05,  3.55it/s] 48% 19/40 [00:05<00:05,  3.58it/s] 48% 19/40 [00:05<00:05,  3.53it/s] 48% 19/40 [00:05<00:05,  3.52it/s] 48% 19/40 [00:05<00:05,  3.56it/s] 50% 20/40 [00:05<00:05,  3.63it/s] 50% 20/40 [00:05<00:05,  3.65it/s] 50% 20/40 [00:05<00:05,  3.51it/s] 50% 20/40 [00:05<00:05,  3.56it/s] 50% 20/40 [00:05<00:05,  3.55it/s] 50% 20/40 [00:05<00:05,  3.55it/s] 50% 20/40 [00:05<00:05,  3.55it/s] 50% 20/40 [00:05<00:05,  3.57it/s] 52% 21/40 [00:05<00:05,  3.65it/s] 52% 21/40 [00:05<00:05,  3.62it/s] 52% 21/40 [00:05<00:05,  3.53it/s] 52% 21/40 [00:05<00:05,  3.55it/s] 52% 21/40 [00:05<00:05,  3.58it/s] 52% 21/40 [00:05<00:05,  3.54it/s] 52% 21/40 [00:05<00:05,  3.61it/s] 52% 21/40 [00:05<00:05,  3.59it/s] 55% 22/40 [00:06<00:04,  3.61it/s] 55% 22/40 [00:06<00:04,  3.68it/s] 55% 22/40 [00:06<00:05,  3.58it/s] 55% 22/40 [00:06<00:05,  3.50it/s] 55% 22/40 [00:06<00:05,  3.53it/s] 55% 22/40 [00:06<00:05,  3.51it/s] 55% 22/40 [00:06<00:05,  3.56it/s] 55% 22/40 [00:06<00:04,  3.64it/s] 57% 23/40 [00:06<00:04,  3.64it/s] 57% 23/40 [00:06<00:04,  3.68it/s] 57% 23/40 [00:06<00:04,  3.61it/s] 57% 23/40 [00:06<00:04,  3.49it/s] 57% 23/40 [00:06<00:04,  3.54it/s] 57% 23/40 [00:06<00:04,  3.51it/s] 57% 23/40 [00:06<00:04,  3.53it/s] 57% 23/40 [00:06<00:04,  3.60it/s] 60% 24/40 [00:06<00:04,  3.67it/s] 60% 24/40 [00:06<00:04,  3.65it/s] 60% 24/40 [00:06<00:04,  3.61it/s] 60% 24/40 [00:06<00:04,  3.50it/s] 60% 24/40 [00:06<00:04,  3.54it/s] 60% 24/40 [00:06<00:04,  3.55it/s] 60% 24/40 [00:06<00:04,  3.62it/s] 60% 24/40 [00:06<00:04,  3.56it/s] 62% 25/40 [00:06<00:04,  3.67it/s] 62% 25/40 [00:06<00:04,  3.61it/s] 62% 25/40 [00:06<00:04,  3.65it/s] 62% 25/40 [00:07<00:04,  3.51it/s] 62% 25/40 [00:07<00:04,  3.62it/s] 62% 25/40 [00:07<00:04,  3.52it/s] 62% 25/40 [00:07<00:04,  3.51it/s] 62% 25/40 [00:07<00:04,  3.52it/s] 65% 26/40 [00:07<00:03,  3.62it/s] 65% 26/40 [00:07<00:03,  3.58it/s] 65% 26/40 [00:07<00:03,  3.66it/s] 65% 26/40 [00:07<00:04,  3.49it/s] 65% 26/40 [00:07<00:03,  3.56it/s] 65% 26/40 [00:07<00:03,  3.59it/s] 65% 26/40 [00:07<00:03,  3.52it/s] 65% 26/40 [00:07<00:03,  3.58it/s] 68% 27/40 [00:07<00:03,  3.64it/s] 68% 27/40 [00:07<00:03,  3.65it/s] 68% 27/40 [00:07<00:03,  3.63it/s] 68% 27/40 [00:07<00:03,  3.53it/s] 68% 27/40 [00:07<00:03,  3.58it/s] 68% 27/40 [00:07<00:03,  3.55it/s] 68% 27/40 [00:07<00:03,  3.56it/s] 68% 27/40 [00:07<00:03,  3.55it/s] 70% 28/40 [00:07<00:03,  3.70it/s] 70% 28/40 [00:07<00:03,  3.64it/s] 70% 28/40 [00:07<00:03,  3.61it/s] 70% 28/40 [00:07<00:03,  3.51it/s] 70% 28/40 [00:07<00:03,  3.56it/s] 70% 28/40 [00:07<00:03,  3.60it/s] 70% 28/40 [00:07<00:03,  3.55it/s] 70% 28/40 [00:07<00:03,  3.52it/s] 72% 29/40 [00:08<00:03,  3.64it/s] 72% 29/40 [00:08<00:03,  3.62it/s] 72% 29/40 [00:08<00:03,  3.62it/s] 72% 29/40 [00:08<00:03,  3.49it/s] 72% 29/40 [00:08<00:03,  3.58it/s] 72% 29/40 [00:08<00:03,  3.57it/s] 72% 29/40 [00:08<00:03,  3.55it/s] 72% 29/40 [00:08<00:03,  3.58it/s] 75% 30/40 [00:08<00:02,  3.57it/s] 75% 30/40 [00:08<00:02,  3.68it/s] 75% 30/40 [00:08<00:02,  3.61it/s] 75% 30/40 [00:08<00:02,  3.57it/s] 75% 30/40 [00:08<00:02,  3.56it/s] 75% 30/40 [00:08<00:02,  3.58it/s] 75% 30/40 [00:08<00:02,  3.46it/s] 75% 30/40 [00:08<00:02,  3.54it/s] 78% 31/40 [00:08<00:02,  3.67it/s] 78% 31/40 [00:08<00:02,  3.54it/s] 78% 31/40 [00:08<00:02,  3.58it/s] 78% 31/40 [00:08<00:02,  3.58it/s] 78% 31/40 [00:08<00:02,  3.60it/s] 78% 31/40 [00:08<00:02,  3.51it/s] 78% 31/40 [00:08<00:02,  3.54it/s] 78% 31/40 [00:08<00:02,  3.53it/s] 80% 32/40 [00:08<00:02,  3.66it/s] 80% 32/40 [00:08<00:02,  3.59it/s] 80% 32/40 [00:08<00:02,  3.54it/s] 80% 32/40 [00:09<00:02,  3.53it/s] 80% 32/40 [00:09<00:02,  3.54it/s] 80% 32/40 [00:08<00:02,  3.55it/s] 80% 32/40 [00:09<00:02,  3.54it/s] 80% 32/40 [00:09<00:02,  3.54it/s] 82% 33/40 [00:09<00:01,  3.65it/s] 82% 33/40 [00:09<00:01,  3.62it/s] 82% 33/40 [00:09<00:01,  3.52it/s] 82% 33/40 [00:09<00:01,  3.59it/s] 82% 33/40 [00:09<00:01,  3.62it/s] 82% 33/40 [00:09<00:01,  3.50it/s] 82% 33/40 [00:09<00:01,  3.56it/s] 82% 33/40 [00:09<00:02,  3.49it/s] 85% 34/40 [00:09<00:01,  3.64it/s] 85% 34/40 [00:09<00:01,  3.58it/s] 85% 34/40 [00:09<00:01,  3.54it/s] 85% 34/40 [00:09<00:01,  3.65it/s] 85% 34/40 [00:09<00:01,  3.57it/s] 85% 34/40 [00:09<00:01,  3.59it/s] 85% 34/40 [00:09<00:01,  3.51it/s] 85% 34/40 [00:09<00:01,  3.53it/s] 88% 35/40 [00:09<00:01,  3.63it/s] 88% 35/40 [00:09<00:01,  3.60it/s] 88% 35/40 [00:09<00:01,  3.54it/s] 88% 35/40 [00:09<00:01,  3.56it/s] 88% 35/40 [00:09<00:01,  3.56it/s] 88% 35/40 [00:09<00:01,  3.58it/s] 88% 35/40 [00:09<00:01,  3.50it/s] 88% 35/40 [00:09<00:01,  3.48it/s] 90% 36/40 [00:09<00:01,  3.67it/s] 90% 36/40 [00:09<00:01,  3.59it/s] 90% 36/40 [00:10<00:01,  3.56it/s] 90% 36/40 [00:10<00:01,  3.51it/s] 90% 36/40 [00:10<00:01,  3.54it/s] 90% 36/40 [00:10<00:01,  3.58it/s] 90% 36/40 [00:10<00:01,  3.48it/s] 90% 36/40 [00:10<00:01,  3.49it/s] 92% 37/40 [00:10<00:00,  3.64it/s] 92% 37/40 [00:10<00:00,  3.59it/s] 92% 37/40 [00:10<00:00,  3.51it/s] 92% 37/40 [00:10<00:00,  3.58it/s] 92% 37/40 [00:10<00:00,  3.62it/s] 92% 37/40 [00:10<00:00,  3.49it/s] 92% 37/40 [00:10<00:00,  3.48it/s] 92% 37/40 [00:10<00:00,  3.52it/s] 95% 38/40 [00:10<00:00,  3.62it/s] 95% 38/40 [00:10<00:00,  3.62it/s] 98% 39/40 [00:10<00:00,  4.47it/s] 95% 38/40 [00:10<00:00,  3.52it/s] 95% 38/40 [00:10<00:00,  3.91it/s] 95% 38/40 [00:10<00:00,  3.66it/s] 95% 38/40 [00:10<00:00,  3.66it/s] 95% 38/40 [00:10<00:00,  3.53it/s] 98% 39/40 [00:10<00:00,  3.88it/s] 98% 39/40 [00:10<00:00,  4.35it/s] 95% 38/40 [00:10<00:00,  3.54it/s]100% 40/40 [00:10<00:00,  3.70it/s]
100% 40/40 [00:10<00:00,  4.73it/s]100% 40/40 [00:10<00:00,  3.71it/s]
 98% 39/40 [00:10<00:00,  4.29it/s] 98% 39/40 [00:10<00:00,  3.77it/s]100% 40/40 [00:10<00:00,  4.54it/s]100% 40/40 [00:10<00:00,  3.66it/s]
 98% 39/40 [00:10<00:00,  3.65it/s] 98% 39/40 [00:10<00:00,  3.59it/s]100% 40/40 [00:11<00:00,  4.79it/s]100% 40/40 [00:11<00:00,  3.64it/s]
100% 40/40 [00:10<00:00,  3.66it/s]
 98% 39/40 [00:11<00:00,  3.57it/s]100% 40/40 [00:11<00:00,  3.63it/s]
100% 40/40 [00:11<00:00,  4.46it/s]100% 40/40 [00:11<00:00,  3.60it/s]
100% 40/40 [00:11<00:00,  3.60it/s]
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.123504 (0.017797606658935546 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.060414 (0.01769666175842285 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.014891 (0.017623825454711913 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.048818 (0.01767810859680176 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.083589 (0.017733741760253906 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.098279 (0.017757247161865233 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.084010 (0.01773441619873047 s / img per device, on 8 devices)
2021-10-16 13:33:03,397 maskrcnn_benchmark.inference INFO: Total inference time: 0:00:11.032742 (0.017652387619018554 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.032742 (0.017652387619018554 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.026s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.026s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.026s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.026s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.026s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.026s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.026s
2021-10-16 13:33:03,582 maskrcnn_benchmark.timed_section INFO: EXPOSED: Launching evaluation preparation tasks took 0.031s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.031s
:::MLLOG {"namespace": "", "time_ms": 1634391183585, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 168, "first_epoch_num": 12, "epoch_count": 1}}
:::MLLOG {"namespace": "", "time_ms": 1634391183585, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 169, "epoch_num": 12}}

Grad overflow on iteration  10088
Using dynamic loss scale of  131072.0

Grad overflow on iteration  10088
Using dynamic loss scale of  131072.0

Grad overflow on iteration  10088
Using dynamic loss scale of  131072.0

Grad overflow on iteration  10088
Using dynamic loss scale of  131072.0

Grad overflow on iteration  10088
Using dynamic loss scale of  131072.0

Grad overflow on iteration  10088
Using dynamic loss scale of  131072.0

Grad overflow on iteration 
Grad overflow on iteration   1008810088

Using dynamic loss scale of Using dynamic loss scale of   131072.0131072.0

INFO:maskrcnn_benchmark.timed_section:Prepping took 6.830 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 6.841 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 6.975 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 7.019 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 7.131 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 7.143 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 7.317 seconds total
2021-10-16 13:33:12,266 maskrcnn_benchmark.timed_section INFO: Prepping took 7.529 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 7.529 seconds total
INFO:maskrcnn_benchmark.trainer:eta: 1:29:42  iter: 10100  loss: 0.6013 (0.8120)  loss_classifier: 0.1912 (0.2747)  loss_box_reg: 0.0965 (0.1250)  loss_mask: 0.2494 (0.2985)  loss_objectness: 0.0233 (0.0534)  loss_rpn_box_reg: 0.0406 (0.0604)  time: 0.6677 (0.6814)  data: 0.0004 (0.0171)  lr: 0.016000  max mem: 14843
INFO:maskrcnn_benchmark.trainer:eta: 1:29:42  iter: 10100  loss: 0.6499 (0.8136)  loss_classifier: 0.2011 (0.2753)  loss_box_reg: 0.1036 (0.1250)  loss_mask: 0.2519 (0.2989)  loss_objectness: 0.0289 (0.0536)  loss_rpn_box_reg: 0.0402 (0.0607)  time: 0.6643 (0.6814)  data: 0.0005 (0.0171)  lr: 0.016000  max mem: 14714
INFO:maskrcnn_benchmark.trainer:eta: 1:29:42  iter: 10100  loss: 0.6283 (0.8106)  loss_classifier: 0.2026 (0.2743)  loss_box_reg: 0.1071 (0.1248)  loss_mask: 0.2470 (0.2980)  loss_objectness: 0.0273 (0.0533)  loss_rpn_box_reg: 0.0364 (0.0602)  time: 0.6548 (0.6814)  data: 0.0005 (0.0172)  lr: 0.016000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:29:42  iter: 10100  loss: 0.6023 (0.8099)  loss_classifier: 0.1923 (0.2740)  loss_box_reg: 0.0964 (0.1244)  loss_mask: 0.2480 (0.2980)  loss_objectness: 0.0277 (0.0533)  loss_rpn_box_reg: 0.0386 (0.0602)  time: 0.6636 (0.6814)  data: 0.0005 (0.0171)  lr: 0.016000  max mem: 14790
INFO:maskrcnn_benchmark.trainer:eta: 1:29:42  iter: 10100  loss: 0.5881 (0.8126)  loss_classifier: 0.1896 (0.2750)  loss_box_reg: 0.0920 (0.1251)  loss_mask: 0.2519 (0.2983)  loss_objectness: 0.0248 (0.0537)  loss_rpn_box_reg: 0.0337 (0.0605)  time: 0.6645 (0.6814)  data: 0.0005 (0.0171)  lr: 0.016000  max mem: 14796
INFO:maskrcnn_benchmark.trainer:eta: 1:29:42  iter: 10100  loss: 0.5991 (0.8101)  loss_classifier: 0.1984 (0.2742)  loss_box_reg: 0.0929 (0.1244)  loss_mask: 0.2549 (0.2984)  loss_objectness: 0.0269 (0.0530)  loss_rpn_box_reg: 0.0357 (0.0601)  time: 0.6512 (0.6814)  data: 0.0005 (0.0171)  lr: 0.016000  max mem: 15034
2021-10-16 13:33:12,497 maskrcnn_benchmark.trainer INFO: eta: 1:29:42  iter: 10100  loss: 0.6073 (0.8140)  loss_classifier: 0.1962 (0.2757)  loss_box_reg: 0.0914 (0.1254)  loss_mask: 0.2480 (0.2985)  loss_objectness: 0.0204 (0.0536)  loss_rpn_box_reg: 0.0324 (0.0607)  time: 0.6652 (0.6814)  data: 0.0005 (0.0173)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:29:42  iter: 10100  loss: 0.6073 (0.8140)  loss_classifier: 0.1962 (0.2757)  loss_box_reg: 0.0914 (0.1254)  loss_mask: 0.2480 (0.2985)  loss_objectness: 0.0204 (0.0536)  loss_rpn_box_reg: 0.0324 (0.0607)  time: 0.6652 (0.6814)  data: 0.0005 (0.0173)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:29:42  iter: 10100  loss: 0.5847 (0.8120)  loss_classifier: 0.1765 (0.2750)  loss_box_reg: 0.0965 (0.1252)  loss_mask: 0.2457 (0.2982)  loss_objectness: 0.0224 (0.0533)  loss_rpn_box_reg: 0.0383 (0.0603)  time: 0.6640 (0.6814)  data: 0.0004 (0.0171)  lr: 0.016000  max mem: 14803
:::MLLOG {"namespace": "", "time_ms": 1634391192497, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8139713223499827, "loss_classifier": 0.27571500357387974, "loss_box_reg": 0.12542602997307786, "loss_mask": 0.2984979715308931, "loss_objectness": 0.053621405440631625, "loss_rpn_box_reg": 0.06071091231154647, "time": 0.6813596909825165, "data": 0.017331669283385323, "throughput": 187.85966016778127}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 10100}}
:::MLLOG {"namespace": "", "time_ms": 1634391192498, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 187.85966016778127, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.133s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.134s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.135s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.135s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.135s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.136s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.138s
2021-10-16 13:33:25,263 maskrcnn_benchmark.timed_section INFO: EXPOSED: Launching evaluation task took 0.138s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.138s
Evaluating predictions
Loading and preparing results...
resFile is ./inference/coco_2017_val/segm.json
Loading and preparing results...
resFile is ./inference/coco_2017_val/bbox.json
DONE (t=1.50s)
DONE (t=0.70s)
Running per image evaluation...
Evaluate annotation type *segm*
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=1.66s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.36899
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.58473
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.39993
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.21469
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.39906
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.47883
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.30853
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.48818
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.51305
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.33163
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.54652
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.65068
DONE (t=2.49s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.33767
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.55273
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.35754
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.15019
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.36163
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.49990
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.29252
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.44958
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.47008
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.28131
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.50652
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.62226
2021-10-16 13:33:37,876 maskrcnn_benchmark.trainer INFO: bbox mAP: 0.36899034282047233, segm mAP: 0.3376656928487815
INFO:maskrcnn_benchmark.trainer:bbox mAP: 0.36899034282047233, segm mAP: 0.3376656928487815
:::MLLOG {"namespace": "", "time_ms": 1634391217876, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": {"BBOX": 0.36899034282047233, "SEGM": 0.3376656928487815}, "metadata": {"file": "tools/train_mlperf.py", "lineno": 133, "epoch_num": 11}}
:::MLLOG {"namespace": "", "time_ms": 1634391217876, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 134, "epoch_num": 11}}
INFO:maskrcnn_benchmark.trainer:eta: 1:29:06  iter: 10150  loss: 0.6269 (0.8125)  loss_classifier: 0.2037 (0.2749)  loss_box_reg: 0.0984 (0.1249)  loss_mask: 0.2593 (0.2987)  loss_objectness: 0.0309 (0.0534)  loss_rpn_box_reg: 0.0466 (0.0606)  time: 0.6255 (0.6811)  data: 0.0004 (0.0171)  lr: 0.016000  max mem: 14714
2021-10-16 13:33:44,172 maskrcnn_benchmark.trainer INFO: eta: 1:29:06  iter: 10150  loss: 0.5590 (0.8129)  loss_classifier: 0.1692 (0.2753)  loss_box_reg: 0.0866 (0.1253)  loss_mask: 0.2575 (0.2983)  loss_objectness: 0.0214 (0.0535)  loss_rpn_box_reg: 0.0387 (0.0606)  time: 0.6256 (0.6811)  data: 0.0004 (0.0173)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:29:06  iter: 10150  loss: 0.5590 (0.8129)  loss_classifier: 0.1692 (0.2753)  loss_box_reg: 0.0866 (0.1253)  loss_mask: 0.2575 (0.2983)  loss_objectness: 0.0214 (0.0535)  loss_rpn_box_reg: 0.0387 (0.0606)  time: 0.6256 (0.6811)  data: 0.0004 (0.0173)  lr: 0.016000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634391224172, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8129079313143134, "loss_classifier": 0.2752548261049199, "loss_box_reg": 0.12527940305929375, "loss_mask": 0.2982902916663973, "loss_objectness": 0.0534747865979601, "loss_rpn_box_reg": 0.06060862434392547, "time": 0.6811239381846536, "data": 0.017271727857918574, "throughput": 187.9246827547251}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 10150}}
:::MLLOG {"namespace": "", "time_ms": 1634391224172, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 187.9246827547251, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:29:06  iter: 10150  loss: 0.6542 (0.8110)  loss_classifier: 0.2003 (0.2742)  loss_box_reg: 0.1043 (0.1249)  loss_mask: 0.2424 (0.2983)  loss_objectness: 0.0319 (0.0532)  loss_rpn_box_reg: 0.0455 (0.0603)  time: 0.6256 (0.6811)  data: 0.0004 (0.0171)  lr: 0.016000  max mem: 14843
INFO:maskrcnn_benchmark.trainer:eta: 1:29:06  iter: 10150  loss: 0.6142 (0.8097)  loss_classifier: 0.1965 (0.2739)  loss_box_reg: 0.0982 (0.1247)  loss_mask: 0.2446 (0.2978)  loss_objectness: 0.0256 (0.0531)  loss_rpn_box_reg: 0.0342 (0.0601)  time: 0.6276 (0.6811)  data: 0.0004 (0.0171)  lr: 0.016000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:29:06  iter: 10150  loss: 0.5802 (0.8089)  loss_classifier: 0.1748 (0.2736)  loss_box_reg: 0.0887 (0.1243)  loss_mask: 0.2430 (0.2978)  loss_objectness: 0.0224 (0.0532)  loss_rpn_box_reg: 0.0430 (0.0601)  time: 0.6274 (0.6811)  data: 0.0004 (0.0171)  lr: 0.016000  max mem: 14790
INFO:maskrcnn_benchmark.trainer:eta: 1:29:06  iter: 10150  loss: 0.5997 (0.8091)  loss_classifier: 0.1902 (0.2737)  loss_box_reg: 0.0852 (0.1242)  loss_mask: 0.2391 (0.2982)  loss_objectness: 0.0268 (0.0529)  loss_rpn_box_reg: 0.0384 (0.0600)  time: 0.6281 (0.6811)  data: 0.0003 (0.0171)  lr: 0.016000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:29:06  iter: 10150  loss: 0.5784 (0.8110)  loss_classifier: 0.1661 (0.2746)  loss_box_reg: 0.0926 (0.1251)  loss_mask: 0.2448 (0.2980)  loss_objectness: 0.0222 (0.0531)  loss_rpn_box_reg: 0.0353 (0.0603)  time: 0.6285 (0.6811)  data: 0.0003 (0.0171)  lr: 0.016000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:29:06  iter: 10150  loss: 0.5873 (0.8116)  loss_classifier: 0.1955 (0.2746)  loss_box_reg: 0.0939 (0.1250)  loss_mask: 0.2485 (0.2981)  loss_objectness: 0.0237 (0.0536)  loss_rpn_box_reg: 0.0376 (0.0604)  time: 0.6284 (0.6811)  data: 0.0004 (0.0171)  lr: 0.016000  max mem: 14826
INFO:maskrcnn_benchmark.trainer:eta: 1:28:30  iter: 10200  loss: 0.6480 (0.8101)  loss_classifier: 0.1887 (0.2742)  loss_box_reg: 0.0994 (0.1250)  loss_mask: 0.2608 (0.2977)  loss_objectness: 0.0283 (0.0530)  loss_rpn_box_reg: 0.0394 (0.0602)  time: 0.6299 (0.6809)  data: 0.0004 (0.0170)  lr: 0.016000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:28:30  iter: 10200  loss: 0.5874 (0.8107)  loss_classifier: 0.1795 (0.2742)  loss_box_reg: 0.0906 (0.1248)  loss_mask: 0.2493 (0.2978)  loss_objectness: 0.0257 (0.0534)  loss_rpn_box_reg: 0.0393 (0.0603)  time: 0.6300 (0.6809)  data: 0.0004 (0.0170)  lr: 0.016000  max mem: 14826
INFO:maskrcnn_benchmark.trainer:eta: 1:28:30  iter: 10200  loss: 0.6176 (0.8082)  loss_classifier: 0.1936 (0.2734)  loss_box_reg: 0.1011 (0.1241)  loss_mask: 0.2493 (0.2980)  loss_objectness: 0.0251 (0.0528)  loss_rpn_box_reg: 0.0412 (0.0599)  time: 0.6299 (0.6809)  data: 0.0004 (0.0170)  lr: 0.016000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:28:30  iter: 10200  loss: 0.5979 (0.8079)  loss_classifier: 0.1814 (0.2732)  loss_box_reg: 0.0931 (0.1241)  loss_mask: 0.2497 (0.2976)  loss_objectness: 0.0272 (0.0531)  loss_rpn_box_reg: 0.0436 (0.0600)  time: 0.6288 (0.6809)  data: 0.0003 (0.0170)  lr: 0.016000  max mem: 14790
INFO:maskrcnn_benchmark.trainer:eta: 1:28:30  iter: 10200  loss: 0.6117 (0.8087)  loss_classifier: 0.1976 (0.2735)  loss_box_reg: 0.0989 (0.1245)  loss_mask: 0.2471 (0.2975)  loss_objectness: 0.0324 (0.0530)  loss_rpn_box_reg: 0.0431 (0.0601)  time: 0.6285 (0.6809)  data: 0.0004 (0.0170)  lr: 0.016000  max mem: 14996
2021-10-16 13:34:15,647 maskrcnn_benchmark.trainer INFO: eta: 1:28:30  iter: 10200  loss: 0.6011 (0.8119)  loss_classifier: 0.1704 (0.2748)  loss_box_reg: 0.0896 (0.1251)  loss_mask: 0.2508 (0.2981)  loss_objectness: 0.0247 (0.0533)  loss_rpn_box_reg: 0.0408 (0.0605)  time: 0.6281 (0.6809)  data: 0.0004 (0.0172)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:28:30  iter: 10200  loss: 0.6265 (0.8101)  loss_classifier: 0.1708 (0.2739)  loss_box_reg: 0.0978 (0.1248)  loss_mask: 0.2537 (0.2981)  loss_objectness: 0.0231 (0.0531)  loss_rpn_box_reg: 0.0548 (0.0603)  time: 0.6282 (0.6809)  data: 0.0004 (0.0170)  lr: 0.016000  max mem: 14843
INFO:maskrcnn_benchmark.trainer:eta: 1:28:30  iter: 10200  loss: 0.5770 (0.8115)  loss_classifier: 0.1852 (0.2745)  loss_box_reg: 0.0901 (0.1247)  loss_mask: 0.2463 (0.2985)  loss_objectness: 0.0229 (0.0533)  loss_rpn_box_reg: 0.0379 (0.0605)  time: 0.6282 (0.6809)  data: 0.0003 (0.0170)  lr: 0.016000  max mem: 14714
INFO:maskrcnn_benchmark.trainer:eta: 1:28:30  iter: 10200  loss: 0.6011 (0.8119)  loss_classifier: 0.1704 (0.2748)  loss_box_reg: 0.0896 (0.1251)  loss_mask: 0.2508 (0.2981)  loss_objectness: 0.0247 (0.0533)  loss_rpn_box_reg: 0.0408 (0.0605)  time: 0.6281 (0.6809)  data: 0.0004 (0.0172)  lr: 0.016000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634391255647, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8119208698354515, "loss_classifier": 0.27482671364082717, "loss_box_reg": 0.1251459136405987, "loss_mask": 0.2980659512094423, "loss_objectness": 0.053341371715799266, "loss_rpn_box_reg": 0.060540920114852306, "time": 0.6808708421389262, "data": 0.017189525833316878, "throughput": 187.99453887303142}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 10200}}
:::MLLOG {"namespace": "", "time_ms": 1634391255647, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 187.99453887303142, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:27:54  iter: 10250  loss: 0.5818 (0.8077)  loss_classifier: 0.1888 (0.2731)  loss_box_reg: 0.0921 (0.1244)  loss_mask: 0.2492 (0.2973)  loss_objectness: 0.0250 (0.0529)  loss_rpn_box_reg: 0.0292 (0.0600)  time: 0.6237 (0.6806)  data: 0.0004 (0.0169)  lr: 0.016000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:27:54  iter: 10250  loss: 0.5522 (0.8069)  loss_classifier: 0.1694 (0.2727)  loss_box_reg: 0.0823 (0.1240)  loss_mask: 0.2418 (0.2973)  loss_objectness: 0.0224 (0.0529)  loss_rpn_box_reg: 0.0299 (0.0599)  time: 0.6233 (0.6806)  data: 0.0003 (0.0169)  lr: 0.016000  max mem: 14790
INFO:maskrcnn_benchmark.trainer:eta: 1:27:54  iter: 10250  loss: 0.5907 (0.8072)  loss_classifier: 0.1689 (0.2730)  loss_box_reg: 0.0920 (0.1240)  loss_mask: 0.2484 (0.2977)  loss_objectness: 0.0218 (0.0526)  loss_rpn_box_reg: 0.0358 (0.0598)  time: 0.6236 (0.6806)  data: 0.0004 (0.0169)  lr: 0.016000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:27:54  iter: 10250  loss: 0.6139 (0.8098)  loss_classifier: 0.1863 (0.2738)  loss_box_reg: 0.0951 (0.1247)  loss_mask: 0.2566 (0.2976)  loss_objectness: 0.0256 (0.0533)  loss_rpn_box_reg: 0.0474 (0.0603)  time: 0.6237 (0.6806)  data: 0.0004 (0.0169)  lr: 0.016000  max mem: 14826
INFO:maskrcnn_benchmark.trainer:eta: 1:27:54  iter: 10250  loss: 0.6292 (0.8092)  loss_classifier: 0.1970 (0.2738)  loss_box_reg: 0.0963 (0.1248)  loss_mask: 0.2534 (0.2975)  loss_objectness: 0.0295 (0.0529)  loss_rpn_box_reg: 0.0530 (0.0601)  time: 0.6237 (0.6806)  data: 0.0004 (0.0169)  lr: 0.016000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:27:54  iter: 10250  loss: 0.5850 (0.8092)  loss_classifier: 0.1712 (0.2735)  loss_box_reg: 0.0849 (0.1247)  loss_mask: 0.2630 (0.2978)  loss_objectness: 0.0242 (0.0530)  loss_rpn_box_reg: 0.0436 (0.0602)  time: 0.6237 (0.6806)  data: 0.0004 (0.0169)  lr: 0.016000  max mem: 14843
2021-10-16 13:34:46,992 maskrcnn_benchmark.trainer INFO: eta: 1:27:54  iter: 10250  loss: 0.6130 (0.8110)  loss_classifier: 0.1764 (0.2744)  loss_box_reg: 0.0911 (0.1250)  loss_mask: 0.2517 (0.2979)  loss_objectness: 0.0263 (0.0532)  loss_rpn_box_reg: 0.0418 (0.0605)  time: 0.6237 (0.6806)  data: 0.0004 (0.0171)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:27:54  iter: 10250  loss: 0.6097 (0.8106)  loss_classifier: 0.1923 (0.2741)  loss_box_reg: 0.0898 (0.1246)  loss_mask: 0.2563 (0.2982)  loss_objectness: 0.0249 (0.0532)  loss_rpn_box_reg: 0.0417 (0.0604)  time: 0.6236 (0.6806)  data: 0.0004 (0.0169)  lr: 0.016000  max mem: 14714
INFO:maskrcnn_benchmark.trainer:eta: 1:27:54  iter: 10250  loss: 0.6130 (0.8110)  loss_classifier: 0.1764 (0.2744)  loss_box_reg: 0.0911 (0.1250)  loss_mask: 0.2517 (0.2979)  loss_objectness: 0.0263 (0.0532)  loss_rpn_box_reg: 0.0418 (0.0605)  time: 0.6237 (0.6806)  data: 0.0004 (0.0171)  lr: 0.016000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634391286992, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8109885543991879, "loss_classifier": 0.2744155451826206, "loss_box_reg": 0.12502704743475357, "loss_mask": 0.29785229601220387, "loss_objectness": 0.053215674873986624, "loss_rpn_box_reg": 0.060477991400309274, "time": 0.6806075584132497, "data": 0.017107731958714928, "throughput": 188.0672619892964}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 10250}}
:::MLLOG {"namespace": "", "time_ms": 1634391286992, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 188.0672619892964, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:27:18  iter: 10300  loss: 0.5964 (0.8058)  loss_classifier: 0.1752 (0.2723)  loss_box_reg: 0.0997 (0.1238)  loss_mask: 0.2514 (0.2971)  loss_objectness: 0.0240 (0.0528)  loss_rpn_box_reg: 0.0396 (0.0599)  time: 0.6265 (0.6804)  data: 0.0004 (0.0168)  lr: 0.016000  max mem: 14790
INFO:maskrcnn_benchmark.trainer:eta: 1:27:18  iter: 10300  loss: 0.5873 (0.8066)  loss_classifier: 0.1831 (0.2727)  loss_box_reg: 0.0953 (0.1242)  loss_mask: 0.2499 (0.2971)  loss_objectness: 0.0240 (0.0528)  loss_rpn_box_reg: 0.0353 (0.0599)  time: 0.6261 (0.6804)  data: 0.0003 (0.0169)  lr: 0.016000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:27:18  iter: 10300  loss: 0.5804 (0.8081)  loss_classifier: 0.1737 (0.2730)  loss_box_reg: 0.0897 (0.1245)  loss_mask: 0.2485 (0.2976)  loss_objectness: 0.0283 (0.0529)  loss_rpn_box_reg: 0.0394 (0.0601)  time: 0.6262 (0.6804)  data: 0.0004 (0.0168)  lr: 0.016000  max mem: 14843
2021-10-16 13:35:18,351 maskrcnn_benchmark.trainer INFO: eta: 1:27:18  iter: 10300  loss: 0.6228 (0.8100)  loss_classifier: 0.1848 (0.2740)  loss_box_reg: 0.1014 (0.1249)  loss_mask: 0.2518 (0.2976)  loss_objectness: 0.0287 (0.0531)  loss_rpn_box_reg: 0.0443 (0.0604)  time: 0.6262 (0.6803)  data: 0.0004 (0.0170)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:27:18  iter: 10300  loss: 0.6358 (0.8096)  loss_classifier: 0.1902 (0.2737)  loss_box_reg: 0.0931 (0.1245)  loss_mask: 0.2437 (0.2980)  loss_objectness: 0.0287 (0.0531)  loss_rpn_box_reg: 0.0360 (0.0603)  time: 0.6261 (0.6804)  data: 0.0004 (0.0168)  lr: 0.016000  max mem: 14714
INFO:maskrcnn_benchmark.trainer:eta: 1:27:18  iter: 10300  loss: 0.6228 (0.8100)  loss_classifier: 0.1848 (0.2740)  loss_box_reg: 0.1014 (0.1249)  loss_mask: 0.2518 (0.2976)  loss_objectness: 0.0287 (0.0531)  loss_rpn_box_reg: 0.0443 (0.0604)  time: 0.6262 (0.6803)  data: 0.0004 (0.0170)  lr: 0.016000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634391318351, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8099627529446362, "loss_classifier": 0.2739714109467216, "loss_box_reg": 0.12488530696720083, "loss_mask": 0.2976346537615489, "loss_objectness": 0.05308788614627878, "loss_rpn_box_reg": 0.06038349562367533, "time": 0.6803482404495906, "data": 0.017026989251664543, "throughput": 188.1389447195667}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 10300}}
:::MLLOG {"namespace": "", "time_ms": 1634391318351, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 188.1389447195667, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:27:18  iter: 10300  loss: 0.5912 (0.8061)  loss_classifier: 0.1868 (0.2726)  loss_box_reg: 0.1005 (0.1239)  loss_mask: 0.2529 (0.2975)  loss_objectness: 0.0208 (0.0525)  loss_rpn_box_reg: 0.0312 (0.0597)  time: 0.6258 (0.6804)  data: 0.0004 (0.0168)  lr: 0.016000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:27:18  iter: 10300  loss: 0.6257 (0.8089)  loss_classifier: 0.1874 (0.2735)  loss_box_reg: 0.0930 (0.1246)  loss_mask: 0.2469 (0.2974)  loss_objectness: 0.0250 (0.0532)  loss_rpn_box_reg: 0.0411 (0.0602)  time: 0.6260 (0.6803)  data: 0.0004 (0.0168)  lr: 0.016000  max mem: 14826
INFO:maskrcnn_benchmark.trainer:eta: 1:27:18  iter: 10300  loss: 0.6242 (0.8082)  loss_classifier: 0.1934 (0.2734)  loss_box_reg: 0.1015 (0.1247)  loss_mask: 0.2537 (0.2973)  loss_objectness: 0.0303 (0.0528)  loss_rpn_box_reg: 0.0430 (0.0601)  time: 0.6257 (0.6803)  data: 0.0004 (0.0168)  lr: 0.016000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:26:42  iter: 10350  loss: 0.5733 (0.8053)  loss_classifier: 0.1671 (0.2722)  loss_box_reg: 0.0932 (0.1237)  loss_mask: 0.2551 (0.2973)  loss_objectness: 0.0249 (0.0524)  loss_rpn_box_reg: 0.0511 (0.0597)  time: 0.6258 (0.6801)  data: 0.0004 (0.0168)  lr: 0.016000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:26:42  iter: 10350  loss: 0.6340 (0.8070)  loss_classifier: 0.1937 (0.2729)  loss_box_reg: 0.0994 (0.1245)  loss_mask: 0.2501 (0.2970)  loss_objectness: 0.0258 (0.0526)  loss_rpn_box_reg: 0.0482 (0.0600)  time: 0.6257 (0.6801)  data: 0.0004 (0.0167)  lr: 0.016000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:26:42  iter: 10350  loss: 0.5759 (0.8080)  loss_classifier: 0.1782 (0.2731)  loss_box_reg: 0.0917 (0.1245)  loss_mask: 0.2411 (0.2972)  loss_objectness: 0.0267 (0.0531)  loss_rpn_box_reg: 0.0394 (0.0601)  time: 0.6258 (0.6801)  data: 0.0004 (0.0167)  lr: 0.016000  max mem: 14826
INFO:maskrcnn_benchmark.trainer:eta: 1:26:42  iter: 10350  loss: 0.5945 (0.8057)  loss_classifier: 0.1720 (0.2723)  loss_box_reg: 0.0967 (0.1241)  loss_mask: 0.2576 (0.2968)  loss_objectness: 0.0271 (0.0526)  loss_rpn_box_reg: 0.0349 (0.0598)  time: 0.6269 (0.6801)  data: 0.0003 (0.0168)  lr: 0.016000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:26:42  iter: 10350  loss: 0.6098 (0.8049)  loss_classifier: 0.1867 (0.2719)  loss_box_reg: 0.0985 (0.1237)  loss_mask: 0.2464 (0.2969)  loss_objectness: 0.0259 (0.0527)  loss_rpn_box_reg: 0.0514 (0.0598)  time: 0.6268 (0.6801)  data: 0.0004 (0.0168)  lr: 0.016000  max mem: 14790
INFO:maskrcnn_benchmark.trainer:eta: 1:26:42  iter: 10350  loss: 0.5547 (0.8070)  loss_classifier: 0.1897 (0.2726)  loss_box_reg: 0.0890 (0.1244)  loss_mask: 0.2440 (0.2974)  loss_objectness: 0.0212 (0.0527)  loss_rpn_box_reg: 0.0332 (0.0600)  time: 0.6281 (0.6801)  data: 0.0004 (0.0168)  lr: 0.016000  max mem: 14843
2021-10-16 13:35:49,749 maskrcnn_benchmark.trainer INFO: eta: 1:26:42  iter: 10350  loss: 0.5759 (0.8090)  loss_classifier: 0.1762 (0.2735)  loss_box_reg: 0.0863 (0.1247)  loss_mask: 0.2456 (0.2974)  loss_objectness: 0.0217 (0.0530)  loss_rpn_box_reg: 0.0368 (0.0603)  time: 0.6281 (0.6801)  data: 0.0003 (0.0169)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:26:42  iter: 10350  loss: 0.5889 (0.8085)  loss_classifier: 0.1779 (0.2733)  loss_box_reg: 0.0963 (0.1244)  loss_mask: 0.2516 (0.2977)  loss_objectness: 0.0252 (0.0529)  loss_rpn_box_reg: 0.0481 (0.0603)  time: 0.6281 (0.6801)  data: 0.0004 (0.0167)  lr: 0.016000  max mem: 14714
INFO:maskrcnn_benchmark.trainer:eta: 1:26:42  iter: 10350  loss: 0.5759 (0.8090)  loss_classifier: 0.1762 (0.2735)  loss_box_reg: 0.0863 (0.1247)  loss_mask: 0.2456 (0.2974)  loss_objectness: 0.0217 (0.0530)  loss_rpn_box_reg: 0.0368 (0.0603)  time: 0.6281 (0.6801)  data: 0.0003 (0.0169)  lr: 0.016000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634391349749, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8089659311230056, "loss_classifier": 0.27354061266902274, "loss_box_reg": 0.12474299123661439, "loss_mask": 0.29741751906088587, "loss_objectness": 0.05295918202486591, "loss_rpn_box_reg": 0.06030562662899692, "time": 0.6800951695787734, "data": 0.01694720459445087, "throughput": 188.20895328410967}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 10350}}
:::MLLOG {"namespace": "", "time_ms": 1634391349750, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 188.20895328410967, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:26:06  iter: 10400  loss: 0.6266 (0.8061)  loss_classifier: 0.1917 (0.2722)  loss_box_reg: 0.0941 (0.1243)  loss_mask: 0.2379 (0.2971)  loss_objectness: 0.0288 (0.0526)  loss_rpn_box_reg: 0.0401 (0.0599)  time: 0.6269 (0.6799)  data: 0.0004 (0.0167)  lr: 0.016000  max mem: 14843
INFO:maskrcnn_benchmark.trainer:eta: 1:26:06  iter: 10400  loss: 0.6253 (0.8077)  loss_classifier: 0.1801 (0.2729)  loss_box_reg: 0.0947 (0.1243)  loss_mask: 0.2504 (0.2975)  loss_objectness: 0.0247 (0.0528)  loss_rpn_box_reg: 0.0452 (0.0602)  time: 0.6269 (0.6799)  data: 0.0004 (0.0167)  lr: 0.016000  max mem: 14792
2021-10-16 13:36:21,231 maskrcnn_benchmark.trainer INFO: eta: 1:26:06  iter: 10400  loss: 0.6039 (0.8081)  loss_classifier: 0.1936 (0.2732)  loss_box_reg: 0.0987 (0.1246)  loss_mask: 0.2533 (0.2972)  loss_objectness: 0.0262 (0.0528)  loss_rpn_box_reg: 0.0414 (0.0602)  time: 0.6274 (0.6799)  data: 0.0004 (0.0169)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:26:06  iter: 10400  loss: 0.6039 (0.8081)  loss_classifier: 0.1936 (0.2732)  loss_box_reg: 0.0987 (0.1246)  loss_mask: 0.2533 (0.2972)  loss_objectness: 0.0262 (0.0528)  loss_rpn_box_reg: 0.0414 (0.0602)  time: 0.6274 (0.6799)  data: 0.0004 (0.0169)  lr: 0.016000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634391381231, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8081309378863527, "loss_classifier": 0.27320317418780177, "loss_box_reg": 0.12464379707438639, "loss_mask": 0.2972084112021212, "loss_objectness": 0.05284251910365688, "loss_rpn_box_reg": 0.06023303678973417, "time": 0.6798525578929828, "data": 0.01686795493731132, "throughput": 188.27611739330806}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 10400}}
INFO:maskrcnn_benchmark.trainer:eta: 1:26:06  iter: 10400  loss: 0.5949 (0.8047)  loss_classifier: 0.1681 (0.2718)  loss_box_reg: 0.0868 (0.1240)  loss_mask: 0.2476 (0.2966)  loss_objectness: 0.0285 (0.0525)  loss_rpn_box_reg: 0.0401 (0.0598)  time: 0.6272 (0.6799)  data: 0.0004 (0.0167)  lr: 0.016000  max mem: 14996
:::MLLOG {"namespace": "", "time_ms": 1634391381231, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 188.27611739330806, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:26:06  iter: 10400  loss: 0.6212 (0.8040)  loss_classifier: 0.2022 (0.2715)  loss_box_reg: 0.0998 (0.1236)  loss_mask: 0.2552 (0.2967)  loss_objectness: 0.0241 (0.0526)  loss_rpn_box_reg: 0.0364 (0.0597)  time: 0.6272 (0.6799)  data: 0.0004 (0.0167)  lr: 0.016000  max mem: 14790
INFO:maskrcnn_benchmark.trainer:eta: 1:26:06  iter: 10400  loss: 0.6356 (0.8044)  loss_classifier: 0.2096 (0.2718)  loss_box_reg: 0.1016 (0.1236)  loss_mask: 0.2587 (0.2971)  loss_objectness: 0.0291 (0.0523)  loss_rpn_box_reg: 0.0479 (0.0596)  time: 0.6254 (0.6799)  data: 0.0004 (0.0167)  lr: 0.016000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:26:06  iter: 10400  loss: 0.6019 (0.8061)  loss_classifier: 0.1973 (0.2725)  loss_box_reg: 0.0953 (0.1244)  loss_mask: 0.2460 (0.2968)  loss_objectness: 0.0226 (0.0525)  loss_rpn_box_reg: 0.0404 (0.0599)  time: 0.6245 (0.6798)  data: 0.0004 (0.0167)  lr: 0.016000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:26:06  iter: 10400  loss: 0.6480 (0.8071)  loss_classifier: 0.2016 (0.2727)  loss_box_reg: 0.1064 (0.1244)  loss_mask: 0.2551 (0.2970)  loss_objectness: 0.0292 (0.0529)  loss_rpn_box_reg: 0.0427 (0.0601)  time: 0.6253 (0.6799)  data: 0.0004 (0.0167)  lr: 0.016000  max mem: 14826
INFO:maskrcnn_benchmark.trainer:eta: 1:25:31  iter: 10450  loss: 0.6502 (0.8034)  loss_classifier: 0.1925 (0.2714)  loss_box_reg: 0.1043 (0.1235)  loss_mask: 0.2535 (0.2968)  loss_objectness: 0.0278 (0.0522)  loss_rpn_box_reg: 0.0410 (0.0595)  time: 0.6318 (0.6796)  data: 0.0004 (0.0166)  lr: 0.016000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:25:31  iter: 10450  loss: 0.6106 (0.8062)  loss_classifier: 0.2094 (0.2723)  loss_box_reg: 0.1013 (0.1243)  loss_mask: 0.2671 (0.2968)  loss_objectness: 0.0245 (0.0528)  loss_rpn_box_reg: 0.0404 (0.0600)  time: 0.6318 (0.6796)  data: 0.0004 (0.0166)  lr: 0.016000  max mem: 14826
INFO:maskrcnn_benchmark.trainer:eta: 1:25:31  iter: 10450  loss: 0.5439 (0.8052)  loss_classifier: 0.1599 (0.2721)  loss_box_reg: 0.0830 (0.1243)  loss_mask: 0.2445 (0.2966)  loss_objectness: 0.0238 (0.0524)  loss_rpn_box_reg: 0.0396 (0.0598)  time: 0.6318 (0.6796)  data: 0.0004 (0.0166)  lr: 0.016000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:25:31  iter: 10450  loss: 0.6146 (0.8031)  loss_classifier: 0.1901 (0.2711)  loss_box_reg: 0.0986 (0.1235)  loss_mask: 0.2526 (0.2965)  loss_objectness: 0.0230 (0.0524)  loss_rpn_box_reg: 0.0400 (0.0597)  time: 0.6330 (0.6796)  data: 0.0004 (0.0166)  lr: 0.016000  max mem: 14790
INFO:maskrcnn_benchmark.trainer:eta: 1:25:31  iter: 10450  loss: 0.6106 (0.8038)  loss_classifier: 0.1960 (0.2715)  loss_box_reg: 0.1083 (0.1239)  loss_mask: 0.2565 (0.2964)  loss_objectness: 0.0254 (0.0524)  loss_rpn_box_reg: 0.0363 (0.0597)  time: 0.6330 (0.6796)  data: 0.0004 (0.0166)  lr: 0.016000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:25:31  iter: 10450  loss: 0.5994 (0.8053)  loss_classifier: 0.1816 (0.2719)  loss_box_reg: 0.0953 (0.1241)  loss_mask: 0.2434 (0.2969)  loss_objectness: 0.0265 (0.0525)  loss_rpn_box_reg: 0.0441 (0.0599)  time: 0.6321 (0.6796)  data: 0.0004 (0.0166)  lr: 0.016000  max mem: 14843
2021-10-16 13:36:52,682 maskrcnn_benchmark.trainer INFO: eta: 1:25:31  iter: 10450  loss: 0.6287 (0.8072)  loss_classifier: 0.1914 (0.2728)  loss_box_reg: 0.0983 (0.1245)  loss_mask: 0.2568 (0.2970)  loss_objectness: 0.0253 (0.0527)  loss_rpn_box_reg: 0.0414 (0.0602)  time: 0.6319 (0.6796)  data: 0.0004 (0.0168)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:25:31  iter: 10450  loss: 0.6287 (0.8072)  loss_classifier: 0.1914 (0.2728)  loss_box_reg: 0.0983 (0.1245)  loss_mask: 0.2568 (0.2970)  loss_objectness: 0.0253 (0.0527)  loss_rpn_box_reg: 0.0414 (0.0602)  time: 0.6319 (0.6796)  data: 0.0004 (0.0168)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:25:31  iter: 10450  loss: 0.5647 (0.8068)  loss_classifier: 0.1842 (0.2725)  loss_box_reg: 0.0918 (0.1241)  loss_mask: 0.2500 (0.2973)  loss_objectness: 0.0214 (0.0527)  loss_rpn_box_reg: 0.0424 (0.0601)  time: 0.6320 (0.6796)  data: 0.0004 (0.0166)  lr: 0.016000  max mem: 14792
:::MLLOG {"namespace": "", "time_ms": 1634391412682, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8072267301373505, "loss_classifier": 0.2728367093693839, "loss_box_reg": 0.12452974675319037, "loss_mask": 0.2969895415043717, "loss_objectness": 0.052716796485056575, "loss_rpn_box_reg": 0.060153936516453455, "time": 0.6796093702088133, "data": 0.016789399790421627, "throughput": 188.3434890850186}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 10450}}
:::MLLOG {"namespace": "", "time_ms": 1634391412682, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 188.3434890850186, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:24:55  iter: 10500  loss: 0.6071 (0.8029)  loss_classifier: 0.2028 (0.2711)  loss_box_reg: 0.0921 (0.1238)  loss_mask: 0.2560 (0.2962)  loss_objectness: 0.0232 (0.0523)  loss_rpn_box_reg: 0.0379 (0.0596)  time: 0.6263 (0.6794)  data: 0.0004 (0.0165)  lr: 0.016000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:24:55  iter: 10500  loss: 0.6099 (0.8025)  loss_classifier: 0.1885 (0.2710)  loss_box_reg: 0.0971 (0.1234)  loss_mask: 0.2464 (0.2966)  loss_objectness: 0.0253 (0.0521)  loss_rpn_box_reg: 0.0352 (0.0595)  time: 0.6269 (0.6794)  data: 0.0004 (0.0165)  lr: 0.016000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:24:55  iter: 10500  loss: 0.5917 (0.8022)  loss_classifier: 0.1724 (0.2707)  loss_box_reg: 0.0859 (0.1233)  loss_mask: 0.2488 (0.2963)  loss_objectness: 0.0239 (0.0523)  loss_rpn_box_reg: 0.0338 (0.0596)  time: 0.6273 (0.6794)  data: 0.0004 (0.0165)  lr: 0.016000  max mem: 14790
INFO:maskrcnn_benchmark.trainer:eta: 1:24:55  iter: 10500  loss: 0.6083 (0.8052)  loss_classifier: 0.1839 (0.2719)  loss_box_reg: 0.0988 (0.1241)  loss_mask: 0.2489 (0.2966)  loss_objectness: 0.0247 (0.0527)  loss_rpn_box_reg: 0.0407 (0.0599)  time: 0.6272 (0.6794)  data: 0.0004 (0.0165)  lr: 0.016000  max mem: 14826
INFO:maskrcnn_benchmark.trainer:eta: 1:24:55  iter: 10500  loss: 0.5961 (0.8043)  loss_classifier: 0.1888 (0.2717)  loss_box_reg: 0.0938 (0.1242)  loss_mask: 0.2496 (0.2963)  loss_objectness: 0.0265 (0.0523)  loss_rpn_box_reg: 0.0413 (0.0598)  time: 0.6273 (0.6794)  data: 0.0004 (0.0165)  lr: 0.016000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:24:55  iter: 10500  loss: 0.6366 (0.8044)  loss_classifier: 0.2060 (0.2715)  loss_box_reg: 0.1034 (0.1240)  loss_mask: 0.2507 (0.2967)  loss_objectness: 0.0261 (0.0524)  loss_rpn_box_reg: 0.0422 (0.0598)  time: 0.6272 (0.6794)  data: 0.0004 (0.0165)  lr: 0.016000  max mem: 14843
2021-10-16 13:37:24,026 maskrcnn_benchmark.trainer INFO: eta: 1:24:55  iter: 10500  loss: 0.6475 (0.8064)  loss_classifier: 0.2192 (0.2725)  loss_box_reg: 0.1082 (0.1244)  loss_mask: 0.2538 (0.2968)  loss_objectness: 0.0258 (0.0526)  loss_rpn_box_reg: 0.0429 (0.0601)  time: 0.6269 (0.6794)  data: 0.0004 (0.0167)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:24:55  iter: 10500  loss: 0.5954 (0.8059)  loss_classifier: 0.1777 (0.2721)  loss_box_reg: 0.0936 (0.1240)  loss_mask: 0.2547 (0.2971)  loss_objectness: 0.0234 (0.0526)  loss_rpn_box_reg: 0.0369 (0.0601)  time: 0.6272 (0.6794)  data: 0.0003 (0.0165)  lr: 0.016000  max mem: 14792
INFO:maskrcnn_benchmark.trainer:eta: 1:24:55  iter: 10500  loss: 0.6475 (0.8064)  loss_classifier: 0.2192 (0.2725)  loss_box_reg: 0.1082 (0.1244)  loss_mask: 0.2538 (0.2968)  loss_objectness: 0.0258 (0.0526)  loss_rpn_box_reg: 0.0429 (0.0601)  time: 0.6269 (0.6794)  data: 0.0004 (0.0167)  lr: 0.016000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634391444027, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8064385221345084, "loss_classifier": 0.2725048003682778, "loss_box_reg": 0.12444316976887751, "loss_mask": 0.2967921590819245, "loss_objectness": 0.05260061035970492, "loss_rpn_box_reg": 0.060097783068793695, "time": 0.6793583140146164, "data": 0.01671162071682158, "throughput": 188.4130912354538}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 10500}}
:::MLLOG {"namespace": "", "time_ms": 1634391444027, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 188.4130912354538, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:24:19  iter: 10550  loss: 0.6389 (0.8035)  loss_classifier: 0.1944 (0.2711)  loss_box_reg: 0.1023 (0.1239)  loss_mask: 0.2672 (0.2965)  loss_objectness: 0.0286 (0.0522)  loss_rpn_box_reg: 0.0391 (0.0597)  time: 0.6274 (0.6791)  data: 0.0004 (0.0164)  lr: 0.016000  max mem: 14843
INFO:maskrcnn_benchmark.trainer:eta: 1:24:19  iter: 10550  loss: 0.5740 (0.8050)  loss_classifier: 0.1705 (0.2718)  loss_box_reg: 0.0822 (0.1239)  loss_mask: 0.2415 (0.2969)  loss_objectness: 0.0223 (0.0525)  loss_rpn_box_reg: 0.0449 (0.0600)  time: 0.6274 (0.6791)  data: 0.0004 (0.0164)  lr: 0.016000  max mem: 14792
2021-10-16 13:37:55,375 maskrcnn_benchmark.trainer INFO: eta: 1:24:19  iter: 10550  loss: 0.6219 (0.8056)  loss_classifier: 0.1958 (0.2721)  loss_box_reg: 0.1024 (0.1243)  loss_mask: 0.2584 (0.2966)  loss_objectness: 0.0246 (0.0525)  loss_rpn_box_reg: 0.0389 (0.0600)  time: 0.6274 (0.6791)  data: 0.0004 (0.0166)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:24:19  iter: 10550  loss: 0.6219 (0.8056)  loss_classifier: 0.1958 (0.2721)  loss_box_reg: 0.1024 (0.1243)  loss_mask: 0.2584 (0.2966)  loss_objectness: 0.0246 (0.0525)  loss_rpn_box_reg: 0.0389 (0.0600)  time: 0.6274 (0.6791)  data: 0.0004 (0.0166)  lr: 0.016000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634391475376, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8056117284693424, "loss_classifier": 0.2721342488844389, "loss_box_reg": 0.1243485297066473, "loss_mask": 0.29660624824146525, "loss_objectness": 0.05248595549270369, "loss_rpn_box_reg": 0.06003674665304845, "time": 0.6791100734557021, "data": 0.016634671767176045, "throughput": 188.48196338579177}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 10550}}
:::MLLOG {"namespace": "", "time_ms": 1634391475376, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 188.48196338579177, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:24:19  iter: 10550  loss: 0.6293 (0.8021)  loss_classifier: 0.1889 (0.2707)  loss_box_reg: 0.0932 (0.1236)  loss_mask: 0.2590 (0.2960)  loss_objectness: 0.0246 (0.0521)  loss_rpn_box_reg: 0.0481 (0.0595)  time: 0.6277 (0.6791)  data: 0.0004 (0.0165)  lr: 0.016000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:24:19  iter: 10550  loss: 0.5948 (0.8014)  loss_classifier: 0.1810 (0.2703)  loss_box_reg: 0.0889 (0.1232)  loss_mask: 0.2419 (0.2961)  loss_objectness: 0.0265 (0.0522)  loss_rpn_box_reg: 0.0422 (0.0595)  time: 0.6275 (0.6791)  data: 0.0003 (0.0165)  lr: 0.016000  max mem: 14790
INFO:maskrcnn_benchmark.trainer:eta: 1:24:19  iter: 10550  loss: 0.5782 (0.8016)  loss_classifier: 0.1825 (0.2706)  loss_box_reg: 0.0927 (0.1233)  loss_mask: 0.2503 (0.2964)  loss_objectness: 0.0263 (0.0519)  loss_rpn_box_reg: 0.0460 (0.0594)  time: 0.6265 (0.6791)  data: 0.0003 (0.0164)  lr: 0.016000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:24:19  iter: 10550  loss: 0.6028 (0.8043)  loss_classifier: 0.1917 (0.2715)  loss_box_reg: 0.0953 (0.1240)  loss_mask: 0.2553 (0.2964)  loss_objectness: 0.0230 (0.0526)  loss_rpn_box_reg: 0.0454 (0.0598)  time: 0.6263 (0.6791)  data: 0.0004 (0.0164)  lr: 0.016000  max mem: 14826
INFO:maskrcnn_benchmark.trainer:eta: 1:24:19  iter: 10550  loss: 0.6221 (0.8034)  loss_classifier: 0.2007 (0.2714)  loss_box_reg: 0.0988 (0.1241)  loss_mask: 0.2510 (0.2961)  loss_objectness: 0.0263 (0.0522)  loss_rpn_box_reg: 0.0362 (0.0597)  time: 0.6263 (0.6791)  data: 0.0004 (0.0164)  lr: 0.016000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:23:43  iter: 10600  loss: 0.5833 (0.8041)  loss_classifier: 0.1900 (0.2714)  loss_box_reg: 0.0918 (0.1238)  loss_mask: 0.2369 (0.2967)  loss_objectness: 0.0237 (0.0523)  loss_rpn_box_reg: 0.0409 (0.0599)  time: 0.6253 (0.6789)  data: 0.0004 (0.0164)  lr: 0.016000  max mem: 14792
INFO:maskrcnn_benchmark.trainer:eta: 1:23:43  iter: 10600  loss: 0.5656 (0.8025)  loss_classifier: 0.1657 (0.2707)  loss_box_reg: 0.0900 (0.1238)  loss_mask: 0.2536 (0.2963)  loss_objectness: 0.0223 (0.0521)  loss_rpn_box_reg: 0.0392 (0.0597)  time: 0.6252 (0.6789)  data: 0.0004 (0.0164)  lr: 0.016000  max mem: 14843
2021-10-16 13:38:26,681 maskrcnn_benchmark.trainer INFO: eta: 1:23:43  iter: 10600  loss: 0.5614 (0.8047)  loss_classifier: 0.1623 (0.2717)  loss_box_reg: 0.0766 (0.1242)  loss_mask: 0.2387 (0.2964)  loss_objectness: 0.0222 (0.0524)  loss_rpn_box_reg: 0.0378 (0.0600)  time: 0.6253 (0.6789)  data: 0.0004 (0.0166)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:23:43  iter: 10600  loss: 0.5614 (0.8047)  loss_classifier: 0.1623 (0.2717)  loss_box_reg: 0.0766 (0.1242)  loss_mask: 0.2387 (0.2964)  loss_objectness: 0.0222 (0.0524)  loss_rpn_box_reg: 0.0378 (0.0600)  time: 0.6253 (0.6789)  data: 0.0004 (0.0166)  lr: 0.016000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634391506681, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8047051544656169, "loss_classifier": 0.2717322001637856, "loss_box_reg": 0.12421699298420517, "loss_mask": 0.29641555309295653, "loss_objectness": 0.05236712473084412, "loss_rpn_box_reg": 0.059973284014443566, "time": 0.6788600751588929, "data": 0.016558718546381537, "throughput": 188.55137411054926}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 10600}}
:::MLLOG {"namespace": "", "time_ms": 1634391506681, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 188.55137411054926, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:23:43  iter: 10600  loss: 0.6217 (0.8004)  loss_classifier: 0.1847 (0.2699)  loss_box_reg: 0.1035 (0.1231)  loss_mask: 0.2525 (0.2958)  loss_objectness: 0.0246 (0.0521)  loss_rpn_box_reg: 0.0373 (0.0595)  time: 0.6259 (0.6789)  data: 0.0004 (0.0164)  lr: 0.016000  max mem: 14790
INFO:maskrcnn_benchmark.trainer:eta: 1:23:43  iter: 10600  loss: 0.5718 (0.8011)  loss_classifier: 0.1706 (0.2703)  loss_box_reg: 0.0876 (0.1235)  loss_mask: 0.2469 (0.2958)  loss_objectness: 0.0247 (0.0520)  loss_rpn_box_reg: 0.0403 (0.0595)  time: 0.6252 (0.6789)  data: 0.0004 (0.0164)  lr: 0.016000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:23:43  iter: 10600  loss: 0.6270 (0.8034)  loss_classifier: 0.1988 (0.2711)  loss_box_reg: 0.0956 (0.1239)  loss_mask: 0.2410 (0.2962)  loss_objectness: 0.0281 (0.0525)  loss_rpn_box_reg: 0.0503 (0.0598)  time: 0.6251 (0.6789)  data: 0.0004 (0.0164)  lr: 0.016000  max mem: 14826
INFO:maskrcnn_benchmark.trainer:eta: 1:23:43  iter: 10600  loss: 0.6059 (0.8026)  loss_classifier: 0.1795 (0.2710)  loss_box_reg: 0.1073 (0.1239)  loss_mask: 0.2527 (0.2959)  loss_objectness: 0.0278 (0.0520)  loss_rpn_box_reg: 0.0340 (0.0596)  time: 0.6251 (0.6789)  data: 0.0004 (0.0164)  lr: 0.016000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:23:43  iter: 10600  loss: 0.5838 (0.8007)  loss_classifier: 0.1670 (0.2702)  loss_box_reg: 0.0847 (0.1231)  loss_mask: 0.2559 (0.2962)  loss_objectness: 0.0291 (0.0518)  loss_rpn_box_reg: 0.0399 (0.0593)  time: 0.6251 (0.6789)  data: 0.0004 (0.0164)  lr: 0.016000  max mem: 15034
2021-10-16 13:38:58,064 maskrcnn_benchmark.trainer INFO: eta: 1:23:07  iter: 10650  loss: 0.5674 (0.8038)  loss_classifier: 0.1737 (0.2714)  loss_box_reg: 0.0934 (0.1241)  loss_mask: 0.2564 (0.2962)  loss_objectness: 0.0237 (0.0522)  loss_rpn_box_reg: 0.0387 (0.0599)  time: 0.6264 (0.6786)  data: 0.0004 (0.0165)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:23:07  iter: 10650  loss: 0.5881 (0.8031)  loss_classifier: 0.1806 (0.2709)  loss_box_reg: 0.0975 (0.1236)  loss_mask: 0.2534 (0.2965)  loss_objectness: 0.0232 (0.0522)  loss_rpn_box_reg: 0.0374 (0.0598)  time: 0.6264 (0.6786)  data: 0.0004 (0.0163)  lr: 0.016000  max mem: 14792
INFO:maskrcnn_benchmark.trainer:eta: 1:23:07  iter: 10650  loss: 0.5674 (0.8038)  loss_classifier: 0.1737 (0.2714)  loss_box_reg: 0.0934 (0.1241)  loss_mask: 0.2564 (0.2962)  loss_objectness: 0.0237 (0.0522)  loss_rpn_box_reg: 0.0387 (0.0599)  time: 0.6264 (0.6786)  data: 0.0004 (0.0165)  lr: 0.016000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634391538064, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8038149204696288, "loss_classifier": 0.27135146064832455, "loss_box_reg": 0.12410578657569092, "loss_mask": 0.29620840775574875, "loss_objectness": 0.052246744805431004, "loss_rpn_box_reg": 0.05990252117672279, "time": 0.6786197110968576, "data": 0.016483631738474672, "throughput": 188.6181581627105}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 10650}}
INFO:maskrcnn_benchmark.trainer:eta: 1:23:07  iter: 10650  loss: 0.6058 (0.8016)  loss_classifier: 0.1860 (0.2703)  loss_box_reg: 0.0949 (0.1237)  loss_mask: 0.2605 (0.2961)  loss_objectness: 0.0273 (0.0520)  loss_rpn_box_reg: 0.0435 (0.0596)  time: 0.6264 (0.6786)  data: 0.0004 (0.0163)  lr: 0.016000  max mem: 14843
:::MLLOG {"namespace": "", "time_ms": 1634391538065, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 188.6181581627105, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:23:07  iter: 10650  loss: 0.5766 (0.8002)  loss_classifier: 0.1781 (0.2699)  loss_box_reg: 0.0905 (0.1234)  loss_mask: 0.2450 (0.2956)  loss_objectness: 0.0232 (0.0519)  loss_rpn_box_reg: 0.0417 (0.0594)  time: 0.6267 (0.6786)  data: 0.0003 (0.0163)  lr: 0.016000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:23:07  iter: 10650  loss: 0.6130 (0.7996)  loss_classifier: 0.1978 (0.2696)  loss_box_reg: 0.0994 (0.1230)  loss_mask: 0.2588 (0.2957)  loss_objectness: 0.0301 (0.0520)  loss_rpn_box_reg: 0.0435 (0.0594)  time: 0.6265 (0.6786)  data: 0.0004 (0.0163)  lr: 0.016000  max mem: 14790
INFO:maskrcnn_benchmark.trainer:eta: 1:23:07  iter: 10650  loss: 0.5880 (0.7998)  loss_classifier: 0.1724 (0.2698)  loss_box_reg: 0.0942 (0.1230)  loss_mask: 0.2454 (0.2960)  loss_objectness: 0.0210 (0.0517)  loss_rpn_box_reg: 0.0391 (0.0593)  time: 0.6264 (0.6786)  data: 0.0004 (0.0163)  lr: 0.016000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:23:07  iter: 10650  loss: 0.5816 (0.8016)  loss_classifier: 0.1752 (0.2706)  loss_box_reg: 0.0979 (0.1238)  loss_mask: 0.2486 (0.2957)  loss_objectness: 0.0219 (0.0519)  loss_rpn_box_reg: 0.0262 (0.0595)  time: 0.6265 (0.6786)  data: 0.0004 (0.0163)  lr: 0.016000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:23:07  iter: 10650  loss: 0.5620 (0.8024)  loss_classifier: 0.1723 (0.2707)  loss_box_reg: 0.0847 (0.1237)  loss_mask: 0.2449 (0.2959)  loss_objectness: 0.0254 (0.0523)  loss_rpn_box_reg: 0.0360 (0.0597)  time: 0.6265 (0.6786)  data: 0.0003 (0.0163)  lr: 0.016000  max mem: 14826
INFO:maskrcnn_benchmark.trainer:eta: 1:22:32  iter: 10700  loss: 0.6284 (0.7994)  loss_classifier: 0.1918 (0.2696)  loss_box_reg: 0.0924 (0.1233)  loss_mask: 0.2488 (0.2954)  loss_objectness: 0.0261 (0.0518)  loss_rpn_box_reg: 0.0498 (0.0594)  time: 0.6309 (0.6784)  data: 0.0004 (0.0162)  lr: 0.016000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:22:32  iter: 10700  loss: 0.5921 (0.7988)  loss_classifier: 0.1665 (0.2694)  loss_box_reg: 0.0914 (0.1229)  loss_mask: 0.2446 (0.2958)  loss_objectness: 0.0228 (0.0516)  loss_rpn_box_reg: 0.0345 (0.0592)  time: 0.6312 (0.6784)  data: 0.0004 (0.0162)  lr: 0.016000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:22:32  iter: 10700  loss: 0.6637 (0.8016)  loss_classifier: 0.2054 (0.2704)  loss_box_reg: 0.1085 (0.1236)  loss_mask: 0.2611 (0.2957)  loss_objectness: 0.0299 (0.0522)  loss_rpn_box_reg: 0.0474 (0.0596)  time: 0.6311 (0.6784)  data: 0.0004 (0.0162)  lr: 0.016000  max mem: 14826
INFO:maskrcnn_benchmark.trainer:eta: 1:22:32  iter: 10700  loss: 0.6085 (0.8007)  loss_classifier: 0.1840 (0.2702)  loss_box_reg: 0.0957 (0.1237)  loss_mask: 0.2565 (0.2955)  loss_objectness: 0.0234 (0.0518)  loss_rpn_box_reg: 0.0390 (0.0594)  time: 0.6310 (0.6784)  data: 0.0004 (0.0162)  lr: 0.016000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:22:32  iter: 10700  loss: 0.6296 (0.7987)  loss_classifier: 0.1952 (0.2692)  loss_box_reg: 0.1015 (0.1229)  loss_mask: 0.2507 (0.2954)  loss_objectness: 0.0242 (0.0518)  loss_rpn_box_reg: 0.0398 (0.0594)  time: 0.6309 (0.6784)  data: 0.0004 (0.0162)  lr: 0.016000  max mem: 14790
INFO:maskrcnn_benchmark.trainer:eta: 1:22:32  iter: 10700  loss: 0.6284 (0.8009)  loss_classifier: 0.1958 (0.2700)  loss_box_reg: 0.1017 (0.1236)  loss_mask: 0.2428 (0.2959)  loss_objectness: 0.0286 (0.0519)  loss_rpn_box_reg: 0.0409 (0.0596)  time: 0.6306 (0.6784)  data: 0.0004 (0.0162)  lr: 0.016000  max mem: 14843
2021-10-16 13:39:29,514 maskrcnn_benchmark.trainer INFO: eta: 1:22:32  iter: 10700  loss: 0.6288 (0.8030)  loss_classifier: 0.2124 (0.2710)  loss_box_reg: 0.1057 (0.1240)  loss_mask: 0.2581 (0.2960)  loss_objectness: 0.0302 (0.0521)  loss_rpn_box_reg: 0.0458 (0.0598)  time: 0.6308 (0.6784)  data: 0.0004 (0.0164)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:22:32  iter: 10700  loss: 0.6064 (0.8022)  loss_classifier: 0.1928 (0.2706)  loss_box_reg: 0.0965 (0.1235)  loss_mask: 0.2467 (0.2963)  loss_objectness: 0.0265 (0.0521)  loss_rpn_box_reg: 0.0365 (0.0598)  time: 0.6298 (0.6784)  data: 0.0004 (0.0162)  lr: 0.016000  max mem: 14792
INFO:maskrcnn_benchmark.trainer:eta: 1:22:32  iter: 10700  loss: 0.6288 (0.8030)  loss_classifier: 0.2124 (0.2710)  loss_box_reg: 0.1057 (0.1240)  loss_mask: 0.2581 (0.2960)  loss_objectness: 0.0302 (0.0521)  loss_rpn_box_reg: 0.0458 (0.0598)  time: 0.6308 (0.6784)  data: 0.0004 (0.0164)  lr: 0.016000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634391569514, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8029769440900499, "loss_classifier": 0.2709779689847448, "loss_box_reg": 0.12399931101544072, "loss_mask": 0.2960262041768738, "loss_objectness": 0.05213432656897005, "loss_rpn_box_reg": 0.05983913386316761, "time": 0.6783878292547209, "data": 0.01640890714164092, "throughput": 188.68263031873852}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 10700}}
:::MLLOG {"namespace": "", "time_ms": 1634391569514, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 188.68263031873852, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:21:56  iter: 10750  loss: 0.6330 (0.8008)  loss_classifier: 0.1885 (0.2700)  loss_box_reg: 0.0985 (0.1235)  loss_mask: 0.2603 (0.2955)  loss_objectness: 0.0246 (0.0521)  loss_rpn_box_reg: 0.0406 (0.0596)  time: 0.6293 (0.6782)  data: 0.0004 (0.0161)  lr: 0.016000  max mem: 14826
INFO:maskrcnn_benchmark.trainer:eta: 1:21:56  iter: 10750  loss: 0.6104 (0.7979)  loss_classifier: 0.1826 (0.2690)  loss_box_reg: 0.1046 (0.1228)  loss_mask: 0.2506 (0.2956)  loss_objectness: 0.0252 (0.0514)  loss_rpn_box_reg: 0.0437 (0.0591)  time: 0.6294 (0.6782)  data: 0.0004 (0.0162)  lr: 0.016000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:21:56  iter: 10750  loss: 0.6187 (0.7999)  loss_classifier: 0.1901 (0.2699)  loss_box_reg: 0.0994 (0.1236)  loss_mask: 0.2635 (0.2954)  loss_objectness: 0.0248 (0.0517)  loss_rpn_box_reg: 0.0420 (0.0594)  time: 0.6293 (0.6782)  data: 0.0004 (0.0161)  lr: 0.016000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:21:56  iter: 10750  loss: 0.6334 (0.7978)  loss_classifier: 0.1943 (0.2688)  loss_box_reg: 0.1010 (0.1228)  loss_mask: 0.2529 (0.2952)  loss_objectness: 0.0241 (0.0517)  loss_rpn_box_reg: 0.0422 (0.0593)  time: 0.6295 (0.6782)  data: 0.0004 (0.0162)  lr: 0.016000  max mem: 14790
INFO:maskrcnn_benchmark.trainer:eta: 1:21:56  iter: 10750  loss: 0.5787 (0.7986)  loss_classifier: 0.1679 (0.2692)  loss_box_reg: 0.0934 (0.1232)  loss_mask: 0.2453 (0.2952)  loss_objectness: 0.0271 (0.0517)  loss_rpn_box_reg: 0.0398 (0.0593)  time: 0.6296 (0.6782)  data: 0.0004 (0.0162)  lr: 0.016000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:21:56  iter: 10750  loss: 0.6101 (0.8000)  loss_classifier: 0.1958 (0.2696)  loss_box_reg: 0.0970 (0.1234)  loss_mask: 0.2520 (0.2957)  loss_objectness: 0.0257 (0.0518)  loss_rpn_box_reg: 0.0423 (0.0595)  time: 0.6320 (0.6782)  data: 0.0004 (0.0162)  lr: 0.016000  max mem: 14843
INFO:maskrcnn_benchmark.trainer:eta: 1:21:56  iter: 10750  loss: 0.5926 (0.8014)  loss_classifier: 0.1840 (0.2702)  loss_box_reg: 0.0955 (0.1234)  loss_mask: 0.2531 (0.2961)  loss_objectness: 0.0268 (0.0520)  loss_rpn_box_reg: 0.0457 (0.0597)  time: 0.6321 (0.6782)  data: 0.0004 (0.0161)  lr: 0.016000  max mem: 14792
2021-10-16 13:40:00,965 maskrcnn_benchmark.trainer INFO: eta: 1:21:56  iter: 10750  loss: 0.6225 (0.8022)  loss_classifier: 0.1900 (0.2706)  loss_box_reg: 0.1003 (0.1239)  loss_mask: 0.2620 (0.2958)  loss_objectness: 0.0331 (0.0520)  loss_rpn_box_reg: 0.0457 (0.0598)  time: 0.6319 (0.6782)  data: 0.0004 (0.0163)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:21:56  iter: 10750  loss: 0.6225 (0.8022)  loss_classifier: 0.1900 (0.2706)  loss_box_reg: 0.1003 (0.1239)  loss_mask: 0.2620 (0.2958)  loss_objectness: 0.0331 (0.0520)  loss_rpn_box_reg: 0.0457 (0.0598)  time: 0.6319 (0.6782)  data: 0.0004 (0.0163)  lr: 0.016000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634391600965, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8021639492899872, "loss_classifier": 0.27062638393148436, "loss_box_reg": 0.12389433336966173, "loss_mask": 0.2958278361198514, "loss_objectness": 0.052029031515381366, "loss_rpn_box_reg": 0.0597863648674819, "time": 0.6781581642017808, "data": 0.016334738066030103, "throughput": 188.74652958084064}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 10750}}
:::MLLOG {"namespace": "", "time_ms": 1634391600965, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 188.74652958084064, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:21:21  iter: 10800  loss: 0.6080 (0.8005)  loss_classifier: 0.1858 (0.2699)  loss_box_reg: 0.1010 (0.1233)  loss_mask: 0.2536 (0.2959)  loss_objectness: 0.0250 (0.0519)  loss_rpn_box_reg: 0.0346 (0.0596)  time: 0.6305 (0.6779)  data: 0.0004 (0.0161)  lr: 0.016000  max mem: 14792
2021-10-16 13:40:32,511 maskrcnn_benchmark.trainer INFO: eta: 1:21:21  iter: 10800  loss: 0.6063 (0.8013)  loss_classifier: 0.1755 (0.2702)  loss_box_reg: 0.1009 (0.1238)  loss_mask: 0.2555 (0.2956)  loss_objectness: 0.0283 (0.0519)  loss_rpn_box_reg: 0.0402 (0.0597)  time: 0.6305 (0.6779)  data: 0.0004 (0.0163)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:21:21  iter: 10800  loss: 0.6063 (0.8013)  loss_classifier: 0.1755 (0.2702)  loss_box_reg: 0.1009 (0.1238)  loss_mask: 0.2555 (0.2956)  loss_objectness: 0.0283 (0.0519)  loss_rpn_box_reg: 0.0402 (0.0597)  time: 0.6305 (0.6779)  data: 0.0004 (0.0163)  lr: 0.016000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634391632511, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8012681213849121, "loss_classifier": 0.2702288141518969, "loss_box_reg": 0.1237757623093677, "loss_mask": 0.2956196202903434, "loss_objectness": 0.051912128335917025, "loss_rpn_box_reg": 0.05973179679801601, "time": 0.6779394825078823, "data": 0.01626146658703133, "throughput": 188.80741320227173}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 10800}}
INFO:maskrcnn_benchmark.trainer:eta: 1:21:21  iter: 10800  loss: 0.6386 (0.7990)  loss_classifier: 0.1824 (0.2692)  loss_box_reg: 0.1033 (0.1233)  loss_mask: 0.2585 (0.2955)  loss_objectness: 0.0253 (0.0517)  loss_rpn_box_reg: 0.0490 (0.0594)  time: 0.6305 (0.6779)  data: 0.0003 (0.0161)  lr: 0.016000  max mem: 14843
:::MLLOG {"namespace": "", "time_ms": 1634391632511, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 188.80741320227173, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:21:21  iter: 10800  loss: 0.5698 (0.7977)  loss_classifier: 0.1958 (0.2688)  loss_box_reg: 0.0874 (0.1231)  loss_mask: 0.2547 (0.2950)  loss_objectness: 0.0240 (0.0516)  loss_rpn_box_reg: 0.0351 (0.0593)  time: 0.6313 (0.6779)  data: 0.0004 (0.0161)  lr: 0.016000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:21:21  iter: 10800  loss: 0.5917 (0.7970)  loss_classifier: 0.1694 (0.2685)  loss_box_reg: 0.0906 (0.1226)  loss_mask: 0.2443 (0.2950)  loss_objectness: 0.0210 (0.0516)  loss_rpn_box_reg: 0.0367 (0.0592)  time: 0.6317 (0.6779)  data: 0.0003 (0.0161)  lr: 0.016000  max mem: 14790
INFO:maskrcnn_benchmark.trainer:eta: 1:21:21  iter: 10800  loss: 0.6320 (0.7971)  loss_classifier: 0.2012 (0.2686)  loss_box_reg: 0.1034 (0.1226)  loss_mask: 0.2473 (0.2954)  loss_objectness: 0.0254 (0.0513)  loss_rpn_box_reg: 0.0462 (0.0591)  time: 0.6321 (0.6779)  data: 0.0004 (0.0161)  lr: 0.016000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:21:21  iter: 10800  loss: 0.5687 (0.7999)  loss_classifier: 0.1584 (0.2697)  loss_box_reg: 0.0833 (0.1234)  loss_mask: 0.2468 (0.2953)  loss_objectness: 0.0261 (0.0520)  loss_rpn_box_reg: 0.0391 (0.0595)  time: 0.6323 (0.6779)  data: 0.0004 (0.0161)  lr: 0.016000  max mem: 14826
INFO:maskrcnn_benchmark.trainer:eta: 1:21:21  iter: 10800  loss: 0.5821 (0.7990)  loss_classifier: 0.1765 (0.2695)  loss_box_reg: 0.0900 (0.1235)  loss_mask: 0.2443 (0.2952)  loss_objectness: 0.0234 (0.0516)  loss_rpn_box_reg: 0.0441 (0.0593)  time: 0.6322 (0.6779)  data: 0.0003 (0.0161)  lr: 0.016000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:20:45  iter: 10850  loss: 0.5798 (0.7967)  loss_classifier: 0.1741 (0.2684)  loss_box_reg: 0.0948 (0.1229)  loss_mask: 0.2584 (0.2948)  loss_objectness: 0.0227 (0.0515)  loss_rpn_box_reg: 0.0396 (0.0592)  time: 0.6251 (0.6777)  data: 0.0003 (0.0160)  lr: 0.016000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:20:45  iter: 10850  loss: 0.6258 (0.7962)  loss_classifier: 0.1979 (0.2681)  loss_box_reg: 0.0990 (0.1225)  loss_mask: 0.2444 (0.2948)  loss_objectness: 0.0245 (0.0515)  loss_rpn_box_reg: 0.0453 (0.0592)  time: 0.6248 (0.6777)  data: 0.0004 (0.0160)  lr: 0.016000  max mem: 14790
INFO:maskrcnn_benchmark.trainer:eta: 1:20:45  iter: 10850  loss: 0.6110 (0.7963)  loss_classifier: 0.1901 (0.2683)  loss_box_reg: 0.0935 (0.1225)  loss_mask: 0.2532 (0.2952)  loss_objectness: 0.0261 (0.0512)  loss_rpn_box_reg: 0.0356 (0.0590)  time: 0.6256 (0.6777)  data: 0.0004 (0.0160)  lr: 0.016000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:20:45  iter: 10850  loss: 0.5905 (0.7981)  loss_classifier: 0.1788 (0.2691)  loss_box_reg: 0.0916 (0.1233)  loss_mask: 0.2476 (0.2949)  loss_objectness: 0.0237 (0.0515)  loss_rpn_box_reg: 0.0416 (0.0592)  time: 0.6256 (0.6777)  data: 0.0004 (0.0160)  lr: 0.016000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:20:45  iter: 10850  loss: 0.5591 (0.7990)  loss_classifier: 0.1657 (0.2693)  loss_box_reg: 0.0829 (0.1233)  loss_mask: 0.2443 (0.2951)  loss_objectness: 0.0277 (0.0519)  loss_rpn_box_reg: 0.0357 (0.0594)  time: 0.6257 (0.6777)  data: 0.0003 (0.0160)  lr: 0.016000  max mem: 14826
INFO:maskrcnn_benchmark.trainer:eta: 1:20:45  iter: 10850  loss: 0.6075 (0.7982)  loss_classifier: 0.1856 (0.2688)  loss_box_reg: 0.0966 (0.1232)  loss_mask: 0.2590 (0.2953)  loss_objectness: 0.0235 (0.0515)  loss_rpn_box_reg: 0.0485 (0.0594)  time: 0.6252 (0.6777)  data: 0.0004 (0.0160)  lr: 0.016000  max mem: 14843
INFO:maskrcnn_benchmark.trainer:eta: 1:20:45  iter: 10850  loss: 0.6404 (0.7997)  loss_classifier: 0.1952 (0.2695)  loss_box_reg: 0.1095 (0.1232)  loss_mask: 0.2564 (0.2956)  loss_objectness: 0.0281 (0.0518)  loss_rpn_box_reg: 0.0456 (0.0596)  time: 0.6250 (0.6777)  data: 0.0004 (0.0160)  lr: 0.016000  max mem: 14792
2021-10-16 13:41:03,880 maskrcnn_benchmark.trainer INFO: eta: 1:20:45  iter: 10850  loss: 0.6229 (0.8005)  loss_classifier: 0.2021 (0.2699)  loss_box_reg: 0.1023 (0.1237)  loss_mask: 0.2528 (0.2954)  loss_objectness: 0.0259 (0.0518)  loss_rpn_box_reg: 0.0464 (0.0597)  time: 0.6249 (0.6777)  data: 0.0004 (0.0162)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:20:45  iter: 10850  loss: 0.6229 (0.8005)  loss_classifier: 0.2021 (0.2699)  loss_box_reg: 0.1023 (0.1237)  loss_mask: 0.2528 (0.2954)  loss_objectness: 0.0259 (0.0518)  loss_rpn_box_reg: 0.0464 (0.0597)  time: 0.6249 (0.6777)  data: 0.0004 (0.0162)  lr: 0.016000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634391663880, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.8005482525182759, "loss_classifier": 0.2699294774869483, "loss_box_reg": 0.12369131481023891, "loss_mask": 0.29542868413683454, "loss_objectness": 0.05181387676269434, "loss_rpn_box_reg": 0.05968489978571899, "time": 0.6777064789934641, "data": 0.01618873932394564, "throughput": 188.87232742721713}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 10850}}
:::MLLOG {"namespace": "", "time_ms": 1634391663880, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 188.87232742721713, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:20:10  iter: 10900  loss: 0.5835 (0.7953)  loss_classifier: 0.1801 (0.2678)  loss_box_reg: 0.0965 (0.1224)  loss_mask: 0.2505 (0.2946)  loss_objectness: 0.0238 (0.0514)  loss_rpn_box_reg: 0.0327 (0.0591)  time: 0.6287 (0.6775)  data: 0.0003 (0.0159)  lr: 0.016000  max mem: 14790
INFO:maskrcnn_benchmark.trainer:eta: 1:20:10  iter: 10900  loss: 0.5917 (0.7959)  loss_classifier: 0.1820 (0.2680)  loss_box_reg: 0.0881 (0.1228)  loss_mask: 0.2420 (0.2946)  loss_objectness: 0.0254 (0.0513)  loss_rpn_box_reg: 0.0374 (0.0591)  time: 0.6294 (0.6775)  data: 0.0004 (0.0160)  lr: 0.016000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:20:10  iter: 10900  loss: 0.5976 (0.7974)  loss_classifier: 0.1886 (0.2685)  loss_box_reg: 0.0979 (0.1231)  loss_mask: 0.2522 (0.2951)  loss_objectness: 0.0267 (0.0514)  loss_rpn_box_reg: 0.0396 (0.0593)  time: 0.6294 (0.6775)  data: 0.0004 (0.0159)  lr: 0.016000  max mem: 14843
INFO:maskrcnn_benchmark.trainer:eta: 1:20:10  iter: 10900  loss: 0.6061 (0.7989)  loss_classifier: 0.1801 (0.2691)  loss_box_reg: 0.0920 (0.1231)  loss_mask: 0.2560 (0.2954)  loss_objectness: 0.0281 (0.0517)  loss_rpn_box_reg: 0.0390 (0.0595)  time: 0.6293 (0.6775)  data: 0.0004 (0.0159)  lr: 0.016000  max mem: 14792
2021-10-16 13:41:35,278 maskrcnn_benchmark.trainer INFO: eta: 1:20:10  iter: 10900  loss: 0.5940 (0.7997)  loss_classifier: 0.1754 (0.2696)  loss_box_reg: 0.0947 (0.1236)  loss_mask: 0.2490 (0.2952)  loss_objectness: 0.0227 (0.0517)  loss_rpn_box_reg: 0.0375 (0.0596)  time: 0.6294 (0.6775)  data: 0.0004 (0.0161)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:20:10  iter: 10900  loss: 0.5940 (0.7997)  loss_classifier: 0.1754 (0.2696)  loss_box_reg: 0.0947 (0.1236)  loss_mask: 0.2490 (0.2952)  loss_objectness: 0.0227 (0.0517)  loss_rpn_box_reg: 0.0375 (0.0596)  time: 0.6294 (0.6775)  data: 0.0004 (0.0161)  lr: 0.016000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634391695278, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.7996707201578201, "loss_classifier": 0.2695575864999256, "loss_box_reg": 0.12357068504982226, "loss_mask": 0.2952356041380025, "loss_objectness": 0.05169013433713773, "loss_rpn_box_reg": 0.05961671057214892, "time": 0.6774782767208344, "data": 0.01611669236366902, "throughput": 188.93594731856535}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 10900}}
:::MLLOG {"namespace": "", "time_ms": 1634391695278, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 188.93594731856535, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:20:10  iter: 10900  loss: 0.6555 (0.7955)  loss_classifier: 0.1847 (0.2680)  loss_box_reg: 0.1021 (0.1224)  loss_mask: 0.2602 (0.2950)  loss_objectness: 0.0272 (0.0511)  loss_rpn_box_reg: 0.0462 (0.0590)  time: 0.6288 (0.6775)  data: 0.0004 (0.0159)  lr: 0.016000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:20:10  iter: 10900  loss: 0.5672 (0.7980)  loss_classifier: 0.1694 (0.2689)  loss_box_reg: 0.0940 (0.1232)  loss_mask: 0.2549 (0.2949)  loss_objectness: 0.0227 (0.0518)  loss_rpn_box_reg: 0.0417 (0.0593)  time: 0.6287 (0.6775)  data: 0.0004 (0.0159)  lr: 0.016000  max mem: 14826
INFO:maskrcnn_benchmark.trainer:eta: 1:20:10  iter: 10900  loss: 0.5774 (0.7971)  loss_classifier: 0.1824 (0.2687)  loss_box_reg: 0.0841 (0.1232)  loss_mask: 0.2511 (0.2947)  loss_objectness: 0.0240 (0.0513)  loss_rpn_box_reg: 0.0339 (0.0592)  time: 0.6287 (0.6775)  data: 0.0004 (0.0159)  lr: 0.016000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:19:34  iter: 10950  loss: 0.5781 (0.7946)  loss_classifier: 0.1715 (0.2676)  loss_box_reg: 0.0872 (0.1223)  loss_mask: 0.2462 (0.2948)  loss_objectness: 0.0203 (0.0510)  loss_rpn_box_reg: 0.0339 (0.0589)  time: 0.6256 (0.6773)  data: 0.0003 (0.0159)  lr: 0.016000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:19:34  iter: 10950  loss: 0.6249 (0.7972)  loss_classifier: 0.1872 (0.2685)  loss_box_reg: 0.0998 (0.1230)  loss_mask: 0.2580 (0.2948)  loss_objectness: 0.0243 (0.0516)  loss_rpn_box_reg: 0.0406 (0.0592)  time: 0.6259 (0.6772)  data: 0.0004 (0.0158)  lr: 0.016000  max mem: 14826
INFO:maskrcnn_benchmark.trainer:eta: 1:19:34  iter: 10950  loss: 0.6010 (0.7963)  loss_classifier: 0.1789 (0.2683)  loss_box_reg: 0.1008 (0.1231)  loss_mask: 0.2573 (0.2945)  loss_objectness: 0.0245 (0.0512)  loss_rpn_box_reg: 0.0399 (0.0591)  time: 0.6258 (0.6772)  data: 0.0003 (0.0158)  lr: 0.016000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:19:34  iter: 10950  loss: 0.6012 (0.7944)  loss_classifier: 0.1793 (0.2674)  loss_box_reg: 0.0958 (0.1223)  loss_mask: 0.2532 (0.2944)  loss_objectness: 0.0226 (0.0513)  loss_rpn_box_reg: 0.0391 (0.0590)  time: 0.6262 (0.6773)  data: 0.0004 (0.0159)  lr: 0.016000  max mem: 14790
INFO:maskrcnn_benchmark.trainer:eta: 1:19:34  iter: 10950  loss: 0.6406 (0.7950)  loss_classifier: 0.1989 (0.2677)  loss_box_reg: 0.0979 (0.1227)  loss_mask: 0.2620 (0.2944)  loss_objectness: 0.0259 (0.0512)  loss_rpn_box_reg: 0.0393 (0.0591)  time: 0.6263 (0.6773)  data: 0.0004 (0.0159)  lr: 0.016000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:19:34  iter: 10950  loss: 0.6079 (0.7966)  loss_classifier: 0.1919 (0.2681)  loss_box_reg: 0.0978 (0.1230)  loss_mask: 0.2533 (0.2949)  loss_objectness: 0.0276 (0.0513)  loss_rpn_box_reg: 0.0400 (0.0593)  time: 0.6267 (0.6773)  data: 0.0004 (0.0159)  lr: 0.016000  max mem: 14843
INFO:maskrcnn_benchmark.trainer:eta: 1:19:34  iter: 10950  loss: 0.6013 (0.7980)  loss_classifier: 0.1986 (0.2688)  loss_box_reg: 0.1022 (0.1229)  loss_mask: 0.2522 (0.2952)  loss_objectness: 0.0229 (0.0516)  loss_rpn_box_reg: 0.0412 (0.0595)  time: 0.6267 (0.6773)  data: 0.0004 (0.0158)  lr: 0.016000  max mem: 14792
2021-10-16 13:42:06,669 maskrcnn_benchmark.trainer INFO: eta: 1:19:34  iter: 10950  loss: 0.5969 (0.7989)  loss_classifier: 0.1841 (0.2692)  loss_box_reg: 0.0979 (0.1235)  loss_mask: 0.2587 (0.2951)  loss_objectness: 0.0290 (0.0516)  loss_rpn_box_reg: 0.0339 (0.0596)  time: 0.6267 (0.6773)  data: 0.0004 (0.0160)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:19:34  iter: 10950  loss: 0.5969 (0.7989)  loss_classifier: 0.1841 (0.2692)  loss_box_reg: 0.0979 (0.1235)  loss_mask: 0.2587 (0.2951)  loss_objectness: 0.0290 (0.0516)  loss_rpn_box_reg: 0.0339 (0.0596)  time: 0.6267 (0.6773)  data: 0.0004 (0.0160)  lr: 0.016000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634391726670, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.7988516776665161, "loss_classifier": 0.26919756460441574, "loss_box_reg": 0.12346049723506705, "loss_mask": 0.2950530683123358, "loss_objectness": 0.05158207976246533, "loss_rpn_box_reg": 0.05955846819259039, "time": 0.6772516121929639, "data": 0.016045499370522694, "throughput": 188.99918094773022}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 10950}}
:::MLLOG {"namespace": "", "time_ms": 1634391726670, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 188.99918094773022, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:18:59  iter: 11000  loss: 0.5981 (0.7957)  loss_classifier: 0.1891 (0.2678)  loss_box_reg: 0.0887 (0.1228)  loss_mask: 0.2542 (0.2947)  loss_objectness: 0.0240 (0.0512)  loss_rpn_box_reg: 0.0368 (0.0592)  time: 0.6241 (0.6770)  data: 0.0004 (0.0158)  lr: 0.016000  max mem: 14843
2021-10-16 13:42:38,114 maskrcnn_benchmark.trainer INFO: eta: 1:18:59  iter: 11000  loss: 0.5964 (0.7979)  loss_classifier: 0.1794 (0.2688)  loss_box_reg: 0.0946 (0.1233)  loss_mask: 0.2596 (0.2949)  loss_objectness: 0.0256 (0.0515)  loss_rpn_box_reg: 0.0432 (0.0595)  time: 0.6242 (0.6770)  data: 0.0004 (0.0160)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:18:59  iter: 11000  loss: 0.5964 (0.7979)  loss_classifier: 0.1794 (0.2688)  loss_box_reg: 0.0946 (0.1233)  loss_mask: 0.2596 (0.2949)  loss_objectness: 0.0256 (0.0515)  loss_rpn_box_reg: 0.0432 (0.0595)  time: 0.6242 (0.6770)  data: 0.0004 (0.0160)  lr: 0.016000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634391758114, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.7979296813932332, "loss_classifier": 0.26879620596732606, "loss_box_reg": 0.12333286388368685, "loss_mask": 0.294863410608335, "loss_objectness": 0.0514656191339547, "loss_rpn_box_reg": 0.059471582229143345, "time": 0.6770317443934354, "data": 0.01597450555454601, "throughput": 189.06055891762867}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 11000}}
INFO:maskrcnn_benchmark.trainer:eta: 1:18:59  iter: 11000  loss: 0.5964 (0.7972)  loss_classifier: 0.1724 (0.2684)  loss_box_reg: 0.0910 (0.1228)  loss_mask: 0.2582 (0.2951)  loss_objectness: 0.0219 (0.0514)  loss_rpn_box_reg: 0.0407 (0.0594)  time: 0.6242 (0.6770)  data: 0.0004 (0.0158)  lr: 0.016000  max mem: 14792
:::MLLOG {"namespace": "", "time_ms": 1634391758114, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 189.06055891762867, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:18:59  iter: 11000  loss: 0.6141 (0.7937)  loss_classifier: 0.1918 (0.2671)  loss_box_reg: 0.0979 (0.1222)  loss_mask: 0.2563 (0.2942)  loss_objectness: 0.0239 (0.0512)  loss_rpn_box_reg: 0.0373 (0.0590)  time: 0.6241 (0.6770)  data: 0.0004 (0.0158)  lr: 0.016000  max mem: 14790
INFO:maskrcnn_benchmark.trainer:eta: 1:18:59  iter: 11000  loss: 0.5468 (0.7941)  loss_classifier: 0.1734 (0.2673)  loss_box_reg: 0.0838 (0.1225)  loss_mask: 0.2422 (0.2941)  loss_objectness: 0.0234 (0.0511)  loss_rpn_box_reg: 0.0303 (0.0590)  time: 0.6246 (0.6770)  data: 0.0004 (0.0158)  lr: 0.016000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:18:59  iter: 11000  loss: 0.6206 (0.7963)  loss_classifier: 0.1906 (0.2681)  loss_box_reg: 0.0920 (0.1229)  loss_mask: 0.2530 (0.2946)  loss_objectness: 0.0264 (0.0515)  loss_rpn_box_reg: 0.0407 (0.0592)  time: 0.6241 (0.6770)  data: 0.0004 (0.0158)  lr: 0.016000  max mem: 14826
INFO:maskrcnn_benchmark.trainer:eta: 1:18:59  iter: 11000  loss: 0.5871 (0.7937)  loss_classifier: 0.1812 (0.2672)  loss_box_reg: 0.0925 (0.1222)  loss_mask: 0.2501 (0.2946)  loss_objectness: 0.0217 (0.0509)  loss_rpn_box_reg: 0.0385 (0.0588)  time: 0.6244 (0.6770)  data: 0.0004 (0.0158)  lr: 0.016000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:18:59  iter: 11000  loss: 0.6098 (0.7953)  loss_classifier: 0.1837 (0.2679)  loss_box_reg: 0.0954 (0.1230)  loss_mask: 0.2561 (0.2943)  loss_objectness: 0.0236 (0.0511)  loss_rpn_box_reg: 0.0319 (0.0590)  time: 0.6242 (0.6770)  data: 0.0003 (0.0158)  lr: 0.016000  max mem: 14803
:::MLLOG {"namespace": "", "time_ms": 1634391760709, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 111, "epoch_num": 12}}
:::MLLOG {"namespace": "", "time_ms": 1634391760709, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 112, "first_epoch_num": 12}}
:::MLLOG {"namespace": "", "time_ms": 1634391760710, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 113, "epoch_num": 12}}
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
2021-10-16 13:42:41,054 maskrcnn_benchmark.data.build WARNING: When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
Done (t=0.56s)
creating index...
Done (t=0.56s)
creating index...
Done (t=0.56s)
creating index...
index created!
index created!
index created!
shapes=None
passthrough=True
shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
shapes=None
passthrough=True
  0% 0/40 [00:00<?, ?it/s]creating index...
  0% 0/40 [00:00<?, ?it/s]GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]Done (t=0.56s)
creating index...
Done (t=0.56s)
creating index...
Done (t=0.56s)
creating index...
index created!
shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
Done (t=0.56s)
creating index...
  0% 0/40 [00:00<?, ?it/s]Done (t=0.56s)
creating index...
index created!
index created!
shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]index created!
shapes=None
passthrough=True
creating index...
GT annotations already exist!
2021-10-16 13:42:41,643 maskrcnn_benchmark.inference INFO: Start evaluation on coco_2017_val dataset(5000 images).
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]index created!
shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]  2% 1/40 [00:00<00:11,  3.37it/s]  2% 1/40 [00:00<00:11,  3.35it/s]  2% 1/40 [00:00<00:11,  3.35it/s]  2% 1/40 [00:00<00:11,  3.52it/s]  2% 1/40 [00:00<00:11,  3.29it/s]  2% 1/40 [00:00<00:11,  3.34it/s]  2% 1/40 [00:00<00:12,  3.13it/s]  2% 1/40 [00:00<00:12,  3.08it/s]  5% 2/40 [00:00<00:11,  3.41it/s]  5% 2/40 [00:00<00:11,  3.39it/s]  5% 2/40 [00:00<00:10,  3.59it/s]  5% 2/40 [00:00<00:11,  3.37it/s]  5% 2/40 [00:00<00:11,  3.37it/s]  5% 2/40 [00:00<00:11,  3.30it/s]  5% 2/40 [00:00<00:11,  3.39it/s]  5% 2/40 [00:00<00:11,  3.24it/s]  8% 3/40 [00:00<00:10,  3.48it/s]  8% 3/40 [00:00<00:10,  3.61it/s]  8% 3/40 [00:00<00:10,  3.43it/s]  8% 3/40 [00:00<00:10,  3.39it/s]  8% 3/40 [00:00<00:10,  3.42it/s]  8% 3/40 [00:00<00:11,  3.36it/s]  8% 3/40 [00:00<00:11,  3.34it/s]  8% 3/40 [00:00<00:10,  3.42it/s] 10% 4/40 [00:01<00:10,  3.48it/s] 10% 4/40 [00:01<00:10,  3.56it/s] 10% 4/40 [00:01<00:10,  3.46it/s] 10% 4/40 [00:01<00:10,  3.42it/s] 10% 4/40 [00:01<00:10,  3.44it/s] 10% 4/40 [00:01<00:10,  3.42it/s] 10% 4/40 [00:01<00:10,  3.39it/s] 10% 4/40 [00:01<00:10,  3.42it/s] 12% 5/40 [00:01<00:10,  3.50it/s] 12% 5/40 [00:01<00:09,  3.55it/s] 12% 5/40 [00:01<00:10,  3.46it/s] 12% 5/40 [00:01<00:10,  3.48it/s] 12% 5/40 [00:01<00:09,  3.51it/s] 12% 5/40 [00:01<00:10,  3.45it/s] 12% 5/40 [00:01<00:10,  3.46it/s] 12% 5/40 [00:01<00:10,  3.49it/s] 15% 6/40 [00:01<00:09,  3.52it/s] 15% 6/40 [00:01<00:09,  3.54it/s] 15% 6/40 [00:01<00:09,  3.46it/s] 15% 6/40 [00:01<00:09,  3.47it/s] 15% 6/40 [00:01<00:09,  3.54it/s] 15% 6/40 [00:01<00:09,  3.54it/s] 15% 6/40 [00:01<00:09,  3.49it/s] 15% 6/40 [00:01<00:09,  3.49it/s] 18% 7/40 [00:01<00:09,  3.57it/s] 18% 7/40 [00:01<00:09,  3.49it/s] 18% 7/40 [00:02<00:09,  3.50it/s] 18% 7/40 [00:02<00:09,  3.47it/s] 18% 7/40 [00:01<00:09,  3.52it/s] 18% 7/40 [00:01<00:09,  3.52it/s] 18% 7/40 [00:01<00:09,  3.51it/s] 18% 7/40 [00:01<00:09,  3.57it/s] 20% 8/40 [00:02<00:09,  3.50it/s] 20% 8/40 [00:02<00:09,  3.50it/s] 20% 8/40 [00:02<00:09,  3.48it/s] 20% 8/40 [00:02<00:09,  3.45it/s] 20% 8/40 [00:02<00:08,  3.58it/s] 20% 8/40 [00:02<00:09,  3.54it/s] 20% 8/40 [00:02<00:09,  3.53it/s] 20% 8/40 [00:02<00:08,  3.56it/s] 22% 9/40 [00:02<00:08,  3.50it/s] 22% 9/40 [00:02<00:08,  3.52it/s] 22% 9/40 [00:02<00:08,  3.52it/s] 22% 9/40 [00:02<00:08,  3.47it/s] 22% 9/40 [00:02<00:08,  3.56it/s] 22% 9/40 [00:02<00:08,  3.53it/s] 22% 9/40 [00:02<00:08,  3.54it/s] 22% 9/40 [00:02<00:08,  3.60it/s] 25% 10/40 [00:02<00:08,  3.54it/s] 25% 10/40 [00:02<00:08,  3.47it/s] 25% 10/40 [00:02<00:08,  3.55it/s] 25% 10/40 [00:02<00:08,  3.49it/s] 25% 10/40 [00:02<00:08,  3.61it/s] 25% 10/40 [00:02<00:08,  3.59it/s] 25% 10/40 [00:02<00:08,  3.53it/s] 25% 10/40 [00:02<00:08,  3.58it/s] 28% 11/40 [00:03<00:08,  3.56it/s] 28% 11/40 [00:03<00:08,  3.59it/s] 28% 11/40 [00:03<00:08,  3.48it/s] 28% 11/40 [00:03<00:08,  3.48it/s] 28% 11/40 [00:03<00:08,  3.59it/s] 28% 11/40 [00:03<00:08,  3.57it/s] 28% 11/40 [00:03<00:08,  3.52it/s] 28% 11/40 [00:03<00:08,  3.57it/s] 30% 12/40 [00:03<00:07,  3.61it/s] 30% 12/40 [00:03<00:07,  3.53it/s] 30% 12/40 [00:03<00:07,  3.51it/s] 30% 12/40 [00:03<00:07,  3.61it/s] 30% 12/40 [00:03<00:07,  3.58it/s] 30% 12/40 [00:03<00:08,  3.49it/s] 30% 12/40 [00:03<00:07,  3.55it/s] 30% 12/40 [00:03<00:07,  3.59it/s] 32% 13/40 [00:03<00:07,  3.57it/s] 32% 13/40 [00:03<00:07,  3.67it/s] 32% 13/40 [00:03<00:07,  3.56it/s] 32% 13/40 [00:03<00:07,  3.50it/s] 32% 13/40 [00:03<00:07,  3.53it/s] 32% 13/40 [00:03<00:07,  3.56it/s] 32% 13/40 [00:03<00:07,  3.52it/s] 32% 13/40 [00:03<00:07,  3.56it/s] 35% 14/40 [00:03<00:07,  3.58it/s] 35% 14/40 [00:03<00:07,  3.61it/s] 35% 14/40 [00:03<00:07,  3.53it/s] 35% 14/40 [00:03<00:07,  3.51it/s] 35% 14/40 [00:03<00:07,  3.58it/s] 35% 14/40 [00:03<00:07,  3.62it/s] 35% 14/40 [00:03<00:07,  3.59it/s] 35% 14/40 [00:03<00:07,  3.52it/s] 38% 15/40 [00:04<00:06,  3.61it/s] 38% 15/40 [00:04<00:06,  3.67it/s] 38% 15/40 [00:04<00:07,  3.55it/s] 38% 15/40 [00:04<00:07,  3.54it/s] 38% 15/40 [00:04<00:07,  3.57it/s] 38% 15/40 [00:04<00:07,  3.56it/s] 38% 15/40 [00:04<00:07,  3.55it/s] 38% 15/40 [00:04<00:07,  3.48it/s] 40% 16/40 [00:04<00:06,  3.60it/s] 40% 16/40 [00:04<00:06,  3.58it/s] 40% 16/40 [00:04<00:06,  3.61it/s] 40% 16/40 [00:04<00:06,  3.59it/s] 40% 16/40 [00:04<00:06,  3.52it/s] 40% 16/40 [00:04<00:06,  3.50it/s] 40% 16/40 [00:04<00:06,  3.53it/s] 40% 16/40 [00:04<00:06,  3.51it/s] 42% 17/40 [00:04<00:06,  3.66it/s] 42% 17/40 [00:04<00:06,  3.68it/s] 42% 17/40 [00:04<00:06,  3.62it/s] 42% 17/40 [00:04<00:06,  3.56it/s] 42% 17/40 [00:04<00:06,  3.51it/s] 42% 17/40 [00:04<00:06,  3.61it/s] 42% 17/40 [00:04<00:06,  3.48it/s] 42% 17/40 [00:04<00:06,  3.54it/s] 45% 18/40 [00:05<00:06,  3.62it/s] 45% 18/40 [00:04<00:05,  3.71it/s] 45% 18/40 [00:05<00:06,  3.57it/s] 45% 18/40 [00:05<00:06,  3.55it/s] 45% 18/40 [00:05<00:06,  3.50it/s] 45% 18/40 [00:05<00:06,  3.58it/s] 45% 18/40 [00:05<00:06,  3.49it/s] 45% 18/40 [00:05<00:06,  3.53it/s] 48% 19/40 [00:05<00:05,  3.64it/s] 48% 19/40 [00:05<00:05,  3.67it/s] 48% 19/40 [00:05<00:05,  3.53it/s] 48% 19/40 [00:05<00:05,  3.55it/s] 48% 19/40 [00:05<00:05,  3.53it/s] 48% 19/40 [00:05<00:05,  3.57it/s] 48% 19/40 [00:05<00:05,  3.51it/s] 48% 19/40 [00:05<00:05,  3.55it/s] 50% 20/40 [00:05<00:05,  3.62it/s] 50% 20/40 [00:05<00:05,  3.64it/s] 50% 20/40 [00:05<00:05,  3.56it/s] 50% 20/40 [00:05<00:05,  3.50it/s] 50% 20/40 [00:05<00:05,  3.54it/s] 50% 20/40 [00:05<00:05,  3.55it/s] 50% 20/40 [00:05<00:05,  3.54it/s] 50% 20/40 [00:05<00:05,  3.57it/s] 52% 21/40 [00:05<00:05,  3.65it/s] 52% 21/40 [00:05<00:05,  3.61it/s] 52% 21/40 [00:05<00:05,  3.52it/s] 52% 21/40 [00:05<00:05,  3.55it/s] 52% 21/40 [00:05<00:05,  3.61it/s] 52% 21/40 [00:05<00:05,  3.53it/s] 52% 21/40 [00:05<00:05,  3.58it/s] 52% 21/40 [00:05<00:05,  3.58it/s] 55% 22/40 [00:06<00:04,  3.61it/s] 55% 22/40 [00:06<00:04,  3.67it/s] 55% 22/40 [00:06<00:05,  3.58it/s] 55% 22/40 [00:06<00:05,  3.49it/s] 55% 22/40 [00:06<00:05,  3.56it/s] 55% 22/40 [00:06<00:05,  3.50it/s] 55% 22/40 [00:06<00:05,  3.53it/s] 55% 22/40 [00:06<00:04,  3.63it/s] 57% 23/40 [00:06<00:04,  3.64it/s] 57% 23/40 [00:06<00:04,  3.66it/s] 57% 23/40 [00:06<00:04,  3.61it/s] 57% 23/40 [00:06<00:04,  3.49it/s] 57% 23/40 [00:06<00:04,  3.53it/s] 57% 23/40 [00:06<00:04,  3.54it/s] 57% 23/40 [00:06<00:04,  3.59it/s] 57% 23/40 [00:06<00:04,  3.50it/s] 60% 24/40 [00:06<00:04,  3.67it/s] 60% 24/40 [00:06<00:04,  3.64it/s] 60% 24/40 [00:06<00:04,  3.61it/s] 60% 24/40 [00:06<00:04,  3.56it/s] 60% 24/40 [00:06<00:04,  3.54it/s] 60% 24/40 [00:06<00:04,  3.49it/s] 60% 24/40 [00:06<00:04,  3.62it/s] 60% 24/40 [00:06<00:04,  3.54it/s] 62% 25/40 [00:06<00:04,  3.66it/s] 62% 25/40 [00:06<00:04,  3.60it/s] 62% 25/40 [00:06<00:04,  3.65it/s] 62% 25/40 [00:07<00:04,  3.50it/s] 62% 25/40 [00:07<00:04,  3.60it/s] 62% 25/40 [00:07<00:04,  3.50it/s] 62% 25/40 [00:07<00:04,  3.52it/s] 62% 25/40 [00:07<00:04,  3.52it/s] 65% 26/40 [00:07<00:03,  3.62it/s] 65% 26/40 [00:07<00:03,  3.57it/s] 65% 26/40 [00:07<00:03,  3.66it/s] 65% 26/40 [00:07<00:03,  3.57it/s] 65% 26/40 [00:07<00:03,  3.55it/s] 65% 26/40 [00:07<00:03,  3.59it/s] 65% 26/40 [00:07<00:04,  3.49it/s] 65% 26/40 [00:07<00:03,  3.51it/s] 68% 27/40 [00:07<00:03,  3.64it/s] 68% 27/40 [00:07<00:03,  3.64it/s] 68% 27/40 [00:07<00:03,  3.63it/s] 68% 27/40 [00:07<00:03,  3.55it/s] 68% 27/40 [00:07<00:03,  3.55it/s] 68% 27/40 [00:07<00:03,  3.53it/s] 68% 27/40 [00:07<00:03,  3.57it/s] 68% 27/40 [00:07<00:03,  3.55it/s] 70% 28/40 [00:07<00:03,  3.69it/s] 70% 28/40 [00:07<00:03,  3.64it/s] 70% 28/40 [00:07<00:03,  3.61it/s] 70% 28/40 [00:07<00:03,  3.59it/s] 70% 28/40 [00:07<00:03,  3.54it/s] 70% 28/40 [00:07<00:03,  3.56it/s] 70% 28/40 [00:07<00:03,  3.50it/s] 70% 28/40 [00:07<00:03,  3.51it/s] 72% 29/40 [00:08<00:03,  3.64it/s] 72% 29/40 [00:08<00:03,  3.62it/s] 72% 29/40 [00:08<00:03,  3.61it/s] 72% 29/40 [00:08<00:03,  3.56it/s] 72% 29/40 [00:08<00:03,  3.57it/s] 72% 29/40 [00:08<00:03,  3.57it/s] 72% 29/40 [00:08<00:03,  3.55it/s] 72% 29/40 [00:08<00:03,  3.49it/s] 75% 30/40 [00:08<00:02,  3.67it/s] 75% 30/40 [00:08<00:02,  3.56it/s] 75% 30/40 [00:08<00:02,  3.60it/s] 75% 30/40 [00:08<00:02,  3.58it/s] 75% 30/40 [00:08<00:02,  3.55it/s] 75% 30/40 [00:08<00:02,  3.57it/s] 75% 30/40 [00:08<00:02,  3.53it/s] 75% 30/40 [00:08<00:02,  3.46it/s] 78% 31/40 [00:08<00:02,  3.66it/s] 78% 31/40 [00:08<00:02,  3.53it/s] 78% 31/40 [00:08<00:02,  3.56it/s] 78% 31/40 [00:08<00:02,  3.60it/s] 78% 31/40 [00:08<00:02,  3.58it/s] 78% 31/40 [00:08<00:02,  3.53it/s] 78% 31/40 [00:08<00:02,  3.53it/s] 78% 31/40 [00:08<00:02,  3.51it/s] 80% 32/40 [00:08<00:02,  3.66it/s] 80% 32/40 [00:08<00:02,  3.58it/s] 80% 32/40 [00:08<00:02,  3.53it/s] 80% 32/40 [00:09<00:02,  3.55it/s] 80% 32/40 [00:09<00:02,  3.53it/s] 80% 32/40 [00:09<00:02,  3.54it/s] 80% 32/40 [00:09<00:02,  3.54it/s] 80% 32/40 [00:09<00:02,  3.53it/s] 82% 33/40 [00:09<00:01,  3.64it/s] 82% 33/40 [00:09<00:01,  3.62it/s] 82% 33/40 [00:09<00:01,  3.52it/s] 82% 33/40 [00:09<00:01,  3.62it/s] 82% 33/40 [00:09<00:01,  3.59it/s] 82% 33/40 [00:09<00:01,  3.55it/s] 82% 33/40 [00:09<00:02,  3.48it/s] 82% 33/40 [00:09<00:01,  3.51it/s] 85% 34/40 [00:09<00:01,  3.63it/s] 85% 34/40 [00:09<00:01,  3.58it/s] 85% 34/40 [00:09<00:01,  3.54it/s] 85% 34/40 [00:09<00:01,  3.66it/s] 85% 34/40 [00:09<00:01,  3.57it/s] 85% 34/40 [00:09<00:01,  3.58it/s] 85% 34/40 [00:09<00:01,  3.53it/s] 85% 34/40 [00:09<00:01,  3.50it/s] 88% 35/40 [00:09<00:01,  3.63it/s] 88% 35/40 [00:09<00:01,  3.60it/s] 88% 35/40 [00:09<00:01,  3.53it/s] 88% 35/40 [00:09<00:01,  3.56it/s] 88% 35/40 [00:09<00:01,  3.55it/s] 88% 35/40 [00:09<00:01,  3.58it/s] 88% 35/40 [00:09<00:01,  3.48it/s] 88% 35/40 [00:09<00:01,  3.49it/s] 90% 36/40 [00:09<00:01,  3.67it/s] 90% 36/40 [00:09<00:01,  3.59it/s] 90% 36/40 [00:10<00:01,  3.55it/s] 90% 36/40 [00:10<00:01,  3.58it/s] 90% 36/40 [00:10<00:01,  3.54it/s] 90% 36/40 [00:10<00:01,  3.51it/s] 90% 36/40 [00:10<00:01,  3.48it/s] 90% 36/40 [00:10<00:01,  3.47it/s] 92% 37/40 [00:10<00:00,  3.64it/s] 92% 37/40 [00:10<00:00,  3.59it/s] 92% 37/40 [00:10<00:00,  3.51it/s] 92% 37/40 [00:10<00:00,  3.62it/s] 92% 37/40 [00:10<00:00,  3.58it/s] 92% 37/40 [00:10<00:00,  3.49it/s] 92% 37/40 [00:10<00:00,  3.52it/s] 92% 37/40 [00:10<00:00,  3.48it/s] 95% 38/40 [00:10<00:00,  3.61it/s] 95% 38/40 [00:10<00:00,  3.61it/s] 98% 39/40 [00:10<00:00,  4.46it/s] 95% 38/40 [00:10<00:00,  3.51it/s] 95% 38/40 [00:10<00:00,  3.91it/s] 95% 38/40 [00:10<00:00,  3.65it/s] 95% 38/40 [00:10<00:00,  3.65it/s] 95% 38/40 [00:10<00:00,  3.54it/s] 95% 38/40 [00:10<00:00,  3.54it/s] 98% 39/40 [00:10<00:00,  3.88it/s] 98% 39/40 [00:10<00:00,  4.34it/s]100% 40/40 [00:10<00:00,  3.69it/s]
 98% 39/40 [00:10<00:00,  4.28it/s]100% 40/40 [00:10<00:00,  4.72it/s]100% 40/40 [00:10<00:00,  3.70it/s]
 98% 39/40 [00:10<00:00,  3.63it/s] 98% 39/40 [00:11<00:00,  3.76it/s]100% 40/40 [00:10<00:00,  4.54it/s]100% 40/40 [00:10<00:00,  3.65it/s]
100% 40/40 [00:11<00:00,  4.77it/s]100% 40/40 [00:11<00:00,  3.63it/s]
 98% 39/40 [00:10<00:00,  3.60it/s]100% 40/40 [00:10<00:00,  3.65it/s]
 98% 39/40 [00:11<00:00,  3.57it/s]100% 40/40 [00:11<00:00,  3.63it/s]
100% 40/40 [00:11<00:00,  3.60it/s]
100% 40/40 [00:11<00:00,  4.46it/s]100% 40/40 [00:11<00:00,  3.59it/s]
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.087528 (0.017740045166015624 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.145429 (0.01783268623352051 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.065667 (0.017705066680908203 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.082357 (0.01773177185058594 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.144214 (0.017830742645263672 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.145605 (0.017832968139648436 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.107124 (0.017771398162841796 s / img per device, on 8 devices)
2021-10-16 13:42:52,717 maskrcnn_benchmark.inference INFO: Total inference time: 0:00:11.073595 (0.01771775207519531 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.073595 (0.01771775207519531 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.026s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.026s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.026s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.026s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.026s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.026s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.027s
2021-10-16 13:42:52,898 maskrcnn_benchmark.timed_section INFO: EXPOSED: Launching evaluation preparation tasks took 0.032s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.032s
:::MLLOG {"namespace": "", "time_ms": 1634391772902, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 168, "first_epoch_num": 13, "epoch_count": 1}}
:::MLLOG {"namespace": "", "time_ms": 1634391772903, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 169, "epoch_num": 13}}
INFO:maskrcnn_benchmark.timed_section:Prepping took 7.135 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 7.212 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 7.216 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 7.214 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 7.213 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 7.319 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 7.737 seconds total
2021-10-16 13:43:01,740 maskrcnn_benchmark.timed_section INFO: Prepping took 7.714 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 7.714 seconds total
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.137s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.138s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.138s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.139s
2021-10-16 13:43:10,403 maskrcnn_benchmark.timed_section INFO: EXPOSED: Launching evaluation task took 0.139s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.139s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.139s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.139s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.139s
Evaluating predictions
Loading and preparing results...
resFile is ./inference/coco_2017_val/segm.json
Loading and preparing results...
resFile is ./inference/coco_2017_val/bbox.json
DONE (t=1.54s)
DONE (t=0.72s)
Running per image evaluation...
Evaluate annotation type *bbox*
Running per image evaluation...
Evaluate annotation type *segm*
DONE (t=1.67s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.37124
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.58671
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.40571
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.21388
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.40198
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.48028
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.30893
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.49017
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.51547
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.33218
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.54960
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.64635
DONE (t=2.51s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.33864
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.55506
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.35800
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.15221
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.36369
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.50127
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.29234
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.45008
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.47126
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.27981
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.50497
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.62360
INFO:maskrcnn_benchmark.trainer:eta: 1:18:32  iter: 11050  loss: 0.5563 (0.7928)  loss_classifier: 0.1554 (0.2668)  loss_box_reg: 0.0851 (0.1221)  loss_mask: 0.2469 (0.2944)  loss_objectness: 0.0235 (0.0508)  loss_rpn_box_reg: 0.0377 (0.0588)  time: 0.6271 (0.6780)  data: 0.0004 (0.0168)  lr: 0.016000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:18:32  iter: 11050  loss: 0.5661 (0.7954)  loss_classifier: 0.1714 (0.2677)  loss_box_reg: 0.0906 (0.1228)  loss_mask: 0.2618 (0.2944)  loss_objectness: 0.0212 (0.0514)  loss_rpn_box_reg: 0.0382 (0.0591)  time: 0.6273 (0.6780)  data: 0.0004 (0.0168)  lr: 0.016000  max mem: 14826
INFO:maskrcnn_benchmark.trainer:eta: 1:18:32  iter: 11050  loss: 0.6385 (0.7946)  loss_classifier: 0.1864 (0.2676)  loss_box_reg: 0.1061 (0.1229)  loss_mask: 0.2678 (0.2942)  loss_objectness: 0.0251 (0.0510)  loss_rpn_box_reg: 0.0465 (0.0590)  time: 0.6272 (0.6780)  data: 0.0004 (0.0168)  lr: 0.016000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:18:32  iter: 11050  loss: 0.5555 (0.7927)  loss_classifier: 0.1617 (0.2667)  loss_box_reg: 0.0840 (0.1221)  loss_mask: 0.2401 (0.2941)  loss_objectness: 0.0236 (0.0510)  loss_rpn_box_reg: 0.0363 (0.0589)  time: 0.6267 (0.6780)  data: 0.0004 (0.0168)  lr: 0.016000  max mem: 14790
INFO:maskrcnn_benchmark.trainer:eta: 1:18:32  iter: 11050  loss: 0.5799 (0.7932)  loss_classifier: 0.1835 (0.2669)  loss_box_reg: 0.0959 (0.1224)  loss_mask: 0.2449 (0.2940)  loss_objectness: 0.0269 (0.0510)  loss_rpn_box_reg: 0.0348 (0.0589)  time: 0.6264 (0.6780)  data: 0.0004 (0.0169)  lr: 0.016000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:18:32  iter: 11050  loss: 0.5954 (0.7949)  loss_classifier: 0.1737 (0.2674)  loss_box_reg: 0.0843 (0.1227)  loss_mask: 0.2505 (0.2945)  loss_objectness: 0.0250 (0.0511)  loss_rpn_box_reg: 0.0493 (0.0591)  time: 0.6258 (0.6780)  data: 0.0004 (0.0168)  lr: 0.016000  max mem: 14843
INFO:maskrcnn_benchmark.trainer:eta: 1:18:32  iter: 11050  loss: 0.5591 (0.7963)  loss_classifier: 0.1552 (0.2680)  loss_box_reg: 0.0901 (0.1227)  loss_mask: 0.2507 (0.2948)  loss_objectness: 0.0204 (0.0513)  loss_rpn_box_reg: 0.0373 (0.0594)  time: 0.6258 (0.6780)  data: 0.0004 (0.0168)  lr: 0.016000  max mem: 14792
2021-10-16 13:43:23,089 maskrcnn_benchmark.trainer INFO: eta: 1:18:32  iter: 11050  loss: 0.6384 (0.7971)  loss_classifier: 0.1970 (0.2684)  loss_box_reg: 0.1071 (0.1232)  loss_mask: 0.2544 (0.2947)  loss_objectness: 0.0283 (0.0514)  loss_rpn_box_reg: 0.0490 (0.0594)  time: 0.6258 (0.6780)  data: 0.0005 (0.0170)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:18:32  iter: 11050  loss: 0.6384 (0.7971)  loss_classifier: 0.1970 (0.2684)  loss_box_reg: 0.1071 (0.1232)  loss_mask: 0.2544 (0.2947)  loss_objectness: 0.0283 (0.0514)  loss_rpn_box_reg: 0.0490 (0.0594)  time: 0.6258 (0.6780)  data: 0.0005 (0.0170)  lr: 0.016000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634391803090, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.7971065876117119, "loss_classifier": 0.2684342168032179, "loss_box_reg": 0.12322782704410695, "loss_mask": 0.2946729426753467, "loss_objectness": 0.0513534646430706, "loss_rpn_box_reg": 0.0594181368645171, "time": 0.6780384589967684, "data": 0.017031278502347782, "throughput": 188.77985208890644}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 11050}}
:::MLLOG {"namespace": "", "time_ms": 1634391803090, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 188.77985208890644, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
2021-10-16 13:43:23,090 maskrcnn_benchmark.trainer INFO: bbox mAP: 0.37124101745429167, segm mAP: 0.3386447581304401
INFO:maskrcnn_benchmark.trainer:bbox mAP: 0.37124101745429167, segm mAP: 0.3386447581304401
:::MLLOG {"namespace": "", "time_ms": 1634391803090, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": {"BBOX": 0.37124101745429167, "SEGM": 0.3386447581304401}, "metadata": {"file": "tools/train_mlperf.py", "lineno": 133, "epoch_num": 12}}
:::MLLOG {"namespace": "", "time_ms": 1634391803090, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 134, "epoch_num": 12}}
INFO:maskrcnn_benchmark.trainer:eta: 1:17:57  iter: 11100  loss: 0.5932 (0.7919)  loss_classifier: 0.1834 (0.2664)  loss_box_reg: 0.0936 (0.1219)  loss_mask: 0.2495 (0.2942)  loss_objectness: 0.0246 (0.0506)  loss_rpn_box_reg: 0.0377 (0.0587)  time: 0.6306 (0.6778)  data: 0.0004 (0.0168)  lr: 0.016000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:17:56  iter: 11100  loss: 0.5932 (0.7946)  loss_classifier: 0.1863 (0.2674)  loss_box_reg: 0.0907 (0.1227)  loss_mask: 0.2529 (0.2942)  loss_objectness: 0.0242 (0.0513)  loss_rpn_box_reg: 0.0422 (0.0591)  time: 0.6309 (0.6778)  data: 0.0004 (0.0167)  lr: 0.016000  max mem: 14826
INFO:maskrcnn_benchmark.trainer:eta: 1:17:56  iter: 11100  loss: 0.5685 (0.7936)  loss_classifier: 0.1700 (0.2672)  loss_box_reg: 0.0868 (0.1227)  loss_mask: 0.2383 (0.2940)  loss_objectness: 0.0257 (0.0509)  loss_rpn_box_reg: 0.0443 (0.0589)  time: 0.6307 (0.6778)  data: 0.0004 (0.0167)  lr: 0.016000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:17:57  iter: 11100  loss: 0.6598 (0.7919)  loss_classifier: 0.2033 (0.2663)  loss_box_reg: 0.1031 (0.1220)  loss_mask: 0.2588 (0.2939)  loss_objectness: 0.0285 (0.0509)  loss_rpn_box_reg: 0.0498 (0.0589)  time: 0.6309 (0.6778)  data: 0.0004 (0.0168)  lr: 0.016000  max mem: 14790
INFO:maskrcnn_benchmark.trainer:eta: 1:17:57  iter: 11100  loss: 0.5877 (0.7923)  loss_classifier: 0.1734 (0.2665)  loss_box_reg: 0.0853 (0.1223)  loss_mask: 0.2489 (0.2938)  loss_objectness: 0.0210 (0.0509)  loss_rpn_box_reg: 0.0448 (0.0588)  time: 0.6299 (0.6778)  data: 0.0004 (0.0168)  lr: 0.016000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:17:57  iter: 11100  loss: 0.5925 (0.7941)  loss_classifier: 0.1671 (0.2670)  loss_box_reg: 0.0993 (0.1226)  loss_mask: 0.2478 (0.2943)  loss_objectness: 0.0260 (0.0510)  loss_rpn_box_reg: 0.0395 (0.0591)  time: 0.6293 (0.6778)  data: 0.0004 (0.0168)  lr: 0.016000  max mem: 14843
INFO:maskrcnn_benchmark.trainer:eta: 1:17:57  iter: 11100  loss: 0.6389 (0.7954)  loss_classifier: 0.1804 (0.2676)  loss_box_reg: 0.1021 (0.1226)  loss_mask: 0.2661 (0.2946)  loss_objectness: 0.0227 (0.0512)  loss_rpn_box_reg: 0.0497 (0.0593)  time: 0.6293 (0.6778)  data: 0.0004 (0.0167)  lr: 0.016000  max mem: 14792
2021-10-16 13:43:54,611 maskrcnn_benchmark.trainer INFO: eta: 1:17:56  iter: 11100  loss: 0.5643 (0.7962)  loss_classifier: 0.1769 (0.2680)  loss_box_reg: 0.0861 (0.1231)  loss_mask: 0.2538 (0.2945)  loss_objectness: 0.0236 (0.0512)  loss_rpn_box_reg: 0.0370 (0.0594)  time: 0.6294 (0.6778)  data: 0.0004 (0.0170)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:17:56  iter: 11100  loss: 0.5643 (0.7962)  loss_classifier: 0.1769 (0.2680)  loss_box_reg: 0.0861 (0.1231)  loss_mask: 0.2538 (0.2945)  loss_objectness: 0.0236 (0.0512)  loss_rpn_box_reg: 0.0370 (0.0594)  time: 0.6294 (0.6778)  data: 0.0004 (0.0170)  lr: 0.016000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634391834611, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.7962247899792216, "loss_classifier": 0.2680457703443664, "loss_box_reg": 0.12309889152794992, "loss_mask": 0.2944910022522415, "loss_objectness": 0.051236620118992555, "loss_rpn_box_reg": 0.05935250617985337, "time": 0.6778240378697713, "data": 0.016956428450507086, "throughput": 188.8395702257351}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 11100}}
:::MLLOG {"namespace": "", "time_ms": 1634391834612, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 188.8395702257351, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:17:21  iter: 11150  loss: 0.5867 (0.7944)  loss_classifier: 0.1683 (0.2672)  loss_box_reg: 0.0866 (0.1225)  loss_mask: 0.2497 (0.2944)  loss_objectness: 0.0240 (0.0511)  loss_rpn_box_reg: 0.0357 (0.0592)  time: 0.6244 (0.6776)  data: 0.0004 (0.0167)  lr: 0.016000  max mem: 14792
2021-10-16 13:44:25,946 maskrcnn_benchmark.trainer INFO: eta: 1:17:21  iter: 11150  loss: 0.5807 (0.7955)  loss_classifier: 0.1730 (0.2677)  loss_box_reg: 0.0886 (0.1230)  loss_mask: 0.2562 (0.2943)  loss_objectness: 0.0260 (0.0511)  loss_rpn_box_reg: 0.0372 (0.0593)  time: 0.6246 (0.6776)  data: 0.0004 (0.0169)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:17:21  iter: 11150  loss: 0.5807 (0.7955)  loss_classifier: 0.1730 (0.2677)  loss_box_reg: 0.0886 (0.1230)  loss_mask: 0.2562 (0.2943)  loss_objectness: 0.0260 (0.0511)  loss_rpn_box_reg: 0.0372 (0.0593)  time: 0.6246 (0.6776)  data: 0.0004 (0.0169)  lr: 0.016000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634391865946, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.79545679164307, "loss_classifier": 0.26770080249906925, "loss_box_reg": 0.12300146037167682, "loss_mask": 0.2943117031708961, "loss_objectness": 0.0511404126322089, "loss_rpn_box_reg": 0.05930241342903336, "time": 0.6775947789974811, "data": 0.01688271494724291, "throughput": 188.90346261135497}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 11150}}
:::MLLOG {"namespace": "", "time_ms": 1634391865947, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 188.90346261135497, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:17:21  iter: 11150  loss: 0.5882 (0.7931)  loss_classifier: 0.1793 (0.2666)  loss_box_reg: 0.0952 (0.1225)  loss_mask: 0.2514 (0.2941)  loss_objectness: 0.0249 (0.0509)  loss_rpn_box_reg: 0.0404 (0.0590)  time: 0.6244 (0.6776)  data: 0.0004 (0.0167)  lr: 0.016000  max mem: 14843
INFO:maskrcnn_benchmark.trainer:eta: 1:17:21  iter: 11150  loss: 0.5743 (0.7914)  loss_classifier: 0.1804 (0.2661)  loss_box_reg: 0.0866 (0.1222)  loss_mask: 0.2406 (0.2936)  loss_objectness: 0.0228 (0.0508)  loss_rpn_box_reg: 0.0381 (0.0588)  time: 0.6261 (0.6776)  data: 0.0003 (0.0167)  lr: 0.016000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:17:21  iter: 11150  loss: 0.6331 (0.7910)  loss_classifier: 0.1912 (0.2659)  loss_box_reg: 0.1005 (0.1218)  loss_mask: 0.2569 (0.2937)  loss_objectness: 0.0280 (0.0508)  loss_rpn_box_reg: 0.0401 (0.0588)  time: 0.6256 (0.6776)  data: 0.0004 (0.0167)  lr: 0.016000  max mem: 14790
INFO:maskrcnn_benchmark.trainer:eta: 1:17:21  iter: 11150  loss: 0.5890 (0.7909)  loss_classifier: 0.1802 (0.2660)  loss_box_reg: 0.0955 (0.1218)  loss_mask: 0.2517 (0.2940)  loss_objectness: 0.0285 (0.0505)  loss_rpn_box_reg: 0.0415 (0.0586)  time: 0.6263 (0.6776)  data: 0.0004 (0.0167)  lr: 0.016000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:17:21  iter: 11150  loss: 0.5587 (0.7926)  loss_classifier: 0.1801 (0.2667)  loss_box_reg: 0.0865 (0.1226)  loss_mask: 0.2469 (0.2938)  loss_objectness: 0.0204 (0.0507)  loss_rpn_box_reg: 0.0344 (0.0588)  time: 0.6264 (0.6776)  data: 0.0004 (0.0167)  lr: 0.016000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:17:21  iter: 11150  loss: 0.6128 (0.7937)  loss_classifier: 0.1794 (0.2670)  loss_box_reg: 0.0964 (0.1225)  loss_mask: 0.2388 (0.2940)  loss_objectness: 0.0248 (0.0512)  loss_rpn_box_reg: 0.0412 (0.0590)  time: 0.6263 (0.6776)  data: 0.0004 (0.0167)  lr: 0.016000  max mem: 14826
INFO:maskrcnn_benchmark.trainer:eta: 1:16:46  iter: 11200  loss: 0.5986 (0.7901)  loss_classifier: 0.1687 (0.2656)  loss_box_reg: 0.0838 (0.1217)  loss_mask: 0.2533 (0.2938)  loss_objectness: 0.0250 (0.0504)  loss_rpn_box_reg: 0.0319 (0.0585)  time: 0.6280 (0.6774)  data: 0.0004 (0.0166)  lr: 0.016000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:16:46  iter: 11200  loss: 0.6348 (0.7906)  loss_classifier: 0.1906 (0.2658)  loss_box_reg: 0.1045 (0.1221)  loss_mask: 0.2590 (0.2934)  loss_objectness: 0.0234 (0.0507)  loss_rpn_box_reg: 0.0433 (0.0587)  time: 0.6280 (0.6774)  data: 0.0004 (0.0166)  lr: 0.016000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:16:46  iter: 11200  loss: 0.5729 (0.7918)  loss_classifier: 0.1672 (0.2664)  loss_box_reg: 0.0828 (0.1224)  loss_mask: 0.2502 (0.2936)  loss_objectness: 0.0234 (0.0506)  loss_rpn_box_reg: 0.0530 (0.0588)  time: 0.6279 (0.6774)  data: 0.0004 (0.0166)  lr: 0.016000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:16:46  iter: 11200  loss: 0.5947 (0.7929)  loss_classifier: 0.1715 (0.2666)  loss_box_reg: 0.0992 (0.1224)  loss_mask: 0.2575 (0.2938)  loss_objectness: 0.0251 (0.0511)  loss_rpn_box_reg: 0.0472 (0.0590)  time: 0.6279 (0.6774)  data: 0.0004 (0.0166)  lr: 0.016000  max mem: 14826
INFO:maskrcnn_benchmark.trainer:eta: 1:16:46  iter: 11200  loss: 0.5909 (0.7901)  loss_classifier: 0.1730 (0.2655)  loss_box_reg: 0.0952 (0.1217)  loss_mask: 0.2468 (0.2935)  loss_objectness: 0.0237 (0.0507)  loss_rpn_box_reg: 0.0365 (0.0587)  time: 0.6280 (0.6774)  data: 0.0004 (0.0166)  lr: 0.016000  max mem: 14790
INFO:maskrcnn_benchmark.trainer:eta: 1:16:46  iter: 11200  loss: 0.5411 (0.7923)  loss_classifier: 0.1695 (0.2663)  loss_box_reg: 0.0772 (0.1224)  loss_mask: 0.2360 (0.2939)  loss_objectness: 0.0229 (0.0508)  loss_rpn_box_reg: 0.0462 (0.0590)  time: 0.6277 (0.6774)  data: 0.0003 (0.0166)  lr: 0.016000  max mem: 14843
2021-10-16 13:44:57,419 maskrcnn_benchmark.trainer INFO: eta: 1:16:46  iter: 11200  loss: 0.5742 (0.7945)  loss_classifier: 0.1683 (0.2673)  loss_box_reg: 0.0846 (0.1229)  loss_mask: 0.2478 (0.2941)  loss_objectness: 0.0257 (0.0510)  loss_rpn_box_reg: 0.0393 (0.0592)  time: 0.6277 (0.6774)  data: 0.0004 (0.0168)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:16:46  iter: 11200  loss: 0.5761 (0.7936)  loss_classifier: 0.1688 (0.2668)  loss_box_reg: 0.0947 (0.1223)  loss_mask: 0.2513 (0.2943)  loss_objectness: 0.0266 (0.0510)  loss_rpn_box_reg: 0.0479 (0.0591)  time: 0.6276 (0.6774)  data: 0.0004 (0.0166)  lr: 0.016000  max mem: 14792
INFO:maskrcnn_benchmark.trainer:eta: 1:16:46  iter: 11200  loss: 0.5742 (0.7945)  loss_classifier: 0.1683 (0.2673)  loss_box_reg: 0.0846 (0.1229)  loss_mask: 0.2478 (0.2941)  loss_objectness: 0.0257 (0.0510)  loss_rpn_box_reg: 0.0393 (0.0592)  time: 0.6277 (0.6774)  data: 0.0004 (0.0168)  lr: 0.016000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634391897419, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.7945194903840976, "loss_classifier": 0.26729109910948734, "loss_box_reg": 0.12286645210030006, "loss_mask": 0.2941100014639752, "loss_objectness": 0.05102688623891611, "loss_rpn_box_reg": 0.05922505193674754, "time": 0.6773798861035278, "data": 0.01680936987910952, "throughput": 188.96339059650944}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 11200}}
:::MLLOG {"namespace": "", "time_ms": 1634391897419, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 188.96339059650944, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:16:10  iter: 11250  loss: 0.5774 (0.7914)  loss_classifier: 0.1754 (0.2659)  loss_box_reg: 0.0948 (0.1223)  loss_mask: 0.2461 (0.2937)  loss_objectness: 0.0227 (0.0507)  loss_rpn_box_reg: 0.0356 (0.0589)  time: 0.6267 (0.6772)  data: 0.0004 (0.0165)  lr: 0.016000  max mem: 14843
INFO:maskrcnn_benchmark.trainer:eta: 1:16:10  iter: 11250  loss: 0.5819 (0.7926)  loss_classifier: 0.1695 (0.2665)  loss_box_reg: 0.0920 (0.1222)  loss_mask: 0.2441 (0.2940)  loss_objectness: 0.0225 (0.0509)  loss_rpn_box_reg: 0.0373 (0.0591)  time: 0.6267 (0.6772)  data: 0.0003 (0.0165)  lr: 0.016000  max mem: 14792
2021-10-16 13:45:28,871 maskrcnn_benchmark.trainer INFO: eta: 1:16:10  iter: 11250  loss: 0.5351 (0.7937)  loss_classifier: 0.1577 (0.2669)  loss_box_reg: 0.0795 (0.1227)  loss_mask: 0.2375 (0.2939)  loss_objectness: 0.0224 (0.0509)  loss_rpn_box_reg: 0.0338 (0.0592)  time: 0.6268 (0.6772)  data: 0.0003 (0.0167)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:16:10  iter: 11250  loss: 0.5351 (0.7937)  loss_classifier: 0.1577 (0.2669)  loss_box_reg: 0.0795 (0.1227)  loss_mask: 0.2375 (0.2939)  loss_objectness: 0.0224 (0.0509)  loss_rpn_box_reg: 0.0338 (0.0592)  time: 0.6268 (0.6772)  data: 0.0003 (0.0167)  lr: 0.016000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634391928871, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.7936666353225708, "loss_classifier": 0.2669218329042196, "loss_box_reg": 0.12274696484851755, "loss_mask": 0.29391018286148707, "loss_objectness": 0.05092410236158305, "loss_rpn_box_reg": 0.059163552836101085, "time": 0.6771650193108453, "data": 0.016736990377638074, "throughput": 189.0233493311074}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 11250}}
:::MLLOG {"namespace": "", "time_ms": 1634391928871, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 189.0233493311074, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:16:10  iter: 11250  loss: 0.5776 (0.7893)  loss_classifier: 0.1704 (0.2651)  loss_box_reg: 0.0908 (0.1216)  loss_mask: 0.2501 (0.2933)  loss_objectness: 0.0259 (0.0506)  loss_rpn_box_reg: 0.0414 (0.0587)  time: 0.6269 (0.6772)  data: 0.0004 (0.0166)  lr: 0.016000  max mem: 14790
INFO:maskrcnn_benchmark.trainer:eta: 1:16:10  iter: 11250  loss: 0.5858 (0.7897)  loss_classifier: 0.1830 (0.2654)  loss_box_reg: 0.0863 (0.1219)  loss_mask: 0.2384 (0.2931)  loss_objectness: 0.0249 (0.0506)  loss_rpn_box_reg: 0.0414 (0.0586)  time: 0.6271 (0.6772)  data: 0.0004 (0.0166)  lr: 0.016000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:16:10  iter: 11250  loss: 0.6238 (0.7893)  loss_classifier: 0.1962 (0.2653)  loss_box_reg: 0.1005 (0.1216)  loss_mask: 0.2580 (0.2936)  loss_objectness: 0.0298 (0.0503)  loss_rpn_box_reg: 0.0378 (0.0585)  time: 0.6272 (0.6772)  data: 0.0004 (0.0165)  lr: 0.016000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:16:10  iter: 11250  loss: 0.5831 (0.7920)  loss_classifier: 0.1943 (0.2663)  loss_box_reg: 0.0977 (0.1223)  loss_mask: 0.2406 (0.2936)  loss_objectness: 0.0248 (0.0510)  loss_rpn_box_reg: 0.0337 (0.0589)  time: 0.6271 (0.6772)  data: 0.0004 (0.0165)  lr: 0.016000  max mem: 14826
INFO:maskrcnn_benchmark.trainer:eta: 1:16:10  iter: 11250  loss: 0.5932 (0.7910)  loss_classifier: 0.1905 (0.2660)  loss_box_reg: 0.0895 (0.1223)  loss_mask: 0.2524 (0.2934)  loss_objectness: 0.0260 (0.0505)  loss_rpn_box_reg: 0.0395 (0.0587)  time: 0.6271 (0.6772)  data: 0.0004 (0.0165)  lr: 0.016000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:15:35  iter: 11300  loss: 0.5922 (0.7888)  loss_classifier: 0.1735 (0.2650)  loss_box_reg: 0.0917 (0.1218)  loss_mask: 0.2504 (0.2929)  loss_objectness: 0.0217 (0.0504)  loss_rpn_box_reg: 0.0389 (0.0586)  time: 0.6274 (0.6770)  data: 0.0004 (0.0165)  lr: 0.016000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:15:35  iter: 11300  loss: 0.5907 (0.7884)  loss_classifier: 0.1791 (0.2647)  loss_box_reg: 0.0938 (0.1214)  loss_mask: 0.2490 (0.2931)  loss_objectness: 0.0224 (0.0505)  loss_rpn_box_reg: 0.0447 (0.0586)  time: 0.6274 (0.6770)  data: 0.0004 (0.0165)  lr: 0.016000  max mem: 14790
INFO:maskrcnn_benchmark.trainer:eta: 1:15:35  iter: 11300  loss: 0.5426 (0.7905)  loss_classifier: 0.1606 (0.2655)  loss_box_reg: 0.0838 (0.1221)  loss_mask: 0.2402 (0.2935)  loss_objectness: 0.0239 (0.0506)  loss_rpn_box_reg: 0.0397 (0.0588)  time: 0.6284 (0.6770)  data: 0.0004 (0.0165)  lr: 0.016000  max mem: 14843
2021-10-16 13:46:00,302 maskrcnn_benchmark.trainer INFO: eta: 1:15:35  iter: 11300  loss: 0.5891 (0.7929)  loss_classifier: 0.1849 (0.2666)  loss_box_reg: 0.1021 (0.1227)  loss_mask: 0.2592 (0.2937)  loss_objectness: 0.0229 (0.0508)  loss_rpn_box_reg: 0.0477 (0.0591)  time: 0.6284 (0.6770)  data: 0.0004 (0.0167)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:15:35  iter: 11300  loss: 0.6106 (0.7918)  loss_classifier: 0.1861 (0.2661)  loss_box_reg: 0.0933 (0.1221)  loss_mask: 0.2494 (0.2939)  loss_objectness: 0.0227 (0.0507)  loss_rpn_box_reg: 0.0427 (0.0590)  time: 0.6284 (0.6770)  data: 0.0004 (0.0165)  lr: 0.016000  max mem: 14938
INFO:maskrcnn_benchmark.trainer:eta: 1:15:35  iter: 11300  loss: 0.5891 (0.7929)  loss_classifier: 0.1849 (0.2666)  loss_box_reg: 0.1021 (0.1227)  loss_mask: 0.2592 (0.2937)  loss_objectness: 0.0229 (0.0508)  loss_rpn_box_reg: 0.0477 (0.0591)  time: 0.6284 (0.6770)  data: 0.0004 (0.0167)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:15:35  iter: 11300  loss: 0.5595 (0.7911)  loss_classifier: 0.1757 (0.2659)  loss_box_reg: 0.0874 (0.1222)  loss_mask: 0.2497 (0.2934)  loss_objectness: 0.0213 (0.0509)  loss_rpn_box_reg: 0.0355 (0.0588)  time: 0.6277 (0.6769)  data: 0.0004 (0.0165)  lr: 0.016000  max mem: 14826
INFO:maskrcnn_benchmark.trainer:eta: 1:15:35  iter: 11300  loss: 0.5645 (0.7885)  loss_classifier: 0.1712 (0.2649)  loss_box_reg: 0.0859 (0.1215)  loss_mask: 0.2491 (0.2934)  loss_objectness: 0.0196 (0.0502)  loss_rpn_box_reg: 0.0355 (0.0584)  time: 0.6276 (0.6770)  data: 0.0004 (0.0165)  lr: 0.016000  max mem: 15034
:::MLLOG {"namespace": "", "time_ms": 1634391960302, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.7929212234690126, "loss_classifier": 0.26660498011725403, "loss_box_reg": 0.12265312680313199, "loss_mask": 0.2937376198264877, "loss_objectness": 0.05082235415902945, "loss_rpn_box_reg": 0.05910314305250706, "time": 0.6769502530266753, "data": 0.016665148439660535, "throughput": 189.083318054327}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 11300}}
INFO:maskrcnn_benchmark.trainer:eta: 1:15:35  iter: 11300  loss: 0.5622 (0.7902)  loss_classifier: 0.1859 (0.2657)  loss_box_reg: 0.0917 (0.1222)  loss_mask: 0.2494 (0.2932)  loss_objectness: 0.0205 (0.0504)  loss_rpn_box_reg: 0.0349 (0.0586)  time: 0.6276 (0.6769)  data: 0.0004 (0.0165)  lr: 0.016000  max mem: 14803
:::MLLOG {"namespace": "", "time_ms": 1634391960303, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 189.083318054327, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:15:00  iter: 11350  loss: 0.6012 (0.7875)  loss_classifier: 0.1684 (0.2643)  loss_box_reg: 0.0878 (0.1213)  loss_mask: 0.2418 (0.2929)  loss_objectness: 0.0220 (0.0504)  loss_rpn_box_reg: 0.0584 (0.0586)  time: 0.6246 (0.6767)  data: 0.0004 (0.0164)  lr: 0.016000  max mem: 14790
INFO:maskrcnn_benchmark.trainer:eta: 1:15:00  iter: 11350  loss: 0.6248 (0.7880)  loss_classifier: 0.1967 (0.2647)  loss_box_reg: 0.0987 (0.1217)  loss_mask: 0.2530 (0.2928)  loss_objectness: 0.0268 (0.0503)  loss_rpn_box_reg: 0.0374 (0.0585)  time: 0.6248 (0.6767)  data: 0.0004 (0.0164)  lr: 0.016000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:15:00  iter: 11350  loss: 0.5918 (0.7897)  loss_classifier: 0.1786 (0.2651)  loss_box_reg: 0.0891 (0.1220)  loss_mask: 0.2452 (0.2933)  loss_objectness: 0.0220 (0.0504)  loss_rpn_box_reg: 0.0409 (0.0588)  time: 0.6248 (0.6767)  data: 0.0004 (0.0164)  lr: 0.016000  max mem: 14843
2021-10-16 13:46:31,724 maskrcnn_benchmark.trainer INFO: eta: 1:15:00  iter: 11350  loss: 0.6432 (0.7922)  loss_classifier: 0.1896 (0.2663)  loss_box_reg: 0.1060 (0.1226)  loss_mask: 0.2561 (0.2936)  loss_objectness: 0.0286 (0.0507)  loss_rpn_box_reg: 0.0345 (0.0590)  time: 0.6249 (0.6767)  data: 0.0004 (0.0166)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:15:00  iter: 11350  loss: 0.6323 (0.7910)  loss_classifier: 0.1922 (0.2657)  loss_box_reg: 0.1029 (0.1220)  loss_mask: 0.2554 (0.2936)  loss_objectness: 0.0262 (0.0506)  loss_rpn_box_reg: 0.0451 (0.0590)  time: 0.6249 (0.6767)  data: 0.0004 (0.0164)  lr: 0.016000  max mem: 14938
INFO:maskrcnn_benchmark.trainer:eta: 1:15:00  iter: 11350  loss: 0.6432 (0.7922)  loss_classifier: 0.1896 (0.2663)  loss_box_reg: 0.1060 (0.1226)  loss_mask: 0.2561 (0.2936)  loss_objectness: 0.0286 (0.0507)  loss_rpn_box_reg: 0.0345 (0.0590)  time: 0.6249 (0.6767)  data: 0.0004 (0.0166)  lr: 0.016000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634391991724, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.7922317712895145, "loss_classifier": 0.2663231771426185, "loss_box_reg": 0.12256840445739238, "loss_mask": 0.29356393384907215, "loss_objectness": 0.050730536986667546, "loss_rpn_box_reg": 0.05904571931942526, "time": 0.6767365291990373, "data": 0.016593805871871075, "throughput": 189.14303348083857}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 11350}}
INFO:maskrcnn_benchmark.trainer:eta: 1:15:00  iter: 11350  loss: 0.5905 (0.7876)  loss_classifier: 0.1722 (0.2646)  loss_box_reg: 0.0965 (0.1213)  loss_mask: 0.2426 (0.2932)  loss_objectness: 0.0253 (0.0501)  loss_rpn_box_reg: 0.0396 (0.0584)  time: 0.6261 (0.6767)  data: 0.0004 (0.0164)  lr: 0.016000  max mem: 15034
:::MLLOG {"namespace": "", "time_ms": 1634391991724, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 189.14303348083857, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:15:00  iter: 11350  loss: 0.6016 (0.7894)  loss_classifier: 0.1691 (0.2653)  loss_box_reg: 0.0971 (0.1221)  loss_mask: 0.2509 (0.2930)  loss_objectness: 0.0235 (0.0503)  loss_rpn_box_reg: 0.0481 (0.0586)  time: 0.6259 (0.6767)  data: 0.0004 (0.0164)  lr: 0.016000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:15:00  iter: 11350  loss: 0.5794 (0.7902)  loss_classifier: 0.1770 (0.2655)  loss_box_reg: 0.0967 (0.1220)  loss_mask: 0.2493 (0.2932)  loss_objectness: 0.0217 (0.0507)  loss_rpn_box_reg: 0.0466 (0.0587)  time: 0.6257 (0.6767)  data: 0.0004 (0.0164)  lr: 0.016000  max mem: 14826
INFO:maskrcnn_benchmark.trainer:eta: 1:14:25  iter: 11400  loss: 0.5790 (0.7872)  loss_classifier: 0.1694 (0.2643)  loss_box_reg: 0.0794 (0.1216)  loss_mask: 0.2497 (0.2926)  loss_objectness: 0.0250 (0.0502)  loss_rpn_box_reg: 0.0358 (0.0585)  time: 0.6250 (0.6765)  data: 0.0004 (0.0164)  lr: 0.016000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:14:25  iter: 11400  loss: 0.5931 (0.7867)  loss_classifier: 0.1826 (0.2640)  loss_box_reg: 0.0955 (0.1212)  loss_mask: 0.2494 (0.2927)  loss_objectness: 0.0237 (0.0503)  loss_rpn_box_reg: 0.0348 (0.0585)  time: 0.6249 (0.6765)  data: 0.0004 (0.0163)  lr: 0.016000  max mem: 14790
INFO:maskrcnn_benchmark.trainer:eta: 1:14:25  iter: 11400  loss: 0.6013 (0.7869)  loss_classifier: 0.1826 (0.2642)  loss_box_reg: 0.0967 (0.1212)  loss_mask: 0.2545 (0.2931)  loss_objectness: 0.0267 (0.0500)  loss_rpn_box_reg: 0.0487 (0.0583)  time: 0.6251 (0.6765)  data: 0.0004 (0.0163)  lr: 0.016000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:14:25  iter: 11400  loss: 0.5533 (0.7893)  loss_classifier: 0.1671 (0.2651)  loss_box_reg: 0.0888 (0.1219)  loss_mask: 0.2418 (0.2930)  loss_objectness: 0.0238 (0.0506)  loss_rpn_box_reg: 0.0410 (0.0587)  time: 0.6251 (0.6765)  data: 0.0003 (0.0163)  lr: 0.016000  max mem: 14826
INFO:maskrcnn_benchmark.trainer:eta: 1:14:25  iter: 11400  loss: 0.5737 (0.7885)  loss_classifier: 0.1700 (0.2649)  loss_box_reg: 0.0852 (0.1220)  loss_mask: 0.2400 (0.2928)  loss_objectness: 0.0233 (0.0502)  loss_rpn_box_reg: 0.0331 (0.0585)  time: 0.6251 (0.6765)  data: 0.0004 (0.0163)  lr: 0.016000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:14:25  iter: 11400  loss: 0.5657 (0.7889)  loss_classifier: 0.1666 (0.2648)  loss_box_reg: 0.0888 (0.1219)  loss_mask: 0.2507 (0.2931)  loss_objectness: 0.0199 (0.0503)  loss_rpn_box_reg: 0.0347 (0.0587)  time: 0.6251 (0.6765)  data: 0.0003 (0.0163)  lr: 0.016000  max mem: 14843
2021-10-16 13:47:03,210 maskrcnn_benchmark.trainer INFO: eta: 1:14:25  iter: 11400  loss: 0.5682 (0.7915)  loss_classifier: 0.1734 (0.2660)  loss_box_reg: 0.0828 (0.1225)  loss_mask: 0.2422 (0.2934)  loss_objectness: 0.0252 (0.0506)  loss_rpn_box_reg: 0.0443 (0.0590)  time: 0.6253 (0.6765)  data: 0.0004 (0.0165)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:14:25  iter: 11400  loss: 0.5507 (0.7901)  loss_classifier: 0.1631 (0.2654)  loss_box_reg: 0.0825 (0.1218)  loss_mask: 0.2469 (0.2934)  loss_objectness: 0.0248 (0.0505)  loss_rpn_box_reg: 0.0444 (0.0589)  time: 0.6252 (0.6765)  data: 0.0004 (0.0163)  lr: 0.016000  max mem: 14938
INFO:maskrcnn_benchmark.trainer:eta: 1:14:25  iter: 11400  loss: 0.5682 (0.7915)  loss_classifier: 0.1734 (0.2660)  loss_box_reg: 0.0828 (0.1225)  loss_mask: 0.2422 (0.2934)  loss_objectness: 0.0252 (0.0506)  loss_rpn_box_reg: 0.0443 (0.0590)  time: 0.6253 (0.6765)  data: 0.0004 (0.0165)  lr: 0.016000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634392023210, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.7914635397127846, "loss_classifier": 0.2659875490578512, "loss_box_reg": 0.12246772284552111, "loss_mask": 0.29339312220090313, "loss_objectness": 0.05062602361778549, "loss_rpn_box_reg": 0.05898912245099302, "time": 0.6765303093090392, "data": 0.016523252014528242, "throughput": 189.20068803824955}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 11400}}
:::MLLOG {"namespace": "", "time_ms": 1634392023210, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 189.20068803824955, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:13:49  iter: 11450  loss: 0.6086 (0.7863)  loss_classifier: 0.1617 (0.2639)  loss_box_reg: 0.0830 (0.1215)  loss_mask: 0.2579 (0.2924)  loss_objectness: 0.0232 (0.0501)  loss_rpn_box_reg: 0.0429 (0.0584)  time: 0.6256 (0.6763)  data: 0.0004 (0.0163)  lr: 0.016000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:13:49  iter: 11450  loss: 0.5695 (0.7879)  loss_classifier: 0.1689 (0.2644)  loss_box_reg: 0.0849 (0.1218)  loss_mask: 0.2391 (0.2929)  loss_objectness: 0.0211 (0.0502)  loss_rpn_box_reg: 0.0447 (0.0586)  time: 0.6272 (0.6763)  data: 0.0003 (0.0163)  lr: 0.016000  max mem: 14843
2021-10-16 13:47:34,579 maskrcnn_benchmark.trainer INFO: eta: 1:13:49  iter: 11450  loss: 0.5580 (0.7905)  loss_classifier: 0.1647 (0.2656)  loss_box_reg: 0.0834 (0.1223)  loss_mask: 0.2382 (0.2932)  loss_objectness: 0.0236 (0.0505)  loss_rpn_box_reg: 0.0350 (0.0589)  time: 0.6274 (0.6763)  data: 0.0003 (0.0165)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:13:49  iter: 11450  loss: 0.5127 (0.7892)  loss_classifier: 0.1634 (0.2650)  loss_box_reg: 0.0773 (0.1217)  loss_mask: 0.2382 (0.2933)  loss_objectness: 0.0219 (0.0504)  loss_rpn_box_reg: 0.0326 (0.0588)  time: 0.6274 (0.6763)  data: 0.0003 (0.0162)  lr: 0.016000  max mem: 14938
INFO:maskrcnn_benchmark.trainer:eta: 1:13:49  iter: 11450  loss: 0.5580 (0.7905)  loss_classifier: 0.1647 (0.2656)  loss_box_reg: 0.0834 (0.1223)  loss_mask: 0.2382 (0.2932)  loss_objectness: 0.0236 (0.0505)  loss_rpn_box_reg: 0.0350 (0.0589)  time: 0.6274 (0.6763)  data: 0.0003 (0.0165)  lr: 0.016000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634392054579, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.7905360739512215, "loss_classifier": 0.265582926491007, "loss_box_reg": 0.12232937062620775, "loss_mask": 0.2931986185101442, "loss_objectness": 0.050513513409837625, "loss_rpn_box_reg": 0.058911645365533255, "time": 0.676315653605232, "data": 0.016453027954268142, "throughput": 189.26073841063877}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 11450}}
:::MLLOG {"namespace": "", "time_ms": 1634392054579, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 189.26073841063877, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:13:49  iter: 11450  loss: 0.6221 (0.7859)  loss_classifier: 0.1886 (0.2636)  loss_box_reg: 0.0991 (0.1211)  loss_mask: 0.2488 (0.2925)  loss_objectness: 0.0246 (0.0502)  loss_rpn_box_reg: 0.0407 (0.0585)  time: 0.6262 (0.6763)  data: 0.0004 (0.0163)  lr: 0.016000  max mem: 14790
INFO:maskrcnn_benchmark.trainer:eta: 1:13:49  iter: 11450  loss: 0.5688 (0.7860)  loss_classifier: 0.1650 (0.2639)  loss_box_reg: 0.0886 (0.1211)  loss_mask: 0.2352 (0.2929)  loss_objectness: 0.0256 (0.0499)  loss_rpn_box_reg: 0.0395 (0.0583)  time: 0.6261 (0.6763)  data: 0.0004 (0.0163)  lr: 0.016000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:13:49  iter: 11450  loss: 0.5533 (0.7876)  loss_classifier: 0.1644 (0.2645)  loss_box_reg: 0.0852 (0.1218)  loss_mask: 0.2481 (0.2927)  loss_objectness: 0.0240 (0.0501)  loss_rpn_box_reg: 0.0401 (0.0584)  time: 0.6262 (0.6763)  data: 0.0004 (0.0163)  lr: 0.016000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:13:49  iter: 11450  loss: 0.5911 (0.7884)  loss_classifier: 0.1805 (0.2647)  loss_box_reg: 0.0984 (0.1218)  loss_mask: 0.2425 (0.2928)  loss_objectness: 0.0248 (0.0505)  loss_rpn_box_reg: 0.0424 (0.0586)  time: 0.6261 (0.6763)  data: 0.0004 (0.0163)  lr: 0.016000  max mem: 14826
INFO:maskrcnn_benchmark.trainer:eta: 1:13:14  iter: 11500  loss: 0.6208 (0.7870)  loss_classifier: 0.1885 (0.2640)  loss_box_reg: 0.0942 (0.1216)  loss_mask: 0.2498 (0.2927)  loss_objectness: 0.0277 (0.0501)  loss_rpn_box_reg: 0.0365 (0.0585)  time: 0.6286 (0.6761)  data: 0.0004 (0.0162)  lr: 0.016000  max mem: 14843
2021-10-16 13:48:05,944 maskrcnn_benchmark.trainer INFO: eta: 1:13:14  iter: 11500  loss: 0.5471 (0.7897)  loss_classifier: 0.1646 (0.2652)  loss_box_reg: 0.0853 (0.1222)  loss_mask: 0.2352 (0.2930)  loss_objectness: 0.0240 (0.0504)  loss_rpn_box_reg: 0.0405 (0.0588)  time: 0.6282 (0.6761)  data: 0.0003 (0.0164)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:13:14  iter: 11500  loss: 0.5446 (0.7882)  loss_classifier: 0.1645 (0.2646)  loss_box_reg: 0.0841 (0.1216)  loss_mask: 0.2371 (0.2930)  loss_objectness: 0.0237 (0.0503)  loss_rpn_box_reg: 0.0329 (0.0587)  time: 0.6283 (0.6761)  data: 0.0004 (0.0162)  lr: 0.016000  max mem: 14938
INFO:maskrcnn_benchmark.trainer:eta: 1:13:14  iter: 11500  loss: 0.5471 (0.7897)  loss_classifier: 0.1646 (0.2652)  loss_box_reg: 0.0853 (0.1222)  loss_mask: 0.2352 (0.2930)  loss_objectness: 0.0240 (0.0504)  loss_rpn_box_reg: 0.0405 (0.0588)  time: 0.6282 (0.6761)  data: 0.0003 (0.0164)  lr: 0.016000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634392085944, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.7896539784643961, "loss_classifier": 0.26522184449984976, "loss_box_reg": 0.12220386291601007, "loss_mask": 0.29299907532982206, "loss_objectness": 0.050398387008954, "loss_rpn_box_reg": 0.05883080912909835, "time": 0.6761025519163713, "data": 0.016383629923281462, "throughput": 189.32039176185899}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 11500}}
:::MLLOG {"namespace": "", "time_ms": 1634392085944, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 189.32039176185899, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:13:14  iter: 11500  loss: 0.5672 (0.7854)  loss_classifier: 0.1728 (0.2636)  loss_box_reg: 0.0853 (0.1213)  loss_mask: 0.2435 (0.2922)  loss_objectness: 0.0224 (0.0500)  loss_rpn_box_reg: 0.0359 (0.0583)  time: 0.6278 (0.6761)  data: 0.0004 (0.0162)  lr: 0.016000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:13:14  iter: 11500  loss: 0.5536 (0.7851)  loss_classifier: 0.1668 (0.2633)  loss_box_reg: 0.0844 (0.1210)  loss_mask: 0.2411 (0.2923)  loss_objectness: 0.0218 (0.0501)  loss_rpn_box_reg: 0.0402 (0.0584)  time: 0.6288 (0.6761)  data: 0.0003 (0.0162)  lr: 0.016000  max mem: 14790
INFO:maskrcnn_benchmark.trainer:eta: 1:13:14  iter: 11500  loss: 0.5372 (0.7851)  loss_classifier: 0.1526 (0.2635)  loss_box_reg: 0.0840 (0.1210)  loss_mask: 0.2397 (0.2927)  loss_objectness: 0.0245 (0.0498)  loss_rpn_box_reg: 0.0372 (0.0582)  time: 0.6288 (0.6761)  data: 0.0004 (0.0162)  lr: 0.016000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:13:14  iter: 11500  loss: 0.5339 (0.7875)  loss_classifier: 0.1578 (0.2643)  loss_box_reg: 0.0791 (0.1217)  loss_mask: 0.2413 (0.2926)  loss_objectness: 0.0235 (0.0504)  loss_rpn_box_reg: 0.0405 (0.0585)  time: 0.6289 (0.6761)  data: 0.0004 (0.0162)  lr: 0.016000  max mem: 14826
INFO:maskrcnn_benchmark.trainer:eta: 1:13:14  iter: 11500  loss: 0.5645 (0.7867)  loss_classifier: 0.1695 (0.2642)  loss_box_reg: 0.0859 (0.1217)  loss_mask: 0.2479 (0.2925)  loss_objectness: 0.0233 (0.0500)  loss_rpn_box_reg: 0.0347 (0.0584)  time: 0.6289 (0.6761)  data: 0.0004 (0.0162)  lr: 0.016000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:12:39  iter: 11550  loss: 0.5848 (0.7846)  loss_classifier: 0.1730 (0.2632)  loss_box_reg: 0.0975 (0.1212)  loss_mask: 0.2466 (0.2921)  loss_objectness: 0.0249 (0.0499)  loss_rpn_box_reg: 0.0404 (0.0582)  time: 0.6326 (0.6759)  data: 0.0004 (0.0162)  lr: 0.016000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:12:39  iter: 11550  loss: 0.5932 (0.7843)  loss_classifier: 0.1687 (0.2629)  loss_box_reg: 0.0898 (0.1209)  loss_mask: 0.2596 (0.2921)  loss_objectness: 0.0255 (0.0500)  loss_rpn_box_reg: 0.0443 (0.0584)  time: 0.6325 (0.6759)  data: 0.0004 (0.0161)  lr: 0.016000  max mem: 14790
INFO:maskrcnn_benchmark.trainer:eta: 1:12:39  iter: 11550  loss: 0.6364 (0.7862)  loss_classifier: 0.1978 (0.2636)  loss_box_reg: 0.1048 (0.1215)  loss_mask: 0.2529 (0.2926)  loss_objectness: 0.0251 (0.0500)  loss_rpn_box_reg: 0.0452 (0.0585)  time: 0.6327 (0.6759)  data: 0.0004 (0.0161)  lr: 0.016000  max mem: 14843
2021-10-16 13:48:37,451 maskrcnn_benchmark.trainer INFO: eta: 1:12:39  iter: 11550  loss: 0.5928 (0.7888)  loss_classifier: 0.1788 (0.2649)  loss_box_reg: 0.0936 (0.1221)  loss_mask: 0.2550 (0.2928)  loss_objectness: 0.0253 (0.0503)  loss_rpn_box_reg: 0.0427 (0.0588)  time: 0.6327 (0.6759)  data: 0.0004 (0.0163)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:12:39  iter: 11550  loss: 0.5928 (0.7888)  loss_classifier: 0.1788 (0.2649)  loss_box_reg: 0.0936 (0.1221)  loss_mask: 0.2550 (0.2928)  loss_objectness: 0.0253 (0.0503)  loss_rpn_box_reg: 0.0427 (0.0588)  time: 0.6327 (0.6759)  data: 0.0004 (0.0163)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:12:39  iter: 11550  loss: 0.5754 (0.7874)  loss_classifier: 0.1788 (0.2642)  loss_box_reg: 0.0910 (0.1214)  loss_mask: 0.2414 (0.2929)  loss_objectness: 0.0272 (0.0502)  loss_rpn_box_reg: 0.0435 (0.0587)  time: 0.6330 (0.6759)  data: 0.0004 (0.0161)  lr: 0.016000  max mem: 14938
INFO:maskrcnn_benchmark.trainer:eta: 1:12:39  iter: 11550  loss: 0.5614 (0.7842)  loss_classifier: 0.1662 (0.2631)  loss_box_reg: 0.0886 (0.1209)  loss_mask: 0.2475 (0.2925)  loss_objectness: 0.0250 (0.0497)  loss_rpn_box_reg: 0.0385 (0.0581)  time: 0.6329 (0.6759)  data: 0.0004 (0.0161)  lr: 0.016000  max mem: 15034
:::MLLOG {"namespace": "", "time_ms": 1634392117451, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.7888296081751456, "loss_classifier": 0.2648782304397006, "loss_box_reg": 0.12208724729698635, "loss_mask": 0.29280341756034206, "loss_objectness": 0.050296596767566294, "loss_rpn_box_reg": 0.0587641165314597, "time": 0.6759035808389837, "data": 0.016314803201914866, "throughput": 189.37612350139722}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 11550}}
:::MLLOG {"namespace": "", "time_ms": 1634392117451, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 189.37612350139722, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:12:39  iter: 11550  loss: 0.5799 (0.7858)  loss_classifier: 0.1692 (0.2638)  loss_box_reg: 0.0877 (0.1216)  loss_mask: 0.2406 (0.2923)  loss_objectness: 0.0226 (0.0499)  loss_rpn_box_reg: 0.0433 (0.0583)  time: 0.6328 (0.6759)  data: 0.0004 (0.0161)  lr: 0.016000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:12:39  iter: 11550  loss: 0.5553 (0.7866)  loss_classifier: 0.1632 (0.2639)  loss_box_reg: 0.0880 (0.1215)  loss_mask: 0.2420 (0.2924)  loss_objectness: 0.0224 (0.0503)  loss_rpn_box_reg: 0.0355 (0.0585)  time: 0.6330 (0.6759)  data: 0.0004 (0.0161)  lr: 0.016000  max mem: 14826
INFO:maskrcnn_benchmark.trainer:eta: 1:12:04  iter: 11600  loss: 0.5380 (0.7837)  loss_classifier: 0.1609 (0.2628)  loss_box_reg: 0.0863 (0.1211)  loss_mask: 0.2477 (0.2918)  loss_objectness: 0.0231 (0.0498)  loss_rpn_box_reg: 0.0312 (0.0582)  time: 0.6258 (0.6757)  data: 0.0004 (0.0161)  lr: 0.016000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:12:04  iter: 11600  loss: 0.5419 (0.7833)  loss_classifier: 0.1582 (0.2627)  loss_box_reg: 0.0823 (0.1207)  loss_mask: 0.2461 (0.2923)  loss_objectness: 0.0221 (0.0496)  loss_rpn_box_reg: 0.0350 (0.0581)  time: 0.6263 (0.6757)  data: 0.0004 (0.0161)  lr: 0.016000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:12:04  iter: 11600  loss: 0.5808 (0.7850)  loss_classifier: 0.1706 (0.2634)  loss_box_reg: 0.0890 (0.1215)  loss_mask: 0.2459 (0.2921)  loss_objectness: 0.0236 (0.0498)  loss_rpn_box_reg: 0.0426 (0.0582)  time: 0.6261 (0.6757)  data: 0.0004 (0.0160)  lr: 0.016000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:12:04  iter: 11600  loss: 0.5985 (0.7857)  loss_classifier: 0.1815 (0.2635)  loss_box_reg: 0.0945 (0.1214)  loss_mask: 0.2504 (0.2922)  loss_objectness: 0.0241 (0.0502)  loss_rpn_box_reg: 0.0423 (0.0584)  time: 0.6261 (0.6757)  data: 0.0004 (0.0160)  lr: 0.016000  max mem: 14826
INFO:maskrcnn_benchmark.trainer:eta: 1:12:04  iter: 11600  loss: 0.5826 (0.7835)  loss_classifier: 0.1728 (0.2626)  loss_box_reg: 0.0908 (0.1208)  loss_mask: 0.2440 (0.2920)  loss_objectness: 0.0243 (0.0499)  loss_rpn_box_reg: 0.0452 (0.0583)  time: 0.6256 (0.6757)  data: 0.0004 (0.0161)  lr: 0.016000  max mem: 14790
2021-10-16 13:49:08,791 maskrcnn_benchmark.trainer INFO: eta: 1:12:04  iter: 11600  loss: 0.5864 (0.7880)  loss_classifier: 0.1762 (0.2645)  loss_box_reg: 0.0929 (0.1220)  loss_mask: 0.2406 (0.2926)  loss_objectness: 0.0213 (0.0502)  loss_rpn_box_reg: 0.0421 (0.0587)  time: 0.6273 (0.6757)  data: 0.0003 (0.0162)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:12:04  iter: 11600  loss: 0.6138 (0.7854)  loss_classifier: 0.1908 (0.2633)  loss_box_reg: 0.0996 (0.1214)  loss_mask: 0.2578 (0.2924)  loss_objectness: 0.0255 (0.0499)  loss_rpn_box_reg: 0.0446 (0.0584)  time: 0.6272 (0.6757)  data: 0.0004 (0.0161)  lr: 0.016000  max mem: 14843
INFO:maskrcnn_benchmark.trainer:eta: 1:12:04  iter: 11600  loss: 0.6222 (0.7866)  loss_classifier: 0.1895 (0.2639)  loss_box_reg: 0.0885 (0.1213)  loss_mask: 0.2493 (0.2927)  loss_objectness: 0.0249 (0.0501)  loss_rpn_box_reg: 0.0396 (0.0586)  time: 0.6271 (0.6757)  data: 0.0004 (0.0160)  lr: 0.016000  max mem: 14938
INFO:maskrcnn_benchmark.trainer:eta: 1:12:04  iter: 11600  loss: 0.5864 (0.7880)  loss_classifier: 0.1762 (0.2645)  loss_box_reg: 0.0929 (0.1220)  loss_mask: 0.2406 (0.2926)  loss_objectness: 0.0213 (0.0502)  loss_rpn_box_reg: 0.0421 (0.0587)  time: 0.6273 (0.6757)  data: 0.0003 (0.0162)  lr: 0.016000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634392148791, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.7879667489102175, "loss_classifier": 0.2645220434900116, "loss_box_reg": 0.12195417675974474, "loss_mask": 0.29260080797918914, "loss_objectness": 0.05019007641749842, "loss_rpn_box_reg": 0.05869964466472397, "time": 0.6756919266437662, "data": 0.016246525748022673, "throughput": 189.43544380615828}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 11600}}
:::MLLOG {"namespace": "", "time_ms": 1634392148791, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 189.43544380615828, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:11:29  iter: 11650  loss: 0.5892 (0.7830)  loss_classifier: 0.1790 (0.2625)  loss_box_reg: 0.0937 (0.1210)  loss_mask: 0.2485 (0.2917)  loss_objectness: 0.0259 (0.0497)  loss_rpn_box_reg: 0.0391 (0.0581)  time: 0.6292 (0.6755)  data: 0.0004 (0.0160)  lr: 0.016000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:11:29  iter: 11650  loss: 0.5989 (0.7827)  loss_classifier: 0.1801 (0.2622)  loss_box_reg: 0.0930 (0.1207)  loss_mask: 0.2375 (0.2918)  loss_objectness: 0.0247 (0.0498)  loss_rpn_box_reg: 0.0416 (0.0583)  time: 0.6293 (0.6755)  data: 0.0004 (0.0160)  lr: 0.016000  max mem: 14790
INFO:maskrcnn_benchmark.trainer:eta: 1:11:29  iter: 11650  loss: 0.5941 (0.7826)  loss_classifier: 0.1791 (0.2624)  loss_box_reg: 0.0939 (0.1206)  loss_mask: 0.2480 (0.2921)  loss_objectness: 0.0271 (0.0495)  loss_rpn_box_reg: 0.0436 (0.0580)  time: 0.6306 (0.6755)  data: 0.0004 (0.0160)  lr: 0.016000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:11:29  iter: 11650  loss: 0.6210 (0.7849)  loss_classifier: 0.1814 (0.2632)  loss_box_reg: 0.0962 (0.1213)  loss_mask: 0.2508 (0.2921)  loss_objectness: 0.0253 (0.0501)  loss_rpn_box_reg: 0.0505 (0.0584)  time: 0.6306 (0.6755)  data: 0.0004 (0.0160)  lr: 0.016000  max mem: 14826
INFO:maskrcnn_benchmark.trainer:eta: 1:11:29  iter: 11650  loss: 0.5605 (0.7842)  loss_classifier: 0.1685 (0.2631)  loss_box_reg: 0.0844 (0.1213)  loss_mask: 0.2413 (0.2919)  loss_objectness: 0.0207 (0.0497)  loss_rpn_box_reg: 0.0399 (0.0582)  time: 0.6305 (0.6755)  data: 0.0004 (0.0160)  lr: 0.016000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:11:29  iter: 11650  loss: 0.6098 (0.7846)  loss_classifier: 0.2002 (0.2629)  loss_box_reg: 0.0974 (0.1213)  loss_mask: 0.2471 (0.2922)  loss_objectness: 0.0273 (0.0498)  loss_rpn_box_reg: 0.0411 (0.0584)  time: 0.6307 (0.6755)  data: 0.0004 (0.0160)  lr: 0.016000  max mem: 14843
2021-10-16 13:49:40,305 maskrcnn_benchmark.trainer INFO: eta: 1:11:29  iter: 11650  loss: 0.5943 (0.7872)  loss_classifier: 0.1841 (0.2642)  loss_box_reg: 0.0991 (0.1218)  loss_mask: 0.2505 (0.2924)  loss_objectness: 0.0255 (0.0501)  loss_rpn_box_reg: 0.0421 (0.0586)  time: 0.6308 (0.6755)  data: 0.0004 (0.0162)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:11:29  iter: 11650  loss: 0.5943 (0.7872)  loss_classifier: 0.1841 (0.2642)  loss_box_reg: 0.0991 (0.1218)  loss_mask: 0.2505 (0.2924)  loss_objectness: 0.0255 (0.0501)  loss_rpn_box_reg: 0.0421 (0.0586)  time: 0.6308 (0.6755)  data: 0.0004 (0.0162)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:11:29  iter: 11650  loss: 0.5787 (0.7858)  loss_classifier: 0.1824 (0.2635)  loss_box_reg: 0.0893 (0.1212)  loss_mask: 0.2421 (0.2925)  loss_objectness: 0.0230 (0.0500)  loss_rpn_box_reg: 0.0423 (0.0586)  time: 0.6308 (0.6755)  data: 0.0004 (0.0160)  lr: 0.016000  max mem: 14938
:::MLLOG {"namespace": "", "time_ms": 1634392180306, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.7872095917887953, "loss_classifier": 0.2641954507838631, "loss_box_reg": 0.12184149279053295, "loss_mask": 0.2924349692284805, "loss_objectness": 0.05008846641114469, "loss_rpn_box_reg": 0.058649212983996474, "time": 0.6754970751095227, "data": 0.016178771252284233, "throughput": 189.4900876946751}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 11650}}
:::MLLOG {"namespace": "", "time_ms": 1634392180306, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 189.4900876946751, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:10:54  iter: 11700  loss: 0.5948 (0.7838)  loss_classifier: 0.1808 (0.2626)  loss_box_reg: 0.0950 (0.1212)  loss_mask: 0.2483 (0.2920)  loss_objectness: 0.0208 (0.0497)  loss_rpn_box_reg: 0.0409 (0.0583)  time: 0.6256 (0.6753)  data: 0.0004 (0.0159)  lr: 0.016000  max mem: 14843
2021-10-16 13:50:11,702 maskrcnn_benchmark.trainer INFO: eta: 1:10:54  iter: 11700  loss: 0.6185 (0.7865)  loss_classifier: 0.1873 (0.2639)  loss_box_reg: 0.0946 (0.1217)  loss_mask: 0.2495 (0.2923)  loss_objectness: 0.0258 (0.0500)  loss_rpn_box_reg: 0.0471 (0.0586)  time: 0.6257 (0.6753)  data: 0.0004 (0.0161)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:10:54  iter: 11700  loss: 0.6050 (0.7818)  loss_classifier: 0.2004 (0.2619)  loss_box_reg: 0.1005 (0.1205)  loss_mask: 0.2522 (0.2916)  loss_objectness: 0.0224 (0.0496)  loss_rpn_box_reg: 0.0378 (0.0582)  time: 0.6260 (0.6753)  data: 0.0004 (0.0159)  lr: 0.016000  max mem: 14790
INFO:maskrcnn_benchmark.trainer:eta: 1:10:54  iter: 11700  loss: 0.5413 (0.7849)  loss_classifier: 0.1543 (0.2631)  loss_box_reg: 0.0850 (0.1211)  loss_mask: 0.2345 (0.2923)  loss_objectness: 0.0196 (0.0499)  loss_rpn_box_reg: 0.0383 (0.0585)  time: 0.6255 (0.6753)  data: 0.0004 (0.0159)  lr: 0.016000  max mem: 14938
INFO:maskrcnn_benchmark.trainer:eta: 1:10:54  iter: 11700  loss: 0.6185 (0.7865)  loss_classifier: 0.1873 (0.2639)  loss_box_reg: 0.0946 (0.1217)  loss_mask: 0.2495 (0.2923)  loss_objectness: 0.0258 (0.0500)  loss_rpn_box_reg: 0.0471 (0.0586)  time: 0.6257 (0.6753)  data: 0.0004 (0.0161)  lr: 0.016000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634392211702, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.7865133941937715, "loss_classifier": 0.2638961529244597, "loss_box_reg": 0.12174894124792857, "loss_mask": 0.292271865101961, "loss_objectness": 0.04999366220651975, "loss_rpn_box_reg": 0.05860277312857489, "time": 0.6752937977130596, "data": 0.016111816626328688, "throughput": 189.54712812924237}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 11700}}
INFO:maskrcnn_benchmark.trainer:eta: 1:10:54  iter: 11700  loss: 0.5936 (0.7822)  loss_classifier: 0.1753 (0.2622)  loss_box_reg: 0.0968 (0.1209)  loss_mask: 0.2505 (0.2915)  loss_objectness: 0.0236 (0.0496)  loss_rpn_box_reg: 0.0367 (0.0581)  time: 0.6264 (0.6753)  data: 0.0004 (0.0160)  lr: 0.016000  max mem: 14996
:::MLLOG {"namespace": "", "time_ms": 1634392211702, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 189.54712812924237, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:10:54  iter: 11700  loss: 0.6033 (0.7819)  loss_classifier: 0.1869 (0.2621)  loss_box_reg: 0.0967 (0.1205)  loss_mask: 0.2514 (0.2919)  loss_objectness: 0.0277 (0.0494)  loss_rpn_box_reg: 0.0437 (0.0579)  time: 0.6266 (0.6753)  data: 0.0003 (0.0159)  lr: 0.016000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:10:54  iter: 11700  loss: 0.6203 (0.7842)  loss_classifier: 0.1808 (0.2628)  loss_box_reg: 0.0954 (0.1212)  loss_mask: 0.2537 (0.2919)  loss_objectness: 0.0291 (0.0500)  loss_rpn_box_reg: 0.0403 (0.0583)  time: 0.6266 (0.6753)  data: 0.0004 (0.0159)  lr: 0.016000  max mem: 14826
INFO:maskrcnn_benchmark.trainer:eta: 1:10:54  iter: 11700  loss: 0.5958 (0.7833)  loss_classifier: 0.1781 (0.2627)  loss_box_reg: 0.0905 (0.1212)  loss_mask: 0.2388 (0.2917)  loss_objectness: 0.0239 (0.0496)  loss_rpn_box_reg: 0.0365 (0.0581)  time: 0.6266 (0.6753)  data: 0.0004 (0.0159)  lr: 0.016000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:10:19  iter: 11750  loss: 0.5794 (0.7825)  loss_classifier: 0.1675 (0.2624)  loss_box_reg: 0.0934 (0.1211)  loss_mask: 0.2483 (0.2915)  loss_objectness: 0.0212 (0.0495)  loss_rpn_box_reg: 0.0375 (0.0581)  time: 0.6264 (0.6751)  data: 0.0004 (0.0158)  lr: 0.016000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:10:19  iter: 11750  loss: 0.5894 (0.7810)  loss_classifier: 0.1949 (0.2617)  loss_box_reg: 0.0879 (0.1204)  loss_mask: 0.2450 (0.2918)  loss_objectness: 0.0254 (0.0493)  loss_rpn_box_reg: 0.0370 (0.0579)  time: 0.6261 (0.6751)  data: 0.0004 (0.0159)  lr: 0.016000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:10:19  iter: 11750  loss: 0.5812 (0.7833)  loss_classifier: 0.1795 (0.2624)  loss_box_reg: 0.0852 (0.1210)  loss_mask: 0.2470 (0.2917)  loss_objectness: 0.0220 (0.0499)  loss_rpn_box_reg: 0.0389 (0.0583)  time: 0.6265 (0.6751)  data: 0.0003 (0.0158)  lr: 0.016000  max mem: 14826
INFO:maskrcnn_benchmark.trainer:eta: 1:10:19  iter: 11750  loss: 0.5947 (0.7814)  loss_classifier: 0.1910 (0.2618)  loss_box_reg: 0.1053 (0.1208)  loss_mask: 0.2372 (0.2913)  loss_objectness: 0.0235 (0.0495)  loss_rpn_box_reg: 0.0453 (0.0580)  time: 0.6271 (0.6751)  data: 0.0004 (0.0159)  lr: 0.016000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:10:19  iter: 11750  loss: 0.6357 (0.7811)  loss_classifier: 0.2008 (0.2616)  loss_box_reg: 0.0969 (0.1204)  loss_mask: 0.2484 (0.2914)  loss_objectness: 0.0279 (0.0496)  loss_rpn_box_reg: 0.0398 (0.0581)  time: 0.6277 (0.6751)  data: 0.0004 (0.0159)  lr: 0.016000  max mem: 14790
INFO:maskrcnn_benchmark.trainer:eta: 1:10:19  iter: 11750  loss: 0.5697 (0.7830)  loss_classifier: 0.1703 (0.2623)  loss_box_reg: 0.0914 (0.1211)  loss_mask: 0.2470 (0.2918)  loss_objectness: 0.0194 (0.0496)  loss_rpn_box_reg: 0.0361 (0.0582)  time: 0.6276 (0.6751)  data: 0.0003 (0.0159)  lr: 0.016000  max mem: 14843
2021-10-16 13:50:43,138 maskrcnn_benchmark.trainer INFO: eta: 1:10:19  iter: 11750  loss: 0.6127 (0.7857)  loss_classifier: 0.1861 (0.2635)  loss_box_reg: 0.0965 (0.1216)  loss_mask: 0.2516 (0.2921)  loss_objectness: 0.0256 (0.0499)  loss_rpn_box_reg: 0.0386 (0.0585)  time: 0.6276 (0.6751)  data: 0.0003 (0.0160)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:10:19  iter: 11750  loss: 0.5825 (0.7841)  loss_classifier: 0.1808 (0.2628)  loss_box_reg: 0.0928 (0.1210)  loss_mask: 0.2494 (0.2921)  loss_objectness: 0.0220 (0.0498)  loss_rpn_box_reg: 0.0456 (0.0584)  time: 0.6276 (0.6751)  data: 0.0004 (0.0158)  lr: 0.016000  max mem: 14938
INFO:maskrcnn_benchmark.trainer:eta: 1:10:19  iter: 11750  loss: 0.6127 (0.7857)  loss_classifier: 0.1861 (0.2635)  loss_box_reg: 0.0965 (0.1216)  loss_mask: 0.2516 (0.2921)  loss_objectness: 0.0256 (0.0499)  loss_rpn_box_reg: 0.0386 (0.0585)  time: 0.6276 (0.6751)  data: 0.0003 (0.0160)  lr: 0.016000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634392243138, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.7856553388098453, "loss_classifier": 0.26353480363621357, "loss_box_reg": 0.12162926107532088, "loss_mask": 0.29207705026738184, "loss_objectness": 0.04988495917879838, "loss_rpn_box_reg": 0.058529265078557456, "time": 0.6750955750891503, "data": 0.016044996951488737, "throughput": 189.6027832549441}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 11750}}
:::MLLOG {"namespace": "", "time_ms": 1634392243138, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 189.6027832549441, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:09:44  iter: 11800  loss: 0.5797 (0.7822)  loss_classifier: 0.1783 (0.2619)  loss_box_reg: 0.0915 (0.1209)  loss_mask: 0.2512 (0.2917)  loss_objectness: 0.0249 (0.0495)  loss_rpn_box_reg: 0.0351 (0.0582)  time: 0.6265 (0.6749)  data: 0.0004 (0.0158)  lr: 0.016000  max mem: 14843
2021-10-16 13:51:14,521 maskrcnn_benchmark.trainer INFO: eta: 1:09:44  iter: 11800  loss: 0.5401 (0.7849)  loss_classifier: 0.1550 (0.2632)  loss_box_reg: 0.0790 (0.1215)  loss_mask: 0.2381 (0.2919)  loss_objectness: 0.0195 (0.0498)  loss_rpn_box_reg: 0.0380 (0.0585)  time: 0.6265 (0.6749)  data: 0.0003 (0.0160)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:09:44  iter: 11800  loss: 0.6177 (0.7834)  loss_classifier: 0.1887 (0.2625)  loss_box_reg: 0.0949 (0.1209)  loss_mask: 0.2511 (0.2920)  loss_objectness: 0.0276 (0.0497)  loss_rpn_box_reg: 0.0399 (0.0584)  time: 0.6276 (0.6749)  data: 0.0004 (0.0158)  lr: 0.016000  max mem: 14938
INFO:maskrcnn_benchmark.trainer:eta: 1:09:44  iter: 11800  loss: 0.5401 (0.7849)  loss_classifier: 0.1550 (0.2632)  loss_box_reg: 0.0790 (0.1215)  loss_mask: 0.2381 (0.2919)  loss_objectness: 0.0195 (0.0498)  loss_rpn_box_reg: 0.0380 (0.0585)  time: 0.6265 (0.6749)  data: 0.0003 (0.0160)  lr: 0.016000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634392274521, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.7848676929686029, "loss_classifier": 0.26318675861741275, "loss_box_reg": 0.12152210722422875, "loss_mask": 0.29189898144769466, "loss_objectness": 0.04978217021467448, "loss_rpn_box_reg": 0.05847767588589735, "time": 0.6748945894079693, "data": 0.015978931390633017, "throughput": 189.65924754602656}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 11800}}
:::MLLOG {"namespace": "", "time_ms": 1634392274521, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 189.65924754602656, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:09:44  iter: 11800  loss: 0.5723 (0.7803)  loss_classifier: 0.1884 (0.2613)  loss_box_reg: 0.0925 (0.1203)  loss_mask: 0.2481 (0.2912)  loss_objectness: 0.0282 (0.0495)  loss_rpn_box_reg: 0.0368 (0.0581)  time: 0.6286 (0.6749)  data: 0.0004 (0.0158)  lr: 0.016000  max mem: 14790
INFO:maskrcnn_benchmark.trainer:eta: 1:09:44  iter: 11800  loss: 0.6228 (0.7807)  loss_classifier: 0.1769 (0.2615)  loss_box_reg: 0.0904 (0.1207)  loss_mask: 0.2639 (0.2912)  loss_objectness: 0.0225 (0.0494)  loss_rpn_box_reg: 0.0482 (0.0580)  time: 0.6282 (0.6749)  data: 0.0004 (0.0158)  lr: 0.016000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:09:44  iter: 11800  loss: 0.5778 (0.7803)  loss_classifier: 0.1759 (0.2614)  loss_box_reg: 0.0882 (0.1203)  loss_mask: 0.2479 (0.2916)  loss_objectness: 0.0245 (0.0492)  loss_rpn_box_reg: 0.0384 (0.0578)  time: 0.6283 (0.6749)  data: 0.0003 (0.0158)  lr: 0.016000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:09:44  iter: 11800  loss: 0.5749 (0.7825)  loss_classifier: 0.1765 (0.2621)  loss_box_reg: 0.0920 (0.1209)  loss_mask: 0.2405 (0.2915)  loss_objectness: 0.0223 (0.0498)  loss_rpn_box_reg: 0.0355 (0.0582)  time: 0.6284 (0.6749)  data: 0.0004 (0.0158)  lr: 0.016000  max mem: 14826
INFO:maskrcnn_benchmark.trainer:eta: 1:09:44  iter: 11800  loss: 0.6231 (0.7818)  loss_classifier: 0.1877 (0.2620)  loss_box_reg: 0.0980 (0.1210)  loss_mask: 0.2557 (0.2914)  loss_objectness: 0.0246 (0.0494)  loss_rpn_box_reg: 0.0438 (0.0580)  time: 0.6286 (0.6749)  data: 0.0004 (0.0158)  lr: 0.016000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:09:09  iter: 11850  loss: 0.5700 (0.7813)  loss_classifier: 0.1700 (0.2615)  loss_box_reg: 0.0903 (0.1208)  loss_mask: 0.2485 (0.2915)  loss_objectness: 0.0248 (0.0494)  loss_rpn_box_reg: 0.0484 (0.0581)  time: 0.6293 (0.6747)  data: 0.0004 (0.0157)  lr: 0.016000  max mem: 14843
INFO:maskrcnn_benchmark.trainer:eta: 1:09:09  iter: 11850  loss: 0.5893 (0.7827)  loss_classifier: 0.1812 (0.2622)  loss_box_reg: 0.0998 (0.1208)  loss_mask: 0.2527 (0.2918)  loss_objectness: 0.0248 (0.0496)  loss_rpn_box_reg: 0.0399 (0.0583)  time: 0.6294 (0.6747)  data: 0.0004 (0.0157)  lr: 0.016000  max mem: 14938
2021-10-16 13:51:45,960 maskrcnn_benchmark.trainer INFO: eta: 1:09:09  iter: 11850  loss: 0.6017 (0.7841)  loss_classifier: 0.1870 (0.2628)  loss_box_reg: 0.0942 (0.1214)  loss_mask: 0.2558 (0.2917)  loss_objectness: 0.0250 (0.0497)  loss_rpn_box_reg: 0.0510 (0.0584)  time: 0.6294 (0.6747)  data: 0.0004 (0.0159)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:09:09  iter: 11850  loss: 0.6017 (0.7841)  loss_classifier: 0.1870 (0.2628)  loss_box_reg: 0.0942 (0.1214)  loss_mask: 0.2558 (0.2917)  loss_objectness: 0.0250 (0.0497)  loss_rpn_box_reg: 0.0510 (0.0584)  time: 0.6294 (0.6747)  data: 0.0004 (0.0159)  lr: 0.016000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634392305960, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.784079945213181, "loss_classifier": 0.26284750026458176, "loss_box_reg": 0.12140083798515819, "loss_mask": 0.2917242220610003, "loss_objectness": 0.04968009576166072, "loss_rpn_box_reg": 0.05842728956812749, "time": 0.6747000129917, "data": 0.015913469479556828, "throughput": 189.71394328633966}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 11850}}
:::MLLOG {"namespace": "", "time_ms": 1634392305960, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 189.71394328633966, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:09:09  iter: 11850  loss: 0.5985 (0.7800)  loss_classifier: 0.1801 (0.2612)  loss_box_reg: 0.0912 (0.1206)  loss_mask: 0.2560 (0.2910)  loss_objectness: 0.0249 (0.0493)  loss_rpn_box_reg: 0.0374 (0.0579)  time: 0.6313 (0.6747)  data: 0.0004 (0.0158)  lr: 0.016000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:09:09  iter: 11850  loss: 0.6094 (0.7796)  loss_classifier: 0.1818 (0.2609)  loss_box_reg: 0.0901 (0.1202)  loss_mask: 0.2432 (0.2911)  loss_objectness: 0.0266 (0.0494)  loss_rpn_box_reg: 0.0480 (0.0580)  time: 0.6315 (0.6747)  data: 0.0004 (0.0157)  lr: 0.016000  max mem: 14790
INFO:maskrcnn_benchmark.trainer:eta: 1:09:09  iter: 11850  loss: 0.6060 (0.7795)  loss_classifier: 0.1795 (0.2610)  loss_box_reg: 0.0948 (0.1202)  loss_mask: 0.2538 (0.2914)  loss_objectness: 0.0236 (0.0491)  loss_rpn_box_reg: 0.0391 (0.0577)  time: 0.6319 (0.6747)  data: 0.0004 (0.0157)  lr: 0.016000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:09:09  iter: 11850  loss: 0.5791 (0.7810)  loss_classifier: 0.1691 (0.2617)  loss_box_reg: 0.0927 (0.1209)  loss_mask: 0.2385 (0.2912)  loss_objectness: 0.0236 (0.0493)  loss_rpn_box_reg: 0.0486 (0.0580)  time: 0.6319 (0.6747)  data: 0.0004 (0.0157)  lr: 0.016000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:09:09  iter: 11850  loss: 0.5977 (0.7818)  loss_classifier: 0.1734 (0.2618)  loss_box_reg: 0.0961 (0.1208)  loss_mask: 0.2418 (0.2913)  loss_objectness: 0.0297 (0.0497)  loss_rpn_box_reg: 0.0451 (0.0582)  time: 0.6319 (0.6747)  data: 0.0004 (0.0157)  lr: 0.016000  max mem: 14826
INFO:maskrcnn_benchmark.trainer:eta: 1:08:34  iter: 11900  loss: 0.5965 (0.7805)  loss_classifier: 0.1651 (0.2612)  loss_box_reg: 0.0846 (0.1207)  loss_mask: 0.2459 (0.2913)  loss_objectness: 0.0211 (0.0493)  loss_rpn_box_reg: 0.0438 (0.0580)  time: 0.6277 (0.6745)  data: 0.0004 (0.0157)  lr: 0.016000  max mem: 14843
INFO:maskrcnn_benchmark.trainer:eta: 1:08:34  iter: 11900  loss: 0.5736 (0.7819)  loss_classifier: 0.1631 (0.2618)  loss_box_reg: 0.0821 (0.1207)  loss_mask: 0.2350 (0.2916)  loss_objectness: 0.0238 (0.0495)  loss_rpn_box_reg: 0.0360 (0.0582)  time: 0.6277 (0.6745)  data: 0.0004 (0.0156)  lr: 0.016000  max mem: 14938
2021-10-16 13:52:17,350 maskrcnn_benchmark.trainer INFO: eta: 1:08:34  iter: 11900  loss: 0.5581 (0.7834)  loss_classifier: 0.1759 (0.2625)  loss_box_reg: 0.0897 (0.1213)  loss_mask: 0.2424 (0.2916)  loss_objectness: 0.0229 (0.0496)  loss_rpn_box_reg: 0.0450 (0.0584)  time: 0.6277 (0.6745)  data: 0.0004 (0.0158)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:08:34  iter: 11900  loss: 0.5581 (0.7834)  loss_classifier: 0.1759 (0.2625)  loss_box_reg: 0.0897 (0.1213)  loss_mask: 0.2424 (0.2916)  loss_objectness: 0.0229 (0.0496)  loss_rpn_box_reg: 0.0450 (0.0584)  time: 0.6277 (0.6745)  data: 0.0004 (0.0158)  lr: 0.016000  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634392337350, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.7833591486325785, "loss_classifier": 0.2625304968445366, "loss_box_reg": 0.12130274407986254, "loss_mask": 0.2915551822839164, "loss_objectness": 0.04958673933963096, "loss_rpn_box_reg": 0.05838398654094091, "time": 0.674502996657075, "data": 0.015848509964822722, "throughput": 189.76935704420103}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 11900}}
:::MLLOG {"namespace": "", "time_ms": 1634392337351, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 189.76935704420103, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:08:34  iter: 11900  loss: 0.6025 (0.7789)  loss_classifier: 0.1854 (0.2606)  loss_box_reg: 0.0943 (0.1201)  loss_mask: 0.2500 (0.2909)  loss_objectness: 0.0261 (0.0493)  loss_rpn_box_reg: 0.0476 (0.0580)  time: 0.6286 (0.6745)  data: 0.0004 (0.0157)  lr: 0.016000  max mem: 14790
INFO:maskrcnn_benchmark.trainer:eta: 1:08:34  iter: 11900  loss: 0.6321 (0.7792)  loss_classifier: 0.1845 (0.2609)  loss_box_reg: 0.0998 (0.1205)  loss_mask: 0.2629 (0.2908)  loss_objectness: 0.0243 (0.0492)  loss_rpn_box_reg: 0.0485 (0.0578)  time: 0.6286 (0.6745)  data: 0.0004 (0.0157)  lr: 0.016000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:08:34  iter: 11900  loss: 0.5934 (0.7787)  loss_classifier: 0.1648 (0.2607)  loss_box_reg: 0.0929 (0.1201)  loss_mask: 0.2545 (0.2912)  loss_objectness: 0.0210 (0.0490)  loss_rpn_box_reg: 0.0483 (0.0577)  time: 0.6284 (0.6745)  data: 0.0003 (0.0157)  lr: 0.016000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:08:34  iter: 11900  loss: 0.6089 (0.7810)  loss_classifier: 0.1935 (0.2615)  loss_box_reg: 0.1003 (0.1207)  loss_mask: 0.2562 (0.2912)  loss_objectness: 0.0234 (0.0496)  loss_rpn_box_reg: 0.0416 (0.0581)  time: 0.6284 (0.6745)  data: 0.0004 (0.0157)  lr: 0.016000  max mem: 14826
INFO:maskrcnn_benchmark.trainer:eta: 1:08:34  iter: 11900  loss: 0.6529 (0.7802)  loss_classifier: 0.2130 (0.2614)  loss_box_reg: 0.1053 (0.1208)  loss_mask: 0.2559 (0.2910)  loss_objectness: 0.0281 (0.0492)  loss_rpn_box_reg: 0.0560 (0.0579)  time: 0.6284 (0.6745)  data: 0.0004 (0.0157)  lr: 0.016000  max mem: 14803
:::MLLOG {"namespace": "", "time_ms": 1634392350575, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 111, "epoch_num": 13}}
:::MLLOG {"namespace": "", "time_ms": 1634392350575, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 112, "first_epoch_num": 13}}
:::MLLOG {"namespace": "", "time_ms": 1634392350575, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 113, "epoch_num": 13}}
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
2021-10-16 13:52:30,921 maskrcnn_benchmark.data.build WARNING: When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
loading annotations into memory...
Done (t=0.56s)
creating index...
Done (t=0.56s)
creating index...
Done (t=0.56s)
creating index...
index created!
shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]index created!
shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]index created!
shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]Done (t=0.56s)
creating index...
Done (t=0.55s)
creating index...
Done (t=0.55s)
creating index...
Done (t=0.55s)
creating index...
Done (t=0.56s)
creating index...
index created!
shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]index created!
index created!
index created!
shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
index created!
  0% 0/40 [00:00<?, ?it/s]shapes=None
passthrough=True
creating index...
GT annotations already exist!
2021-10-16 13:52:31,507 maskrcnn_benchmark.inference INFO: Start evaluation on coco_2017_val dataset(5000 images).
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]  2% 1/40 [00:00<00:11,  3.48it/s]  2% 1/40 [00:00<00:11,  3.52it/s]  2% 1/40 [00:00<00:11,  3.43it/s]  2% 1/40 [00:00<00:11,  3.45it/s]  2% 1/40 [00:00<00:11,  3.43it/s]  2% 1/40 [00:00<00:11,  3.33it/s]  2% 1/40 [00:00<00:11,  3.26it/s]  2% 1/40 [00:00<00:11,  3.26it/s]  5% 2/40 [00:00<00:10,  3.48it/s]  5% 2/40 [00:00<00:10,  3.52it/s]  5% 2/40 [00:00<00:11,  3.43it/s]  5% 2/40 [00:00<00:10,  3.48it/s]  5% 2/40 [00:00<00:10,  3.53it/s]  5% 2/40 [00:00<00:10,  3.46it/s]  5% 2/40 [00:00<00:11,  3.39it/s]  5% 2/40 [00:00<00:11,  3.35it/s]  8% 3/40 [00:00<00:10,  3.57it/s]  8% 3/40 [00:00<00:10,  3.50it/s]  8% 3/40 [00:00<00:10,  3.44it/s]  8% 3/40 [00:00<00:10,  3.58it/s]  8% 3/40 [00:00<00:10,  3.49it/s]  8% 3/40 [00:00<00:10,  3.45it/s]  8% 3/40 [00:00<00:10,  3.47it/s]  8% 3/40 [00:00<00:10,  3.41it/s] 10% 4/40 [00:01<00:10,  3.55it/s] 10% 4/40 [00:01<00:10,  3.52it/s] 10% 4/40 [00:01<00:10,  3.46it/s] 10% 4/40 [00:01<00:10,  3.54it/s] 10% 4/40 [00:01<00:10,  3.51it/s] 10% 4/40 [00:01<00:10,  3.47it/s] 10% 4/40 [00:01<00:10,  3.47it/s] 10% 4/40 [00:01<00:10,  3.43it/s] 12% 5/40 [00:01<00:09,  3.55it/s] 12% 5/40 [00:01<00:09,  3.51it/s] 12% 5/40 [00:01<00:09,  3.51it/s] 12% 5/40 [00:01<00:09,  3.53it/s] 12% 5/40 [00:01<00:09,  3.53it/s] 12% 5/40 [00:01<00:09,  3.53it/s] 12% 5/40 [00:01<00:09,  3.51it/s] 12% 5/40 [00:01<00:09,  3.51it/s] 15% 6/40 [00:01<00:09,  3.56it/s] 15% 6/40 [00:01<00:09,  3.49it/s] 15% 6/40 [00:01<00:09,  3.49it/s] 15% 6/40 [00:01<00:09,  3.60it/s] 15% 6/40 [00:01<00:09,  3.54it/s] 15% 6/40 [00:01<00:09,  3.53it/s] 15% 6/40 [00:01<00:09,  3.53it/s] 15% 6/40 [00:01<00:09,  3.54it/s] 18% 7/40 [00:01<00:09,  3.53it/s] 18% 7/40 [00:01<00:09,  3.50it/s] 18% 7/40 [00:02<00:09,  3.52it/s] 18% 7/40 [00:01<00:09,  3.59it/s] 18% 7/40 [00:01<00:09,  3.56it/s] 18% 7/40 [00:01<00:09,  3.57it/s] 18% 7/40 [00:01<00:09,  3.54it/s] 18% 7/40 [00:01<00:09,  3.53it/s] 20% 8/40 [00:02<00:09,  3.53it/s] 20% 8/40 [00:02<00:09,  3.49it/s] 20% 8/40 [00:02<00:09,  3.46it/s] 20% 8/40 [00:02<00:08,  3.58it/s] 20% 8/40 [00:02<00:08,  3.57it/s] 20% 8/40 [00:02<00:08,  3.61it/s] 20% 8/40 [00:02<00:09,  3.51it/s] 20% 8/40 [00:02<00:09,  3.54it/s] 22% 9/40 [00:02<00:08,  3.52it/s] 22% 9/40 [00:02<00:08,  3.53it/s] 22% 9/40 [00:02<00:08,  3.49it/s] 22% 9/40 [00:02<00:08,  3.62it/s] 22% 9/40 [00:02<00:08,  3.57it/s] 22% 9/40 [00:02<00:08,  3.59it/s] 22% 9/40 [00:02<00:08,  3.53it/s] 22% 9/40 [00:02<00:08,  3.53it/s] 25% 10/40 [00:02<00:08,  3.49it/s] 25% 10/40 [00:02<00:08,  3.51it/s] 25% 10/40 [00:02<00:08,  3.55it/s] 25% 10/40 [00:02<00:08,  3.64it/s] 25% 10/40 [00:02<00:08,  3.60it/s] 25% 10/40 [00:02<00:08,  3.61it/s] 25% 10/40 [00:02<00:08,  3.55it/s] 25% 10/40 [00:02<00:08,  3.53it/s] 28% 11/40 [00:03<00:08,  3.50it/s] 28% 11/40 [00:03<00:08,  3.50it/s] 28% 11/40 [00:03<00:08,  3.59it/s] 28% 11/40 [00:03<00:08,  3.62it/s] 28% 11/40 [00:03<00:08,  3.58it/s] 28% 11/40 [00:03<00:08,  3.59it/s] 28% 11/40 [00:03<00:08,  3.57it/s] 28% 11/40 [00:03<00:08,  3.53it/s] 30% 12/40 [00:03<00:07,  3.54it/s] 30% 12/40 [00:03<00:07,  3.62it/s] 30% 12/40 [00:03<00:07,  3.50it/s] 30% 12/40 [00:03<00:07,  3.60it/s] 30% 12/40 [00:03<00:07,  3.60it/s] 30% 12/40 [00:03<00:07,  3.62it/s] 30% 12/40 [00:03<00:07,  3.53it/s] 30% 12/40 [00:03<00:07,  3.56it/s] 32% 13/40 [00:03<00:07,  3.51it/s] 32% 13/40 [00:03<00:07,  3.54it/s] 32% 13/40 [00:03<00:07,  3.57it/s] 32% 13/40 [00:03<00:07,  3.69it/s] 32% 13/40 [00:03<00:07,  3.57it/s] 32% 13/40 [00:03<00:07,  3.57it/s] 32% 13/40 [00:03<00:07,  3.59it/s] 32% 13/40 [00:03<00:07,  3.53it/s] 35% 14/40 [00:03<00:07,  3.59it/s] 35% 14/40 [00:03<00:07,  3.52it/s] 35% 14/40 [00:03<00:07,  3.54it/s] 35% 14/40 [00:03<00:07,  3.63it/s] 35% 14/40 [00:03<00:07,  3.62it/s] 35% 14/40 [00:03<00:07,  3.53it/s] 35% 14/40 [00:03<00:07,  3.60it/s] 35% 14/40 [00:03<00:07,  3.60it/s] 38% 15/40 [00:04<00:06,  3.58it/s] 38% 15/40 [00:04<00:07,  3.56it/s] 38% 15/40 [00:04<00:06,  3.68it/s] 38% 15/40 [00:04<00:07,  3.54it/s] 38% 15/40 [00:04<00:06,  3.58it/s] 38% 15/40 [00:04<00:06,  3.64it/s] 38% 15/40 [00:04<00:07,  3.49it/s] 38% 15/40 [00:04<00:07,  3.56it/s] 40% 16/40 [00:04<00:06,  3.59it/s] 40% 16/40 [00:04<00:06,  3.52it/s] 40% 16/40 [00:04<00:06,  3.62it/s] 40% 16/40 [00:04<00:06,  3.52it/s] 40% 16/40 [00:04<00:06,  3.60it/s] 40% 16/40 [00:04<00:06,  3.61it/s] 40% 16/40 [00:04<00:06,  3.52it/s] 40% 16/40 [00:04<00:06,  3.55it/s] 42% 17/40 [00:04<00:06,  3.64it/s] 42% 17/40 [00:04<00:06,  3.69it/s] 42% 17/40 [00:04<00:06,  3.50it/s] 42% 17/40 [00:04<00:06,  3.67it/s] 42% 17/40 [00:04<00:06,  3.50it/s] 42% 17/40 [00:04<00:06,  3.58it/s] 42% 17/40 [00:04<00:06,  3.56it/s] 42% 17/40 [00:04<00:06,  3.62it/s] 45% 18/40 [00:04<00:05,  3.71it/s] 45% 18/40 [00:05<00:06,  3.58it/s] 45% 18/40 [00:05<00:06,  3.51it/s] 45% 18/40 [00:05<00:06,  3.63it/s] 45% 18/40 [00:05<00:06,  3.57it/s] 45% 18/40 [00:05<00:06,  3.50it/s] 45% 18/40 [00:05<00:06,  3.54it/s] 45% 18/40 [00:05<00:06,  3.59it/s] 48% 19/40 [00:05<00:05,  3.67it/s] 48% 19/40 [00:05<00:05,  3.54it/s] 48% 19/40 [00:05<00:05,  3.53it/s] 48% 19/40 [00:05<00:05,  3.65it/s] 48% 19/40 [00:05<00:05,  3.54it/s] 48% 19/40 [00:05<00:05,  3.56it/s] 48% 19/40 [00:05<00:05,  3.57it/s] 48% 19/40 [00:05<00:05,  3.59it/s] 50% 20/40 [00:05<00:05,  3.65it/s] 50% 20/40 [00:05<00:05,  3.51it/s] 50% 20/40 [00:05<00:05,  3.56it/s] 50% 20/40 [00:05<00:05,  3.63it/s] 50% 20/40 [00:05<00:05,  3.55it/s] 50% 20/40 [00:05<00:05,  3.57it/s] 50% 20/40 [00:05<00:05,  3.59it/s] 50% 20/40 [00:05<00:05,  3.56it/s] 52% 21/40 [00:05<00:05,  3.63it/s] 52% 21/40 [00:05<00:05,  3.54it/s] 52% 21/40 [00:05<00:05,  3.63it/s] 52% 21/40 [00:05<00:05,  3.66it/s] 52% 21/40 [00:05<00:05,  3.54it/s] 52% 21/40 [00:05<00:05,  3.55it/s] 52% 21/40 [00:05<00:05,  3.60it/s] 52% 21/40 [00:05<00:05,  3.59it/s] 55% 22/40 [00:06<00:04,  3.68it/s] 55% 22/40 [00:06<00:05,  3.58it/s] 55% 22/40 [00:06<00:05,  3.51it/s] 55% 22/40 [00:06<00:04,  3.62it/s] 55% 22/40 [00:06<00:05,  3.58it/s] 55% 22/40 [00:06<00:04,  3.65it/s] 55% 22/40 [00:06<00:05,  3.52it/s] 55% 22/40 [00:06<00:05,  3.54it/s] 57% 23/40 [00:06<00:04,  3.68it/s] 57% 23/40 [00:06<00:04,  3.65it/s] 57% 23/40 [00:06<00:04,  3.55it/s] 57% 23/40 [00:06<00:04,  3.50it/s] 57% 23/40 [00:06<00:04,  3.61it/s] 57% 23/40 [00:06<00:04,  3.61it/s] 57% 23/40 [00:06<00:04,  3.55it/s] 57% 23/40 [00:06<00:04,  3.51it/s] 60% 24/40 [00:06<00:04,  3.65it/s] 60% 24/40 [00:06<00:04,  3.68it/s] 60% 24/40 [00:06<00:04,  3.57it/s] 60% 24/40 [00:06<00:04,  3.51it/s] 60% 24/40 [00:06<00:04,  3.62it/s] 60% 24/40 [00:06<00:04,  3.64it/s] 60% 24/40 [00:06<00:04,  3.56it/s] 60% 24/40 [00:06<00:04,  3.55it/s] 62% 25/40 [00:06<00:04,  3.61it/s] 62% 25/40 [00:06<00:04,  3.67it/s] 62% 25/40 [00:06<00:04,  3.66it/s] 62% 25/40 [00:07<00:04,  3.53it/s] 62% 25/40 [00:07<00:04,  3.52it/s] 62% 25/40 [00:06<00:04,  3.63it/s] 62% 25/40 [00:07<00:04,  3.52it/s] 62% 25/40 [00:07<00:04,  3.53it/s] 65% 26/40 [00:07<00:03,  3.58it/s] 65% 26/40 [00:07<00:03,  3.63it/s] 65% 26/40 [00:07<00:03,  3.67it/s] 65% 26/40 [00:07<00:03,  3.59it/s] 65% 26/40 [00:07<00:03,  3.61it/s] 65% 26/40 [00:07<00:03,  3.50it/s] 65% 26/40 [00:07<00:03,  3.56it/s] 65% 26/40 [00:07<00:03,  3.52it/s] 68% 27/40 [00:07<00:03,  3.65it/s] 68% 27/40 [00:07<00:03,  3.65it/s] 68% 27/40 [00:07<00:03,  3.63it/s] 68% 27/40 [00:07<00:03,  3.56it/s] 68% 27/40 [00:07<00:03,  3.54it/s] 68% 27/40 [00:07<00:03,  3.57it/s] 68% 27/40 [00:07<00:03,  3.55it/s] 68% 27/40 [00:07<00:03,  3.58it/s] 70% 28/40 [00:07<00:03,  3.65it/s] 70% 28/40 [00:07<00:03,  3.71it/s] 70% 28/40 [00:07<00:03,  3.62it/s] 70% 28/40 [00:07<00:03,  3.60it/s] 70% 28/40 [00:07<00:03,  3.52it/s] 70% 28/40 [00:07<00:03,  3.52it/s] 70% 28/40 [00:07<00:03,  3.55it/s] 70% 28/40 [00:07<00:03,  3.56it/s] 72% 29/40 [00:07<00:03,  3.64it/s] 72% 29/40 [00:08<00:03,  3.66it/s] 72% 29/40 [00:08<00:03,  3.62it/s] 72% 29/40 [00:08<00:03,  3.59it/s] 72% 29/40 [00:08<00:03,  3.56it/s] 72% 29/40 [00:08<00:03,  3.50it/s] 72% 29/40 [00:08<00:03,  3.57it/s] 72% 29/40 [00:08<00:03,  3.58it/s] 75% 30/40 [00:08<00:02,  3.69it/s] 75% 30/40 [00:08<00:02,  3.58it/s] 75% 30/40 [00:08<00:02,  3.62it/s] 75% 30/40 [00:08<00:02,  3.55it/s] 75% 30/40 [00:08<00:02,  3.59it/s] 75% 30/40 [00:08<00:02,  3.56it/s] 75% 30/40 [00:08<00:02,  3.46it/s] 75% 30/40 [00:08<00:02,  3.57it/s] 78% 31/40 [00:08<00:02,  3.67it/s] 78% 31/40 [00:08<00:02,  3.55it/s] 78% 31/40 [00:08<00:02,  3.57it/s] 78% 31/40 [00:08<00:02,  3.62it/s] 78% 31/40 [00:08<00:02,  3.55it/s] 78% 31/40 [00:08<00:02,  3.51it/s] 78% 31/40 [00:08<00:02,  3.53it/s] 78% 31/40 [00:08<00:02,  3.58it/s] 80% 32/40 [00:08<00:02,  3.67it/s] 80% 32/40 [00:08<00:02,  3.60it/s] 80% 32/40 [00:08<00:02,  3.54it/s] 80% 32/40 [00:09<00:02,  3.55it/s] 80% 32/40 [00:08<00:02,  3.56it/s] 80% 32/40 [00:09<00:02,  3.54it/s] 80% 32/40 [00:09<00:02,  3.54it/s] 80% 32/40 [00:09<00:02,  3.55it/s] 82% 33/40 [00:09<00:01,  3.63it/s] 82% 33/40 [00:09<00:01,  3.66it/s] 82% 33/40 [00:09<00:01,  3.63it/s] 82% 33/40 [00:09<00:01,  3.52it/s] 82% 33/40 [00:09<00:01,  3.56it/s] 82% 33/40 [00:09<00:01,  3.51it/s] 82% 33/40 [00:09<00:02,  3.49it/s] 82% 33/40 [00:09<00:01,  3.60it/s] 85% 34/40 [00:09<00:01,  3.65it/s] 85% 34/40 [00:09<00:01,  3.59it/s] 85% 34/40 [00:09<00:01,  3.55it/s] 85% 34/40 [00:09<00:01,  3.59it/s] 85% 34/40 [00:09<00:01,  3.58it/s] 85% 34/40 [00:09<00:01,  3.51it/s] 85% 34/40 [00:09<00:01,  3.66it/s] 85% 34/40 [00:09<00:01,  3.54it/s] 88% 35/40 [00:09<00:01,  3.61it/s] 88% 35/40 [00:09<00:01,  3.63it/s] 88% 35/40 [00:09<00:01,  3.54it/s] 88% 35/40 [00:09<00:01,  3.59it/s] 88% 35/40 [00:09<00:01,  3.57it/s] 88% 35/40 [00:09<00:01,  3.51it/s] 88% 35/40 [00:09<00:01,  3.49it/s] 88% 35/40 [00:09<00:01,  3.57it/s] 90% 36/40 [00:09<00:01,  3.60it/s] 90% 36/40 [00:09<00:01,  3.68it/s] 90% 36/40 [00:10<00:01,  3.56it/s] 90% 36/40 [00:10<00:01,  3.59it/s] 90% 36/40 [00:10<00:01,  3.55it/s] 90% 36/40 [00:10<00:01,  3.48it/s] 90% 36/40 [00:10<00:01,  3.49it/s] 90% 36/40 [00:10<00:01,  3.51it/s] 92% 37/40 [00:10<00:00,  3.60it/s] 92% 37/40 [00:10<00:00,  3.66it/s] 92% 37/40 [00:10<00:00,  3.63it/s] 92% 37/40 [00:10<00:00,  3.58it/s] 92% 37/40 [00:10<00:00,  3.51it/s] 92% 37/40 [00:10<00:00,  3.53it/s] 92% 37/40 [00:10<00:00,  3.49it/s] 92% 37/40 [00:10<00:00,  3.49it/s] 95% 38/40 [00:10<00:00,  3.63it/s] 95% 38/40 [00:10<00:00,  3.63it/s] 98% 39/40 [00:10<00:00,  4.48it/s] 95% 38/40 [00:10<00:00,  3.66it/s] 95% 38/40 [00:10<00:00,  3.92it/s] 95% 38/40 [00:10<00:00,  3.67it/s] 95% 38/40 [00:10<00:00,  3.52it/s] 95% 38/40 [00:10<00:00,  3.54it/s] 95% 38/40 [00:10<00:00,  3.54it/s] 98% 39/40 [00:10<00:00,  4.29it/s] 98% 39/40 [00:10<00:00,  4.35it/s] 98% 39/40 [00:10<00:00,  3.89it/s]100% 40/40 [00:10<00:00,  4.74it/s]100% 40/40 [00:10<00:00,  3.72it/s]
100% 40/40 [00:10<00:00,  3.70it/s]
 98% 39/40 [00:10<00:00,  3.65it/s] 98% 39/40 [00:10<00:00,  3.77it/s]100% 40/40 [00:10<00:00,  4.79it/s]100% 40/40 [00:10<00:00,  3.64it/s]
100% 40/40 [00:10<00:00,  3.67it/s]
100% 40/40 [00:10<00:00,  4.55it/s]100% 40/40 [00:10<00:00,  3.67it/s]
 98% 39/40 [00:11<00:00,  3.58it/s] 98% 39/40 [00:10<00:00,  3.60it/s]100% 40/40 [00:11<00:00,  4.47it/s]100% 40/40 [00:11<00:00,  3.61it/s]
100% 40/40 [00:11<00:00,  3.61it/s]
100% 40/40 [00:11<00:00,  3.64it/s]
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.092328 (0.017747724914550782 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.101501 (0.017762401580810546 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:10.999507 (0.01759921112060547 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.017177 (0.017627482986450196 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:10.997003 (0.017595205307006836 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.111722 (0.01777875556945801 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.004805 (0.017607687377929688 s / img per device, on 8 devices)
2021-10-16 13:52:42,509 maskrcnn_benchmark.inference INFO: Total inference time: 0:00:11.001804 (0.0176028865814209 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.001804 (0.0176028865814209 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.025s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.026s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.026s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.026s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.026s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.026s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.027s
2021-10-16 13:52:42,673 maskrcnn_benchmark.timed_section INFO: EXPOSED: Launching evaluation preparation tasks took 0.034s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.034s
:::MLLOG {"namespace": "", "time_ms": 1634392362677, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 168, "first_epoch_num": 14, "epoch_count": 1}}
:::MLLOG {"namespace": "", "time_ms": 1634392362678, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 169, "epoch_num": 14}}

Grad overflow on iteration  11921
Using dynamic loss scale of  131072.0

Grad overflow on iteration  11921
Using dynamic loss scale of  131072.0

Grad overflow on iteration  11921
Using dynamic loss scale of  131072.0

Grad overflow on iteration  11921
Using dynamic loss scale of  131072.0

Grad overflow on iteration  11921
Using dynamic loss scale of  131072.0

Grad overflow on iteration  11921

Grad overflow on iteration Using dynamic loss scale of 
Grad overflow on iteration    11921
Using dynamic loss scale of  131072.011921131072.0


Using dynamic loss scale of  131072.0
INFO:maskrcnn_benchmark.timed_section:Prepping took 6.640 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 6.635 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 6.638 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 6.676 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 6.764 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 6.776 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 7.188 seconds total
2021-10-16 13:52:50,881 maskrcnn_benchmark.timed_section INFO: Prepping took 7.113 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 7.113 seconds total
INFO:maskrcnn_benchmark.trainer:eta: 1:08:06  iter: 11950  loss: 0.5801 (0.7779)  loss_classifier: 0.1729 (0.2603)  loss_box_reg: 0.0904 (0.1200)  loss_mask: 0.2453 (0.2910)  loss_objectness: 0.0234 (0.0489)  loss_rpn_box_reg: 0.0402 (0.0576)  time: 0.6289 (0.6754)  data: 0.0004 (0.0166)  lr: 0.016000  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:08:06  iter: 11950  loss: 0.5866 (0.7794)  loss_classifier: 0.1708 (0.2610)  loss_box_reg: 0.0885 (0.1206)  loss_mask: 0.2473 (0.2908)  loss_objectness: 0.0267 (0.0491)  loss_rpn_box_reg: 0.0398 (0.0579)  time: 0.6287 (0.6754)  data: 0.0004 (0.0166)  lr: 0.016000  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:08:06  iter: 11950  loss: 0.5930 (0.7803)  loss_classifier: 0.1810 (0.2611)  loss_box_reg: 0.0919 (0.1206)  loss_mask: 0.2567 (0.2910)  loss_objectness: 0.0211 (0.0495)  loss_rpn_box_reg: 0.0381 (0.0581)  time: 0.6287 (0.6754)  data: 0.0004 (0.0166)  lr: 0.016000  max mem: 14826
INFO:maskrcnn_benchmark.trainer:eta: 1:08:06  iter: 11950  loss: 0.5744 (0.7784)  loss_classifier: 0.1792 (0.2605)  loss_box_reg: 0.0884 (0.1204)  loss_mask: 0.2543 (0.2907)  loss_objectness: 0.0218 (0.0491)  loss_rpn_box_reg: 0.0341 (0.0578)  time: 0.6273 (0.6754)  data: 0.0004 (0.0166)  lr: 0.016000  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:08:06  iter: 11950  loss: 0.5394 (0.7780)  loss_classifier: 0.1567 (0.2602)  loss_box_reg: 0.0799 (0.1200)  loss_mask: 0.2334 (0.2907)  loss_objectness: 0.0226 (0.0492)  loss_rpn_box_reg: 0.0275 (0.0579)  time: 0.6279 (0.6754)  data: 0.0004 (0.0166)  lr: 0.016000  max mem: 14790
INFO:maskrcnn_benchmark.trainer:eta: 1:08:06  iter: 11950  loss: 0.5557 (0.7797)  loss_classifier: 0.1695 (0.2609)  loss_box_reg: 0.0879 (0.1206)  loss_mask: 0.2431 (0.2911)  loss_objectness: 0.0215 (0.0492)  loss_rpn_box_reg: 0.0426 (0.0580)  time: 0.6276 (0.6754)  data: 0.0004 (0.0166)  lr: 0.016000  max mem: 14843
2021-10-16 13:53:02,021 maskrcnn_benchmark.trainer INFO: eta: 1:08:06  iter: 11950  loss: 0.5900 (0.7826)  loss_classifier: 0.1630 (0.2622)  loss_box_reg: 0.0890 (0.1212)  loss_mask: 0.2475 (0.2914)  loss_objectness: 0.0223 (0.0495)  loss_rpn_box_reg: 0.0400 (0.0583)  time: 0.6275 (0.6754)  data: 0.0004 (0.0168)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:08:06  iter: 11950  loss: 0.5900 (0.7826)  loss_classifier: 0.1630 (0.2622)  loss_box_reg: 0.0890 (0.1212)  loss_mask: 0.2475 (0.2914)  loss_objectness: 0.0223 (0.0495)  loss_rpn_box_reg: 0.0400 (0.0583)  time: 0.6275 (0.6754)  data: 0.0004 (0.0168)  lr: 0.016000  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:08:06  iter: 11950  loss: 0.5760 (0.7810)  loss_classifier: 0.1793 (0.2615)  loss_box_reg: 0.0837 (0.1206)  loss_mask: 0.2414 (0.2914)  loss_objectness: 0.0210 (0.0494)  loss_rpn_box_reg: 0.0387 (0.0582)  time: 0.6275 (0.6754)  data: 0.0004 (0.0166)  lr: 0.016000  max mem: 14938
:::MLLOG {"namespace": "", "time_ms": 1634392382021, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.7826315152719928, "loss_classifier": 0.26222013017108126, "loss_box_reg": 0.12120770789969276, "loss_mask": 0.2913908531176994, "loss_objectness": 0.049492630516860835, "loss_rpn_box_reg": 0.05832019401422924, "time": 0.6754189400692864, "data": 0.016801362097512727, "throughput": 189.51200863107184}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 11950}}
:::MLLOG {"namespace": "", "time_ms": 1634392382021, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 189.51200863107184, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.127s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.127s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.129s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.129s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.129s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.129s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.131s
2021-10-16 13:53:02,152 maskrcnn_benchmark.timed_section INFO: EXPOSED: Launching evaluation task took 0.131s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.131s
Evaluating predictions
Loading and preparing results...
resFile is ./inference/coco_2017_val/segm.json
Loading and preparing results...
resFile is ./inference/coco_2017_val/bbox.json
DONE (t=1.43s)
DONE (t=0.67s)
Running per image evaluation...
Evaluate annotation type *bbox*
Running per image evaluation...
Evaluate annotation type *segm*
DONE (t=1.62s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.37553
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.59029
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.40888
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.21617
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.40584
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.49110
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.31251
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.49120
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.51589
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.32410
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.55240
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.65297
DONE (t=2.43s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.34112
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.55806
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.36176
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.15524
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.36597
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.50515
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.29373
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.45056
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.47039
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.27224
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.50743
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.62252
2021-10-16 13:53:14,833 maskrcnn_benchmark.trainer INFO: bbox mAP: 0.37553045905845694, segm mAP: 0.34111981608044767
INFO:maskrcnn_benchmark.trainer:bbox mAP: 0.37553045905845694, segm mAP: 0.34111981608044767
:::MLLOG {"namespace": "", "time_ms": 1634392394833, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": {"BBOX": 0.37553045905845694, "SEGM": 0.34111981608044767}, "metadata": {"file": "tools/train_mlperf.py", "lineno": 133, "epoch_num": 13}}
:::MLLOG {"namespace": "", "time_ms": 1634392394833, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 134, "epoch_num": 13}}
INFO:maskrcnn_benchmark.trainer:eta: 1:07:31  iter: 12000  loss: 0.6328 (0.7777)  loss_classifier: 0.1789 (0.2602)  loss_box_reg: 0.0985 (0.1203)  loss_mask: 0.2561 (0.2905)  loss_objectness: 0.0239 (0.0490)  loss_rpn_box_reg: 0.0388 (0.0577)  time: 0.6245 (0.6752)  data: 0.0004 (0.0166)  lr: 0.001600  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:07:31  iter: 12000  loss: 0.5884 (0.7771)  loss_classifier: 0.1684 (0.2600)  loss_box_reg: 0.0869 (0.1199)  loss_mask: 0.2470 (0.2909)  loss_objectness: 0.0222 (0.0488)  loss_rpn_box_reg: 0.0320 (0.0576)  time: 0.6253 (0.6752)  data: 0.0004 (0.0166)  lr: 0.001600  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:07:31  iter: 12000  loss: 0.5933 (0.7772)  loss_classifier: 0.1833 (0.2599)  loss_box_reg: 0.0946 (0.1199)  loss_mask: 0.2467 (0.2905)  loss_objectness: 0.0229 (0.0490)  loss_rpn_box_reg: 0.0409 (0.0578)  time: 0.6243 (0.6752)  data: 0.0004 (0.0166)  lr: 0.001600  max mem: 14790
INFO:maskrcnn_benchmark.trainer:eta: 1:07:31  iter: 12000  loss: 0.5697 (0.7786)  loss_classifier: 0.1713 (0.2607)  loss_box_reg: 0.0912 (0.1205)  loss_mask: 0.2456 (0.2906)  loss_objectness: 0.0251 (0.0490)  loss_rpn_box_reg: 0.0349 (0.0578)  time: 0.6251 (0.6752)  data: 0.0004 (0.0165)  lr: 0.001600  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:07:31  iter: 12000  loss: 0.5349 (0.7795)  loss_classifier: 0.1539 (0.2608)  loss_box_reg: 0.0795 (0.1205)  loss_mask: 0.2350 (0.2908)  loss_objectness: 0.0184 (0.0494)  loss_rpn_box_reg: 0.0354 (0.0580)  time: 0.6252 (0.6752)  data: 0.0003 (0.0166)  lr: 0.001600  max mem: 14826
INFO:maskrcnn_benchmark.trainer:eta: 1:07:31  iter: 12000  loss: 0.5781 (0.7789)  loss_classifier: 0.1695 (0.2605)  loss_box_reg: 0.0874 (0.1205)  loss_mask: 0.2472 (0.2909)  loss_objectness: 0.0233 (0.0491)  loss_rpn_box_reg: 0.0359 (0.0579)  time: 0.6246 (0.6752)  data: 0.0004 (0.0166)  lr: 0.001600  max mem: 14843
2021-10-16 13:53:33,653 maskrcnn_benchmark.trainer INFO: eta: 1:07:31  iter: 12000  loss: 0.5887 (0.7818)  loss_classifier: 0.1693 (0.2619)  loss_box_reg: 0.0927 (0.1211)  loss_mask: 0.2526 (0.2912)  loss_objectness: 0.0210 (0.0494)  loss_rpn_box_reg: 0.0379 (0.0583)  time: 0.6246 (0.6752)  data: 0.0004 (0.0168)  lr: 0.001600  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:07:31  iter: 12000  loss: 0.5887 (0.7818)  loss_classifier: 0.1693 (0.2619)  loss_box_reg: 0.0927 (0.1211)  loss_mask: 0.2526 (0.2912)  loss_objectness: 0.0210 (0.0494)  loss_rpn_box_reg: 0.0379 (0.0583)  time: 0.6246 (0.6752)  data: 0.0004 (0.0168)  lr: 0.001600  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:07:31  iter: 12000  loss: 0.5733 (0.7801)  loss_classifier: 0.1692 (0.2611)  loss_box_reg: 0.0859 (0.1204)  loss_mask: 0.2437 (0.2912)  loss_objectness: 0.0222 (0.0493)  loss_rpn_box_reg: 0.0399 (0.0581)  time: 0.6245 (0.6752)  data: 0.0004 (0.0165)  lr: 0.001600  max mem: 14938
:::MLLOG {"namespace": "", "time_ms": 1634392413653, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.781795344663163, "loss_classifier": 0.2618505263333209, "loss_box_reg": 0.12108602969509472, "loss_mask": 0.291219785515219, "loss_objectness": 0.04938424900278915, "loss_rpn_box_reg": 0.05825475458518486, "time": 0.675240674217542, "data": 0.016752581298351287, "throughput": 189.56204045072425}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 12000}}
:::MLLOG {"namespace": "", "time_ms": 1634392413653, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 189.56204045072425, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:06:56  iter: 12050  loss: 0.5778 (0.7779)  loss_classifier: 0.1781 (0.2603)  loss_box_reg: 0.0886 (0.1204)  loss_mask: 0.2454 (0.2905)  loss_objectness: 0.0217 (0.0489)  loss_rpn_box_reg: 0.0363 (0.0578)  time: 0.6285 (0.6750)  data: 0.0004 (0.0165)  lr: 0.001600  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:06:56  iter: 12050  loss: 0.5688 (0.7763)  loss_classifier: 0.1732 (0.2596)  loss_box_reg: 0.0922 (0.1198)  loss_mask: 0.2472 (0.2907)  loss_objectness: 0.0273 (0.0487)  loss_rpn_box_reg: 0.0346 (0.0575)  time: 0.6285 (0.6751)  data: 0.0004 (0.0165)  lr: 0.001600  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:06:56  iter: 12050  loss: 0.5708 (0.7787)  loss_classifier: 0.1579 (0.2604)  loss_box_reg: 0.0847 (0.1204)  loss_mask: 0.2385 (0.2906)  loss_objectness: 0.0224 (0.0493)  loss_rpn_box_reg: 0.0395 (0.0580)  time: 0.6284 (0.6750)  data: 0.0004 (0.0165)  lr: 0.001600  max mem: 14826
INFO:maskrcnn_benchmark.trainer:eta: 1:06:56  iter: 12050  loss: 0.5844 (0.7770)  loss_classifier: 0.1806 (0.2599)  loss_box_reg: 0.0916 (0.1202)  loss_mask: 0.2489 (0.2904)  loss_objectness: 0.0234 (0.0489)  loss_rpn_box_reg: 0.0358 (0.0576)  time: 0.6275 (0.6751)  data: 0.0004 (0.0165)  lr: 0.001600  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:06:56  iter: 12050  loss: 0.5857 (0.7764)  loss_classifier: 0.1630 (0.2595)  loss_box_reg: 0.0904 (0.1197)  loss_mask: 0.2556 (0.2903)  loss_objectness: 0.0215 (0.0489)  loss_rpn_box_reg: 0.0419 (0.0578)  time: 0.6272 (0.6751)  data: 0.0004 (0.0165)  lr: 0.001600  max mem: 14790
INFO:maskrcnn_benchmark.trainer:eta: 1:06:56  iter: 12050  loss: 0.5609 (0.7781)  loss_classifier: 0.1682 (0.2602)  loss_box_reg: 0.0856 (0.1204)  loss_mask: 0.2426 (0.2908)  loss_objectness: 0.0229 (0.0490)  loss_rpn_box_reg: 0.0384 (0.0579)  time: 0.6271 (0.6751)  data: 0.0004 (0.0165)  lr: 0.001600  max mem: 14843
INFO:maskrcnn_benchmark.trainer:eta: 1:06:56  iter: 12050  loss: 0.5238 (0.7792)  loss_classifier: 0.1617 (0.2607)  loss_box_reg: 0.0806 (0.1203)  loss_mask: 0.2320 (0.2910)  loss_objectness: 0.0216 (0.0492)  loss_rpn_box_reg: 0.0358 (0.0580)  time: 0.6267 (0.6751)  data: 0.0004 (0.0165)  lr: 0.001600  max mem: 14938
2021-10-16 13:54:05,101 maskrcnn_benchmark.trainer INFO: eta: 1:06:56  iter: 12050  loss: 0.5583 (0.7810)  loss_classifier: 0.1697 (0.2615)  loss_box_reg: 0.0892 (0.1210)  loss_mask: 0.2433 (0.2911)  loss_objectness: 0.0173 (0.0493)  loss_rpn_box_reg: 0.0384 (0.0582)  time: 0.6270 (0.6750)  data: 0.0003 (0.0167)  lr: 0.001600  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:06:56  iter: 12050  loss: 0.5583 (0.7810)  loss_classifier: 0.1697 (0.2615)  loss_box_reg: 0.0892 (0.1210)  loss_mask: 0.2433 (0.2911)  loss_objectness: 0.0173 (0.0493)  loss_rpn_box_reg: 0.0384 (0.0582)  time: 0.6270 (0.6750)  data: 0.0003 (0.0167)  lr: 0.001600  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634392445101, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.7809907569875361, "loss_classifier": 0.2614766219652478, "loss_box_reg": 0.12097784576332776, "loss_mask": 0.29105933503862236, "loss_objectness": 0.04927844852784888, "loss_rpn_box_reg": 0.05819850616710631, "time": 0.6750486556524063, "data": 0.016685067034361272, "throughput": 189.61596164693245}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 12050}}
:::MLLOG {"namespace": "", "time_ms": 1634392445101, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 189.61596164693245, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:06:21  iter: 12100  loss: 0.5563 (0.7762)  loss_classifier: 0.1837 (0.2595)  loss_box_reg: 0.0798 (0.1201)  loss_mask: 0.2422 (0.2902)  loss_objectness: 0.0257 (0.0488)  loss_rpn_box_reg: 0.0457 (0.0576)  time: 0.6278 (0.6749)  data: 0.0004 (0.0165)  lr: 0.001600  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:06:21  iter: 12100  loss: 0.5184 (0.7772)  loss_classifier: 0.1521 (0.2598)  loss_box_reg: 0.0766 (0.1202)  loss_mask: 0.2353 (0.2906)  loss_objectness: 0.0215 (0.0489)  loss_rpn_box_reg: 0.0353 (0.0578)  time: 0.6284 (0.6749)  data: 0.0004 (0.0164)  lr: 0.001600  max mem: 14843
2021-10-16 13:54:36,502 maskrcnn_benchmark.trainer INFO: eta: 1:06:21  iter: 12100  loss: 0.5700 (0.7801)  loss_classifier: 0.1662 (0.2611)  loss_box_reg: 0.0896 (0.1209)  loss_mask: 0.2412 (0.2909)  loss_objectness: 0.0223 (0.0492)  loss_rpn_box_reg: 0.0383 (0.0581)  time: 0.6286 (0.6749)  data: 0.0004 (0.0166)  lr: 0.001600  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:06:21  iter: 12100  loss: 0.5261 (0.7784)  loss_classifier: 0.1652 (0.2603)  loss_box_reg: 0.0755 (0.1202)  loss_mask: 0.2433 (0.2908)  loss_objectness: 0.0205 (0.0491)  loss_rpn_box_reg: 0.0371 (0.0580)  time: 0.6285 (0.6749)  data: 0.0004 (0.0164)  lr: 0.001600  max mem: 14938
INFO:maskrcnn_benchmark.trainer:eta: 1:06:21  iter: 12100  loss: 0.6170 (0.7756)  loss_classifier: 0.1795 (0.2592)  loss_box_reg: 0.0961 (0.1196)  loss_mask: 0.2506 (0.2902)  loss_objectness: 0.0255 (0.0488)  loss_rpn_box_reg: 0.0434 (0.0578)  time: 0.6284 (0.6749)  data: 0.0004 (0.0164)  lr: 0.001600  max mem: 14885
INFO:maskrcnn_benchmark.trainer:eta: 1:06:21  iter: 12100  loss: 0.5700 (0.7801)  loss_classifier: 0.1662 (0.2611)  loss_box_reg: 0.0896 (0.1209)  loss_mask: 0.2412 (0.2909)  loss_objectness: 0.0223 (0.0492)  loss_rpn_box_reg: 0.0383 (0.0581)  time: 0.6286 (0.6749)  data: 0.0004 (0.0166)  lr: 0.001600  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634392476502, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.780146464385277, "loss_classifier": 0.2611201278826853, "loss_box_reg": 0.12085375834431515, "loss_mask": 0.29086084467689854, "loss_objectness": 0.04917467748696246, "loss_rpn_box_reg": 0.058137056484389354, "time": 0.67485434362711, "data": 0.016618291996727305, "throughput": 189.67055811190903}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 12100}}
:::MLLOG {"namespace": "", "time_ms": 1634392476503, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 189.67055811190903, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:06:21  iter: 12100  loss: 0.5806 (0.7771)  loss_classifier: 0.1701 (0.2600)  loss_box_reg: 0.0923 (0.1203)  loss_mask: 0.2411 (0.2903)  loss_objectness: 0.0243 (0.0488)  loss_rpn_box_reg: 0.0434 (0.0577)  time: 0.6274 (0.6749)  data: 0.0004 (0.0164)  lr: 0.001600  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:06:21  iter: 12100  loss: 0.5728 (0.7779)  loss_classifier: 0.1760 (0.2601)  loss_box_reg: 0.0900 (0.1203)  loss_mask: 0.2507 (0.2904)  loss_objectness: 0.0253 (0.0492)  loss_rpn_box_reg: 0.0375 (0.0579)  time: 0.6276 (0.6749)  data: 0.0004 (0.0164)  lr: 0.001600  max mem: 14826
INFO:maskrcnn_benchmark.trainer:eta: 1:06:21  iter: 12100  loss: 0.5941 (0.7754)  loss_classifier: 0.1808 (0.2593)  loss_box_reg: 0.0925 (0.1196)  loss_mask: 0.2464 (0.2905)  loss_objectness: 0.0218 (0.0486)  loss_rpn_box_reg: 0.0431 (0.0575)  time: 0.6275 (0.6749)  data: 0.0004 (0.0164)  lr: 0.001600  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:05:46  iter: 12150  loss: 0.5797 (0.7746)  loss_classifier: 0.1729 (0.2589)  loss_box_reg: 0.0917 (0.1195)  loss_mask: 0.2628 (0.2903)  loss_objectness: 0.0202 (0.0485)  loss_rpn_box_reg: 0.0296 (0.0574)  time: 0.6274 (0.6747)  data: 0.0004 (0.0164)  lr: 0.001600  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:05:46  iter: 12150  loss: 0.5863 (0.7762)  loss_classifier: 0.1744 (0.2596)  loss_box_reg: 0.0934 (0.1202)  loss_mask: 0.2449 (0.2901)  loss_objectness: 0.0233 (0.0487)  loss_rpn_box_reg: 0.0489 (0.0576)  time: 0.6273 (0.6747)  data: 0.0004 (0.0163)  lr: 0.001600  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:05:46  iter: 12150  loss: 0.5564 (0.7770)  loss_classifier: 0.1650 (0.2597)  loss_box_reg: 0.0902 (0.1202)  loss_mask: 0.2443 (0.2902)  loss_objectness: 0.0235 (0.0491)  loss_rpn_box_reg: 0.0417 (0.0578)  time: 0.6273 (0.6747)  data: 0.0004 (0.0164)  lr: 0.001600  max mem: 14826
INFO:maskrcnn_benchmark.trainer:eta: 1:05:46  iter: 12150  loss: 0.5584 (0.7754)  loss_classifier: 0.1727 (0.2592)  loss_box_reg: 0.0850 (0.1199)  loss_mask: 0.2410 (0.2900)  loss_objectness: 0.0199 (0.0487)  loss_rpn_box_reg: 0.0373 (0.0575)  time: 0.6278 (0.6747)  data: 0.0004 (0.0164)  lr: 0.001600  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:05:46  iter: 12150  loss: 0.5563 (0.7748)  loss_classifier: 0.1706 (0.2588)  loss_box_reg: 0.0879 (0.1195)  loss_mask: 0.2388 (0.2900)  loss_objectness: 0.0228 (0.0487)  loss_rpn_box_reg: 0.0417 (0.0577)  time: 0.6277 (0.6747)  data: 0.0004 (0.0164)  lr: 0.001600  max mem: 14885
INFO:maskrcnn_benchmark.trainer:eta: 1:05:46  iter: 12150  loss: 0.5757 (0.7764)  loss_classifier: 0.1612 (0.2594)  loss_box_reg: 0.0789 (0.1201)  loss_mask: 0.2493 (0.2904)  loss_objectness: 0.0207 (0.0488)  loss_rpn_box_reg: 0.0428 (0.0577)  time: 0.6273 (0.6747)  data: 0.0003 (0.0164)  lr: 0.001600  max mem: 14843
2021-10-16 13:55:07,920 maskrcnn_benchmark.trainer INFO: eta: 1:05:46  iter: 12150  loss: 0.5541 (0.7793)  loss_classifier: 0.1737 (0.2608)  loss_box_reg: 0.0909 (0.1207)  loss_mask: 0.2398 (0.2907)  loss_objectness: 0.0215 (0.0491)  loss_rpn_box_reg: 0.0407 (0.0581)  time: 0.6276 (0.6747)  data: 0.0004 (0.0166)  lr: 0.001600  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:05:46  iter: 12150  loss: 0.5828 (0.7776)  loss_classifier: 0.1734 (0.2600)  loss_box_reg: 0.0872 (0.1201)  loss_mask: 0.2480 (0.2907)  loss_objectness: 0.0215 (0.0490)  loss_rpn_box_reg: 0.0365 (0.0579)  time: 0.6277 (0.6747)  data: 0.0003 (0.0163)  lr: 0.001600  max mem: 14938
INFO:maskrcnn_benchmark.trainer:eta: 1:05:46  iter: 12150  loss: 0.5541 (0.7793)  loss_classifier: 0.1737 (0.2608)  loss_box_reg: 0.0909 (0.1207)  loss_mask: 0.2398 (0.2907)  loss_objectness: 0.0215 (0.0491)  loss_rpn_box_reg: 0.0407 (0.0581)  time: 0.6276 (0.6747)  data: 0.0004 (0.0166)  lr: 0.001600  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634392507920, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.7793295033993545, "loss_classifier": 0.2607653953593393, "loss_box_reg": 0.12073916707346945, "loss_mask": 0.29068916564493025, "loss_objectness": 0.049067772540528284, "loss_rpn_box_reg": 0.058068003283455245, "time": 0.6746629859390573, "data": 0.016551945847248343, "throughput": 189.72435522283465}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 12150}}
:::MLLOG {"namespace": "", "time_ms": 1634392507920, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 189.72435522283465, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:05:11  iter: 12200  loss: 0.5538 (0.7740)  loss_classifier: 0.1649 (0.2585)  loss_box_reg: 0.0840 (0.1194)  loss_mask: 0.2452 (0.2898)  loss_objectness: 0.0214 (0.0486)  loss_rpn_box_reg: 0.0313 (0.0576)  time: 0.6260 (0.6745)  data: 0.0004 (0.0163)  lr: 0.001600  max mem: 14885
INFO:maskrcnn_benchmark.trainer:eta: 1:05:11  iter: 12200  loss: 0.5920 (0.7739)  loss_classifier: 0.1766 (0.2586)  loss_box_reg: 0.1009 (0.1194)  loss_mask: 0.2465 (0.2902)  loss_objectness: 0.0245 (0.0484)  loss_rpn_box_reg: 0.0369 (0.0573)  time: 0.6268 (0.6745)  data: 0.0004 (0.0163)  lr: 0.001600  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:05:11  iter: 12200  loss: 0.5458 (0.7761)  loss_classifier: 0.1568 (0.2593)  loss_box_reg: 0.0879 (0.1200)  loss_mask: 0.2387 (0.2901)  loss_objectness: 0.0186 (0.0489)  loss_rpn_box_reg: 0.0356 (0.0578)  time: 0.6272 (0.6745)  data: 0.0004 (0.0163)  lr: 0.001600  max mem: 14826
INFO:maskrcnn_benchmark.trainer:eta: 1:05:11  iter: 12200  loss: 0.6077 (0.7754)  loss_classifier: 0.1923 (0.2593)  loss_box_reg: 0.0910 (0.1201)  loss_mask: 0.2376 (0.2899)  loss_objectness: 0.0269 (0.0486)  loss_rpn_box_reg: 0.0457 (0.0576)  time: 0.6271 (0.6745)  data: 0.0004 (0.0163)  lr: 0.001600  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:05:11  iter: 12200  loss: 0.6274 (0.7746)  loss_classifier: 0.1758 (0.2589)  loss_box_reg: 0.1063 (0.1198)  loss_mask: 0.2577 (0.2899)  loss_objectness: 0.0295 (0.0486)  loss_rpn_box_reg: 0.0463 (0.0575)  time: 0.6258 (0.6745)  data: 0.0004 (0.0163)  lr: 0.001600  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:05:11  iter: 12200  loss: 0.5870 (0.7757)  loss_classifier: 0.1615 (0.2591)  loss_box_reg: 0.0881 (0.1200)  loss_mask: 0.2502 (0.2902)  loss_objectness: 0.0236 (0.0487)  loss_rpn_box_reg: 0.0426 (0.0577)  time: 0.6250 (0.6745)  data: 0.0004 (0.0163)  lr: 0.001600  max mem: 14843
INFO:maskrcnn_benchmark.trainer:eta: 1:05:11  iter: 12200  loss: 0.5679 (0.7768)  loss_classifier: 0.1739 (0.2596)  loss_box_reg: 0.0939 (0.1199)  loss_mask: 0.2408 (0.2905)  loss_objectness: 0.0217 (0.0489)  loss_rpn_box_reg: 0.0363 (0.0578)  time: 0.6252 (0.6745)  data: 0.0004 (0.0163)  lr: 0.001600  max mem: 14938
2021-10-16 13:55:39,338 maskrcnn_benchmark.trainer INFO: eta: 1:05:11  iter: 12200  loss: 0.5962 (0.7785)  loss_classifier: 0.1770 (0.2604)  loss_box_reg: 0.0975 (0.1206)  loss_mask: 0.2449 (0.2905)  loss_objectness: 0.0225 (0.0490)  loss_rpn_box_reg: 0.0410 (0.0580)  time: 0.6253 (0.6745)  data: 0.0004 (0.0165)  lr: 0.001600  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:05:11  iter: 12200  loss: 0.5962 (0.7785)  loss_classifier: 0.1770 (0.2604)  loss_box_reg: 0.0975 (0.1206)  loss_mask: 0.2449 (0.2905)  loss_objectness: 0.0225 (0.0490)  loss_rpn_box_reg: 0.0410 (0.0580)  time: 0.6253 (0.6745)  data: 0.0004 (0.0165)  lr: 0.001600  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634392539339, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.7785158155834089, "loss_classifier": 0.26041977230871677, "loss_box_reg": 0.12062750709065632, "loss_mask": 0.29050906817444033, "loss_objectness": 0.04896504418561846, "loss_rpn_box_reg": 0.05799442430604135, "time": 0.674473262302211, "data": 0.016485933026329416, "throughput": 189.77772308288638}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 12200}}
:::MLLOG {"namespace": "", "time_ms": 1634392539339, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 189.77772308288638, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:04:37  iter: 12250  loss: 0.5552 (0.7745)  loss_classifier: 0.1534 (0.2589)  loss_box_reg: 0.0869 (0.1200)  loss_mask: 0.2344 (0.2897)  loss_objectness: 0.0215 (0.0485)  loss_rpn_box_reg: 0.0315 (0.0575)  time: 0.6267 (0.6743)  data: 0.0004 (0.0162)  lr: 0.001600  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:04:37  iter: 12250  loss: 0.5513 (0.7730)  loss_classifier: 0.1677 (0.2582)  loss_box_reg: 0.0907 (0.1193)  loss_mask: 0.2448 (0.2900)  loss_objectness: 0.0241 (0.0483)  loss_rpn_box_reg: 0.0414 (0.0573)  time: 0.6266 (0.6743)  data: 0.0004 (0.0162)  lr: 0.001600  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:04:37  iter: 12250  loss: 0.6237 (0.7754)  loss_classifier: 0.1932 (0.2590)  loss_box_reg: 0.0975 (0.1199)  loss_mask: 0.2567 (0.2899)  loss_objectness: 0.0253 (0.0489)  loss_rpn_box_reg: 0.0454 (0.0577)  time: 0.6265 (0.6743)  data: 0.0004 (0.0162)  lr: 0.001600  max mem: 14826
INFO:maskrcnn_benchmark.trainer:eta: 1:04:37  iter: 12250  loss: 0.5652 (0.7739)  loss_classifier: 0.1643 (0.2585)  loss_box_reg: 0.0989 (0.1197)  loss_mask: 0.2507 (0.2897)  loss_objectness: 0.0219 (0.0485)  loss_rpn_box_reg: 0.0363 (0.0574)  time: 0.6265 (0.6743)  data: 0.0004 (0.0163)  lr: 0.001600  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:04:37  iter: 12250  loss: 0.5758 (0.7732)  loss_classifier: 0.1611 (0.2582)  loss_box_reg: 0.0849 (0.1193)  loss_mask: 0.2349 (0.2897)  loss_objectness: 0.0223 (0.0485)  loss_rpn_box_reg: 0.0356 (0.0576)  time: 0.6266 (0.6743)  data: 0.0004 (0.0162)  lr: 0.001600  max mem: 14885
INFO:maskrcnn_benchmark.trainer:eta: 1:04:37  iter: 12250  loss: 0.5751 (0.7749)  loss_classifier: 0.1635 (0.2588)  loss_box_reg: 0.0889 (0.1199)  loss_mask: 0.2492 (0.2901)  loss_objectness: 0.0211 (0.0486)  loss_rpn_box_reg: 0.0327 (0.0576)  time: 0.6258 (0.6743)  data: 0.0003 (0.0162)  lr: 0.001600  max mem: 14843
INFO:maskrcnn_benchmark.trainer:eta: 1:04:37  iter: 12250  loss: 0.5602 (0.7759)  loss_classifier: 0.1656 (0.2593)  loss_box_reg: 0.0930 (0.1198)  loss_mask: 0.2410 (0.2903)  loss_objectness: 0.0211 (0.0487)  loss_rpn_box_reg: 0.0362 (0.0578)  time: 0.6266 (0.6743)  data: 0.0003 (0.0162)  lr: 0.001600  max mem: 14938
2021-10-16 13:56:10,841 maskrcnn_benchmark.trainer INFO: eta: 1:04:37  iter: 12250  loss: 0.6177 (0.7778)  loss_classifier: 0.1966 (0.2601)  loss_box_reg: 0.0975 (0.1205)  loss_mask: 0.2463 (0.2903)  loss_objectness: 0.0215 (0.0489)  loss_rpn_box_reg: 0.0431 (0.0580)  time: 0.6259 (0.6743)  data: 0.0004 (0.0164)  lr: 0.001600  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:04:37  iter: 12250  loss: 0.6177 (0.7778)  loss_classifier: 0.1966 (0.2601)  loss_box_reg: 0.0975 (0.1205)  loss_mask: 0.2463 (0.2903)  loss_objectness: 0.0215 (0.0489)  loss_rpn_box_reg: 0.0431 (0.0580)  time: 0.6259 (0.6743)  data: 0.0004 (0.0164)  lr: 0.001600  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634392570841, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.7777939722805607, "loss_classifier": 0.2600920310937324, "loss_box_reg": 0.12052375470457256, "loss_mask": 0.2903456131292849, "loss_objectness": 0.04887485462571589, "loss_rpn_box_reg": 0.05795771919925488, "time": 0.6742919582834049, "data": 0.016420513873197595, "throughput": 189.8287506288212}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 12250}}
:::MLLOG {"namespace": "", "time_ms": 1634392570842, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 189.8287506288212, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
2021-10-16 13:56:42,220 maskrcnn_benchmark.trainer INFO: eta: 1:04:02  iter: 12300  loss: 0.5881 (0.7770)  loss_classifier: 0.1642 (0.2597)  loss_box_reg: 0.0945 (0.1204)  loss_mask: 0.2496 (0.2902)  loss_objectness: 0.0205 (0.0488)  loss_rpn_box_reg: 0.0446 (0.0579)  time: 0.6244 (0.6741)  data: 0.0004 (0.0164)  lr: 0.001600  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:04:02  iter: 12300  loss: 0.5816 (0.7751)  loss_classifier: 0.1907 (0.2589)  loss_box_reg: 0.1023 (0.1197)  loss_mask: 0.2500 (0.2901)  loss_objectness: 0.0283 (0.0486)  loss_rpn_box_reg: 0.0443 (0.0577)  time: 0.6243 (0.6741)  data: 0.0004 (0.0161)  lr: 0.001600  max mem: 14938
INFO:maskrcnn_benchmark.trainer:eta: 1:04:02  iter: 12300  loss: 0.5881 (0.7770)  loss_classifier: 0.1642 (0.2597)  loss_box_reg: 0.0945 (0.1204)  loss_mask: 0.2496 (0.2902)  loss_objectness: 0.0205 (0.0488)  loss_rpn_box_reg: 0.0446 (0.0579)  time: 0.6244 (0.6741)  data: 0.0004 (0.0164)  lr: 0.001600  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:04:02  iter: 12300  loss: 0.5922 (0.7741)  loss_classifier: 0.1689 (0.2584)  loss_box_reg: 0.0924 (0.1197)  loss_mask: 0.2453 (0.2899)  loss_objectness: 0.0217 (0.0485)  loss_rpn_box_reg: 0.0424 (0.0576)  time: 0.6242 (0.6741)  data: 0.0004 (0.0162)  lr: 0.001600  max mem: 14843
:::MLLOG {"namespace": "", "time_ms": 1634392602220, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.7769850125593868, "loss_classifier": 0.25973942068216155, "loss_box_reg": 0.12040562374280706, "loss_mask": 0.2901685603229496, "loss_objectness": 0.04877410516233706, "loss_rpn_box_reg": 0.05789730312617882, "time": 0.674102044919642, "data": 0.01635581096013387, "throughput": 189.8822306869853}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 12300}}
:::MLLOG {"namespace": "", "time_ms": 1634392602220, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 189.8822306869853, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:04:02  iter: 12300  loss: 0.5782 (0.7724)  loss_classifier: 0.1691 (0.2578)  loss_box_reg: 0.0900 (0.1192)  loss_mask: 0.2366 (0.2895)  loss_objectness: 0.0278 (0.0484)  loss_rpn_box_reg: 0.0402 (0.0575)  time: 0.6250 (0.6741)  data: 0.0004 (0.0162)  lr: 0.001600  max mem: 14885
INFO:maskrcnn_benchmark.trainer:eta: 1:04:02  iter: 12300  loss: 0.5513 (0.7730)  loss_classifier: 0.1635 (0.2582)  loss_box_reg: 0.0884 (0.1196)  loss_mask: 0.2455 (0.2895)  loss_objectness: 0.0218 (0.0484)  loss_rpn_box_reg: 0.0335 (0.0573)  time: 0.6246 (0.6741)  data: 0.0004 (0.0162)  lr: 0.001600  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:04:02  iter: 12300  loss: 0.6056 (0.7724)  loss_classifier: 0.1943 (0.2579)  loss_box_reg: 0.0942 (0.1192)  loss_mask: 0.2521 (0.2898)  loss_objectness: 0.0225 (0.0482)  loss_rpn_box_reg: 0.0459 (0.0573)  time: 0.6251 (0.6741)  data: 0.0004 (0.0162)  lr: 0.001600  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:04:02  iter: 12300  loss: 0.5641 (0.7737)  loss_classifier: 0.1718 (0.2585)  loss_box_reg: 0.0909 (0.1198)  loss_mask: 0.2426 (0.2895)  loss_objectness: 0.0204 (0.0484)  loss_rpn_box_reg: 0.0305 (0.0574)  time: 0.6250 (0.6741)  data: 0.0004 (0.0162)  lr: 0.001600  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:04:02  iter: 12300  loss: 0.5362 (0.7746)  loss_classifier: 0.1541 (0.2586)  loss_box_reg: 0.0831 (0.1198)  loss_mask: 0.2411 (0.2897)  loss_objectness: 0.0206 (0.0488)  loss_rpn_box_reg: 0.0380 (0.0577)  time: 0.6249 (0.6741)  data: 0.0003 (0.0162)  lr: 0.001600  max mem: 14826
INFO:maskrcnn_benchmark.trainer:eta: 1:03:27  iter: 12350  loss: 0.6073 (0.7745)  loss_classifier: 0.1721 (0.2586)  loss_box_reg: 0.0932 (0.1196)  loss_mask: 0.2523 (0.2900)  loss_objectness: 0.0245 (0.0486)  loss_rpn_box_reg: 0.0368 (0.0577)  time: 0.6298 (0.6739)  data: 0.0004 (0.0161)  lr: 0.001600  max mem: 14938
INFO:maskrcnn_benchmark.trainer:eta: 1:03:27  iter: 12350  loss: 0.5874 (0.7733)  loss_classifier: 0.1823 (0.2581)  loss_box_reg: 0.0877 (0.1196)  loss_mask: 0.2404 (0.2897)  loss_objectness: 0.0236 (0.0484)  loss_rpn_box_reg: 0.0346 (0.0575)  time: 0.6298 (0.6739)  data: 0.0004 (0.0161)  lr: 0.001600  max mem: 14843
2021-10-16 13:57:13,710 maskrcnn_benchmark.trainer INFO: eta: 1:03:27  iter: 12350  loss: 0.5563 (0.7761)  loss_classifier: 0.1513 (0.2594)  loss_box_reg: 0.0803 (0.1203)  loss_mask: 0.2428 (0.2900)  loss_objectness: 0.0204 (0.0487)  loss_rpn_box_reg: 0.0346 (0.0578)  time: 0.6298 (0.6739)  data: 0.0003 (0.0163)  lr: 0.001600  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:03:27  iter: 12350  loss: 0.5563 (0.7761)  loss_classifier: 0.1513 (0.2594)  loss_box_reg: 0.0803 (0.1203)  loss_mask: 0.2428 (0.2900)  loss_objectness: 0.0204 (0.0487)  loss_rpn_box_reg: 0.0346 (0.0578)  time: 0.6298 (0.6739)  data: 0.0003 (0.0163)  lr: 0.001600  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634392633711, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.7761446000376211, "loss_classifier": 0.2593706601929025, "loss_box_reg": 0.12028089241541334, "loss_mask": 0.28998888298688147, "loss_objectness": 0.04867151293805555, "loss_rpn_box_reg": 0.05783265198257597, "time": 0.6739227282759632, "data": 0.0162913209899717, "throughput": 189.93275434922793}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 12350}}
:::MLLOG {"namespace": "", "time_ms": 1634392633711, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 189.93275434922793, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:03:27  iter: 12350  loss: 0.5670 (0.7721)  loss_classifier: 0.1633 (0.2578)  loss_box_reg: 0.0845 (0.1195)  loss_mask: 0.2469 (0.2893)  loss_objectness: 0.0233 (0.0483)  loss_rpn_box_reg: 0.0422 (0.0573)  time: 0.6298 (0.6739)  data: 0.0004 (0.0161)  lr: 0.001600  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:03:27  iter: 12350  loss: 0.5023 (0.7716)  loss_classifier: 0.1540 (0.2575)  loss_box_reg: 0.0799 (0.1191)  loss_mask: 0.2272 (0.2893)  loss_objectness: 0.0185 (0.0483)  loss_rpn_box_reg: 0.0349 (0.0575)  time: 0.6300 (0.6739)  data: 0.0004 (0.0161)  lr: 0.001600  max mem: 14885
INFO:maskrcnn_benchmark.trainer:eta: 1:03:27  iter: 12350  loss: 0.5685 (0.7716)  loss_classifier: 0.1703 (0.2576)  loss_box_reg: 0.0871 (0.1191)  loss_mask: 0.2604 (0.2896)  loss_objectness: 0.0231 (0.0481)  loss_rpn_box_reg: 0.0495 (0.0572)  time: 0.6311 (0.6739)  data: 0.0004 (0.0161)  lr: 0.001600  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:03:27  iter: 12350  loss: 0.6127 (0.7740)  loss_classifier: 0.1880 (0.2583)  loss_box_reg: 0.1005 (0.1197)  loss_mask: 0.2560 (0.2896)  loss_objectness: 0.0287 (0.0487)  loss_rpn_box_reg: 0.0408 (0.0576)  time: 0.6307 (0.6739)  data: 0.0004 (0.0161)  lr: 0.001600  max mem: 14826
INFO:maskrcnn_benchmark.trainer:eta: 1:03:27  iter: 12350  loss: 0.5695 (0.7730)  loss_classifier: 0.1639 (0.2582)  loss_box_reg: 0.0883 (0.1197)  loss_mask: 0.2478 (0.2894)  loss_objectness: 0.0215 (0.0483)  loss_rpn_box_reg: 0.0408 (0.0574)  time: 0.6311 (0.6739)  data: 0.0004 (0.0161)  lr: 0.001600  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:02:52  iter: 12400  loss: 0.5291 (0.7737)  loss_classifier: 0.1513 (0.2583)  loss_box_reg: 0.0740 (0.1195)  loss_mask: 0.2328 (0.2898)  loss_objectness: 0.0234 (0.0484)  loss_rpn_box_reg: 0.0420 (0.0576)  time: 0.6329 (0.6737)  data: 0.0004 (0.0160)  lr: 0.001600  max mem: 14938
2021-10-16 13:57:45,188 maskrcnn_benchmark.trainer INFO: eta: 1:02:52  iter: 12400  loss: 0.5626 (0.7753)  loss_classifier: 0.1629 (0.2590)  loss_box_reg: 0.0845 (0.1202)  loss_mask: 0.2411 (0.2898)  loss_objectness: 0.0211 (0.0486)  loss_rpn_box_reg: 0.0358 (0.0578)  time: 0.6336 (0.6737)  data: 0.0004 (0.0162)  lr: 0.001600  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:02:52  iter: 12400  loss: 0.5626 (0.7753)  loss_classifier: 0.1629 (0.2590)  loss_box_reg: 0.0845 (0.1202)  loss_mask: 0.2411 (0.2898)  loss_objectness: 0.0211 (0.0486)  loss_rpn_box_reg: 0.0358 (0.0578)  time: 0.6336 (0.6737)  data: 0.0004 (0.0162)  lr: 0.001600  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:02:52  iter: 12400  loss: 0.5866 (0.7725)  loss_classifier: 0.1716 (0.2577)  loss_box_reg: 0.0923 (0.1195)  loss_mask: 0.2471 (0.2896)  loss_objectness: 0.0262 (0.0483)  loss_rpn_box_reg: 0.0402 (0.0574)  time: 0.6335 (0.6737)  data: 0.0004 (0.0160)  lr: 0.001600  max mem: 14843
:::MLLOG {"namespace": "", "time_ms": 1634392665188, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.7753357701628439, "loss_classifier": 0.25902014039261567, "loss_box_reg": 0.1201570556011434, "loss_mask": 0.2898176765321724, "loss_objectness": 0.048567613954280296, "loss_rpn_box_reg": 0.05777328418437279, "time": 0.6737438269007591, "data": 0.01622765431481023, "throughput": 189.9831878071576}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 12400}}
:::MLLOG {"namespace": "", "time_ms": 1634392665189, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 189.9831878071576, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:02:52  iter: 12400  loss: 0.5651 (0.7714)  loss_classifier: 0.1611 (0.2574)  loss_box_reg: 0.0886 (0.1194)  loss_mask: 0.2421 (0.2892)  loss_objectness: 0.0208 (0.0482)  loss_rpn_box_reg: 0.0316 (0.0572)  time: 0.6343 (0.6737)  data: 0.0004 (0.0161)  lr: 0.001600  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:02:52  iter: 12400  loss: 0.6443 (0.7708)  loss_classifier: 0.2000 (0.2571)  loss_box_reg: 0.1106 (0.1190)  loss_mask: 0.2498 (0.2891)  loss_objectness: 0.0265 (0.0482)  loss_rpn_box_reg: 0.0473 (0.0574)  time: 0.6334 (0.6737)  data: 0.0004 (0.0161)  lr: 0.001600  max mem: 14885
INFO:maskrcnn_benchmark.trainer:eta: 1:02:52  iter: 12400  loss: 0.5365 (0.7709)  loss_classifier: 0.1665 (0.2573)  loss_box_reg: 0.0935 (0.1190)  loss_mask: 0.2387 (0.2895)  loss_objectness: 0.0216 (0.0480)  loss_rpn_box_reg: 0.0337 (0.0571)  time: 0.6335 (0.6737)  data: 0.0004 (0.0160)  lr: 0.001600  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:02:52  iter: 12400  loss: 0.6259 (0.7733)  loss_classifier: 0.1952 (0.2580)  loss_box_reg: 0.1063 (0.1196)  loss_mask: 0.2482 (0.2894)  loss_objectness: 0.0253 (0.0486)  loss_rpn_box_reg: 0.0479 (0.0576)  time: 0.6332 (0.6737)  data: 0.0004 (0.0160)  lr: 0.001600  max mem: 14826
INFO:maskrcnn_benchmark.trainer:eta: 1:02:52  iter: 12400  loss: 0.5626 (0.7721)  loss_classifier: 0.1645 (0.2578)  loss_box_reg: 0.0903 (0.1196)  loss_mask: 0.2456 (0.2892)  loss_objectness: 0.0216 (0.0482)  loss_rpn_box_reg: 0.0334 (0.0573)  time: 0.6331 (0.6737)  data: 0.0004 (0.0160)  lr: 0.001600  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:02:18  iter: 12450  loss: 0.5689 (0.7718)  loss_classifier: 0.1691 (0.2574)  loss_box_reg: 0.0896 (0.1194)  loss_mask: 0.2427 (0.2894)  loss_objectness: 0.0221 (0.0482)  loss_rpn_box_reg: 0.0349 (0.0574)  time: 0.6292 (0.6736)  data: 0.0004 (0.0160)  lr: 0.001600  max mem: 14843
2021-10-16 13:58:16,717 maskrcnn_benchmark.trainer INFO: eta: 1:02:18  iter: 12450  loss: 0.5149 (0.7745)  loss_classifier: 0.1481 (0.2586)  loss_box_reg: 0.0779 (0.1200)  loss_mask: 0.2325 (0.2896)  loss_objectness: 0.0215 (0.0485)  loss_rpn_box_reg: 0.0336 (0.0577)  time: 0.6289 (0.6736)  data: 0.0004 (0.0162)  lr: 0.001600  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:02:18  iter: 12450  loss: 0.5149 (0.7745)  loss_classifier: 0.1481 (0.2586)  loss_box_reg: 0.0779 (0.1200)  loss_mask: 0.2325 (0.2896)  loss_objectness: 0.0215 (0.0485)  loss_rpn_box_reg: 0.0336 (0.0577)  time: 0.6289 (0.6736)  data: 0.0004 (0.0162)  lr: 0.001600  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:02:18  iter: 12450  loss: 0.5881 (0.7730)  loss_classifier: 0.1742 (0.2580)  loss_box_reg: 0.0957 (0.1194)  loss_mask: 0.2507 (0.2897)  loss_objectness: 0.0210 (0.0484)  loss_rpn_box_reg: 0.0474 (0.0576)  time: 0.6290 (0.6736)  data: 0.0004 (0.0160)  lr: 0.001600  max mem: 14938
:::MLLOG {"namespace": "", "time_ms": 1634392696718, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.7744733926498267, "loss_classifier": 0.25864479216152286, "loss_box_reg": 0.12002998024066275, "loss_mask": 0.2896376178566232, "loss_objectness": 0.04846773538095166, "loss_rpn_box_reg": 0.0576932675107644, "time": 0.6735705023884294, "data": 0.016164505606195534, "throughput": 190.0320746620017}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 12450}}
:::MLLOG {"namespace": "", "time_ms": 1634392696718, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 190.0320746620017, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:02:18  iter: 12450  loss: 0.5300 (0.7706)  loss_classifier: 0.1465 (0.2571)  loss_box_reg: 0.0802 (0.1193)  loss_mask: 0.2359 (0.2890)  loss_objectness: 0.0216 (0.0481)  loss_rpn_box_reg: 0.0371 (0.0571)  time: 0.6266 (0.6736)  data: 0.0004 (0.0160)  lr: 0.001600  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:02:18  iter: 12450  loss: 0.5788 (0.7700)  loss_classifier: 0.1738 (0.2568)  loss_box_reg: 0.0898 (0.1188)  loss_mask: 0.2459 (0.2889)  loss_objectness: 0.0196 (0.0481)  loss_rpn_box_reg: 0.0294 (0.0573)  time: 0.6277 (0.6736)  data: 0.0004 (0.0160)  lr: 0.001600  max mem: 14885
INFO:maskrcnn_benchmark.trainer:eta: 1:02:18  iter: 12450  loss: 0.5766 (0.7701)  loss_classifier: 0.1648 (0.2569)  loss_box_reg: 0.0851 (0.1189)  loss_mask: 0.2490 (0.2893)  loss_objectness: 0.0241 (0.0479)  loss_rpn_box_reg: 0.0392 (0.0571)  time: 0.6277 (0.6736)  data: 0.0003 (0.0160)  lr: 0.001600  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:02:18  iter: 12450  loss: 0.5489 (0.7725)  loss_classifier: 0.1663 (0.2577)  loss_box_reg: 0.0904 (0.1195)  loss_mask: 0.2459 (0.2893)  loss_objectness: 0.0246 (0.0485)  loss_rpn_box_reg: 0.0372 (0.0575)  time: 0.6279 (0.6736)  data: 0.0004 (0.0160)  lr: 0.001600  max mem: 14826
INFO:maskrcnn_benchmark.trainer:eta: 1:02:18  iter: 12450  loss: 0.5860 (0.7714)  loss_classifier: 0.1687 (0.2575)  loss_box_reg: 0.0965 (0.1195)  loss_mask: 0.2524 (0.2891)  loss_objectness: 0.0203 (0.0481)  loss_rpn_box_reg: 0.0389 (0.0573)  time: 0.6280 (0.6736)  data: 0.0004 (0.0160)  lr: 0.001600  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:01:43  iter: 12500  loss: 0.5799 (0.7693)  loss_classifier: 0.1773 (0.2566)  loss_box_reg: 0.0973 (0.1188)  loss_mask: 0.2527 (0.2891)  loss_objectness: 0.0218 (0.0478)  loss_rpn_box_reg: 0.0361 (0.0570)  time: 0.6295 (0.6734)  data: 0.0004 (0.0159)  lr: 0.001600  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:01:43  iter: 12500  loss: 0.5589 (0.7706)  loss_classifier: 0.1607 (0.2571)  loss_box_reg: 0.0890 (0.1194)  loss_mask: 0.2431 (0.2889)  loss_objectness: 0.0204 (0.0480)  loss_rpn_box_reg: 0.0285 (0.0572)  time: 0.6294 (0.6734)  data: 0.0004 (0.0159)  lr: 0.001600  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:01:43  iter: 12500  loss: 0.6008 (0.7717)  loss_classifier: 0.1757 (0.2574)  loss_box_reg: 0.0877 (0.1194)  loss_mask: 0.2518 (0.2891)  loss_objectness: 0.0212 (0.0484)  loss_rpn_box_reg: 0.0433 (0.0575)  time: 0.6294 (0.6734)  data: 0.0004 (0.0159)  lr: 0.001600  max mem: 14826
INFO:maskrcnn_benchmark.trainer:eta: 1:01:43  iter: 12500  loss: 0.5601 (0.7698)  loss_classifier: 0.1637 (0.2568)  loss_box_reg: 0.0813 (0.1191)  loss_mask: 0.2528 (0.2888)  loss_objectness: 0.0188 (0.0480)  loss_rpn_box_reg: 0.0381 (0.0571)  time: 0.6302 (0.6734)  data: 0.0004 (0.0159)  lr: 0.001600  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:01:43  iter: 12500  loss: 0.5634 (0.7693)  loss_classifier: 0.1696 (0.2565)  loss_box_reg: 0.0893 (0.1187)  loss_mask: 0.2500 (0.2888)  loss_objectness: 0.0225 (0.0480)  loss_rpn_box_reg: 0.0347 (0.0573)  time: 0.6302 (0.6734)  data: 0.0004 (0.0159)  lr: 0.001600  max mem: 14885
INFO:maskrcnn_benchmark.trainer:eta: 1:01:43  iter: 12500  loss: 0.6166 (0.7712)  loss_classifier: 0.1877 (0.2571)  loss_box_reg: 0.1062 (0.1194)  loss_mask: 0.2490 (0.2892)  loss_objectness: 0.0240 (0.0481)  loss_rpn_box_reg: 0.0464 (0.0573)  time: 0.6301 (0.6734)  data: 0.0004 (0.0159)  lr: 0.001600  max mem: 14843
2021-10-16 13:58:48,149 maskrcnn_benchmark.trainer INFO: eta: 1:01:43  iter: 12500  loss: 0.5478 (0.7736)  loss_classifier: 0.1500 (0.2583)  loss_box_reg: 0.0782 (0.1199)  loss_mask: 0.2425 (0.2895)  loss_objectness: 0.0209 (0.0484)  loss_rpn_box_reg: 0.0437 (0.0576)  time: 0.6301 (0.6734)  data: 0.0004 (0.0161)  lr: 0.001600  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:01:43  iter: 12500  loss: 0.5425 (0.7722)  loss_classifier: 0.1527 (0.2576)  loss_box_reg: 0.0849 (0.1193)  loss_mask: 0.2522 (0.2895)  loss_objectness: 0.0211 (0.0483)  loss_rpn_box_reg: 0.0255 (0.0575)  time: 0.6300 (0.6734)  data: 0.0004 (0.0159)  lr: 0.001600  max mem: 14938
INFO:maskrcnn_benchmark.trainer:eta: 1:01:43  iter: 12500  loss: 0.5478 (0.7736)  loss_classifier: 0.1500 (0.2583)  loss_box_reg: 0.0782 (0.1199)  loss_mask: 0.2425 (0.2895)  loss_objectness: 0.0209 (0.0484)  loss_rpn_box_reg: 0.0437 (0.0576)  time: 0.6301 (0.6734)  data: 0.0004 (0.0161)  lr: 0.001600  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634392728149, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.773648843665123, "loss_classifier": 0.25827231739863754, "loss_box_reg": 0.11990563327243552, "loss_mask": 0.28946532509684564, "loss_objectness": 0.04837259346164763, "loss_rpn_box_reg": 0.057632974923150615, "time": 0.6733907490348816, "data": 0.016101810970306395, "throughput": 190.08280138010866}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 12500}}
:::MLLOG {"namespace": "", "time_ms": 1634392728149, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 190.08280138010866, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:01:08  iter: 12550  loss: 0.5687 (0.7690)  loss_classifier: 0.1752 (0.2564)  loss_box_reg: 0.0896 (0.1190)  loss_mask: 0.2396 (0.2886)  loss_objectness: 0.0259 (0.0479)  loss_rpn_box_reg: 0.0370 (0.0570)  time: 0.6251 (0.6732)  data: 0.0004 (0.0159)  lr: 0.001600  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:01:09  iter: 12550  loss: 0.5784 (0.7686)  loss_classifier: 0.1731 (0.2562)  loss_box_reg: 0.0930 (0.1186)  loss_mask: 0.2459 (0.2886)  loss_objectness: 0.0229 (0.0480)  loss_rpn_box_reg: 0.0371 (0.0572)  time: 0.6254 (0.6732)  data: 0.0003 (0.0159)  lr: 0.001600  max mem: 14885
INFO:maskrcnn_benchmark.trainer:eta: 1:01:08  iter: 12550  loss: 0.5514 (0.7703)  loss_classifier: 0.1641 (0.2568)  loss_box_reg: 0.0893 (0.1192)  loss_mask: 0.2380 (0.2891)  loss_objectness: 0.0225 (0.0480)  loss_rpn_box_reg: 0.0417 (0.0573)  time: 0.6250 (0.6732)  data: 0.0004 (0.0159)  lr: 0.001600  max mem: 14843
2021-10-16 13:59:19,510 maskrcnn_benchmark.trainer INFO: eta: 1:01:08  iter: 12550  loss: 0.5525 (0.7729)  loss_classifier: 0.1658 (0.2579)  loss_box_reg: 0.0872 (0.1198)  loss_mask: 0.2565 (0.2893)  loss_objectness: 0.0205 (0.0483)  loss_rpn_box_reg: 0.0342 (0.0576)  time: 0.6250 (0.6732)  data: 0.0004 (0.0160)  lr: 0.001600  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:01:09  iter: 12550  loss: 0.6124 (0.7715)  loss_classifier: 0.1761 (0.2573)  loss_box_reg: 0.0944 (0.1192)  loss_mask: 0.2493 (0.2893)  loss_objectness: 0.0234 (0.0482)  loss_rpn_box_reg: 0.0425 (0.0574)  time: 0.6249 (0.6732)  data: 0.0004 (0.0158)  lr: 0.001600  max mem: 14938
INFO:maskrcnn_benchmark.trainer:eta: 1:01:08  iter: 12550  loss: 0.5525 (0.7729)  loss_classifier: 0.1658 (0.2579)  loss_box_reg: 0.0872 (0.1198)  loss_mask: 0.2565 (0.2893)  loss_objectness: 0.0205 (0.0483)  loss_rpn_box_reg: 0.0342 (0.0576)  time: 0.6250 (0.6732)  data: 0.0004 (0.0160)  lr: 0.001600  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634392759510, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.7728896096526864, "loss_classifier": 0.2579397901606215, "loss_box_reg": 0.11979446175198379, "loss_mask": 0.2893105237061284, "loss_objectness": 0.04827216336525888, "loss_rpn_box_reg": 0.05757267115434513, "time": 0.673206781828071, "data": 0.016039361573785424, "throughput": 190.1347453042885}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 12550}}
INFO:maskrcnn_benchmark.trainer:eta: 1:01:08  iter: 12550  loss: 0.5386 (0.7685)  loss_classifier: 0.1528 (0.2562)  loss_box_reg: 0.0829 (0.1186)  loss_mask: 0.2467 (0.2890)  loss_objectness: 0.0205 (0.0477)  loss_rpn_box_reg: 0.0344 (0.0570)  time: 0.6249 (0.6732)  data: 0.0004 (0.0159)  lr: 0.001600  max mem: 15034
:::MLLOG {"namespace": "", "time_ms": 1634392759510, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 190.1347453042885, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 1:01:08  iter: 12550  loss: 0.5855 (0.7710)  loss_classifier: 0.1699 (0.2570)  loss_box_reg: 0.0889 (0.1193)  loss_mask: 0.2468 (0.2890)  loss_objectness: 0.0207 (0.0483)  loss_rpn_box_reg: 0.0384 (0.0574)  time: 0.6245 (0.6732)  data: 0.0004 (0.0158)  lr: 0.001600  max mem: 14826
INFO:maskrcnn_benchmark.trainer:eta: 1:01:08  iter: 12550  loss: 0.5442 (0.7698)  loss_classifier: 0.1519 (0.2568)  loss_box_reg: 0.0782 (0.1193)  loss_mask: 0.2449 (0.2887)  loss_objectness: 0.0180 (0.0479)  loss_rpn_box_reg: 0.0342 (0.0571)  time: 0.6247 (0.6732)  data: 0.0003 (0.0158)  lr: 0.001600  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:00:34  iter: 12600  loss: 0.5335 (0.7678)  loss_classifier: 0.1562 (0.2558)  loss_box_reg: 0.0816 (0.1185)  loss_mask: 0.2507 (0.2884)  loss_objectness: 0.0224 (0.0479)  loss_rpn_box_reg: 0.0283 (0.0572)  time: 0.6250 (0.6730)  data: 0.0004 (0.0158)  lr: 0.001600  max mem: 14885
INFO:maskrcnn_benchmark.trainer:eta: 1:00:34  iter: 12600  loss: 0.5731 (0.7683)  loss_classifier: 0.1549 (0.2561)  loss_box_reg: 0.0894 (0.1189)  loss_mask: 0.2448 (0.2885)  loss_objectness: 0.0222 (0.0478)  loss_rpn_box_reg: 0.0437 (0.0570)  time: 0.6255 (0.6730)  data: 0.0003 (0.0158)  lr: 0.001600  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 1:00:34  iter: 12600  loss: 0.5973 (0.7678)  loss_classifier: 0.1756 (0.2559)  loss_box_reg: 0.0914 (0.1185)  loss_mask: 0.2432 (0.2888)  loss_objectness: 0.0181 (0.0476)  loss_rpn_box_reg: 0.0416 (0.0569)  time: 0.6248 (0.6730)  data: 0.0004 (0.0158)  lr: 0.001600  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 1:00:34  iter: 12600  loss: 0.5308 (0.7702)  loss_classifier: 0.1537 (0.2567)  loss_box_reg: 0.0721 (0.1192)  loss_mask: 0.2391 (0.2888)  loss_objectness: 0.0191 (0.0482)  loss_rpn_box_reg: 0.0338 (0.0574)  time: 0.6256 (0.6730)  data: 0.0003 (0.0158)  lr: 0.001600  max mem: 14826
INFO:maskrcnn_benchmark.trainer:eta: 1:00:34  iter: 12600  loss: 0.5886 (0.7690)  loss_classifier: 0.1749 (0.2564)  loss_box_reg: 0.0896 (0.1191)  loss_mask: 0.2533 (0.2885)  loss_objectness: 0.0220 (0.0478)  loss_rpn_box_reg: 0.0428 (0.0571)  time: 0.6255 (0.6730)  data: 0.0004 (0.0158)  lr: 0.001600  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 1:00:34  iter: 12600  loss: 0.5131 (0.7695)  loss_classifier: 0.1442 (0.2564)  loss_box_reg: 0.0809 (0.1191)  loss_mask: 0.2287 (0.2889)  loss_objectness: 0.0167 (0.0479)  loss_rpn_box_reg: 0.0346 (0.0572)  time: 0.6273 (0.6730)  data: 0.0003 (0.0158)  lr: 0.001600  max mem: 14843
INFO:maskrcnn_benchmark.trainer:eta: 1:00:34  iter: 12600  loss: 0.5618 (0.7707)  loss_classifier: 0.1610 (0.2570)  loss_box_reg: 0.0882 (0.1191)  loss_mask: 0.2525 (0.2892)  loss_objectness: 0.0227 (0.0481)  loss_rpn_box_reg: 0.0353 (0.0574)  time: 0.6279 (0.6730)  data: 0.0004 (0.0158)  lr: 0.001600  max mem: 14938
2021-10-16 13:59:50,963 maskrcnn_benchmark.trainer INFO: eta: 1:00:34  iter: 12600  loss: 0.6054 (0.7721)  loss_classifier: 0.1802 (0.2576)  loss_box_reg: 0.0899 (0.1197)  loss_mask: 0.2545 (0.2891)  loss_objectness: 0.0216 (0.0482)  loss_rpn_box_reg: 0.0389 (0.0575)  time: 0.6280 (0.6730)  data: 0.0004 (0.0160)  lr: 0.001600  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 1:00:34  iter: 12600  loss: 0.6054 (0.7721)  loss_classifier: 0.1802 (0.2576)  loss_box_reg: 0.0899 (0.1197)  loss_mask: 0.2545 (0.2891)  loss_objectness: 0.0216 (0.0482)  loss_rpn_box_reg: 0.0389 (0.0575)  time: 0.6280 (0.6730)  data: 0.0004 (0.0160)  lr: 0.001600  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634392790963, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.7720902329612346, "loss_classifier": 0.25760009092988356, "loss_box_reg": 0.11966931253632841, "loss_mask": 0.2891254307625313, "loss_objectness": 0.048170181167873714, "loss_rpn_box_reg": 0.05752521804826785, "time": 0.6730315838541303, "data": 0.015977787441677518, "throughput": 190.18423959690742}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 12600}}
:::MLLOG {"namespace": "", "time_ms": 1634392790963, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 190.18423959690742, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 0:59:59  iter: 12650  loss: 0.5879 (0.7671)  loss_classifier: 0.1627 (0.2555)  loss_box_reg: 0.0894 (0.1184)  loss_mask: 0.2486 (0.2883)  loss_objectness: 0.0206 (0.0478)  loss_rpn_box_reg: 0.0398 (0.0571)  time: 0.6278 (0.6729)  data: 0.0004 (0.0157)  lr: 0.001600  max mem: 14885
INFO:maskrcnn_benchmark.trainer:eta: 0:59:59  iter: 12650  loss: 0.5624 (0.7675)  loss_classifier: 0.1684 (0.2558)  loss_box_reg: 0.0873 (0.1188)  loss_mask: 0.2510 (0.2883)  loss_objectness: 0.0214 (0.0477)  loss_rpn_box_reg: 0.0465 (0.0569)  time: 0.6273 (0.6729)  data: 0.0004 (0.0158)  lr: 0.001600  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 0:59:59  iter: 12650  loss: 0.5278 (0.7669)  loss_classifier: 0.1597 (0.2555)  loss_box_reg: 0.0865 (0.1184)  loss_mask: 0.2408 (0.2886)  loss_objectness: 0.0206 (0.0475)  loss_rpn_box_reg: 0.0352 (0.0568)  time: 0.6274 (0.6729)  data: 0.0003 (0.0157)  lr: 0.001600  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 0:59:59  iter: 12650  loss: 0.5804 (0.7694)  loss_classifier: 0.1679 (0.2564)  loss_box_reg: 0.0895 (0.1191)  loss_mask: 0.2412 (0.2886)  loss_objectness: 0.0207 (0.0481)  loss_rpn_box_reg: 0.0329 (0.0573)  time: 0.6274 (0.6729)  data: 0.0004 (0.0157)  lr: 0.001600  max mem: 14826
INFO:maskrcnn_benchmark.trainer:eta: 0:59:59  iter: 12650  loss: 0.5653 (0.7683)  loss_classifier: 0.1713 (0.2561)  loss_box_reg: 0.0878 (0.1190)  loss_mask: 0.2459 (0.2884)  loss_objectness: 0.0246 (0.0477)  loss_rpn_box_reg: 0.0413 (0.0570)  time: 0.6262 (0.6729)  data: 0.0004 (0.0157)  lr: 0.001600  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 0:59:59  iter: 12650  loss: 0.6037 (0.7699)  loss_classifier: 0.1718 (0.2566)  loss_box_reg: 0.1002 (0.1190)  loss_mask: 0.2470 (0.2890)  loss_objectness: 0.0234 (0.0480)  loss_rpn_box_reg: 0.0358 (0.0573)  time: 0.6275 (0.6729)  data: 0.0004 (0.0157)  lr: 0.001600  max mem: 14938
2021-10-16 14:00:22,451 maskrcnn_benchmark.trainer INFO: eta: 0:59:59  iter: 12650  loss: 0.5805 (0.7714)  loss_classifier: 0.1825 (0.2573)  loss_box_reg: 0.0945 (0.1196)  loss_mask: 0.2553 (0.2890)  loss_objectness: 0.0237 (0.0481)  loss_rpn_box_reg: 0.0393 (0.0575)  time: 0.6275 (0.6729)  data: 0.0004 (0.0159)  lr: 0.001600  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 0:59:59  iter: 12650  loss: 0.5715 (0.7687)  loss_classifier: 0.1770 (0.2561)  loss_box_reg: 0.0939 (0.1190)  loss_mask: 0.2455 (0.2887)  loss_objectness: 0.0219 (0.0478)  loss_rpn_box_reg: 0.0366 (0.0572)  time: 0.6275 (0.6729)  data: 0.0004 (0.0157)  lr: 0.001600  max mem: 14843
INFO:maskrcnn_benchmark.trainer:eta: 0:59:59  iter: 12650  loss: 0.5805 (0.7714)  loss_classifier: 0.1825 (0.2573)  loss_box_reg: 0.0945 (0.1196)  loss_mask: 0.2553 (0.2890)  loss_objectness: 0.0237 (0.0481)  loss_rpn_box_reg: 0.0393 (0.0575)  time: 0.6275 (0.6729)  data: 0.0004 (0.0159)  lr: 0.001600  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634392822451, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.7713846142654833, "loss_classifier": 0.25728752311554703, "loss_box_reg": 0.11956878088788303, "loss_mask": 0.28897720212639555, "loss_objectness": 0.048082128149409424, "loss_rpn_box_reg": 0.057468980445973795, "time": 0.6728605717255663, "data": 0.015916670659785213, "throughput": 190.2325762256229}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 12650}}
:::MLLOG {"namespace": "", "time_ms": 1634392822451, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 190.2325762256229, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 0:59:25  iter: 12700  loss: 0.5950 (0.7680)  loss_classifier: 0.1719 (0.2558)  loss_box_reg: 0.0985 (0.1189)  loss_mask: 0.2464 (0.2885)  loss_objectness: 0.0245 (0.0477)  loss_rpn_box_reg: 0.0413 (0.0571)  time: 0.6267 (0.6727)  data: 0.0004 (0.0157)  lr: 0.001600  max mem: 14843
2021-10-16 14:00:53,909 maskrcnn_benchmark.trainer INFO: eta: 0:59:25  iter: 12700  loss: 0.6084 (0.7706)  loss_classifier: 0.1827 (0.2570)  loss_box_reg: 0.0918 (0.1195)  loss_mask: 0.2473 (0.2888)  loss_objectness: 0.0224 (0.0480)  loss_rpn_box_reg: 0.0419 (0.0574)  time: 0.6264 (0.6727)  data: 0.0004 (0.0159)  lr: 0.001600  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 0:59:25  iter: 12700  loss: 0.5420 (0.7691)  loss_classifier: 0.1648 (0.2563)  loss_box_reg: 0.0797 (0.1189)  loss_mask: 0.2289 (0.2888)  loss_objectness: 0.0186 (0.0479)  loss_rpn_box_reg: 0.0315 (0.0573)  time: 0.6263 (0.6727)  data: 0.0004 (0.0157)  lr: 0.001600  max mem: 14938
INFO:maskrcnn_benchmark.trainer:eta: 0:59:25  iter: 12700  loss: 0.6084 (0.7706)  loss_classifier: 0.1827 (0.2570)  loss_box_reg: 0.0918 (0.1195)  loss_mask: 0.2473 (0.2888)  loss_objectness: 0.0224 (0.0480)  loss_rpn_box_reg: 0.0419 (0.0574)  time: 0.6264 (0.6727)  data: 0.0004 (0.0159)  lr: 0.001600  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 0:59:25  iter: 12700  loss: 0.6005 (0.7668)  loss_classifier: 0.1785 (0.2555)  loss_box_reg: 0.0882 (0.1187)  loss_mask: 0.2471 (0.2882)  loss_objectness: 0.0263 (0.0476)  loss_rpn_box_reg: 0.0395 (0.0569)  time: 0.6276 (0.6727)  data: 0.0004 (0.0157)  lr: 0.001600  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 0:59:25  iter: 12700  loss: 0.5749 (0.7664)  loss_classifier: 0.1783 (0.2552)  loss_box_reg: 0.0839 (0.1183)  loss_mask: 0.2501 (0.2881)  loss_objectness: 0.0228 (0.0477)  loss_rpn_box_reg: 0.0380 (0.0571)  time: 0.6272 (0.6727)  data: 0.0004 (0.0157)  lr: 0.001600  max mem: 14885
:::MLLOG {"namespace": "", "time_ms": 1634392853909, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.7706498419933432, "loss_classifier": 0.25697446552361913, "loss_box_reg": 0.11946420925388876, "loss_mask": 0.28880853434833953, "loss_objectness": 0.04799266403379637, "loss_rpn_box_reg": 0.057409969303128125, "time": 0.6726884985908749, "data": 0.015855788752788633, "throughput": 190.28123755368208}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 12700}}
:::MLLOG {"namespace": "", "time_ms": 1634392853909, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 190.28123755368208, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 0:59:25  iter: 12700  loss: 0.6478 (0.7662)  loss_classifier: 0.2047 (0.2552)  loss_box_reg: 0.1088 (0.1183)  loss_mask: 0.2604 (0.2885)  loss_objectness: 0.0283 (0.0474)  loss_rpn_box_reg: 0.0499 (0.0568)  time: 0.6279 (0.6727)  data: 0.0004 (0.0157)  lr: 0.001600  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 0:59:25  iter: 12700  loss: 0.5934 (0.7687)  loss_classifier: 0.1671 (0.2561)  loss_box_reg: 0.0856 (0.1190)  loss_mask: 0.2460 (0.2884)  loss_objectness: 0.0269 (0.0480)  loss_rpn_box_reg: 0.0430 (0.0572)  time: 0.6279 (0.6727)  data: 0.0004 (0.0157)  lr: 0.001600  max mem: 14826
INFO:maskrcnn_benchmark.trainer:eta: 0:59:25  iter: 12700  loss: 0.5797 (0.7676)  loss_classifier: 0.1698 (0.2558)  loss_box_reg: 0.0936 (0.1189)  loss_mask: 0.2428 (0.2883)  loss_objectness: 0.0242 (0.0476)  loss_rpn_box_reg: 0.0276 (0.0570)  time: 0.6279 (0.6727)  data: 0.0003 (0.0157)  lr: 0.001600  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 0:58:50  iter: 12750  loss: 0.5873 (0.7668)  loss_classifier: 0.1566 (0.2555)  loss_box_reg: 0.0899 (0.1188)  loss_mask: 0.2477 (0.2881)  loss_objectness: 0.0242 (0.0475)  loss_rpn_box_reg: 0.0466 (0.0569)  time: 0.6266 (0.6725)  data: 0.0004 (0.0156)  lr: 0.001600  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 0:58:50  iter: 12750  loss: 0.5480 (0.7655)  loss_classifier: 0.1532 (0.2549)  loss_box_reg: 0.0841 (0.1182)  loss_mask: 0.2500 (0.2883)  loss_objectness: 0.0230 (0.0473)  loss_rpn_box_reg: 0.0346 (0.0567)  time: 0.6266 (0.6725)  data: 0.0004 (0.0156)  lr: 0.001600  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 0:58:50  iter: 12750  loss: 0.4916 (0.7679)  loss_classifier: 0.1450 (0.2557)  loss_box_reg: 0.0716 (0.1188)  loss_mask: 0.2222 (0.2883)  loss_objectness: 0.0162 (0.0479)  loss_rpn_box_reg: 0.0298 (0.0572)  time: 0.6265 (0.6725)  data: 0.0003 (0.0156)  lr: 0.001600  max mem: 14826
INFO:maskrcnn_benchmark.trainer:eta: 0:58:50  iter: 12750  loss: 0.5886 (0.7661)  loss_classifier: 0.1762 (0.2551)  loss_box_reg: 0.0901 (0.1186)  loss_mask: 0.2578 (0.2880)  loss_objectness: 0.0265 (0.0475)  loss_rpn_box_reg: 0.0433 (0.0568)  time: 0.6271 (0.6725)  data: 0.0004 (0.0156)  lr: 0.001600  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 0:58:50  iter: 12750  loss: 0.5634 (0.7658)  loss_classifier: 0.1661 (0.2549)  loss_box_reg: 0.0922 (0.1182)  loss_mask: 0.2475 (0.2880)  loss_objectness: 0.0222 (0.0476)  loss_rpn_box_reg: 0.0362 (0.0570)  time: 0.6266 (0.6725)  data: 0.0004 (0.0156)  lr: 0.001600  max mem: 14885
INFO:maskrcnn_benchmark.trainer:eta: 0:58:50  iter: 12750  loss: 0.5297 (0.7684)  loss_classifier: 0.1545 (0.2559)  loss_box_reg: 0.0819 (0.1188)  loss_mask: 0.2463 (0.2887)  loss_objectness: 0.0217 (0.0478)  loss_rpn_box_reg: 0.0368 (0.0572)  time: 0.6265 (0.6725)  data: 0.0004 (0.0156)  lr: 0.001600  max mem: 14938
2021-10-16 14:01:25,307 maskrcnn_benchmark.trainer INFO: eta: 0:58:50  iter: 12750  loss: 0.5937 (0.7699)  loss_classifier: 0.1843 (0.2567)  loss_box_reg: 0.0920 (0.1194)  loss_mask: 0.2439 (0.2886)  loss_objectness: 0.0207 (0.0479)  loss_rpn_box_reg: 0.0329 (0.0574)  time: 0.6265 (0.6725)  data: 0.0004 (0.0158)  lr: 0.001600  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 0:58:50  iter: 12750  loss: 0.5937 (0.7699)  loss_classifier: 0.1843 (0.2567)  loss_box_reg: 0.0920 (0.1194)  loss_mask: 0.2439 (0.2886)  loss_objectness: 0.0207 (0.0479)  loss_rpn_box_reg: 0.0329 (0.0574)  time: 0.6265 (0.6725)  data: 0.0004 (0.0158)  lr: 0.001600  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 0:58:50  iter: 12750  loss: 0.5403 (0.7672)  loss_classifier: 0.1641 (0.2554)  loss_box_reg: 0.0906 (0.1188)  loss_mask: 0.2459 (0.2884)  loss_objectness: 0.0240 (0.0476)  loss_rpn_box_reg: 0.0359 (0.0570)  time: 0.6265 (0.6725)  data: 0.0004 (0.0156)  lr: 0.001600  max mem: 14843
:::MLLOG {"namespace": "", "time_ms": 1634392885307, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.7699188435708775, "loss_classifier": 0.2566538184108395, "loss_box_reg": 0.11935386133623109, "loss_mask": 0.28864494261788387, "loss_objectness": 0.047892928581465696, "loss_rpn_box_reg": 0.05737329312221275, "time": 0.6725131054672541, "data": 0.01579538777295281, "throughput": 190.33086338305205}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 12750}}
:::MLLOG {"namespace": "", "time_ms": 1634392885307, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 190.33086338305205, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.trainer:eta: 0:58:16  iter: 12800  loss: 0.6047 (0.7651)  loss_classifier: 0.1704 (0.2546)  loss_box_reg: 0.0950 (0.1181)  loss_mask: 0.2510 (0.2878)  loss_objectness: 0.0236 (0.0475)  loss_rpn_box_reg: 0.0403 (0.0570)  time: 0.6296 (0.6723)  data: 0.0004 (0.0156)  lr: 0.001600  max mem: 14885
INFO:maskrcnn_benchmark.trainer:eta: 0:58:16  iter: 12800  loss: 0.6012 (0.7654)  loss_classifier: 0.1794 (0.2548)  loss_box_reg: 0.0942 (0.1185)  loss_mask: 0.2458 (0.2879)  loss_objectness: 0.0260 (0.0474)  loss_rpn_box_reg: 0.0409 (0.0567)  time: 0.6305 (0.6723)  data: 0.0004 (0.0156)  lr: 0.001600  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 0:58:16  iter: 12800  loss: 0.5745 (0.7665)  loss_classifier: 0.1710 (0.2551)  loss_box_reg: 0.0824 (0.1187)  loss_mask: 0.2390 (0.2882)  loss_objectness: 0.0244 (0.0475)  loss_rpn_box_reg: 0.0407 (0.0570)  time: 0.6299 (0.6723)  data: 0.0004 (0.0156)  lr: 0.001600  max mem: 14843
INFO:maskrcnn_benchmark.trainer:eta: 0:58:16  iter: 12800  loss: 0.6362 (0.7648)  loss_classifier: 0.1818 (0.2546)  loss_box_reg: 0.1027 (0.1181)  loss_mask: 0.2538 (0.2882)  loss_objectness: 0.0251 (0.0472)  loss_rpn_box_reg: 0.0432 (0.0567)  time: 0.6306 (0.6723)  data: 0.0004 (0.0156)  lr: 0.001600  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 0:58:16  iter: 12800  loss: 0.5911 (0.7673)  loss_classifier: 0.1901 (0.2555)  loss_box_reg: 0.0990 (0.1188)  loss_mask: 0.2547 (0.2881)  loss_objectness: 0.0274 (0.0478)  loss_rpn_box_reg: 0.0465 (0.0572)  time: 0.6306 (0.6723)  data: 0.0004 (0.0155)  lr: 0.001600  max mem: 14826
2021-10-16 14:01:56,726 maskrcnn_benchmark.trainer INFO: eta: 0:58:16  iter: 12800  loss: 0.5697 (0.7692)  loss_classifier: 0.1749 (0.2564)  loss_box_reg: 0.0896 (0.1193)  loss_mask: 0.2418 (0.2885)  loss_objectness: 0.0226 (0.0478)  loss_rpn_box_reg: 0.0363 (0.0573)  time: 0.6301 (0.6723)  data: 0.0004 (0.0157)  lr: 0.001600  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 0:58:16  iter: 12800  loss: 0.5582 (0.7661)  loss_classifier: 0.1710 (0.2552)  loss_box_reg: 0.0916 (0.1187)  loss_mask: 0.2433 (0.2879)  loss_objectness: 0.0232 (0.0474)  loss_rpn_box_reg: 0.0387 (0.0569)  time: 0.6307 (0.6723)  data: 0.0003 (0.0155)  lr: 0.001600  max mem: 14803
INFO:maskrcnn_benchmark.trainer:eta: 0:58:16  iter: 12800  loss: 0.5701 (0.7676)  loss_classifier: 0.1524 (0.2556)  loss_box_reg: 0.0893 (0.1187)  loss_mask: 0.2440 (0.2885)  loss_objectness: 0.0199 (0.0477)  loss_rpn_box_reg: 0.0378 (0.0572)  time: 0.6301 (0.6723)  data: 0.0004 (0.0155)  lr: 0.001600  max mem: 14938
INFO:maskrcnn_benchmark.trainer:eta: 0:58:16  iter: 12800  loss: 0.5697 (0.7692)  loss_classifier: 0.1749 (0.2564)  loss_box_reg: 0.0896 (0.1193)  loss_mask: 0.2418 (0.2885)  loss_objectness: 0.0226 (0.0478)  loss_rpn_box_reg: 0.0363 (0.0573)  time: 0.6301 (0.6723)  data: 0.0004 (0.0157)  lr: 0.001600  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634392916727, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.7692379867704585, "loss_classifier": 0.2563639324087126, "loss_box_reg": 0.11926886487684897, "loss_mask": 0.28848565979977137, "loss_objectness": 0.0478057607372466, "loss_rpn_box_reg": 0.05731376943946998, "time": 0.6723407533578575, "data": 0.015735450312495233, "throughput": 190.37965400837635}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 12800}}
:::MLLOG {"namespace": "", "time_ms": 1634392916727, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 190.37965400837635, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
:::MLLOG {"namespace": "", "time_ms": 1634392940647, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 111, "epoch_num": 14}}
:::MLLOG {"namespace": "", "time_ms": 1634392940647, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 112, "first_epoch_num": 14}}
:::MLLOG {"namespace": "", "time_ms": 1634392940647, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 113, "epoch_num": 14}}
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
2021-10-16 14:02:20,965 maskrcnn_benchmark.data.build WARNING: When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
WARNING:maskrcnn_benchmark.data.build:When using more than one image per GPU you may encounter an out-of-memory (OOM) error if your GPU does not have sufficient memory. If this happens, you can reduce SOLVER.IMS_PER_BATCH (for training) or TEST.IMS_PER_BATCH (for inference). For training, you must also adjust the learning rate and schedule length according to the linear scaling rule. See for example: https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14
loading annotations into memory...
Done (t=0.55s)
creating index...
Done (t=0.55s)
creating index...
Done (t=0.55s)
creating index...
index created!
shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]index created!
index created!
shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
shapes=None
passthrough=True
  0% 0/40 [00:00<?, ?it/s]creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]Done (t=0.55s)
creating index...
Done (t=0.55s)
creating index...
Done (t=0.55s)
creating index...
index created!
Done (t=0.56s)
creating index...
shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]Done (t=0.55s)
creating index...
index created!
shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]index created!
index created!
shapes=None
passthrough=True
creating index...
GT annotations already exist!
2021-10-16 14:02:21,543 maskrcnn_benchmark.inference INFO: Start evaluation on coco_2017_val dataset(5000 images).
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]index created!
shapes=None
passthrough=True
creating index...
GT annotations already exist!
INFO:maskrcnn_benchmark.inference:Start evaluation on coco_2017_val dataset(5000 images).
  0% 0/40 [00:00<?, ?it/s]  2% 1/40 [00:00<00:11,  3.52it/s]  2% 1/40 [00:00<00:11,  3.50it/s]  2% 1/40 [00:00<00:11,  3.45it/s]  2% 1/40 [00:00<00:11,  3.35it/s]  2% 1/40 [00:00<00:11,  3.51it/s]  2% 1/40 [00:00<00:12,  3.24it/s]  2% 1/40 [00:00<00:11,  3.34it/s]  2% 1/40 [00:00<00:12,  3.20it/s]  5% 2/40 [00:00<00:10,  3.52it/s]  5% 2/40 [00:00<00:10,  3.50it/s]  5% 2/40 [00:00<00:11,  3.44it/s]  5% 2/40 [00:00<00:10,  3.58it/s]  5% 2/40 [00:00<00:11,  3.42it/s]  5% 2/40 [00:00<00:11,  3.37it/s]  5% 2/40 [00:00<00:11,  3.36it/s]  5% 2/40 [00:00<00:11,  3.40it/s]  8% 3/40 [00:00<00:10,  3.57it/s]  8% 3/40 [00:00<00:10,  3.52it/s]  8% 3/40 [00:00<00:10,  3.44it/s]  8% 3/40 [00:00<00:10,  3.62it/s]  8% 3/40 [00:00<00:10,  3.46it/s]  8% 3/40 [00:00<00:10,  3.44it/s]  8% 3/40 [00:00<00:10,  3.40it/s]  8% 3/40 [00:00<00:10,  3.43it/s] 10% 4/40 [00:01<00:10,  3.55it/s] 10% 4/40 [00:01<00:10,  3.52it/s] 10% 4/40 [00:01<00:10,  3.46it/s] 10% 4/40 [00:01<00:10,  3.57it/s] 10% 4/40 [00:01<00:10,  3.47it/s] 10% 4/40 [00:01<00:10,  3.50it/s] 10% 4/40 [00:01<00:10,  3.42it/s] 10% 4/40 [00:01<00:10,  3.43it/s] 12% 5/40 [00:01<00:09,  3.56it/s] 12% 5/40 [00:01<00:09,  3.51it/s] 12% 5/40 [00:01<00:09,  3.51it/s] 12% 5/40 [00:01<00:09,  3.56it/s] 12% 5/40 [00:01<00:09,  3.53it/s] 12% 5/40 [00:01<00:09,  3.52it/s] 12% 5/40 [00:01<00:10,  3.47it/s] 12% 5/40 [00:01<00:10,  3.50it/s] 15% 6/40 [00:01<00:09,  3.57it/s] 15% 6/40 [00:01<00:09,  3.49it/s] 15% 6/40 [00:01<00:09,  3.49it/s] 15% 6/40 [00:01<00:09,  3.56it/s] 15% 6/40 [00:01<00:09,  3.55it/s] 15% 6/40 [00:01<00:09,  3.60it/s] 15% 6/40 [00:01<00:09,  3.51it/s] 15% 6/40 [00:01<00:09,  3.51it/s] 18% 7/40 [00:01<00:09,  3.53it/s] 18% 7/40 [00:01<00:09,  3.49it/s] 18% 7/40 [00:02<00:09,  3.52it/s] 18% 7/40 [00:01<00:09,  3.58it/s] 18% 7/40 [00:01<00:09,  3.54it/s] 18% 7/40 [00:01<00:09,  3.56it/s] 18% 7/40 [00:01<00:09,  3.53it/s] 18% 7/40 [00:01<00:09,  3.58it/s] 20% 8/40 [00:02<00:09,  3.53it/s] 20% 8/40 [00:02<00:09,  3.50it/s] 20% 8/40 [00:02<00:09,  3.46it/s] 20% 8/40 [00:02<00:09,  3.55it/s] 20% 8/40 [00:02<00:08,  3.57it/s] 20% 8/40 [00:02<00:09,  3.51it/s] 20% 8/40 [00:02<00:08,  3.60it/s] 20% 8/40 [00:02<00:08,  3.57it/s] 22% 9/40 [00:02<00:08,  3.53it/s] 22% 9/40 [00:02<00:08,  3.53it/s] 22% 9/40 [00:02<00:08,  3.48it/s] 22% 9/40 [00:02<00:08,  3.57it/s] 22% 9/40 [00:02<00:08,  3.54it/s] 22% 9/40 [00:02<00:08,  3.53it/s] 22% 9/40 [00:02<00:08,  3.58it/s] 22% 9/40 [00:02<00:08,  3.61it/s] 25% 10/40 [00:02<00:08,  3.50it/s] 25% 10/40 [00:02<00:08,  3.50it/s] 25% 10/40 [00:02<00:08,  3.56it/s] 25% 10/40 [00:02<00:08,  3.65it/s] 25% 10/40 [00:02<00:08,  3.55it/s] 25% 10/40 [00:02<00:08,  3.54it/s] 25% 10/40 [00:02<00:08,  3.61it/s] 25% 10/40 [00:02<00:08,  3.59it/s] 28% 11/40 [00:03<00:08,  3.50it/s] 28% 11/40 [00:03<00:08,  3.60it/s] 28% 11/40 [00:03<00:08,  3.49it/s] 28% 11/40 [00:03<00:07,  3.63it/s] 28% 11/40 [00:03<00:08,  3.58it/s] 28% 11/40 [00:03<00:08,  3.53it/s] 28% 11/40 [00:03<00:08,  3.59it/s] 28% 11/40 [00:03<00:08,  3.58it/s] 30% 12/40 [00:03<00:07,  3.54it/s] 30% 12/40 [00:03<00:07,  3.62it/s] 30% 12/40 [00:03<00:07,  3.51it/s] 30% 12/40 [00:03<00:07,  3.61it/s] 30% 12/40 [00:03<00:07,  3.62it/s] 30% 12/40 [00:03<00:07,  3.56it/s] 30% 12/40 [00:03<00:07,  3.53it/s] 30% 12/40 [00:03<00:07,  3.60it/s] 32% 13/40 [00:03<00:07,  3.51it/s] 32% 13/40 [00:03<00:07,  3.57it/s] 32% 13/40 [00:03<00:07,  3.55it/s] 32% 13/40 [00:03<00:07,  3.69it/s] 32% 13/40 [00:03<00:07,  3.58it/s] 32% 13/40 [00:03<00:07,  3.59it/s] 32% 13/40 [00:03<00:07,  3.53it/s] 32% 13/40 [00:03<00:07,  3.58it/s] 35% 14/40 [00:03<00:07,  3.52it/s] 35% 14/40 [00:03<00:07,  3.60it/s] 35% 14/40 [00:03<00:07,  3.54it/s] 35% 14/40 [00:03<00:07,  3.63it/s] 35% 14/40 [00:03<00:07,  3.60it/s] 35% 14/40 [00:03<00:07,  3.62it/s] 35% 14/40 [00:03<00:07,  3.61it/s] 35% 14/40 [00:03<00:07,  3.54it/s] 38% 15/40 [00:04<00:07,  3.56it/s] 38% 15/40 [00:04<00:06,  3.69it/s] 38% 15/40 [00:04<00:06,  3.58it/s] 38% 15/40 [00:04<00:07,  3.55it/s] 38% 15/40 [00:04<00:06,  3.64it/s] 38% 15/40 [00:04<00:06,  3.59it/s] 38% 15/40 [00:04<00:07,  3.56it/s] 38% 15/40 [00:04<00:07,  3.50it/s] 40% 16/40 [00:04<00:06,  3.60it/s] 40% 16/40 [00:04<00:06,  3.63it/s] 40% 16/40 [00:04<00:06,  3.53it/s] 40% 16/40 [00:04<00:06,  3.52it/s] 40% 16/40 [00:04<00:06,  3.62it/s] 40% 16/40 [00:04<00:06,  3.60it/s] 40% 16/40 [00:04<00:06,  3.55it/s] 40% 16/40 [00:04<00:06,  3.52it/s] 42% 17/40 [00:04<00:06,  3.63it/s] 42% 17/40 [00:04<00:06,  3.69it/s] 42% 17/40 [00:04<00:06,  3.68it/s] 42% 17/40 [00:04<00:06,  3.51it/s] 42% 17/40 [00:04<00:06,  3.51it/s] 42% 17/40 [00:04<00:06,  3.63it/s] 42% 17/40 [00:04<00:06,  3.58it/s] 42% 17/40 [00:04<00:06,  3.56it/s] 45% 18/40 [00:04<00:05,  3.72it/s] 45% 18/40 [00:05<00:06,  3.58it/s] 45% 18/40 [00:05<00:06,  3.64it/s] 45% 18/40 [00:05<00:06,  3.51it/s] 45% 18/40 [00:05<00:06,  3.51it/s] 45% 18/40 [00:05<00:06,  3.60it/s] 45% 18/40 [00:05<00:06,  3.57it/s] 45% 18/40 [00:05<00:06,  3.55it/s] 48% 19/40 [00:05<00:05,  3.68it/s] 48% 19/40 [00:05<00:05,  3.54it/s] 48% 19/40 [00:05<00:05,  3.66it/s] 48% 19/40 [00:05<00:05,  3.54it/s] 48% 19/40 [00:05<00:05,  3.53it/s] 48% 19/40 [00:05<00:05,  3.59it/s] 48% 19/40 [00:05<00:05,  3.56it/s] 48% 19/40 [00:05<00:05,  3.57it/s] 50% 20/40 [00:05<00:05,  3.65it/s] 50% 20/40 [00:05<00:05,  3.51it/s] 50% 20/40 [00:05<00:05,  3.63it/s] 50% 20/40 [00:05<00:05,  3.56it/s] 50% 20/40 [00:05<00:05,  3.56it/s] 50% 20/40 [00:05<00:05,  3.57it/s] 50% 20/40 [00:05<00:05,  3.56it/s] 50% 20/40 [00:05<00:05,  3.59it/s] 52% 21/40 [00:05<00:05,  3.63it/s] 52% 21/40 [00:05<00:05,  3.66it/s] 52% 21/40 [00:05<00:05,  3.54it/s] 52% 21/40 [00:05<00:05,  3.62it/s] 52% 21/40 [00:05<00:05,  3.54it/s] 52% 21/40 [00:05<00:05,  3.59it/s] 52% 21/40 [00:05<00:05,  3.56it/s] 52% 21/40 [00:05<00:05,  3.60it/s] 55% 22/40 [00:06<00:04,  3.69it/s] 55% 22/40 [00:06<00:04,  3.62it/s] 55% 22/40 [00:06<00:05,  3.50it/s] 55% 22/40 [00:06<00:05,  3.57it/s] 55% 22/40 [00:06<00:05,  3.52it/s] 55% 22/40 [00:06<00:05,  3.59it/s] 55% 22/40 [00:06<00:05,  3.54it/s] 55% 22/40 [00:06<00:04,  3.65it/s] 57% 23/40 [00:06<00:04,  3.69it/s] 57% 23/40 [00:06<00:04,  3.65it/s] 57% 23/40 [00:06<00:04,  3.50it/s] 57% 23/40 [00:06<00:04,  3.55it/s] 57% 23/40 [00:06<00:04,  3.62it/s] 57% 23/40 [00:06<00:04,  3.56it/s] 57% 23/40 [00:06<00:04,  3.51it/s] 57% 23/40 [00:06<00:04,  3.61it/s] 60% 24/40 [00:06<00:04,  3.66it/s] 60% 24/40 [00:06<00:04,  3.69it/s] 60% 24/40 [00:06<00:04,  3.51it/s] 60% 24/40 [00:06<00:04,  3.58it/s] 60% 24/40 [00:06<00:04,  3.62it/s] 60% 24/40 [00:06<00:04,  3.57it/s] 60% 24/40 [00:06<00:04,  3.55it/s] 60% 24/40 [00:06<00:04,  3.63it/s] 62% 25/40 [00:06<00:04,  3.61it/s] 62% 25/40 [00:06<00:04,  3.68it/s] 62% 25/40 [00:06<00:04,  3.66it/s] 62% 25/40 [00:07<00:04,  3.52it/s] 62% 25/40 [00:07<00:04,  3.53it/s] 62% 25/40 [00:07<00:04,  3.53it/s] 62% 25/40 [00:06<00:04,  3.62it/s] 62% 25/40 [00:07<00:04,  3.53it/s] 65% 26/40 [00:07<00:03,  3.58it/s] 65% 26/40 [00:07<00:03,  3.64it/s] 65% 26/40 [00:07<00:03,  3.67it/s] 65% 26/40 [00:07<00:03,  3.59it/s] 65% 26/40 [00:07<00:03,  3.50it/s] 65% 26/40 [00:07<00:03,  3.57it/s] 65% 26/40 [00:07<00:03,  3.61it/s] 65% 26/40 [00:07<00:03,  3.52it/s] 68% 27/40 [00:07<00:03,  3.65it/s] 68% 27/40 [00:07<00:03,  3.66it/s] 68% 27/40 [00:07<00:03,  3.64it/s] 68% 27/40 [00:07<00:03,  3.54it/s] 68% 27/40 [00:07<00:03,  3.56it/s] 68% 27/40 [00:07<00:03,  3.56it/s] 68% 27/40 [00:07<00:03,  3.58it/s] 68% 27/40 [00:07<00:03,  3.57it/s] 70% 28/40 [00:07<00:03,  3.65it/s] 70% 28/40 [00:07<00:03,  3.72it/s] 70% 28/40 [00:07<00:03,  3.62it/s] 70% 28/40 [00:07<00:03,  3.52it/s] 70% 28/40 [00:07<00:03,  3.52it/s] 70% 28/40 [00:07<00:03,  3.56it/s] 70% 28/40 [00:07<00:03,  3.61it/s] 70% 28/40 [00:07<00:03,  3.57it/s] 72% 29/40 [00:07<00:03,  3.63it/s] 72% 29/40 [00:08<00:03,  3.66it/s] 72% 29/40 [00:08<00:03,  3.62it/s] 72% 29/40 [00:08<00:03,  3.59it/s] 72% 29/40 [00:08<00:03,  3.57it/s] 72% 29/40 [00:08<00:03,  3.50it/s] 72% 29/40 [00:08<00:03,  3.59it/s] 72% 29/40 [00:08<00:03,  3.56it/s] 75% 30/40 [00:08<00:02,  3.69it/s] 75% 30/40 [00:08<00:02,  3.59it/s] 75% 30/40 [00:08<00:02,  3.61it/s] 75% 30/40 [00:08<00:02,  3.55it/s] 75% 30/40 [00:08<00:02,  3.56it/s] 75% 30/40 [00:08<00:02,  3.46it/s] 75% 30/40 [00:08<00:02,  3.59it/s] 75% 30/40 [00:08<00:02,  3.59it/s] 78% 31/40 [00:08<00:02,  3.68it/s] 78% 31/40 [00:08<00:02,  3.56it/s] 78% 31/40 [00:08<00:02,  3.57it/s] 78% 31/40 [00:08<00:02,  3.55it/s] 78% 31/40 [00:08<00:02,  3.54it/s] 78% 31/40 [00:08<00:02,  3.51it/s] 78% 31/40 [00:08<00:02,  3.59it/s] 78% 31/40 [00:08<00:02,  3.61it/s] 80% 32/40 [00:08<00:02,  3.67it/s] 80% 32/40 [00:08<00:02,  3.60it/s] 80% 32/40 [00:08<00:02,  3.54it/s] 80% 32/40 [00:09<00:02,  3.55it/s] 80% 32/40 [00:09<00:02,  3.55it/s] 80% 32/40 [00:09<00:02,  3.54it/s] 80% 32/40 [00:08<00:02,  3.55it/s] 80% 32/40 [00:08<00:02,  3.56it/s] 82% 33/40 [00:09<00:01,  3.63it/s] 82% 33/40 [00:09<00:01,  3.66it/s] 82% 33/40 [00:09<00:01,  3.52it/s] 82% 33/40 [00:09<00:01,  3.55it/s] 82% 33/40 [00:09<00:01,  3.61it/s] 82% 33/40 [00:09<00:01,  3.63it/s] 82% 33/40 [00:09<00:01,  3.52it/s] 82% 33/40 [00:09<00:01,  3.50it/s] 85% 34/40 [00:09<00:01,  3.65it/s] 85% 34/40 [00:09<00:01,  3.59it/s] 85% 34/40 [00:09<00:01,  3.54it/s] 85% 34/40 [00:09<00:01,  3.67it/s] 85% 34/40 [00:09<00:01,  3.59it/s] 85% 34/40 [00:09<00:01,  3.55it/s] 85% 34/40 [00:09<00:01,  3.58it/s] 85% 34/40 [00:09<00:01,  3.52it/s] 88% 35/40 [00:09<00:01,  3.62it/s] 88% 35/40 [00:09<00:01,  3.63it/s] 88% 35/40 [00:09<00:01,  3.54it/s] 88% 35/40 [00:09<00:01,  3.58it/s] 88% 35/40 [00:09<00:01,  3.58it/s] 88% 35/40 [00:09<00:01,  3.56it/s] 88% 35/40 [00:09<00:01,  3.51it/s] 88% 35/40 [00:09<00:01,  3.50it/s] 90% 36/40 [00:09<00:01,  3.60it/s] 90% 36/40 [00:09<00:01,  3.67it/s] 90% 36/40 [00:10<00:01,  3.56it/s] 90% 36/40 [00:10<00:01,  3.59it/s] 90% 36/40 [00:10<00:01,  3.53it/s] 90% 36/40 [00:10<00:01,  3.55it/s] 90% 36/40 [00:10<00:01,  3.50it/s] 90% 36/40 [00:10<00:01,  3.49it/s] 92% 37/40 [00:10<00:00,  3.60it/s] 92% 37/40 [00:10<00:00,  3.66it/s] 92% 37/40 [00:10<00:00,  3.63it/s] 92% 37/40 [00:10<00:00,  3.51it/s] 92% 37/40 [00:10<00:00,  3.59it/s] 92% 37/40 [00:10<00:00,  3.50it/s] 92% 37/40 [00:10<00:00,  3.53it/s] 92% 37/40 [00:10<00:00,  3.50it/s] 95% 38/40 [00:10<00:00,  3.63it/s] 95% 38/40 [00:10<00:00,  3.63it/s] 98% 39/40 [00:10<00:00,  4.47it/s] 95% 38/40 [00:10<00:00,  3.93it/s] 95% 38/40 [00:10<00:00,  3.67it/s] 95% 38/40 [00:10<00:00,  3.68it/s] 95% 38/40 [00:10<00:00,  3.53it/s] 95% 38/40 [00:10<00:00,  3.54it/s] 95% 38/40 [00:10<00:00,  3.55it/s] 98% 39/40 [00:10<00:00,  3.89it/s] 98% 39/40 [00:10<00:00,  4.36it/s] 98% 39/40 [00:10<00:00,  4.29it/s]100% 40/40 [00:10<00:00,  4.73it/s]100% 40/40 [00:10<00:00,  3.72it/s]
100% 40/40 [00:10<00:00,  3.71it/s]
 98% 39/40 [00:10<00:00,  3.78it/s]100% 40/40 [00:10<00:00,  4.79it/s]100% 40/40 [00:10<00:00,  3.64it/s]
 98% 39/40 [00:10<00:00,  3.65it/s] 98% 39/40 [00:10<00:00,  3.60it/s]100% 40/40 [00:10<00:00,  4.56it/s]100% 40/40 [00:10<00:00,  3.66it/s]
 98% 39/40 [00:11<00:00,  3.58it/s]100% 40/40 [00:10<00:00,  3.66it/s]
100% 40/40 [00:10<00:00,  3.64it/s]
100% 40/40 [00:11<00:00,  3.61it/s]
100% 40/40 [00:11<00:00,  4.47it/s]100% 40/40 [00:11<00:00,  3.61it/s]
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.078944 (0.017726309967041016 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:10.973891 (0.017558224868774414 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:10.982396 (0.017571833038330077 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.080874 (0.01772939796447754 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.010148 (0.01761623649597168 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:11.089988 (0.017743981170654295 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:10.995468 (0.017592748641967772 s / img per device, on 8 devices)
2021-10-16 14:02:32,530 maskrcnn_benchmark.inference INFO: Total inference time: 0:00:10.986372 (0.017578195190429687 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.inference:Total inference time: 0:00:10.986372 (0.017578195190429687 s / img per device, on 8 devices)
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.025s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.026s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.026s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.026s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.026s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.026s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.026s
2021-10-16 14:02:32,692 maskrcnn_benchmark.timed_section INFO: EXPOSED: Launching evaluation preparation tasks took 0.033s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation preparation tasks took 0.033s
:::MLLOG {"namespace": "", "time_ms": 1634392952695, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 168, "first_epoch_num": 15, "epoch_count": 1}}
:::MLLOG {"namespace": "", "time_ms": 1634392952696, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 169, "epoch_num": 15}}
INFO:maskrcnn_benchmark.timed_section:Prepping took 6.476 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 6.571 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 6.564 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 6.684 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 6.674 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 6.695 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 7.113 seconds total
2021-10-16 14:02:41,026 maskrcnn_benchmark.timed_section INFO: Prepping took 7.212 seconds total
INFO:maskrcnn_benchmark.timed_section:Prepping took 7.212 seconds total
INFO:maskrcnn_benchmark.trainer:eta: 0:57:46  iter: 12850  loss: 0.5900 (0.7670)  loss_classifier: 0.1754 (0.2553)  loss_box_reg: 0.0954 (0.1186)  loss_mask: 0.2595 (0.2884)  loss_objectness: 0.0230 (0.0476)  loss_rpn_box_reg: 0.0474 (0.0571)  time: 0.6463 (0.6732)  data: 0.0005 (0.0164)  lr: 0.001600  max mem: 14938
INFO:maskrcnn_benchmark.trainer:eta: 0:57:46  iter: 12850  loss: 0.5467 (0.7658)  loss_classifier: 0.1576 (0.2548)  loss_box_reg: 0.0798 (0.1186)  loss_mask: 0.2387 (0.2881)  loss_objectness: 0.0215 (0.0474)  loss_rpn_box_reg: 0.0456 (0.0569)  time: 0.6464 (0.6732)  data: 0.0004 (0.0164)  lr: 0.001600  max mem: 14843
INFO:maskrcnn_benchmark.trainer:eta: 0:57:46  iter: 12850  loss: 0.5702 (0.7647)  loss_classifier: 0.1669 (0.2546)  loss_box_reg: 0.0861 (0.1184)  loss_mask: 0.2391 (0.2877)  loss_objectness: 0.0242 (0.0474)  loss_rpn_box_reg: 0.0392 (0.0567)  time: 0.6487 (0.6732)  data: 0.0004 (0.0165)  lr: 0.001600  max mem: 14996
INFO:maskrcnn_benchmark.trainer:eta: 0:57:46  iter: 12850  loss: 0.5703 (0.7643)  loss_classifier: 0.1638 (0.2543)  loss_box_reg: 0.0824 (0.1180)  loss_mask: 0.2425 (0.2877)  loss_objectness: 0.0240 (0.0474)  loss_rpn_box_reg: 0.0362 (0.0569)  time: 0.6486 (0.6732)  data: 0.0004 (0.0164)  lr: 0.001600  max mem: 14885
INFO:maskrcnn_benchmark.trainer:eta: 0:57:46  iter: 12850  loss: 0.5664 (0.7641)  loss_classifier: 0.1701 (0.2543)  loss_box_reg: 0.0853 (0.1180)  loss_mask: 0.2474 (0.2880)  loss_objectness: 0.0233 (0.0471)  loss_rpn_box_reg: 0.0410 (0.0566)  time: 0.6496 (0.6732)  data: 0.0005 (0.0164)  lr: 0.001600  max mem: 15034
INFO:maskrcnn_benchmark.trainer:eta: 0:57:46  iter: 12850  loss: 0.5665 (0.7666)  loss_classifier: 0.1673 (0.2552)  loss_box_reg: 0.0862 (0.1187)  loss_mask: 0.2581 (0.2880)  loss_objectness: 0.0213 (0.0477)  loss_rpn_box_reg: 0.0400 (0.0571)  time: 0.6497 (0.6732)  data: 0.0004 (0.0164)  lr: 0.001600  max mem: 14826
INFO:maskrcnn_benchmark.trainer:eta: 0:57:46  iter: 12850  loss: 0.5541 (0.7654)  loss_classifier: 0.1717 (0.2549)  loss_box_reg: 0.0855 (0.1186)  loss_mask: 0.2389 (0.2877)  loss_objectness: 0.0190 (0.0473)  loss_rpn_box_reg: 0.0349 (0.0568)  time: 0.6496 (0.6732)  data: 0.0004 (0.0164)  lr: 0.001600  max mem: 14803
2021-10-16 14:02:41,479 maskrcnn_benchmark.trainer INFO: eta: 0:57:47  iter: 12850  loss: 0.5898 (0.7686)  loss_classifier: 0.1777 (0.2561)  loss_box_reg: 0.0985 (0.1192)  loss_mask: 0.2501 (0.2883)  loss_objectness: 0.0246 (0.0477)  loss_rpn_box_reg: 0.0363 (0.0573)  time: 0.6465 (0.6732)  data: 0.0004 (0.0166)  lr: 0.001600  max mem: 14932
INFO:maskrcnn_benchmark.trainer:eta: 0:57:47  iter: 12850  loss: 0.5898 (0.7686)  loss_classifier: 0.1777 (0.2561)  loss_box_reg: 0.0985 (0.1192)  loss_mask: 0.2501 (0.2883)  loss_objectness: 0.0246 (0.0477)  loss_rpn_box_reg: 0.0363 (0.0573)  time: 0.6465 (0.6732)  data: 0.0004 (0.0166)  lr: 0.001600  max mem: 14932
:::MLLOG {"namespace": "", "time_ms": 1634392961479, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"loss": 0.7685882706308179, "loss_classifier": 0.25608875870168324, "loss_box_reg": 0.11918494378189386, "loss_mask": 0.28833848978758786, "loss_objectness": 0.04771957062438478, "loss_rpn_box_reg": 0.05725650822770046, "time": 0.6732072849867409, "data": 0.016613722348491504, "throughput": 190.13460319657864}, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 193, "step": 12850}}
:::MLLOG {"namespace": "", "time_ms": 1634392961480, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 190.13460319657864, "metadata": {"file": "/workspace/object_detection/maskrcnn_benchmark/engine/trainer.py", "lineno": 196}}
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.102s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.104s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.104s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.105s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.105s
2021-10-16 14:02:47,893 maskrcnn_benchmark.timed_section INFO: EXPOSED: Launching evaluation task took 0.105s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.105s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.106s
INFO:maskrcnn_benchmark.timed_section:EXPOSED: Launching evaluation task took 0.106s
Evaluating predictions
Loading and preparing results...
resFile is ./inference/coco_2017_val/segm.json
Loading and preparing results...
resFile is ./inference/coco_2017_val/bbox.json
DONE (t=0.65s)
DONE (t=1.41s)
Running per image evaluation...
Evaluate annotation type *bbox*
Running per image evaluation...
Evaluate annotation type *segm*
DONE (t=1.61s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.37778
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.59399
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.40976
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.21762
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.40666
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.49560
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.31285
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.49327
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.51793
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.33102
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.54973
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.65673
DONE (t=2.42s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.34327
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.56124
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.36265
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.15683
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.36883
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.50796
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.29472
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.45188
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.47171
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.27697
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.50668
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.62597
2021-10-16 14:03:00,537 maskrcnn_benchmark.trainer INFO: bbox mAP: 0.3777793011098442, segm mAP: 0.34326783756347795
INFO:maskrcnn_benchmark.trainer:bbox mAP: 0.3777793011098442, segm mAP: 0.34326783756347795
:::MLLOG {"namespace": "", "time_ms": 1634392980537, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": {"BBOX": 0.3777793011098442, "SEGM": 0.34326783756347795}, "metadata": {"file": "tools/train_mlperf.py", "lineno": 133, "epoch_num": 14}}
:::MLLOG {"namespace": "", "time_ms": 1634392980537, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 134, "epoch_num": 14}}
2021-10-16 14:03:00,537 maskrcnn_benchmark.trainer INFO: Target mAP reached, exiting...
INFO:maskrcnn_benchmark.trainer:Target mAP reached, exiting...
2021-10-16 14:03:00,537 maskrcnn_benchmark.trainer INFO: Total training time: 2:24:29.776294 (0.4817 s / it)
INFO:maskrcnn_benchmark.trainer:Total training time: 2:24:29.776294 (0.4817 s / it)
INFO:maskrcnn_benchmark.trainer:Total training time: 2:24:29.833599 (0.4817 s / it)
INFO:maskrcnn_benchmark.trainer:Total training time: 2:24:29.832508 (0.4817 s / it)
INFO:maskrcnn_benchmark.trainer:Total training time: 2:24:29.732502 (0.4817 s / it)
INFO:maskrcnn_benchmark.trainer:Total training time: 2:24:29.813897 (0.4817 s / it)
INFO:maskrcnn_benchmark.trainer:Total training time: 2:24:29.750622 (0.4817 s / it)
INFO:maskrcnn_benchmark.trainer:Total training time: 2:24:29.811839 (0.4817 s / it)
INFO:maskrcnn_benchmark.trainer:Total training time: 2:24:29.805335 (0.4817 s / it)
&&&& MLPERF METRIC THROUGHPUT=190.1581 iterations / s
&&&& MLPERF METRIC THROUGHPUT=190.1594 iterations / s
&&&& MLPERF METRIC THROUGHPUT=190.1585 iterations / s
&&&& MLPERF METRIC THROUGHPUT=190.1603 iterations / s
&&&& MLPERF METRIC THROUGHPUT=190.1586 iterations / s
&&&& MLPERF METRIC THROUGHPUT=190.1587 iterations / s
&&&& MLPERF METRIC THROUGHPUT=190.1581 iterations / s
&&&& MLPERF METRIC THROUGHPUT=190.1599 iterations / s
&&&& MLPERF METRIC TIME= 8742.935879468918
&&&& MLPERF METRIC TIME= 8742.963213205338
&&&& MLPERF METRIC TIME= 8742.973906517029
&&&& MLPERF METRIC TIME= 8742.978633403778
&&&& MLPERF METRIC TIME= 8742.989482164383
&&&& MLPERF METRIC TIME= 8742.997749090195
:::MLLOG {"namespace": "", "time_ms": 1634392982993, "event_type": "INTERVAL_END", "key": "run_stop", "value": null, "metadata": {"file": "tools/train_mlperf.py", "lineno": 489, "status": "success"}}
&&&& MLPERF METRIC TIME= 8743.003133773804
&&&& MLPERF METRIC TIME= 8743.003708600998
+ ret_code=0
+ set +x
ENDING TIMING RUN AT 2021-10-16 02:03:12 PM
RESULT,OBJECT_DETECTION,,8754,pixelz,2021-10-16 11:37:18 AM
